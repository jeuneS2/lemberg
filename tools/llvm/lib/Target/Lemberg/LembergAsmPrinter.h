//===-- LembergAsmPrinter.h - Lemberg LLVM assembly writer ----------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef LEMBERGASMPRINTER_H
#define LEMBERGASMPRINTER_H

#include "Lemberg.h"
#include "LembergTargetMachine.h"
#include "llvm/CodeGen/AsmPrinter.h"
#include "llvm/Support/Compiler.h"

namespace llvm {

class LLVM_LIBRARY_VISIBILITY LembergAsmPrinter : public AsmPrinter {
  public:
    LembergAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)
      : AsmPrinter(TM, Streamer) {}

    virtual const char *getPassName() const {
      return "Lemberg Assembly Printer";
    }

    void printOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
    void printMemoryOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
    void printPredicateOperand(const MachineInstr *MI, int opNum, raw_ostream &O);
	void printCluster(const MachineInstr *MI, raw_ostream &O);
    void printInstruction(const MachineInstr *MI, raw_ostream &O);  // autogenerated.
	static const char *getRegisterName(unsigned RegNo);

    virtual void EmitInstruction(const MachineInstr *MI);

    virtual void EmitFunctionBodyStart();
    virtual void EmitFunctionBodyEnd();

    virtual bool isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB) const;

	virtual MCSymbol *GetBlockAddressSymbol(const BlockAddress *BA) const;
};
} // end namespace llvm

#endif
