	.file	"md5.linked.bc"
                                        ; Start of file scope inline assembly
.stabs "_lseek is not implemented and will always fail",30,0,0,0
.stabs "_lseek",1,0,0,0

.stabs "_fstat is not implemented and will always fail",30,0,0,0
.stabs "_fstat",1,0,0,0

                                        ; End of file scope inline assembly
	.text
	.align	4
_md5_init:                              ; @md5_init
	.size	_md5_init_end-_md5_init
_md5_init_start:
; BB#0:                                 ; %entry
#0:	       ldiu	1142 -> r1
#1:	       wb.s	r15, 1
#2:	       ldiu	1278 -> r2
#3:	       ldiu	905 -> r3
	;;
#0:	       ldim	586 -> r1
#1:	       ldim	859 -> r2
#2:	       ldim	437 -> r3
#3:	       ldiu	769 -> r4
	;;
#0:	       ldih	129 -> r1
#1:	       ldih	1221 -> r2
#2:	       ldih	1918 -> r3
#3:	       ldim	164 -> r4
	;;
#0:	       stm.a	r1, r0, 5
#1:	       ldih	826 -> r4
#2:	       ldiu	4 -> r5
	;;
#0:	       sub	r15, r5 -> r15
	;;
#0:	       s2add	r15, 1 -> r15
	;;
#0:	       stm.a	r2, r0, 4
	;;
#0:	       stm.a	r3, r0, 3
	;;
#0:	       stm.a	r4, r0, 2
	;;
#0:	       stm.a	0, r0, 1
	;;
#0:	       stm.a	0, r0, 0
	;;
#0:	       ret
	;;
	       nop	3
	;;
	.align	4
_md5_init_end:

	.align	4
_md5_process:                           ; @md5_process
	.size	_md5_process_end-_md5_process
_md5_process_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 37
#2:	       ldiu	148 -> r3
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r3 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       ldiu	128 -> r3
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, r3 -> r3
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r3, 4
	;;
#0:	       stm.s	r11, r3, 3
	;;
#0:	       stm.s	r12, r3, 2
	;;
#0:	       stm.s	r13, r3, 1
	;;
#0:	       ldm.f	r0, 8
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 5
	;;
#0:	       ldm.f	r0, 12
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r0, 16
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 15
	;;
#0:	       ldm.f	r0, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 16
#1:	       and	r1, 3 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stm.s	r0, r14, 4
	;;
#0:	if !c1 br	.BB1_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb2
#0:	       s2add	r14, 16 -> r12
#1:	       callg	_memcpy
#2:	       ldi	64 -> r2
	;;
#0:	       add	r12, 4 -> r11
	;;
#0:	       or	r11, 0 -> r0
	;;
	       nop	1
	;;
#0:	       or	r11, 0 -> r1
	;;
.BB1_2:                                 ; %bb10
#1:	       ldm.s	r14, 64
#2:	       xor	r10, -1 -> r0
#3:	       ldiu	1878 -> r6
#0:	       ldiu	1774 -> r0.16
	;;
#2:	       ldga	697464 -> r2.16
#1:	       ldim	246 -> r6
#0:	       ldim	953 -> r0.16
#3:	       or	r14, 0 -> r15
	;;
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.s	r14, 60
#3:	       ldih	1862 -> r6
#0:	       ldih	1549 -> r0.16
	;;
#0:	       and	r2, r0 -> r0
#2:	       ldih	1723 -> r2.16
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.f	r1, 0
	;;
#0:	       and	r3, r10 -> r4
#2:	       ldiu	33 -> r2.17
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       or	r0, r4 -> r0
	;;
#0:	       stm.s	r2, r14, 8
#2:	       ldim	641 -> r2.17
	;;
#0:	       ldm.s	r14, 20
#2:	       ldih	589 -> r2.17
	;;
#3:	       ldiu	1378 -> r3.17
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.f	r1, 4
	;;
#0:	       add	r3, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       add	r0, r2 -> r0
	;;
#0:	       stm.s	r5, r14, 12
#2:	       add	r0, r2.16 -> r0
	;;
#0:	       ldm.s	r14, 60
#1:	       rl	r0, 7 -> r0
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 64
#2:	       xor	r0, -1 -> r4
#3:	       and	r0, r10 -> r7
	;;
#0:	       and	r3, r4 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       or	r7, r4 -> r4
#2:	       ldm.f	r1, 8
	;;
#0:	       add	r2, r5 -> r8
	;;
#0:	       add	r8, r4 -> r4
#1:	       ldx	$mem, 0 -> r7
#2:	       ldiu	219 -> r8
	;;
#0:	       add	r4, r6 -> r4
#2:	       ldim	14 -> r8
#1:	       add	r3, r7 -> r1.16
#3:	       stm.s	r7, r14, 14
	;;
#0:	       rl	r4, 12 -> r4
#1:	       ldih	289 -> r8
#2:	       ldm.f	r1, 12
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r4, -1 -> r6
#1:	       and	r4, r0 -> r9
	;;
#0:	       and	r10, r6 -> r6
	;;
#0:	       or	r9, r6 -> r6
#1:	       ldx	$mem, 0 -> r9
	;;
#1:	       add	r1.16, r6 -> r6
#3:	       add	r10, r9 -> r3.16
#0:	       stm.s	r9, r14, 9
	;;
#0:	       add	r6, r8 -> r6
#1:	       ldm.f	r1, 16
	;;
#0:	       rl	r6, 17 -> r6
	;;
#0:	       add	r6, r4 -> r6
#1:	       ldx	$mem, 0 -> r11
	;;
#0:	       xor	r6, -1 -> r8
#2:	       and	r6, r4 -> r2.16
#1:	       stm.s	r11, r14, 13
	;;
#0:	       and	r0, r8 -> r8
#1:	       add	r11, r0 -> r0
#2:	       ldm.f	r1, 20
	;;
#2:	       or	r2.16, r8 -> r8
#3:	       ldim	964 -> r3.17
	;;
#3:	       add	r3.16, r8 -> r8
#2:	       ldiu	1967 -> r2.16
	;;
#0:	       add	r8, r0.16 -> r8
#2:	       ldim	897 -> r2.16
#3:	       ldih	1968 -> r3.17
	;;
#1:	       rl	r8, 22 -> r8
#2:	       ldih	1963 -> r2.16
#0:	       ldiu	1967 -> r0.16
	;;
#1:	       add	r8, r6 -> r8
#0:	       ldim	158 -> r0.16
	;;
#1:	       xor	r8, -1 -> r1.16
#0:	       and	r8, r6 -> r0.17
	;;
#1:	       and	r4, r1.16 -> r12
#0:	       ldih	1114 -> r0.16
	;;
#0:	       or	r0.17, r12 -> r12
	;;
#1:	       add	r0, r12 -> r0
#2:	       ldx	$mem, 0 -> r12
#0:	       ldiu	1578 -> r0.17
#3:	       ldm.f	r1, 24
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldim	248 -> r0.17
#1:	       add	r12, r4 -> r4
	;;
#1:	       rl	r0, 7 -> r0
#0:	       ldih	572 -> r0.17
	;;
#0:	       add	r0, r8 -> r0
	;;
#3:	       xor	r0, -1 -> r3.16
#2:	       and	r0, r8 -> r2.16
	;;
#3:	       and	r6, r3.16 -> r13
	;;
#2:	       or	r2.16, r13 -> r13
#3:	       ldiu	290 -> r3.16
	;;
#0:	       add	r4, r13 -> r4
#1:	       ldx	$mem, 0 -> r13
	;;
#0:	       add	r4, r0.17 -> r4
#2:	       ldiu	1555 -> r2.16
#1:	       add	r13, r6 -> r6
#3:	       stm.s	r13, r14, 10
	;;
#0:	       rl	r4, 12 -> r4
#2:	       ldim	520 -> r2.16
#1:	       ldm.f	r1, 28
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1345 -> r2.16
	;;
#1:	       xor	r4, -1 -> r1.16
#0:	       and	r4, r0 -> r0.17
#2:	       ldx	$mem, 0 -> r3
#3:	       ldm.f	r1, 32
	;;
#1:	       and	r8, r1.16 -> r2
#0:	       add	r3, r8 -> r8
	;;
#0:	       or	r0.17, r2 -> r2
#2:	       ldx	$mem, 0 -> r5
#1:	       ldiu	910 -> r1.16
	;;
#2:	       add	r6, r2 -> r2
#0:	       ldiu	1281 -> r0.17
#3:	       stm.s	r5, r14, 6
#1:	       ldim	808 -> r1.16
	;;
#2:	       add	r2, r2.16 -> r2
#0:	       ldim	210 -> r0.17
#3:	       ldm.f	r1, 36
#1:	       ldih	1331 -> r1.16
	;;
#1:	       rl	r2, 17 -> r2
#0:	       ldih	2026 -> r0.17
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r2, -1 -> r6
#2:	       and	r2, r4 -> r2.16
	;;
#0:	       and	r0, r6 -> r6
#1:	       add	r5, r0 -> r0
	;;
#2:	       or	r2.16, r6 -> r6
#3:	       ldim	940 -> r3.16
	;;
#0:	       add	r8, r6 -> r6
#2:	       ldga	39128 -> r2.16
	;;
#0:	       add	r6, r0.17 -> r6
#2:	       ldih	844 -> r2.16
#3:	       ldih	876 -> r3.16
	;;
#0:	       rl	r6, 22 -> r6
	;;
#0:	       add	r6, r2 -> r6
	;;
#0:	       xor	r6, -1 -> r8
#1:	       and	r6, r2 -> r7
	;;
#0:	       and	r4, r8 -> r8
	;;
#0:	       or	r7, r8 -> r7
#1:	       ldx	$mem, 0 -> r8
	;;
#0:	       add	r0, r7 -> r0
#1:	       add	r8, r4 -> r4
#2:	       stm.s	r8, r14, 11
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldm.f	r1, 40
	;;
#0:	       rl	r0, 7 -> r0
#2:	       ldiu	945 -> r2.16
	;;
#0:	       add	r0, r6 -> r0
#2:	       ldim	2027 -> r2.16
	;;
#0:	       xor	r0, -1 -> r7
#1:	       and	r0, r6 -> r9
	;;
#0:	       and	r2, r7 -> r7
	;;
#0:	       or	r9, r7 -> r7
#1:	       ldx	$mem, 0 -> r9
#2:	       ldm.f	r1, 44
	;;
#0:	       add	r4, r7 -> r4
#1:	       add	r9, r2 -> r2
	;;
#0:	       add	r4, r0.16 -> r4
#1:	       ldx	$mem, 0 -> r11
	;;
#0:	       rl	r4, 12 -> r4
#1:	       stm.s	r11, r14, 7
	;;
#0:	       add	r4, r0 -> r4
#1:	       ldm.f	r1, 48
	;;
#1:	       xor	r4, -1 -> r7
#0:	       and	r4, r0 -> r0.16
	;;
#0:	       and	r6, r7 -> r7
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r13
#3:	       ldm.f	r1, 52
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#0:	       ldiu	1982 -> r0.16
#2:	       ldx	$mem, 0 -> r5
#3:	       ldm.f	r1, 56
	;;
#2:	       add	r2, r2.16 -> r2
#0:	       ldim	922 -> r0.16
	;;
#1:	       rl	r2, 17 -> r2
#0:	       ldih	1098 -> r0.16
#2:	       ldx	$mem, 0 -> r8
#3:	       ldm.f	r1, 60
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r2, -1 -> r7
#2:	       and	r2, r4 -> r2.16
#1:	       ldx	$mem, 0 -> r1
#3:	       ldm.s	r14, 48
	;;
#0:	       and	r0, r7 -> r7
#1:	       add	r13, r0 -> r0
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#2:	       ldiu	290 -> r2.16
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldim	514 -> r2.16
	;;
#0:	       rl	r6, 22 -> r6
#2:	       ldih	860 -> r2.16
	;;
#0:	       add	r6, r2 -> r6
	;;
#1:	       xor	r6, -1 -> r7
#0:	       and	r6, r2 -> r0.16
	;;
#0:	       and	r4, r7 -> r7
#1:	       add	r5, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#0:	       ldiu	403 -> r0.16
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldim	782 -> r0.16
	;;
#1:	       rl	r0, 7 -> r0
#0:	       ldih	2028 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#0:	       xor	r0, -1 -> r7
#2:	       and	r0, r6 -> r2.16
	;;
#0:	       and	r2, r7 -> r7
#1:	       add	r8, r2 -> r2
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
	;;
#0:	       add	r4, r0.16 -> r4
	;;
#0:	       rl	r4, 12 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#1:	       xor	r4, -1 -> r7
#0:	       and	r4, r0 -> r0.16
	;;
#0:	       and	r6, r7 -> r0.17
#1:	       add	r1, r6 -> r6
	;;
#0:	       or	r0.16, r0.17 -> r11
	;;
#0:	       add	r2, r11 -> r2
	;;
#1:	       add	r2, r1.16 -> r2
	;;
#0:	       rl	r2, 17 -> r2
#1:	       ldiu	322 -> r1.16
	;;
#0:	       add	r2, r4 -> r2
#1:	       ldim	1863 -> r1.16
	;;
#2:	       xor	r2, -1 -> r2.16
#0:	       and	r2, r7 -> r7
	;;
#2:	       and	r2, r4 -> r2.18
	;;
#2:	       and	r0, r2.16 -> r2.19
	;;
#2:	       or	r2.18, r2.19 -> r11
	;;
#0:	       add	r6, r11 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 40
	;;
#2:	       add	r6, r2.17 -> r6
#0:	       add	r11, r0 -> r0
	;;
#0:	       rl	r6, 22 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 28
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldiu	1665 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#2:	       and	r6, r2.16 -> r2.16
#1:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r0.16, r7 -> r7
#1:	       ldm.s	r14, 32
#2:	       ldim	60 -> r2.17
	;;
#1:	       add	r0, r7 -> r0
#0:	       ldga	45888 -> r0.16
#2:	       ldih	1733 -> r2.17
	;;
#3:	       add	r0, r3.17 -> r0
#0:	       ldih	1538 -> r0.16
	;;
#0:	       rl	r0, 5 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#0:	       and	r0, r2 -> r7
#1:	       add	r11, r2 -> r2
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 52
	;;
#2:	       or	r7, r2.16 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	593 -> r2.16
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	971 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	306 -> r2.16
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 44
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1962 -> r0.16
	;;
#2:	       add	r2, r2.16 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	728 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	1869 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.16
#0:	       add	r12, r0 -> r0
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	93 -> r2.16
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	482 -> r2.16
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	1713 -> r2.16
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r9, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldiu	1107 -> r0.16
	;;
#2:	       add	r0, r2.16 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldim	130 -> r0.16
	;;
#1:	       rl	r0, 5 -> r0
#0:	       ldih	18 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.16
#0:	       add	r1, r2 -> r2
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#1:	       and	r0, r7 -> r7
#2:	       ldiu	1665 -> r2.16
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	574 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1083 -> r2.16
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 36
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldga	1309640 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldih	1854 -> r0.16
	;;
#0:	       rl	r2, 14 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r11, r0 -> r0
#1:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 24
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	1510 -> r2.17
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	57 -> r2.17
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	271 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r8, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldiu	2006 -> r0.16
	;;
#2:	       add	r0, r2.17 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldim	736 -> r0.16
	;;
#1:	       rl	r0, 5 -> r0
#0:	       ldih	1561 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.17
#0:	       add	r11, r2 -> r2
#1:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 56
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	1415 -> r2.17
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	673 -> r2.17
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1958 -> r2.17
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 24
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1261 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	834 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	554 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r5, r0 -> r0
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	261 -> r2.17
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	125 -> r2.17
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	1359 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r11, r4 -> r4
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 28
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldga	1025016 -> r0.16
	;;
#2:	       add	r0, r2.17 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldih	2023 -> r0.16
	;;
#0:	       rl	r0, 5 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.17
#0:	       add	r3, r2 -> r2
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	729 -> r2.17
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	480 -> r2.17
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	827 -> r2.17
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r13, r6 -> r6
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1162 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	329 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	1129 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r12, r0 -> r0
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#1:	       ldm.s	r14, 48
#2:	       ldiu	485 -> r2.17
	;;
#1:	       rl	r6, 20 -> r6
#0:	       ldga	342028 -> r0.16
#2:	       ldim	883 -> r2.17
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldih	2031 -> r0.16
#2:	       ldih	1846 -> r2.17
	;;
#0:	       xor	r7, r6 -> r7
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#1:	       add	r0, r1.16 -> r0
#0:	       ldm.s	r14, 52
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldga	2026052 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldih	1317 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r8, r6 -> r6
	;;
#2:	       add	r4, r2.16 -> r4
	;;
#0:	       rl	r4, 11 -> r4
#2:	       ldiu	1961 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldim	985 -> r2.16
	;;
#0:	       xor	r7, r4 -> r7
#2:	       ldih	606 -> r2.16
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#3:	       add	r2, r3.16 -> r2
#0:	       ldm.s	r14, 32
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldga	1788768 -> r3.16
#1:	       ldm.s	r14, 36
	;;
#1:	       rl	r6, 23 -> r6
#0:	       ldga	2079856 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldih	1525 -> r0.16
	;;
#0:	       xor	r7, r6 -> r7
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r3, r2 -> r2
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldih	1973 -> r3.16
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldiu	1734 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldim	879 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
#1:	       ldih	324 -> r1.16
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r9, r6 -> r6
	;;
#2:	       add	r4, r2.16 -> r4
	;;
#0:	       rl	r4, 11 -> r4
#2:	       ldiu	2042 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldim	36 -> r2.16
	;;
#0:	       xor	r7, r4 -> r7
#2:	       ldih	1877 -> r2.16
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r5, r0 -> r0
	;;
#3:	       add	r2, r3.16 -> r2
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldiu	133 -> r3.16
#1:	       ldm.s	r14, 40
	;;
#1:	       rl	r6, 23 -> r6
#0:	       ldiu	1285 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldim	259 -> r0.16
	;;
#1:	       xor	r7, r6 -> r7
#0:	       ldih	36 -> r0.16
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldim	486 -> r3.16
#0:	       ldm.s	r14, 44
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldiu	57 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldim	666 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
#1:	       ldih	1742 -> r1.16
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r11, r6 -> r6
#3:	       ldx	$mem, 0 -> r11
	;;
#2:	       add	r4, r2.16 -> r4
#3:	       ldih	1703 -> r3.16
#0:	       ldm.s	r14, 56
	;;
#0:	       rl	r4, 11 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r7, r4 -> r7
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r11, r0 -> r0
	;;
#3:	       add	r2, r3.16 -> r2
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       ldiu	57 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldga	163064 -> r3.16
#1:	       ldim	628 -> r7
	;;
#1:	       rl	r6, 23 -> r6
#0:	       xor	r2, r4 -> r0.16
#2:	       add	r13, r4 -> r4
#3:	       ldih	2020 -> r7
	;;
#0:	       add	r6, r2 -> r6
	;;
#0:	       xor	r0.16, r6 -> r11
#2:	       xor	r6, r2 -> r2.16
#1:	       add	r1, r2 -> r2
	;;
#0:	       add	r0, r11 -> r0
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldih	253 -> r3.16
	;;
#0:	       rl	r0, 4 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       xor	r2.16, r0 -> r11
#0:	       xor	r0, r6 -> r0.16
	;;
#0:	       add	r4, r11 -> r4
	;;
#2:	       add	r4, r2.17 -> r4
	;;
#0:	       rl	r4, 11 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r0.16, r4 -> r11
#2:	       xor	r4, r0 -> r2.16
#1:	       xor	r4, -1 -> r1.16
#3:	       add	r3, r4 -> r3
	;;
#1:	       add	r2, r11 -> r2
#2:	       ldx	$mem, 0 -> r11
#0:	       ldiu	1637 -> r0.16
#3:	       ldm.s	r14, 32
	;;
#3:	       add	r2, r3.16 -> r2
#0:	       ldim	394 -> r0.16
#1:	       add	r11, r6 -> r6
	;;
#1:	       rl	r2, 16 -> r2
#0:	       ldih	1573 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       xor	r2.16, r2 -> r11
#3:	       xor	r2, -1 -> r3.16
	;;
#0:	       add	r6, r11 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 36
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldga	598596 -> r2.16
#1:	       add	r11, r0 -> r0
	;;
#1:	       rl	r6, 23 -> r6
#2:	       ldih	1953 -> r2.16
#0:	       ldiu	1943 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldim	351 -> r0.16
	;;
#1:	       or	r6, r1.16 -> r1.16
#0:	       ldih	537 -> r0.16
	;;
#1:	       xor	r1.16, r2 -> r11
#0:	       add	r8, r2 -> r2
	;;
#0:	       add	r0, r11 -> r0
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 48
	;;
#2:	       add	r0, r2.16 -> r0
	;;
#0:	       rl	r0, 6 -> r0
#2:	       ldiu	935 -> r2.16
	;;
#0:	       add	r0, r6 -> r0
#2:	       ldim	644 -> r2.16
	;;
#3:	       or	r0, r3.16 -> r3.16
#2:	       ldih	1372 -> r2.16
	;;
#3:	       xor	r3.16, r6 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       xor	r6, -1 -> r4
#2:	       add	r12, r6 -> r6
	;;
#0:	       add	r3, r0.16 -> r3
	;;
#0:	       rl	r3, 10 -> r3
	;;
#0:	       add	r3, r0 -> r3
	;;
#0:	       or	r3, r4 -> r4
	;;
#0:	       xor	r4, r0 -> r4
	;;
#0:	       add	r2, r4 -> r2
#1:	       xor	r0, -1 -> r4
#2:	       add	r13, r0 -> r0
	;;
#2:	       add	r2, r2.16 -> r2
	;;
#0:	       rl	r2, 15 -> r2
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       or	r2, r4 -> r4
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       add	r6, r4 -> r4
#1:	       xor	r3, -1 -> r6
#2:	       add	r11, r3 -> r3
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r4, r7 -> r4
#1:	       ldiu	451 -> r7
#2:	       ldm.s	r14, 24
	;;
#0:	       rl	r4, 21 -> r4
#1:	       ldim	875 -> r7
	;;
#0:	       add	r4, r2 -> r4
#1:	       ldih	810 -> r7
	;;
#0:	       or	r4, r6 -> r6
	;;
#0:	       xor	r6, r2 -> r6
	;;
#0:	       add	r0, r6 -> r0
#1:	       xor	r2, -1 -> r6
#2:	       add	r9, r2 -> r2
	;;
#0:	       add	r0, r7 -> r0
#1:	       ldiu	1170 -> r7
	;;
#0:	       rl	r0, 6 -> r0
#1:	       ldim	409 -> r7
	;;
#0:	       add	r0, r4 -> r0
#1:	       ldih	1144 -> r7
	;;
#0:	       or	r0, r6 -> r6
	;;
#0:	       xor	r6, r4 -> r6
	;;
#0:	       add	r3, r6 -> r3
#1:	       xor	r4, -1 -> r6
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r3, r7 -> r3
#1:	       ldiu	1149 -> r7
#2:	       ldm.s	r14, 40
	;;
#0:	       rl	r3, 10 -> r3
#1:	       ldim	1534 -> r7
	;;
#0:	       add	r3, r0 -> r3
	;;
#0:	       or	r3, r6 -> r6
#1:	       add	r1, r3 -> r1
	;;
#0:	       xor	r6, r0 -> r6
	;;
#0:	       add	r2, r6 -> r2
#1:	       xor	r0, -1 -> r6
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r2, r7 -> r2
#1:	       ldiu	1489 -> r7
#2:	       ldm.s	r14, 52
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldim	139 -> r7
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldih	1068 -> r7
	;;
#0:	       or	r2, r6 -> r6
	;;
#0:	       xor	r6, r3 -> r6
	;;
#0:	       add	r4, r6 -> r4
#1:	       xor	r3, -1 -> r6
	;;
#0:	       add	r4, r7 -> r4
#1:	       ldiu	1615 -> r7
	;;
#0:	       rl	r4, 21 -> r4
#1:	       ldim	271 -> r7
	;;
#0:	       add	r4, r2 -> r4
#1:	       ldih	893 -> r7
	;;
#0:	       or	r4, r6 -> r6
	;;
#0:	       xor	r6, r2 -> r6
	;;
#0:	       add	r0, r6 -> r0
#1:	       xor	r2, -1 -> r6
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r0, r7 -> r0
#1:	       ldm.s	r14, 28
	;;
#0:	       rl	r0, 6 -> r0
	;;
#0:	       add	r0, r4 -> r0
	;;
#0:	       or	r0, r6 -> r6
	;;
#0:	       xor	r6, r4 -> r3
#1:	       ldiu	417 -> r6
	;;
#0:	       add	r1, r3 -> r1
#1:	       ldga	845536 -> r3
#2:	       ldim	258 -> r6
	;;
#0:	       ldih	2033 -> r3
#1:	       ldih	624 -> r6
	;;
#0:	       add	r1, r3 -> r1
#1:	       xor	r4, -1 -> r3
#2:	       add	r5, r4 -> r4
#3:	       ldiu	1666 -> r5
	;;
#0:	       rl	r1, 10 -> r1
#1:	       ldim	623 -> r5
	;;
#0:	       add	r1, r0 -> r1
#1:	       ldih	1978 -> r5
	;;
#0:	       or	r1, r3 -> r3
	;;
#0:	       xor	r3, r0 -> r3
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldga	82708 -> r3
	;;
#0:	       ldih	1304 -> r3
	;;
#0:	       add	r2, r3 -> r2
#1:	       xor	r0, -1 -> r3
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldm.s	r14, 56
	;;
#0:	       add	r2, r1 -> r2
	;;
#0:	       or	r2, r3 -> r3
	;;
#0:	       xor	r3, r1 -> r3
	;;
#0:	       add	r4, r3 -> r3
#1:	       xor	r1, -1 -> r4
#2:	       add	r11, r1 -> r1
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r3, r6 -> r3
#1:	       ldm.s	r14, 44
	;;
#0:	       rl	r3, 21 -> r3
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       or	r3, r4 -> r4
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       add	r0, r4 -> r0
#1:	       xor	r2, -1 -> r4
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r0, r5 -> r0
#1:	       ldiu	565 -> r5
#2:	       ldm.s	r14, 20
	;;
#0:	       rl	r0, 6 -> r0
#1:	       ldim	862 -> r5
	;;
#0:	       add	r0, r3 -> r0
#1:	       ldih	1513 -> r5
	;;
#0:	       or	r0, r4 -> r4
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       add	r1, r4 -> r1
#1:	       xor	r3, -1 -> r4
#2:	       add	r11, r3 -> r3
	;;
#0:	       add	r1, r5 -> r1
#1:	       ldiu	699 -> r5
	;;
#0:	       rl	r1, 10 -> r1
#1:	       ldim	762 -> r5
	;;
#0:	       add	r1, r0 -> r1
#1:	       ldih	342 -> r5
	;;
#0:	       or	r1, r4 -> r4
	;;
#0:	       xor	r4, r0 -> r4
	;;
#0:	       add	r2, r4 -> r2
#1:	       xor	r0, -1 -> r4
	;;
#0:	       add	r2, r5 -> r2
#1:	       ldiu	913 -> r5
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldim	218 -> r5
	;;
#0:	       add	r2, r1 -> r2
#1:	       ldih	1884 -> r5
	;;
#0:	       or	r2, r4 -> r4
	;;
#0:	       xor	r4, r1 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       add	r2, r10 -> r4
	;;
#0:	       add	r3, r5 -> r3
#1:	       ldx	$mem, 0 -> r5
#2:	       ldm.s	r14, 16
	;;
#0:	       rl	r3, 21 -> r3
#1:	       add	r0, r5 -> r0
	;;
#0:	       add	r4, r3 -> r3
#1:	       ldx	$mem, 0 -> r4
	;;
#0:	       stm.a	r0, r4, 2
	;;
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stm.a	r3, r4, 3
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       stm.a	r0, r4, 4
#2:	       ldiu	148 -> r0
	;;
#0:	       add	r1, r2 -> r1
	;;
#0:	       stm.a	r1, r4, 5
	;;
#0:	       ldm.s	r14, 132
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 136
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 140
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 144
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 0
#2:	       add	r15, r0 -> r15
	;;
#0:	       stx	r0.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_md5_process_end:

	.align	4
_md5_append:                            ; @md5_append
	.size	_md5_append_end-_md5_append
_md5_append_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 10
#2:	       ldiu	40 -> r3
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r3 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r2, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
#1:	       cmplt	r10, 1 -> c1
#2:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 7
#1:	       or	r0, 0 -> r12
	;;
#0:	if  c1 br	.BB2_9
#1:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r0.23, r14, 5
	;;
#0:	       ldm.f	r12, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r12, 4
#1:	       sra	r10, 29 -> r3
#2:	       sl	r10, 3 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r1 -> r3
#2:	       sr	r0, 3 -> r0
	;;
#0:	       stm.a	r2, r12, 1
#1:	       cmpule	r1, r3 -> c1
	;;
#0:	if !c1 add	r2, 1 -> r1
	;;
#0:	       stm.a	r3, r12, 0
	;;
#0:	if !c1 stm.a	r1, r12, 1
#1:	       ldi	63 -> r1
	;;
#0:	       and	r0, r1 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if !c1 br	.BB2_4
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb3
#0:	       add	r1, r10 -> r0
#1:	       ldi	64 -> r3
#2:	       or	r10, 0 -> r13
#3:	       add	r12, r1 -> r2
	;;
#0:	       callg	_memcpy
#1:	       cmplt	r3, r0 -> c1
#2:	       sub	r3, r1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r13
#1:	       add	r2, 24 -> r0
	;;
#0:	       add	r13, r1 -> r1
#1:	       or	r13, 0 -> r2
	;;
#0:	       stm.s	r1, r14, 4
#1:	       or	r11, 0 -> r1
	;;
	       nop	0
	;;
#0:	       ldm.s	r14, 16
#1:	       ldi	64 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r1, r3 -> c1
	;;
#0:	if  c1 br	.BB2_9
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb7
#0:	       add	r11, r13 -> r11
#1:	       sub	r10, r13 -> r10
#2:	       add	r12, 24 -> r1
#3:	       or	r12, 0 -> r0
	;;
#0:	       callg	_md5_process
	;;
	       nop	3
	;;
.BB2_4:                                 ; %bb9.preheader
#0:	       ldi	63 -> r13
	;;
#0:	       cmplt	r13, r10 -> c1
	;;
#0:	if !c1 br	.BB2_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb9.preheader.bb8_crit_edge
#0:	       ldi	-64 -> r0.23
#1:	       or	r11, 0 -> r1
	;;
.BB2_6:                                 ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#1:	       s2add	r1, 16 -> r11
#2:	       callg	_md5_process
#0:	       add	r10, r0.23 -> r10
#3:	       or	r12, 0 -> r0
	;;
	       nop	3
	;;
#0:	       cmplt	r13, r10 -> c1
#1:	       or	r11, 0 -> r1
	;;
#0:	if  c1 br	.BB2_6
	;;
	       nop	2
	;;
.BB2_7:                                 ; %bb10
#0:	       cmpeq	r10, 0 -> c1
	;;
#0:	if  c1 br	.BB2_9
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb11
#0:	       add	r12, 24 -> r0
#1:	       callg	_memcpy
#2:	       or	r11, 0 -> r1
#3:	       or	r10, 0 -> r2
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB2_10
#3:	       ldx	$mem, 0 -> r3.31
#1:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB2_9:                                 ; %return
#0:	       ldm.s	r14, 20
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB2_10:                                ; %return
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 10 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_md5_append_end:

	.align	4
_md5_finish:                            ; @md5_finish
	.size	_md5_finish_end-_md5_finish
_md5_finish_start:
; BB#0:                                 ; %bb.nph9
#1:	       wb.s	r15, 9
#2:	       ldiu	36 -> r3
#0:	       ldx	$ro, 0 -> r0.31
#3:	       ldi	0 -> r2
	;;
#0:	       sub	r15, r3 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 8
#1:	       or	r0, 0 -> r10
#2:	       ldi	-4 -> r0
	;;
#0:	       stm.s	r11, r14, 7
#1:	       or	r1, 0 -> r11
#2:	       or	r2, 0 -> r1
	;;
#0:	       stm.s	r12, r14, 6
	;;
.BB3_1:                                 ; %bb
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r1, r0 -> r3
#1:	       add	r1, 1 -> r6
#2:	       and	r2, 24 -> r4
#3:	       add	r14, 16 -> r5
	;;
#0:	       add	r10, r3 -> r3
#1:	       cmpne	r6, 8 -> c1
#2:	       add	r5, r1 -> r1
#3:	       add	r2, 8 -> r2
	;;
#0:	if  c1 br	.BB3_1
#1:	       ldm.f	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       sr	r3, r4 -> r3
	;;
#0:	       stmb.a	r3, r1, 0
#1:	       or	r6, 0 -> r1
	;;
; BB#2:                                 ; %bb.nph
#0:	       ldm.f	r10, 0
#1:	       ldi	55 -> r1
	;;
#0:	       callg	_md5_append
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       sr	r0, 3 -> r0
	;;
#0:	       sub	r1, r0 -> r0
#1:	       ldi	63 -> r1
	;;
#0:	       and	r0, r1 -> r0
#1:	       ldga	_pad.2804 -> r1
	;;
#0:	       add	r0, 1 -> r2
#1:	       or	r10, 0 -> r0
	;;
#0:	       ldi	0 -> r12
#1:	       add	r14, 16 -> r1
#2:	       ldi	8 -> r2
#3:	       or	r10, 0 -> r0
	;;
#0:	       callg	_md5_append
	;;
	       nop	3
	;;
#0:	       ldi	-4 -> r0
#1:	       ldi	16 -> r1
#2:	       or	r12, 0 -> r2
	;;
.BB3_3:                                 ; %bb4
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r2, r0 -> r3
#1:	       add	r2, 1 -> r5
#2:	       and	r12, 24 -> r4
#3:	       add	r11, r2 -> r2
	;;
#0:	       add	r10, r3 -> r3
#1:	       cmpne	r5, r1 -> c1
#2:	       add	r12, 8 -> r12
	;;
#0:	if  c1 br	.BB3_3
#1:	       ldm.f	r3, 8
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       sr	r3, r4 -> r3
	;;
#0:	       stmb.a	r3, r2, 0
#1:	       or	r5, 0 -> r2
	;;
; BB#4:                                 ; %return
#0:	       ldm.s	r14, 24
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 9 -> r15
	;;
#2:	       stx	r2.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_md5_finish_end:

	.globl	_main
	.align	4
_main:                                  ; @main
	.size	_main_end-_main
_main_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 49
#2:	       ldiu	196 -> r1
#0:	       ldx	$ro, 0 -> r0.31
#3:	       ldi	0 -> r0
	;;
#0:	       sub	r15, r1 -> r15
#1:	       ldiu	128 -> r1
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
#0:	       add	r14, r1 -> r1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r1, 16
#1:	       ldi	0 -> r10
	;;
#0:	       stm.s	r11, r1, 15
	;;
#0:	       stm.s	r12, r1, 14
	;;
#0:	       stm.s	r13, r1, 13
	;;
#0:	       stm.s	r0.23, r1, 12
	;;
#0:	       stm.s	r0, r14, 5
	;;
.BB4_1:                                 ; %bb.nph.i
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB4_2 Depth 2
#0:	       sl	r10, 1 -> r11
#1:	       callg	_md5_init
#2:	       ldga	_test.2643 -> r1
	;;
#0:	       sl	r11, 2 -> r0
	;;
#0:	       sub	r1, r0 -> r12
#1:	       s2add	r14, 16 -> r1
	;;
#0:	       add	r1, 20 -> r13
	;;
#0:	       or	r13, 0 -> r0
	;;
#0:	       ldm.f	r12, 0
	;;
#0:	       callg	_strlen
#1:	       ldx	$mem, 0 -> r12
	;;
#0:	       stm.s	r12, r14, 6
#1:	       or	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       callg	_md5_append
#1:	       or	r0, 0 -> r2
#2:	       ldi	0 -> r0
#3:	       or	r12, 0 -> r1
	;;
#0:	       sub	r0, r11 -> r0
	;;
#0:	       stm.s	r0, r14, 7
#1:	       or	r13, 0 -> r0
	;;
	       nop	1
	;;
#0:	       callg	_md5_finish
#1:	       s2add	r14, 8 -> r2
#2:	       ldi	16 -> r12
#3:	       or	r13, 0 -> r0
	;;
#0:	       add	r2, 0 -> r11
#1:	       s2add	r14, 16 -> r2
	;;
#0:	       add	r2, 4 -> r0.23
	;;
#0:	       or	r0.23, 0 -> r1
	;;
	       nop	0
	;;
#0:	       or	r11, 0 -> r0
	;;
.BB4_2:                                 ; %bb2.i
                                        ;   Parent Loop BB4_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r0.23, r12 -> r1
#1:	       sub	r12, 1 -> r12
#2:	       add	r0, 2 -> r11
	;;
#0:	       ldm.s	r1, 16
#1:	       add	r1, 16 -> r2
	;;
#0:	       callg	_sprintf
#1:	       ldx	$membu, r2 -> r1
	;;
	       nop	3
	;;
#0:	       cmpne	r12, 0 -> c1
#1:	       or	r11, 0 -> r0
	;;
#0:	if  c1 br	.BB4_2
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb5.i
                                        ;   in Loop: Header=BB4_1 Depth=1
#0:	       ldm.s	r14, 28
#1:	       ldga	_test.2643 -> r0
#2:	       s2add	r14, 8 -> r12
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       s2add	r0, r1 -> r0
	;;
#0:	       ldm.f	r0, 4
#1:	       add	r12, 0 -> r0
	;;
#0:	       callg	_strcmp
#1:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r11, 0 -> r1
	;;
	       nop	2
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 br	.BB4_5
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb7.i
                                        ;   in Loop: Header=BB4_1 Depth=1
#0:	       ldm.s	r14, 24
#1:	       ldga	._.str15 -> r0
	;;
#0:	       callg	_printf
#1:	       ldx	$mem, 0 -> r1
	;;
	       nop	3
	;;
#0:	       callg	_puts
#1:	       s2add	r14, 8 -> r12
	;;
#0:	       add	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       callg	_printf
#1:	       ldi	1 -> r0
#2:	       or	r11, 0 -> r1
	;;
#0:	       stm.s	r0, r14, 5
#1:	       ldga	._.str16 -> r0
	;;
	       nop	2
	;;
.BB4_5:                                 ; %bb9.i
                                        ;   in Loop: Header=BB4_1 Depth=1
#0:	       sub	r10, 1 -> r10
	;;
#0:	       cmpne	r10, -7 -> c1
	;;
#0:	if  c1 br	.BB4_1
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb11.i
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb12.i
#0:	       ldga	._.str17 -> r0
#1:	       callg	_puts
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 176
#1:	       or	r14, 0 -> r15
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 180
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 184
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 188
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 192
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB4_9
#1:	       ldx	$mem, 0 -> r1.31
#2:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB4_8:                                 ; %do_test.exit
#0:	       ldm.s	r14, 176
#1:	       or	r14, 0 -> r15
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 180
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 184
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 188
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 192
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB4_9:                                 ; %do_test.exit
#0:	       ldm.s	r15, 0
#1:	       ldiu	196 -> r1
	;;
#0:	       add	r15, r1 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_main_end:

	.align	4
_printf:                                ; @printf
	.size	_printf_end-_printf
_printf_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 9
#1:	       ldiu	36 -> r7
#2:	       or	r0, 0 -> r4
	;;
#0:	       sub	r15, r7 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       add	r14, 24 -> r0
#1:	       add	r14, 28 -> r5
#3:	       s2add	r14, 8 -> r7
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       add	r7, 0 -> r6
	;;
#0:	       stm.a	r1, r0, 0
#1:	       add	r14, 16 -> r1
	;;
#0:	       stm.a	r2, r5, 0
	;;
#0:	       stm.a	r3, r6, 0
	;;
#0:	       stm.a	r0, r1, 0       ; printf.c:51
#1:	       or	r4, 0 -> r1     ; printf.c:52
	;;
#0:	       ldmg.d	_impure_data+8  ; printf.c:52
	;;
#0:	       ldx	$mem, 0 -> r0   ; printf.c:52
#1:	       ldm.s	r14, 16         ; printf.c:52
	;;
#0:	       callg	__vfprintf_r    ; printf.c:52
#1:	       ldx	$mem, 0 -> r2   ; printf.c:52
	;;                              ; printf.c:52
	       nop	3               ; printf.c:52
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 9 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_printf_end:

	.align	4
_puts:                                  ; @puts
	.size	_puts_end-_puts
_puts_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 13
#1:	       ldiu	52 -> r1
	;;
#0:	       sub	r15, r1 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 12
#1:	       or	r0, 0 -> r10
	;;
#0:	       callg	_strlen         ; puts.c:81[ puts.c:103 ]
	;;                              ; puts.c:81[ puts.c:103 ]
	       nop	3               ; puts.c:81[ puts.c:103 ]
	;;
#0:	       add	r14, 20 -> r1
#1:	       ldga	._.str18 -> r1.16 ; puts.c:87[ puts.c:103 ]
#2:	       s2add	r14, 8 -> r4
#3:	       add	r0, 1 -> r3     ; puts.c:89[ puts.c:103 ]
	;;
#0:	       stm.a	1, r1, 3        ; puts.c:88[ puts.c:103 ]
#1:	       add	r4, 4 -> r2
	;;
#1:	       stm.a	r1.16, r1, 2    ; puts.c:87[ puts.c:103 ]
	;;
#0:	       stm.a	r10, r1, 0      ; puts.c:85[ puts.c:103 ]
	;;
#0:	       stm.a	r0, r1, 1       ; puts.c:86[ puts.c:103 ]
	;;
#0:	       stm.a	2, r2, 1        ; puts.c:91[ puts.c:103 ]
	;;
#0:	       stm.a	r1, r2, 0       ; puts.c:90[ puts.c:103 ]
	;;
#0:	       stm.a	r3, r2, 2       ; puts.c:89[ puts.c:103 ]
	;;
#0:	       ldmg.d	_impure_data+8  ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldm.f	r0, 12          ; puts.c:93[ puts.c:103 ]
#1:	       add	r0, 12 -> r1    ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldx	$memhu, r1 -> r1 ; puts.c:93[ puts.c:103 ]
	;;
#0:	       btest	r1, 13 -> c1    ; puts.c:93[ puts.c:103 ]
	;;
#0:	if  c1 br	.BB6_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.i
#0:	       ldga	8192 -> r2
	;;
#0:	       or	r1, r2 -> r1    ; puts.c:93[ puts.c:103 ]
	;;
#0:	       stmh.a	r1, r0, 6       ; puts.c:93[ puts.c:103 ]
#1:	       ldiu	2047 -> r1
	;;
#0:	       ldim	2043 -> r1
	;;
#0:	       ldmg.d	_impure_data+8  ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldm.f	r0, 100         ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; puts.c:93[ puts.c:103 ]
	;;
#0:	       and	r2, r1 -> r1    ; puts.c:93[ puts.c:103 ]
	;;
#0:	       stm.a	r1, r0, 25      ; puts.c:93[ puts.c:103 ]
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB6_2:                                 ; %_puts_r.exit
#0:	       s2add	r14, 8 -> r10
#1:	       callg	___sfvwrite_r   ; puts.c:94[ puts.c:103 ]
	;;
#0:	       add	r10, 4 -> r1
	;;                              ; puts.c:94[ puts.c:103 ]
	       nop	2               ; puts.c:94[ puts.c:103 ]
	;;
#0:	       ldm.s	r14, 48
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 13 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_puts_end:

	.align	4
_sprintf:                               ; @sprintf
	.size	_sprintf_end-_sprintf
_sprintf_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 37
#1:	       ldiu	148 -> r9
#2:	       ldi	520 -> r7
#3:	       ldiu	2047 -> r4
	;;
#0:	       sub	r15, r9 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       ldiu	128 -> r9
#3:	       ldim	1023 -> r4
	;;
#3:	       ldx	$ro, 0 -> r3.31
#0:	       ldih	1023 -> r4
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       add	r14, 20 -> r6
#1:	       add	r14, r9 -> r9
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       add	r9, 8 -> r5
#1:	       add	r9, 12 -> r8
#2:	       add	r9, 16 -> r9
	;;
#0:	       stm.a	r0, r6, 4       ; sprintf.c:626
	;;
#0:	       stm.a	r0, r6, 0       ; sprintf.c:626
	;;
#0:	       stmh.a	r7, r6, 6       ; sprintf.c:625
	;;
#0:	       stm.a	r1, r5, 0
	;;
#0:	       stm.a	r2, r8, 0
#1:	       ldiu	128 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 0 -> r0
	;;
#0:	       stm.a	r3, r9, 0
	;;
#0:	       stm.a	r4, r6, 2       ; sprintf.c:627
	;;
#0:	       stm.a	r4, r6, 5       ; sprintf.c:627
	;;
#0:	       stmh.a	-1, r6, 7       ; sprintf.c:628
	;;
#0:	       stm.a	r5, r0, 0       ; sprintf.c:630
#1:	       or	r6, 0 -> r0     ; sprintf.c:634
	;;
#0:	       ldm.s	r14, 128        ; sprintf.c:634
	;;
#0:	       callg	__svfprintf_r   ; sprintf.c:634
#1:	       ldx	$mem, 0 -> r1   ; sprintf.c:634
	;;                              ; sprintf.c:634
	       nop	3               ; sprintf.c:634
	;;
#0:	       ldm.s	r14, 20         ; sprintf.c:636
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0   ; sprintf.c:636
	;;
#0:	       stmb.a	0, r0, 0        ; sprintf.c:636
#1:	       ldiu	148 -> r0
	;;
#0:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       add	r15, r0 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_sprintf_end:

	.align	4
_strcmp:                                ; @strcmp
	.size	_strcmp_end-_strcmp
_strcmp_start:
; BB#0:                                 ; %entry
#0:	       or	r1, r0 -> r2    ; strcmp.c:78
#1:	       ldiu	4 -> r3         ; strcmp.c:78
#2:	       wb.s	r15, 1          ; strcmp.c:78
	;;
#0:	       and	r2, 3 -> r2     ; strcmp.c:78
#1:	       sub	r15, r3 -> r15  ; strcmp.c:78
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strcmp.c:78
	;;
#0:	if !c1 br	.BB8_6
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry.bb5_crit_edge
#0:	       ldga	32896 -> r2
#1:	       br	.BB8_4
	;;
	       nop	2
	;;
.BB8_2:                                 ; %bb1
                                        ;   in Loop: Header=BB8_4 Depth=1
#0:	       ldiu	1791 -> r4
#1:	       or	r2, 0 -> r5
	;;
#0:	       ldim	991 -> r4
#1:	       ldih	1028 -> r5
	;;
#0:	       and	r3, r5 -> r6
#1:	       ldih	2039 -> r4
	;;
#0:	       xor	r6, r5 -> r5
#1:	       add	r3, r4 -> r3
	;;
#0:	       and	r5, r3 -> r3    ; strcmp.c:87
	;;
#0:	       cmpne	r3, 0 -> c1     ; strcmp.c:87
	;;
#0:	if  c1 ret                      ; strcmp.c:104
#1:	if  c1 ldi	0 -> r0
#2:	if  c1 s2add	r15, 1 -> r15   ; strcmp.c:104
	;;                              ; strcmp.c:104
	       nop	3               ; strcmp.c:104
	;;
; BB#3:                                 ; %bb4
                                        ;   in Loop: Header=BB8_4 Depth=1
#0:	       add	r0, 4 -> r0
#1:	       add	r1, 4 -> r1
	;;
.BB8_4:                                 ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 0           ; strcmp.c:83
	;;
#0:	       ldx	$mem, 0 -> r3   ; strcmp.c:83
#1:	       ldm.f	r1, 0           ; strcmp.c:83
	;;
#0:	       ldx	$mem, 0 -> r4   ; strcmp.c:83
	;;
#0:	       cmpeq	r3, r4 -> c1    ; strcmp.c:83
	;;
#0:	if  c1 br	.BB8_2
	;;
	       nop	2
	;;
#0:	       br	.BB8_6
	;;
	       nop	2
	;;
.BB8_5:                                 ; %bb7
                                        ;   in Loop: Header=BB8_6 Depth=1
#0:	       add	r0, 1 -> r0
#1:	       add	r1, 1 -> r1
	;;
.BB8_6:                                 ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 0           ; strcmp.c:99
	;;
#0:	       ldx	$membu, r0 -> r2 ; strcmp.c:99
#1:	       ldm.f	r1, 0
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strcmp.c:99
	;;
#0:	if  c1 br	.BB8_8
#1:	       ldx	$membu, r1 -> r3
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb8
                                        ;   in Loop: Header=BB8_6 Depth=1
#0:	       mask	r2, 0 -> r4
#1:	       mask	r3, 0 -> r5
	;;
#0:	       cmpeq	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB8_5
	;;
	       nop	2
	;;
.BB8_8:                                 ; %bb10
#0:	       mask	r2, 0 -> r0     ; strcmp.c:104
#1:	       ret                      ; strcmp.c:104
#2:	       mask	r3, 0 -> r1     ; strcmp.c:104
#3:	       s2add	r15, 1 -> r15   ; strcmp.c:104
	;;
#0:	       sub	r0, r1 -> r0    ; strcmp.c:104
	;;                              ; strcmp.c:104
	       nop	2               ; strcmp.c:104
	;;
.BB8_9:                                 ; %bb11
	.align	4
_strcmp_end:

	.align	4
_strlen:                                ; @strlen
	.size	_strlen_end-_strlen
_strlen_start:
; BB#0:                                 ; %entry
#0:	       ldiu	8 -> r2
#1:	       br	.BB9_3
#2:	       wb.s	r15, 2
#3:	       ldi	0 -> r1
	;;
#0:	       sub	r15, r2 -> r15
	;;
	       nop	1
	;;
.BB9_1:                                 ; %bb
                                        ;   in Loop: Header=BB9_3 Depth=1
#0:	       ldm.f	r2, 0           ; strlen.c:68
	;;
#0:	       ldx	$membu, r2 -> r2 ; strlen.c:68
	;;
#0:	       cmpne	r2, 0 -> c1     ; strlen.c:68
	;;
#0:	if !c1 ret                      ; strlen.c:87
#1:	if !c1 or	r1, 0 -> r0     ; strlen.c:87
#2:	if !c1 s2add	r15, 2 -> r15   ; strlen.c:87
	;;                              ; strlen.c:87
	       nop	3               ; strlen.c:87
	;;
; BB#2:                                 ; %bb2
                                        ;   in Loop: Header=BB9_3 Depth=1
#0:	       add	r1, 1 -> r1
	;;
.BB9_3:                                 ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r0, r1 -> r2
	;;
#0:	       and	r2, 3 -> r3     ; strlen.c:66
	;;
#0:	       cmpne	r3, 0 -> c1     ; strlen.c:66
	;;
#0:	if  c1 br	.BB9_1          ; strlen.c:66
	;;                              ; strlen.c:66
	       nop	2               ; strlen.c:66
	;;
; BB#4:                                 ; %bb4
#0:	       ldm.f	r2, 0           ; strlen.c:76
#1:	       ldiu	1791 -> r1
	;;
#0:	       ldim	991 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; strlen.c:76
#1:	       ldih	2039 -> r1
	;;
#0:	       stm.s	r3, r15, 1
#1:	       ldga	32896 -> r3
	;;
#0:	       ldm.s	r15, 4
#1:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       and	r4, r3 -> r5
#1:	       add	r4, r1 -> r4
	;;
#0:	       xor	r5, r3 -> r5
	;;
#0:	       and	r5, r4 -> r4    ; strlen.c:76
	;;
#0:	       cmpeq	r4, 0 -> c1     ; strlen.c:76
	;;
#0:	if !c1 br	.BB9_6
	;;
	       nop	2
	;;
.BB9_5:                                 ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, 4           ; strlen.c:76
#1:	       add	r2, 4 -> r2
	;;
#0:	       ldx	$mem, 0 -> r4   ; strlen.c:76
	;;
#0:	       and	r4, r3 -> r5
#1:	       add	r4, r1 -> r4
	;;
#0:	       xor	r5, r3 -> r5
	;;
#0:	       and	r5, r4 -> r4    ; strlen.c:76
	;;
#0:	       cmpeq	r4, 0 -> c1     ; strlen.c:76
	;;
#0:	if  c1 br	.BB9_5          ; strlen.c:76
	;;                              ; strlen.c:76
	       nop	2               ; strlen.c:76
	;;
.BB9_6:                                 ; %bb8
#0:	       ldm.f	r2, 0           ; strlen.c:85
	;;
#0:	       ldx	$membu, r2 -> r1 ; strlen.c:85
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:85
	;;
#0:	if  c1 ret                      ; strlen.c:87
#1:	if  c1 sub	r2, r0 -> r0    ; strlen.c:87
#2:	if  c1 s2add	r15, 2 -> r15   ; strlen.c:87
	;;                              ; strlen.c:87
	       nop	3               ; strlen.c:87
	;;
.BB9_7:                                 ; %bb9
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, 1           ; strlen.c:85
#1:	       add	r2, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r2 ; strlen.c:85
	;;
#0:	       cmpne	r2, 0 -> c1     ; strlen.c:85
#1:	       or	r1, 0 -> r2
	;;
#0:	if  c1 br	.BB9_7          ; strlen.c:85
	;;                              ; strlen.c:85
	       nop	2               ; strlen.c:85
	;;
; BB#8:                                 ; %bb9.bb11_crit_edge
#0:	       or	r1, 0 -> r2
	;;
.BB9_9:                                 ; %bb11
#0:	       sub	r2, r0 -> r0    ; strlen.c:87
#1:	       ret                      ; strlen.c:87
#2:	       s2add	r15, 2 -> r15   ; strlen.c:87
	;;                              ; strlen.c:87
	       nop	3               ; strlen.c:87
	;;
.BB9_10:                                ; %bb1
	.align	4
_strlen_end:

	.align	4
___sfvwrite_r:                          ; @__sfvwrite_r
	.size	___sfvwrite_r_end-___sfvwrite_r
___sfvwrite_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 15
#1:	       ldiu	60 -> r2
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 14
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 13
	;;
#0:	       stm.s	r12, r14, 12
	;;
#0:	       stm.s	r13, r14, 11
	;;
#0:	       stm.s	r1, r14, 7
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:59
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:59
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:59
	;;
#0:	if  c1 br	.BB10_56
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       add	r10, 12 -> r0   ; fvwrite.c:63
	;;
#0:	       stm.s	r0, r14, 6      ; fvwrite.c:63
	;;
#0:	       ldm.f	r10, 12         ; fvwrite.c:63
	;;
#0:	       ldx	$memhu, r0 -> r1 ; fvwrite.c:63
	;;
#0:	       btest	r1, 3 -> c1     ; fvwrite.c:63
	;;
#0:	if !c1 br	.BB10_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb2
#0:	       ldm.f	r10, 16         ; fvwrite.c:63
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:63
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:63
	;;
#0:	if !c1 br	.BB10_5
	;;
	       nop	2
	;;
.BB10_3:                                ; %bb3
#0:	       or	r10, 0 -> r0    ; fvwrite.c:63
#1:	       callg	___swsetup_r    ; fvwrite.c:63
	;;                              ; fvwrite.c:63
	       nop	3               ; fvwrite.c:63
	;;
#0:	       ldm.f	r10, 12
#1:	       ldga	___mem_emergency -> r1
#2:	       cmpne	r0, 0 -> c1     ; fvwrite.c:63
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#0:	if !c1 br	.BB10_5
#2:	       stm.a	r2.31, r1, 0
	;;
#0:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r1 -> r1
	;;
; BB#4:                                 ; %bb4
#0:	       ldi	64 -> r0
#1:	       br	.BB10_57
	;;
#0:	       or	r1, r0 -> r1    ; fvwrite.c:65
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:66
	;;
#0:	       stmh.a	r1, r10, 6      ; fvwrite.c:65
	;;
#0:	       stm.a	9, r0, 0        ; fvwrite.c:66
#1:	       ldi	-1 -> r0
	;;
.BB10_5:                                ; %bb5
#0:	       ldm.s	r14, 28         ; fvwrite.c:70
#1:	       btest	r1, 1 -> c1     ; fvwrite.c:93
	;;
#0:	if !c1 br	.BB10_11        ; fvwrite.c:93
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:70
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:70
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:70
	;;                              ; fvwrite.c:93
	       nop	0               ; fvwrite.c:93
	;;
; BB#6:                                 ; %bb7.preheader
#0:	       ldi	0 -> r11
#1:	       br	.BB10_8
#2:	       add	r0, 4 -> r0
#3:	       ldiu	1024 -> r12
	;;
#0:	       stm.s	r0, r14, 10
#1:	       or	r11, 0 -> r13
	;;
	       nop	1
	;;
.BB10_7:                                ; %bb6
                                        ;   in Loop: Header=BB10_8 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:100
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:100
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:100
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:100
#1:	       ldm.f	r0, 0           ; fvwrite.c:100
#2:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:100
#1:	       stm.s	r0, r14, 10
	;;
.BB10_8:                                ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r13, 0 -> c1    ; fvwrite.c:100
	;;
#0:	if  c1 br	.BB10_7         ; fvwrite.c:100
	;;                              ; fvwrite.c:100
	       nop	2               ; fvwrite.c:100
	;;
; BB#9:                                 ; %bb8
                                        ;   in Loop: Header=BB10_8 Depth=1
#0:	       ldm.f	r10, 36         ; fvwrite.c:101
#1:	       cmpult	r12, r13 -> c1
#2:	       or	r13, 0 -> r3    ; fvwrite.c:101
#3:	       ldga	_impure_data -> r0 ; fvwrite.c:101
	;;
#0:	if  c1 or	r12, 0 -> r3    ; fvwrite.c:101
#1:	       or	r11, 0 -> r2    ; fvwrite.c:101
	;;
#0:	       ldx	$mem, 0 -> r4   ; fvwrite.c:101
#1:	       ldm.f	r10, 28         ; fvwrite.c:101
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:101
	;;
#0:	       call	r4              ; fvwrite.c:101
	;;                              ; fvwrite.c:101
	       nop	3               ; fvwrite.c:101
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
; BB#10:                                ; %bb10
                                        ;   in Loop: Header=BB10_8 Depth=1
#0:	       ldm.s	r14, 28         ; fvwrite.c:107
#1:	       add	r11, r0 -> r11  ; fvwrite.c:104
#2:	       sub	r13, r0 -> r13  ; fvwrite.c:105
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:107
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:107
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:107
	;;
#0:	       cmpeq	r2, r0 -> c1
#1:	       sub	r2, r0 -> r3    ; fvwrite.c:107
	;;
#0:	if !c1 br	.BB10_8
#1:	       stm.a	r3, r1, 2       ; fvwrite.c:107
	;;
	       nop	2
	;;
#0:	       br	.BB10_56
	;;
	       nop	2
	;;
.BB10_11:                               ; %bb11
#0:	       mask	r1, 4 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1     ; fvwrite.c:109
	;;
#0:	if  c1 br	.BB10_13        ; fvwrite.c:109
	;;                              ; fvwrite.c:109
	       nop	2               ; fvwrite.c:109
	;;
; BB#12:                                ; %bb13.preheader
#0:	       ldi	0 -> r1
#1:	       br	.BB10_15
#2:	       add	r0, 4 -> r0
	;;
#0:	       stm.s	r1, r14, 10
#1:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r0, r14, 5
	;;
	       nop	0
	;;
.BB10_13:                               ; %bb38.preheader
#0:	       add	r0, 4 -> r11
	;;
#0:	       br	.BB10_38
#1:	       stm.s	r11, r14, 4
#2:	       ldi	0 -> r11
	;;
#0:	       stm.s	r11, r14, 10
	;;
#0:	       stm.s	r11, r14, 9
	;;
#0:	       stm.s	r11, r14, 5
	;;
.BB10_14:                               ; %bb12
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 20         ; fvwrite.c:126
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:126
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:126
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:126
	;;
#0:	       stm.s	r11, r14, 10    ; fvwrite.c:126
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:126
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:126
#1:	       stm.s	r0, r14, 5
	;;
.BB10_15:                               ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r11, 0 -> c1    ; fvwrite.c:126
	;;
#0:	if  c1 br	.BB10_14        ; fvwrite.c:126
	;;                              ; fvwrite.c:126
	       nop	2               ; fvwrite.c:126
	;;
; BB#16:                                ; %bb14
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stm.a	r3.31, r0, 0
	;;
#0:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 9 -> c1     ; fvwrite.c:128
#1:	       stm.s	r0, r14, 8      ; fvwrite.c:127
	;;
#0:	if !c1 br	.BB10_30        ; fvwrite.c:128
#1:	       ldm.f	r10, 8          ; fvwrite.c:127
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:127
	;;                              ; fvwrite.c:128
	       nop	1               ; fvwrite.c:128
	;;
; BB#17:                                ; %bb15
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       cmpule	r12, r11 -> c1  ; fvwrite.c:130
	;;
#0:	if !c1 br	.BB10_28
	;;
	       nop	2
	;;
; BB#18:                                ; %bb16
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 32         ; fvwrite.c:130
#1:	       ldiu	1152 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:130
	;;
#0:	       and	r1, r0 -> r0    ; fvwrite.c:130
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:130
	;;
#0:	if  c1 br	.BB10_28
	;;
	       nop	2
	;;
; BB#19:                                ; %bb17
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 20         ; fvwrite.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:141
#1:	       ldm.f	r10, 16         ; fvwrite.c:133
	;;
#0:	       mul	r12, 3 -> $mul0 ; fvwrite.c:141
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:133
#1:	       ldm.f	r10, 0          ; fvwrite.c:133
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:133
	;;
#1:	       sub	r1, r0 -> r12   ; fvwrite.c:133
#0:	       ldx	$mul0, 0 -> r1  ; fvwrite.c:141
	;;
#0:	       sr	r1, 31 -> r2    ; fvwrite.c:141
#1:	       stm.s	r12, r14, 9     ; fvwrite.c:141
#2:	       add	r11, r12 -> r12 ; fvwrite.c:142
	;;
#0:	       add	r1, r2 -> r1    ; fvwrite.c:141
#1:	       add	r12, 1 -> r12   ; fvwrite.c:142
#2:	       ldm.s	r14, 32         ; fvwrite.c:144
	;;
#0:	       sra	r1, 1 -> r13    ; fvwrite.c:141
	;;
#0:	       cmpult	r13, r12 -> c1  ; fvwrite.c:142
	;;
#0:	if  c1 or	r12, 0 -> r13
#1:	       ldx	$mem, 0 -> r12  ; fvwrite.c:144
	;;
#0:	       btest	r12, 10 -> c1   ; fvwrite.c:144
	;;
#0:	if !c1 br	.BB10_23        ; fvwrite.c:144
	;;                              ; fvwrite.c:144
	       nop	2               ; fvwrite.c:144
	;;
; BB#20:                                ; %bb20
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       or	r13, 0 -> r0    ; fvwrite.c:147
#1:	       callg	__malloc_r      ; fvwrite.c:147
	;;                              ; fvwrite.c:147
	       nop	3               ; fvwrite.c:147
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:148
	;;
#0:	if  c1 br	.BB10_26        ; fvwrite.c:148
	;;                              ; fvwrite.c:148
	       nop	2               ; fvwrite.c:148
	;;
.BB10_21:                               ; %bb21
#0:	       ldga	_impure_data -> r0 ; fvwrite.c:150
	;;
#0:	       stm.a	12, r0, 0       ; fvwrite.c:150
	;;
.BB10_22:                               ; %err
#0:	       ldm.f	r10, 12         ; fvwrite.c:269
#1:	       ldga	___mem_emergency -> r0 ; fvwrite.c:269
#2:	       ldi	64 -> r1
#3:	       or	r14, 0 -> r15   ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fvwrite.c:269
	;;
#0:	       stm.a	r0.31, r0, 0    ; fvwrite.c:269
	;;
#0:	       ldm.s	r14, 24         ; fvwrite.c:269
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:269
#1:	       ldmg.d	___mem_emergency ; fvwrite.c:269
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fvwrite.c:269
	;;
#0:	       or	r0, r1 -> r0    ; fvwrite.c:269
	;;
#0:	       stmh.a	r0, r10, 6      ; fvwrite.c:269
#1:	       ldi	-1 -> r0
	;;
#0:	       ldm.s	r14, 44         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:270
#1:	       ldm.s	r14, 48         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:270
#1:	       ldm.s	r14, 52         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:270
#1:	       ldm.s	r14, 56         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r10  ; fvwrite.c:270
#1:	       ldm.s	r15, 8          ; fvwrite.c:270
	;;
#0:	       br	.BB10_58
#2:	       ldx	$mem, 0 -> r2.31 ; fvwrite.c:270
#1:	       ldm.s	r15, 4          ; fvwrite.c:270
	;;
#2:	       stx	r2.31 -> $ro    ; fvwrite.c:270
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; fvwrite.c:270
	;;
#3:	       stx	r3.31 -> $rb    ; fvwrite.c:270
	;;
.BB10_23:                               ; %bb23
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       or	r13, 0 -> r1    ; fvwrite.c:158
#1:	       callg	__realloc_r     ; fvwrite.c:158
	;;                              ; fvwrite.c:158
	       nop	3               ; fvwrite.c:158
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:160
	;;
#0:	if  c1 br	.BB10_25        ; fvwrite.c:160
	;;                              ; fvwrite.c:160
	       nop	2               ; fvwrite.c:160
	;;
; BB#24:                                ; %bb23.bb25_crit_edge
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       or	r0, 0 -> r12
#1:	       br	.BB10_27
	;;
	       nop	2
	;;
.BB10_25:                               ; %bb24
#0:	       ldm.f	r10, 16         ; fvwrite.c:163
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:165
	;;
#0:	       callg	__free_r        ; fvwrite.c:163
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:163
	;;                              ; fvwrite.c:163
	       nop	3               ; fvwrite.c:163
	;;
#0:	       br	.BB10_21
	;;
	       nop	2
	;;
.BB10_26:                               ; %bb22
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 16         ; fvwrite.c:153
#1:	       or	r0, 0 -> r12    ; fvwrite.c:147
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:153
#1:	       ldm.s	r14, 36         ; fvwrite.c:153
	;;
#0:	       callg	_memcpy         ; fvwrite.c:153
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:153
	;;                              ; fvwrite.c:153
	       nop	3               ; fvwrite.c:153
	;;
#0:	       ldm.f	r10, 12         ; fvwrite.c:154
#1:	       ldga	___mem_emergency -> r0 ; fvwrite.c:154
#2:	       ldiu	895 -> r1
	;;
#0:	       ldim	31 -> r1
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fvwrite.c:154
	;;
#1:	       stm.a	r1.31, r0, 0    ; fvwrite.c:154
	;;
#0:	       ldm.s	r14, 24         ; fvwrite.c:154
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:154
#1:	       ldmg.d	___mem_emergency ; fvwrite.c:154
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fvwrite.c:154
	;;
#0:	       and	r0, r1 -> r0    ; fvwrite.c:154
#1:	       ldi	128 -> r1
	;;
#0:	       or	r0, r1 -> r0    ; fvwrite.c:154
	;;
#0:	       stmh.a	r0, r10, 6      ; fvwrite.c:154
	;;
.BB10_27:                               ; %bb25
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 36         ; fvwrite.c:173
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:173
	;;
#0:	       sub	r13, r0 -> r1   ; fvwrite.c:173
#1:	       add	r12, r0 -> r0   ; fvwrite.c:170
	;;
#0:	       stm.a	r1, r10, 2      ; fvwrite.c:173
	;;
#0:	       stm.a	r13, r10, 5     ; fvwrite.c:171
	;;
#0:	       stm.a	r12, r10, 4     ; fvwrite.c:169
#1:	       or	r11, 0 -> r12
	;;
#0:	       stm.a	r0, r10, 0      ; fvwrite.c:170
	;;
.BB10_28:                               ; %bb26
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 0          ; fvwrite.c:177
#1:	       cmpult	r11, r12 -> c1  ; fvwrite.c:175
	;;
#0:	if  c1 or	r11, 0 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:177
#1:	       ldm.s	r14, 40         ; fvwrite.c:177
#2:	       or	r12, 0 -> r2    ; fvwrite.c:177
	;;
#0:	       callg	_memmove        ; fvwrite.c:177
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:177
	;;                              ; fvwrite.c:177
	       nop	3               ; fvwrite.c:177
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:178
	;;
#0:	       br	.BB10_35
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:178
#2:	       ldm.f	r10, 0          ; fvwrite.c:179
	;;
#0:	       sub	r0, r12 -> r0   ; fvwrite.c:178
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:179
#1:	       stm.a	r0, r10, 2      ; fvwrite.c:178
	;;
#0:	       add	r1, r12 -> r12  ; fvwrite.c:179
	;;
.BB10_29:                               ; %bb31
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:185
#1:	       or	r12, 0 -> r2    ; fvwrite.c:185
	;;
#0:	       callg	_memmove        ; fvwrite.c:185
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:185
	;;                              ; fvwrite.c:185
	       nop	3               ; fvwrite.c:185
	;;
#0:	       ldm.f	r10, 0          ; fvwrite.c:187
#1:	       or	r10, 0 -> r1    ; fvwrite.c:188
	;;
#0:	       callg	__fflush_r      ; fvwrite.c:188
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:187
	;;
#0:	       add	r0, r12 -> r0   ; fvwrite.c:187
	;;
#0:	       stm.a	r0, r10, 0      ; fvwrite.c:187
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:188
	;;                              ; fvwrite.c:188
	       nop	1               ; fvwrite.c:188
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:188
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
#0:	       br	.BB10_36
	;;
	       nop	2
	;;
.BB10_30:                               ; %bb29
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 0          ; fvwrite.c:182
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:182
#1:	       ldm.f	r10, 16         ; fvwrite.c:182
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:182
	;;
#0:	       cmpule	r0, r1 -> c1    ; fvwrite.c:182
	;;
#0:	if !c1 cmpule	r11, r12 -> c1
	;;
#0:	if !c1 br	.BB10_29
	;;
	       nop	2
	;;
; BB#31:                                ; %bb32
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 20         ; fvwrite.c:191
	;;
#0:	       ldx	$mem, 0 -> r3   ; fvwrite.c:191
	;;
#0:	       cmpult	r11, r3 -> c1   ; fvwrite.c:191
	;;
#0:	if  c1 br	.BB10_34        ; fvwrite.c:191
	;;                              ; fvwrite.c:191
	       nop	2               ; fvwrite.c:191
	;;
; BB#32:                                ; %bb33
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.f	r10, 36         ; fvwrite.c:194
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:188
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:194
#1:	       ldm.f	r10, 28         ; fvwrite.c:194
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:194
#1:	       ldm.s	r14, 40         ; fvwrite.c:194
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:194
	;;
#0:	       call	r12             ; fvwrite.c:194
	;;                              ; fvwrite.c:194
	       nop	3               ; fvwrite.c:194
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
; BB#33:                                ; %bb33.bb35_crit_edge
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       or	r0, 0 -> r12
#1:	       br	.BB10_36
	;;
	       nop	2
	;;
.BB10_34:                               ; %bb34
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:202
#1:	       or	r11, 0 -> r2    ; fvwrite.c:202
	;;
#0:	       callg	_memmove        ; fvwrite.c:202
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:202
	;;                              ; fvwrite.c:202
	       nop	3               ; fvwrite.c:202
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:203
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:203
#1:	       ldm.f	r10, 0          ; fvwrite.c:204
	;;
#0:	       sub	r12, r11 -> r12 ; fvwrite.c:203
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:204
#1:	       stm.a	r12, r10, 2     ; fvwrite.c:203
	;;
#0:	       add	r0, r11 -> r12  ; fvwrite.c:204
	;;
.BB10_35:                               ; %bb34
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       stm.a	r12, r10, 0     ; fvwrite.c:204
#1:	       or	r11, 0 -> r12
	;;
.BB10_36:                               ; %bb35
                                        ;   in Loop: Header=BB10_15 Depth=1
#0:	       ldm.s	r14, 28         ; fvwrite.c:209
#1:	       sub	r11, r12 -> r11 ; fvwrite.c:207
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:209
	;;
#0:	       ldm.f	r0, 8           ; fvwrite.c:209
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:209
#1:	       ldm.s	r14, 40         ; fvwrite.c:206
	;;
#0:	       cmpeq	r1, r12 -> c1
	;;
#0:	if !c1 br	.BB10_15
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:206
	;;
#0:	       add	r2, r12 -> r2   ; fvwrite.c:206
	;;
#0:	       stm.s	r2, r14, 10     ; fvwrite.c:207
#1:	       sub	r1, r12 -> r2   ; fvwrite.c:209
	;;
#0:	       stm.a	r2, r0, 2       ; fvwrite.c:209
	;;
#0:	       br	.BB10_56
	;;
	       nop	2
	;;
.BB10_37:                               ; %bb37
                                        ;   in Loop: Header=BB10_38 Depth=1
#0:	       ldm.s	r14, 16         ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:224
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:224
	;;
#0:	       stm.s	r1, r14, 10     ; fvwrite.c:224
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:224
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:224
	;;
#0:	       stm.s	r1, r14, 9
	;;
#0:	       stm.s	r0, r14, 4
	;;
.BB10_38:                               ; %bb38.outer
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB10_39 Depth 2
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB10_39:                               ; %bb38
                                        ;   Parent Loop BB10_38 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 36         ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:224
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:224
	;;
#0:	if  c1 br	.BB10_37        ; fvwrite.c:224
	;;                              ; fvwrite.c:224
	       nop	2               ; fvwrite.c:224
	;;
; BB#40:                                ; %bb39
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 32         ; fvwrite.c:225
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:225
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:225
	;;
#0:	if  c1 br	.BB10_42        ; fvwrite.c:225
	;;                              ; fvwrite.c:225
	       nop	2               ; fvwrite.c:225
	;;
; BB#41:                                ; %bb39.bb44_crit_edge
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 20
#1:	       br	.BB10_46
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
	       nop	1
	;;
.BB10_42:                               ; %bb40
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:227
#1:	       ldi	10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:227
#1:	       ldm.s	r14, 36         ; fvwrite.c:227
	;;
#0:	       callg	_memchr         ; fvwrite.c:227
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:227
	;;                              ; fvwrite.c:227
	       nop	3               ; fvwrite.c:227
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:228
	;;
#0:	if  c1 br	.BB10_44        ; fvwrite.c:228
	;;                              ; fvwrite.c:228
	       nop	2               ; fvwrite.c:228
	;;
; BB#43:                                ; %bb41
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:228
#1:	       br	.BB10_45
#2:	       add	r0, 1 -> r11    ; fvwrite.c:228
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:228
	;;
#0:	       sub	r11, r0 -> r11  ; fvwrite.c:228
	;;
	       nop	0
	;;
.BB10_44:                               ; %bb42
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 36         ; fvwrite.c:228
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:228
	;;
#0:	       add	r11, 1 -> r11   ; fvwrite.c:228
	;;
.BB10_45:                               ; %bb42
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldi	1 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB10_46:                               ; %bb44
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.f	r10, 20         ; fvwrite.c:232
	;;
#0:	       ldx	$mem, 0 -> r3   ; fvwrite.c:232
#1:	       ldm.f	r10, 8          ; fvwrite.c:232
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:232
#1:	       ldm.f	r10, 0          ; fvwrite.c:233
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:233
#1:	       ldm.s	r14, 36         ; fvwrite.c:231
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:231
#1:	       ldm.f	r10, 16         ; fvwrite.c:233
	;;
#0:	       cmpule	r11, r2 -> c1   ; fvwrite.c:231
#1:	       or	r2, 0 -> r12    ; fvwrite.c:231
	;;
#0:	       ldx	$mem, 0 -> r4   ; fvwrite.c:233
#1:	if  c1 or	r11, 0 -> r12   ; fvwrite.c:231
	;;
#0:	       cmpule	r0, r4 -> c1    ; fvwrite.c:233
	;;
#0:	if !c1 add	r3, r1 -> r13   ; fvwrite.c:232
	;;
#0:	if !c1 cmple	r12, r13 -> c1
	;;
#0:	if  c1 br	.BB10_48
	;;
	       nop	2
	;;
; BB#47:                                ; %bb48
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:235
#1:	       or	r13, 0 -> r2    ; fvwrite.c:235
	;;
#0:	       callg	_memmove        ; fvwrite.c:235
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:235
	;;                              ; fvwrite.c:235
	       nop	3               ; fvwrite.c:235
	;;
#0:	       ldm.f	r10, 0          ; fvwrite.c:237
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:238
#2:	       or	r10, 0 -> r1    ; fvwrite.c:238
	;;
#0:	       callg	__fflush_r      ; fvwrite.c:238
#1:	       ldx	$mem, 0 -> r12  ; fvwrite.c:237
	;;
#0:	       add	r12, r13 -> r12 ; fvwrite.c:237
	;;
#0:	       stm.a	r12, r10, 0     ; fvwrite.c:237
	;;                              ; fvwrite.c:238
	       nop	1               ; fvwrite.c:238
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:238
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
#0:	       br	.BB10_52
	;;
	       nop	2
	;;
.BB10_48:                               ; %bb49
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       cmplt	r12, r3 -> c1   ; fvwrite.c:241
	;;
#0:	if  c1 br	.BB10_51        ; fvwrite.c:241
	;;                              ; fvwrite.c:241
	       nop	2               ; fvwrite.c:241
	;;
; BB#49:                                ; %bb50
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.f	r10, 36         ; fvwrite.c:243
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:238
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:243
#1:	       ldm.f	r10, 28         ; fvwrite.c:243
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:243
#1:	       ldm.s	r14, 40         ; fvwrite.c:243
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:243
	;;
#0:	       call	r12             ; fvwrite.c:243
	;;                              ; fvwrite.c:243
	       nop	3               ; fvwrite.c:243
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
; BB#50:                                ; %bb50.bb52_crit_edge
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       or	r0, 0 -> r13
#1:	       br	.BB10_52
	;;
	       nop	2
	;;
.BB10_51:                               ; %bb51
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:250
#1:	       or	r12, 0 -> r2    ; fvwrite.c:250
	;;
#0:	       callg	_memmove        ; fvwrite.c:250
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:250
	;;                              ; fvwrite.c:250
	       nop	3               ; fvwrite.c:250
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:251
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:251
#1:	       ldm.f	r10, 0          ; fvwrite.c:252
	;;
#0:	       sub	r13, r12 -> r13 ; fvwrite.c:251
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:252
#1:	       stm.a	r13, r10, 2     ; fvwrite.c:251
	;;
#0:	       add	r0, r12 -> r13  ; fvwrite.c:252
	;;
#0:	       stm.a	r13, r10, 0     ; fvwrite.c:252
#1:	       or	r12, 0 -> r13
	;;
.BB10_52:                               ; %bb52
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       cmpeq	r11, r13 -> c1
#1:	       sub	r11, r13 -> r0  ; fvwrite.c:254
	;;
#0:	if !c1 br	.BB10_55
#1:	       stm.s	r0, r14, 5
	;;
	       nop	2
	;;
; BB#53:                                ; %bb53
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldga	_impure_data -> r0 ; fvwrite.c:238
#1:	       callg	__fflush_r      ; fvwrite.c:257
#2:	       or	r10, 0 -> r1    ; fvwrite.c:257
	;;                              ; fvwrite.c:257
	       nop	3               ; fvwrite.c:257
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:257
	;;
#0:	if  c1 br	.BB10_22
	;;
	       nop	2
	;;
; BB#54:                                ; %bb53.bb55_crit_edge
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB10_55:                               ; %bb55
                                        ;   in Loop: Header=BB10_39 Depth=2
#0:	       ldm.s	r14, 28         ; fvwrite.c:264
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:264
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:264
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:264
#1:	       ldm.s	r14, 40         ; fvwrite.c:261
	;;
#0:	       cmpeq	r0, r13 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:261
	;;
#0:	       add	r2, r13 -> r2   ; fvwrite.c:261
	;;
#0:	       stm.s	r2, r14, 10     ; fvwrite.c:262
	;;
#0:	       ldm.s	r14, 36         ; fvwrite.c:262
	;;
#0:	if !c1 br	.BB10_39
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:262
	;;
#0:	       sub	r2, r13 -> r2   ; fvwrite.c:262
	;;
#0:	       stm.s	r2, r14, 9      ; fvwrite.c:264
#1:	       sub	r0, r13 -> r2   ; fvwrite.c:264
	;;
#0:	       stm.a	r2, r1, 2       ; fvwrite.c:264
	;;
.BB10_56:                               ; %bb57
#0:	       ldi	0 -> r0
	;;
.BB10_57:                               ; %bb57
#0:	       ldm.s	r14, 44         ; fvwrite.c:270
#1:	       or	r14, 0 -> r15   ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:270
#1:	       ldm.s	r14, 48         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:270
#1:	       ldm.s	r14, 52         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:270
#1:	       ldm.s	r14, 56         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r10  ; fvwrite.c:270
#1:	       ldm.s	r15, 8          ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fvwrite.c:270
#1:	       ldm.s	r15, 4          ; fvwrite.c:270
	;;
#0:	       stx	r0.31 -> $ro    ; fvwrite.c:270
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fvwrite.c:270
	;;
#1:	       stx	r1.31 -> $rb    ; fvwrite.c:270
	;;
.BB10_58:                               ; %bb57
#0:	       ldm.s	r15, 0          ; fvwrite.c:270
#1:	       s2add	r15, 15 -> r15  ; fvwrite.c:270
	;;
#0:	       ret                      ; fvwrite.c:270
#1:	       ldx	$mem, 0 -> r14  ; fvwrite.c:270
	;;                              ; fvwrite.c:270
	       nop	3               ; fvwrite.c:270
	;;
	.align	4
___sfvwrite_r_end:

	.align	4
__svfprintf_r:                          ; @_svfprintf_r
	.size	__svfprintf_r_end-__svfprintf_r
__svfprintf_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 93
#3:	       ldiu	372 -> r2
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
#1:	       ldiu	256 -> r2
	;;
#2:	       ldx	$f10 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       add	r14, r2 -> r2
	;;
#1:	       stm.s	r1.31, r15, 2
#3:	       ldx	$f11 -> r3.31
	;;
#1:	       stm.s	r10, r2, 28
#0:	       ldx	$f12 -> r0.31
#2:	       or	r0, 0 -> r10
#3:	       ldga	._.str65 -> r0  ; vfprintf.c:576
	;;
#0:	       stm.s	r11, r2, 27
#1:	       ldx	$f13 -> r1.31
#2:	       ldiu	252 -> r11
	;;
#0:	       stm.s	r12, r2, 26
#1:	       add	r14, r11 -> r11
	;;
#0:	       stm.s	r13, r2, 25
	;;
#0:	       stm.s	r0.23, r2, 24
	;;
#1:	       stm.s	r1.23, r2, 23
	;;
#2:	       stm.s	r2.23, r2, 22
	;;
#3:	       stm.s	r3.23, r2, 21
	;;
#2:	       stm.s	r2.24, r2, 20
	;;
#3:	       stm.s	r3.24, r2, 19
	;;
#2:	       stm.s	r2.31, r2, 18
	;;
#3:	       stm.s	r3.31, r2, 17
#2:	       ldx	$f14 -> r2.31
	;;
#0:	       stm.s	r0.31, r2, 16
#3:	       ldx	$f15 -> r3.31
	;;
#1:	       stm.s	r1.31, r2, 15
#0:	       ldx	$f10 -> r0.31
	;;
#2:	       stm.s	r2.31, r2, 14
#1:	       ldx	$f12 -> r1.31
	;;
#3:	       stm.s	r3.31, r2, 13
#2:	       ldx	$f14 -> r2.31
	;;
#0:	       stm.s	r0.31, r2, 11
	;;
#0:	       ldx	$f11 -> r0.31
	;;
#0:	       stm.s	r0.31, r11, 12
#1:	       ldiu	256 -> r11
	;;
#0:	       add	r14, r11 -> r11
	;;
#1:	       stm.s	r1.31, r11, 9
#0:	       ldiu	252 -> r11
	;;
#0:	       add	r14, r11 -> r11
#1:	       ldx	$f13 -> r1.31
	;;
#1:	       stm.s	r1.31, r11, 10
#0:	       ldiu	256 -> r11
	;;
#0:	       add	r14, r11 -> r11
	;;
#2:	       stm.s	r2.31, r11, 7
#0:	       ldiu	252 -> r11
	;;
#0:	       callg	_strlen         ; vfprintf.c:576
#1:	       add	r14, r11 -> r11
#2:	       ldx	$f15 -> r2.31
	;;
#2:	       stm.s	r2.31, r11, 8
	;;
#0:	       stm.s	r1, r14, 27
	;;
#0:	       stm.s	r10, r14, 23
	;;                              ; vfprintf.c:576
	       nop	0               ; vfprintf.c:576
	;;
#0:	       stm.s	r0, r14, 14     ; vfprintf.c:576
#1:	       add	r10, 12 -> r0   ; vfprintf.c:729
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 7 -> c1     ; vfprintf.c:729
	;;
#0:	if !c1 br	.BB11_5
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       or	r10, 0 -> r0    ; vfprintf.c:729
	;;
#0:	       ldm.f	r0, 16          ; vfprintf.c:729
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:729
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:729
	;;
#0:	if  c1 br	.BB11_5
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       ldi	64 -> r10
#1:	       callg	__malloc_r      ; vfprintf.c:731
#2:	       ldi	64 -> r0
	;;                              ; vfprintf.c:731
	       nop	3               ; vfprintf.c:731
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:731
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:732
	;;
#0:	if  c1 br	.BB11_4         ; vfprintf.c:732
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:731
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:731
	;;
#0:	       stm.a	r0, r1, 4       ; vfprintf.c:731
	;;                              ; vfprintf.c:732
	       nop	0               ; vfprintf.c:732
	;;
; BB#3:                                 ; %bb2
#0:	       ldga	_impure_data -> r0 ; vfprintf.c:734
	;;
#0:	       stm.a	12, r0, 0       ; vfprintf.c:734
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldm.s	r0, -740
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r0, -736
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#3:	       stx	r3.31 -> $f14
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r0, -732
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r0, -728
#2:	       ldiu	1024 -> r0
	;;
#1:	       add	r14, r0 -> r0
#0:	       stx	r0.31 -> $f12
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r0, -724
#2:	       ldiu	1020 -> r0
	;;
#1:	       add	r14, r0 -> r0
#0:	       stx	r0.31 -> $f13
	;;
#0:	       br	.BB11_244
#1:	       ldx	$mem, 0 -> r1.31
#2:	       ldm.s	r0, -720
	;;
#1:	       stx	r1.31 -> $f10
	;;
#1:	       ldx	$mem, 0 -> r1.31
#3:	       stx	r3.31 -> $f15
	;;
#1:	       stx	r1.31 -> $f11
	;;
.BB11_4:                                ; %bb3
#0:	       ldm.s	r14, 92         ; vfprintf.c:737
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:737
	;;
#0:	       stm.a	r10, r0, 5      ; vfprintf.c:737
	;;
.BB11_5:                                ; %bb4
#0:	       ldiu	160 -> r2
#1:	       ldiu	224 -> r3
#2:	       fop	dzero -> d5
	;;
#0:	       add	r14, r2 -> r2
#1:	       add	r14, r3 -> r3
#2:	       fop	dzero -> d6
	;;
#0:	       add	r2, 12 -> r0
#1:	       ldiu	160 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 15
	;;
#0:	       add	r2, 11 -> r0
	;;
#0:	       stm.s	r0, r14, 13
#1:	       add	r3, 30 -> r0
	;;
#0:	       stm.s	r0, r14, 12
#1:	       add	r3, 12 -> r0
#2:	       ldiu	256 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r0, r14, 24
	;;
#0:	       add	r3, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 7
#1:	       add	r3, 27 -> r1
#2:	       ldiu	224 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 8
	;;
#0:	       add	r3, 31 -> r1
#1:	       ldiu	256 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 6
	;;
#0:	       add	r3, 26 -> r1
#1:	       ldiu	160 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 5
#2:	       ldga	._.str14 -> r1
	;;
#0:	       add	r3, 12 -> r2
	;;
#0:	       stm.s	r2, r14, 4      ; vfprintf.c:744
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:744
	;;
#0:	       stm.a	r2, r0, 0       ; vfprintf.c:742
	;;
#0:	       stm.a	0, r0, 2        ; vfprintf.c:743
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 18
	;;
#0:	       stm.s	r0, r14, 20
	;;
#0:	       stm.s	r0, r14, 11
	;;
#0:	       stm.s	r0, r14, 16
	;;
.BB11_6:                                ; %bb6.outer
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB11_362 Depth 2
                                        ;     Child Loop BB11_8 Depth 2
                                        ;       Child Loop BB11_18 Depth 3
                                        ;         Child Loop BB11_19 Depth 4
                                        ;           Child Loop BB11_46 Depth 5
                                        ;           Child Loop BB11_40 Depth 5
                                        ;     Child Loop BB11_102 Depth 2
                                        ;     Child Loop BB11_112 Depth 2
                                        ;     Child Loop BB11_116 Depth 2
                                        ;     Child Loop BB11_174 Depth 2
                                        ;     Child Loop BB11_181 Depth 2
                                        ;     Child Loop BB11_176 Depth 2
                                        ;     Child Loop BB11_196 Depth 2
                                        ;     Child Loop BB11_221 Depth 2
                                        ;     Child Loop BB11_233 Depth 2
                                        ;     Child Loop BB11_301 Depth 2
                                        ;     Child Loop BB11_326 Depth 2
                                        ;     Child Loop BB11_262 Depth 2
                                        ;     Child Loop BB11_345 Depth 2
                                        ;     Child Loop BB11_280 Depth 2
#0:	       ldm.s	r14, 16
#1:	       br	.BB11_8
#2:	       ldi	-1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
	;;
	       nop	0
	;;
.BB11_7:                                ; %bb7
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       sub	r10, 1 -> r10
	;;
.BB11_8:                                ; %bb8
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB11_18 Depth 3
                                        ;         Child Loop BB11_19 Depth 4
                                        ;           Child Loop BB11_46 Depth 5
                                        ;           Child Loop BB11_40 Depth 5
#0:	       sub	r1, r10 -> r11
	;;
#0:	       ldm.f	r11, -1         ; vfprintf.c:772
#1:	       sub	r11, 1 -> r12
	;;
#0:	       ldx	$membu, r12 -> r0 ; vfprintf.c:772
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB11_10
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb8
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       mask	r0, 0 -> r2
#1:	       ldi	37 -> r3
	;;
#0:	       cmpne	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB11_7
	;;
	       nop	2
	;;
.BB11_10:                               ; %bb10
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:775
	;;
#0:	if !c1 br	.BB11_16
	;;
	       nop	2
	;;
; BB#11:                                ; %bb11
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:776
#1:	       xor	r10, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r2, 0       ; vfprintf.c:776
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:776
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776
#1:	       ldm.f	r0, 4           ; vfprintf.c:776
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 2       ; vfprintf.c:776
#1:	       add	r2, 1 -> r1     ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:776
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:776
	;;
#0:	if  c1 br	.BB11_13        ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	2               ; vfprintf.c:776
	;;
; BB#12:                                ; %bb11.bb15_crit_edge
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:776
#1:	       br	.BB11_15
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:776
	;;
	       nop	0
	;;
.BB11_13:                               ; %bb12
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:776
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:776
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	3               ; vfprintf.c:776
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:776
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#14:                                ; %bb12.bb15_crit_edge
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 12 -> r0
	;;
.BB11_15:                               ; %bb12.bb15_crit_edge
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       stm.s	r0, r14, 28
	;;
#0:	       ldm.f	r11, -1
	;;
#0:	       ldx	$membu, r12 -> r0
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 20
	;;
.BB11_16:                               ; %bb16
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       mask	r0, 0 -> r1     ; vfprintf.c:783
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:783
	;;
#0:	if  c1 br	.BB11_368
	;;
	       nop	2
	;;
; BB#17:                                ; %bb17
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldiu	256 -> r2
#1:	       ldi	0 -> r1
#2:	       ldi	-1 -> r10
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r1, r14, 26
#2:	       or	r1, 0 -> r12
	;;
#0:	       add	r2, 8 -> r0
	;;
#0:	       stm.s	r0, r14, 25     ; vfprintf.c:793
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:793
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 29
	;;
.BB11_18:                               ; %rflag
                                        ;   Parent Loop BB11_6 Depth=1
                                        ;     Parent Loop BB11_8 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB11_19 Depth 4
                                        ;           Child Loop BB11_46 Depth 5
                                        ;           Child Loop BB11_40 Depth 5
#0:	       ldm.f	r11, 0          ; vfprintf.c:805
	;;
#0:	       ldx	$membs, r11 -> r13 ; vfprintf.c:805
#1:	       add	r11, 1 -> r11   ; vfprintf.c:805
	;;
.BB11_19:                               ; %reswitch
                                        ;   Parent Loop BB11_6 Depth=1
                                        ;     Parent Loop BB11_8 Depth=2
                                        ;       Parent Loop BB11_18 Depth=3
                                        ; =>      This Loop Header: Depth=4
                                        ;           Child Loop BB11_46 Depth 5
                                        ;           Child Loop BB11_40 Depth 5
#0:	       ldi	31 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB11_23
	;;
	       nop	2
	;;
; BB#20:                                ; %reswitch
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpeq	r13, 0 -> c1
	;;
#0:	if  c1 br	.BB11_368
	;;
	       nop	2
	;;
.BB11_21:                               ; %bb171
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	128 -> r2
#1:	       ldi	0 -> r1
#2:	       ldi	1 -> r0
	;;
#0:	       stm.s	r1, r14, 26
#1:	       add	r14, r2 -> r2
	;;
#0:	       stm.s	r0, r14, 22
#1:	       add	r2, 4 -> r0
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1490
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:1490
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1492
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1492
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:1492
	;;
.BB11_22:                               ; %bb171
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       or	r1, 0 -> r0
#1:	       br	.BB11_189
	;;
#0:	       stm.s	r0, r14, 19
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 17
	;;
	       nop	0
	;;
.BB11_23:                               ; %reswitch
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       ldi	-32 -> r1
#1:	       ldi	88 -> r0
	;;
#0:	       add	r13, r1 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB11_21
	;;
	       nop	2
	;;
; BB#24:                                ; %reswitch
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       ldga	.JTI11_0 -> r0
	;;
#0:	       s2add	r0, r1 -> r1
	;;
#0:	       ldm.d	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       br	r1
	;;
	       nop	3
	;;
.BB11_25:                               ; %reswitch.hex_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldga	._.str430 -> r0
#1:	       br	.BB11_162
	;;
	       nop	2
	;;
.BB11_26:                               ; %bb18
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 104        ; vfprintf.c:822
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:822
	;;
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:822
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:822
	;;
#0:	if  c1 br	.BB11_18
	;;
	       nop	2
	;;
; BB#27:                                ; %bb19
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldi	32 -> r1
	;;
.BB11_28:                               ; %bb19
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:823
#1:	       br	.BB11_18
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:823
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:823
	;;
#0:	       stmb.a	r1, r13, 0      ; vfprintf.c:823
	;;
.BB11_29:                               ; %bb20
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:826
#1:	       br	.BB11_18
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:826
	;;
#0:	       or	r1, 1 -> r1     ; vfprintf.c:826
	;;
#0:	       stm.s	r1, r14, 29     ; vfprintf.c:826
	;;
.BB11_30:                               ; %bb21
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 108        ; vfprintf.c:865
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:865
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:865
#1:	       add	r1, 4 -> r1     ; vfprintf.c:865
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:865
#1:	       stm.s	r1, r14, 27
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r12 -> c1
	;;
#0:	if  c1 br	.BB11_18
	;;
	       nop	2
	;;
; BB#31:                                ; %bb22
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldi	0 -> r1
	;;
#0:	       sub	r1, r12 -> r12  ; vfprintf.c:871
	;;
.BB11_32:                               ; %bb23
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:874
#1:	       br	.BB11_18
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:874
	;;
#0:	       or	r1, 4 -> r1     ; vfprintf.c:874
	;;
#0:	       stm.s	r1, r14, 29     ; vfprintf.c:874
	;;
.BB11_33:                               ; %bb24
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldi	43 -> r1
#1:	       br	.BB11_28
	;;
	       nop	2
	;;
.BB11_34:                               ; %bb25
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       ldm.f	r11, 0          ; vfprintf.c:880
#1:	       ldi	42 -> r10
#2:	       add	r11, 1 -> r0    ; vfprintf.c:880
	;;
#0:	       ldx	$membu, r11 -> r1 ; vfprintf.c:880
	;;
#0:	       cmpeq	r1, r10 -> c1
	;;
#0:	if  c1 br	.BB11_37        ; vfprintf.c:880
	;;                              ; vfprintf.c:880
	       nop	2               ; vfprintf.c:880
	;;
; BB#35:                                ; %bb30.preheader
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       mask	r1, 8 -> r13
#1:	       ldi	-48 -> r1
	;;
#0:	       add	r13, r1 -> r1
	;;
#0:	       cmpult	r1, 10 -> c1
	;;
#0:	if  c1 br	.BB11_39        ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#36:                                ; %bb30.preheader.bb31_crit_edge
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       ldi	0 -> r10
#1:	       br	.BB11_42
#2:	       or	r0, 0 -> r11
	;;
	       nop	2
	;;
.BB11_37:                               ; %bb26
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 108        ; vfprintf.c:910
#1:	       or	r0, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:910
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:910
#1:	       add	r1, 4 -> r1     ; vfprintf.c:910
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:910
#1:	       stm.s	r1, r14, 27
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:914
	;;
#0:	if  c1 br	.BB11_18
	;;
	       nop	2
	;;
; BB#38:                                ; %bb27
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       or	r0, 0 -> r11
#1:	       br	.BB11_18
#2:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB11_39:                               ; %bb29.preheader
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       add	r11, 1 -> r11
#1:	       ldi	0 -> r10
	;;
.BB11_40:                               ; %bb29
                                        ;   Parent Loop BB11_6 Depth=1
                                        ;     Parent Loop BB11_8 Depth=2
                                        ;       Parent Loop BB11_18 Depth=3
                                        ;         Parent Loop BB11_19 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#1:	       ldm.f	r11, 0
#0:	       mul	r10, 10 -> $mul0 ; vfprintf.c:920
#2:	       ldi	-48 -> r0
	;;
#0:	       ldx	$mul0, 0 -> r10 ; vfprintf.c:920
	;;
#0:	       ldx	$membs, r11 -> r1
#1:	       add	r13, r10 -> r10
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r1, r0 -> r13
#1:	       add	r10, r0 -> r10  ; vfprintf.c:920
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r1, 0 -> r13
	;;
#0:	if  c1 br	.BB11_40        ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#41:                                ; %bb29.bb31_crit_edge
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       or	r1, 0 -> r13
	;;
.BB11_42:                               ; %bb31
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       cmplt	r10, -1 -> c1
#1:	       br	.BB11_19
#2:	       ldi	-1 -> r1
	;;
#0:	if  c1 or	r1, 0 -> r10    ; vfprintf.c:923
	;;
	       nop	1
	;;
.BB11_43:                               ; %bb32
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldi	128 -> r1
	;;
.BB11_44:                               ; %bb32
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:931
#1:	       br	.BB11_18
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:931
	;;
#0:	       or	r13, r1 -> r13  ; vfprintf.c:931
	;;
#0:	       stm.s	r13, r14, 29    ; vfprintf.c:931
	;;
.BB11_45:                               ; %reswitch.bb34_crit_edge
                                        ;   in Loop: Header=BB11_19 Depth=4
#0:	       ldi	0 -> r12
	;;
.BB11_46:                               ; %bb34
                                        ;   Parent Loop BB11_6 Depth=1
                                        ;     Parent Loop BB11_8 Depth=2
                                        ;       Parent Loop BB11_18 Depth=3
                                        ;         Parent Loop BB11_19 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#0:	       ldm.f	r11, 0          ; vfprintf.c:938
#1:	       mul	r12, 10 -> $mul1 ; vfprintf.c:937
#2:	       ldi	-48 -> r0
	;;
#1:	       ldx	$mul1, 0 -> r12 ; vfprintf.c:937
	;;
#0:	       ldx	$membs, r11 -> r1 ; vfprintf.c:938
#1:	       add	r13, r12 -> r12
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r1, r0 -> r13
#1:	       add	r12, r0 -> r12  ; vfprintf.c:937
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r1, 0 -> r13
	;;
#0:	if  c1 br	.BB11_46
	;;
	       nop	2
	;;
; BB#47:                                ;   in Loop: Header=BB11_19 Depth=4
#0:	       or	r1, 0 -> r13
#1:	       br	.BB11_19
	;;
	       nop	2
	;;
.BB11_48:                               ; %bb36
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:955
#1:	       br	.BB11_18
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:955
	;;
#0:	       or	r1, 8 -> r1     ; vfprintf.c:955
	;;
#0:	       stm.s	r1, r14, 29     ; vfprintf.c:955
	;;
.BB11_49:                               ; %bb37
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldi	64 -> r1
#1:	       br	.BB11_44
	;;
	       nop	2
	;;
.BB11_50:                               ; %bb39
                                        ;   in Loop: Header=BB11_18 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:977
#1:	       br	.BB11_18
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:977
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:977
	;;
#0:	       stm.s	r1, r14, 29     ; vfprintf.c:977
	;;
.BB11_51:                               ; %bb40
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1036
#1:	       ldiu	128 -> r3
#2:	       ldi	0 -> r0
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1036
#1:	       add	r3, 4 -> r2
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1036
	;;
#0:	       ldx	$membu, r1 -> r10 ; vfprintf.c:1036
#1:	       stm.s	r0, r14, 26
#2:	       add	r1, 4 -> r1     ; vfprintf.c:1036
	;;
#0:	       stm.s	r2, r14, 21     ; vfprintf.c:1036
	;;
#0:	       stm.s	r1, r14, 27
#1:	       ldi	1 -> r1
	;;
#0:	       stm.s	r1, r14, 22     ; vfprintf.c:1036
	;;
#0:	       stmb.a	r10, r2, 0      ; vfprintf.c:1036
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1039
	;;
#0:	       br	.BB11_189
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1039
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1039
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 19
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB11_52:                               ; %bb42
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1042
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1042
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1042
	;;
#0:	       stm.s	r1, r14, 29
	;;
.BB11_53:                               ; %bb43
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB11_55        ; vfprintf.c:1046
	;;                              ; vfprintf.c:1046
	       nop	2               ; vfprintf.c:1046
	;;
; BB#54:                                ; %bb44
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1046
#1:	       br	.BB11_57
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
.BB11_55:                               ; %bb45
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1046
	;;
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046
	;;
#0:	       btest	r1, 6 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB11_58
	;;
	       nop	2
	;;
; BB#56:                                ; %bb46
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       mask	r0, 12 -> r0
	;;
.BB11_57:                               ; %bb46
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
.BB11_58:                               ; %bb49
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:1050
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1050
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1050
	;;
#0:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1050
	;;
#0:	if  c1 br	.BB11_60        ; vfprintf.c:1050
	;;                              ; vfprintf.c:1050
	       nop	2               ; vfprintf.c:1050
	;;
; BB#59:                                ; %bb49.number_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	1 -> r1
#1:	       br	.BB11_169
	;;
	       nop	2
	;;
.BB11_60:                               ; %bb50
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r1
	;;
#0:	       sub	r1, r0 -> r0    ; vfprintf.c:1054
#1:	       ldi	1 -> r1
	;;
#0:	       stm.s	r0, r14, 22
#1:	       ldi	45 -> r0
	;;
#0:	       br	.BB11_169
#1:	       stm.s	r0, r14, 26     ; vfprintf.c:1055
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1055
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1055
	;;
#0:	       stmb.a	r0, r2, 0       ; vfprintf.c:1055
	;;
.BB11_61:                               ; %bb52
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1071
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1071
#1:	       ldm.f	r1, 4           ; vfprintf.c:1071
#2:	       add	r1, 8 -> r1     ; vfprintf.c:1071
	;;
#0:	       stx	r0 -> $f0       ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1071
#1:	       fop	fmov	f0 -> f12 ; vfprintf.c:1071
#2:	       stm.s	r1, r14, 27
	;;
#0:	       stx	r2 -> $f1       ; vfprintf.c:1071
	;;
#0:	       callg	___fpclassifyd  ; vfprintf.c:1079
#1:	       fop	fmov	f1 -> f13 ; vfprintf.c:1071
	;;
#0:	       fop	fmov	f12 -> f0 ; vfprintf.c:1079
	;;
#0:	       fop	fmov	f13 -> f1 ; vfprintf.c:1079
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1079
	;;
#0:	       ldx	$f1 -> r1       ; vfprintf.c:1079
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB11_65
	;;
	       nop	2
	;;
; BB#62:                                ; %bb52
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB11_66
	;;
	       nop	2
	;;
; BB#63:                                ; %bb53
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dzero -> d0
#1:	       ldga	._.str127 -> r0
	;;
#0:	       fop	dcmp	d6, d0 -> f0 ; vfprintf.c:1080
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1080
	;;
#0:	       btest	r1, 2 -> c1     ; vfprintf.c:1080
	;;
#0:	if  c1 ldi	45 -> r1
	;;
#0:	if  c1 stm.s	r1, r14, 26     ; vfprintf.c:1081
	;;
#0:	if  c1 ldm.s	r14, 100        ; vfprintf.c:1081
	;;
#0:	if  c1 ldx	$mem, 0 -> r10  ; vfprintf.c:1081
	;;
#0:	if  c1 stmb.a	r1, r10, 0      ; vfprintf.c:1081
#1:	       ldi	72 -> r1
#2:	       ldi	-129 -> r10
	;;
#0:	       cmplt	r13, r1 -> c1
#1:	       ldga	._.str26 -> r1
	;;
.BB11_64:                               ; %bb55
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	if  c1 or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1087
#1:	       ldi	0 -> r0
	;;
#0:	       ldm.s	r14, 116        ; vfprintf.c:1087
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1087
	;;
#0:	       and	r1, r10 -> r1   ; vfprintf.c:1087
	;;
#0:	       br	.BB11_189
#1:	       stm.s	r1, r14, 29
#2:	       ldi	3 -> r1
	;;
#0:	       stm.s	r0, r14, 19
	;;
#0:	       stm.s	r1, r14, 22
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB11_65:                               ; %bb60
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	72 -> r1
#1:	       br	.BB11_64
#2:	       ldi	-129 -> r10
#3:	       ldga	._.str329 -> r0
	;;
#0:	       cmplt	r13, r1 -> c1
#1:	       ldga	._.str228 -> r1
	;;
	       nop	1
	;;
.BB11_66:                               ; %bb64
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:1152
	;;
#0:	if  c1 br	.BB11_68        ; vfprintf.c:1152
	;;                              ; vfprintf.c:1152
	       nop	2               ; vfprintf.c:1152
	;;
; BB#67:                                ; %bb64.bb70_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	6 -> r10
#1:	       br	.BB11_70
	;;
	       nop	2
	;;
.BB11_68:                               ; %bb66
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	71 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 ldi	103 -> r1
	;;
#0:	if !c1 cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB11_70
	;;
	       nop	2
	;;
; BB#69:                                ; %bb68
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1154
	;;
#0:	if !c1 ldi	1 -> r10
	;;
.BB11_70:                               ; %bb70
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       s2add	r14, 24 -> r3
#1:	       fop	fmov	f12 -> f0
	;;
#0:	       ldx	$f0 -> r0
#1:	       add	r3, 24 -> r1
	;;
#0:	       stm.a	r0, r1, 0
#1:	       fop	fmov	f13 -> f0
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stm.a	r0, r1, 1
#1:	       ldi	256 -> r0
	;;
#0:	       ldm.f	r1, 4
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 116        ; vfprintf.c:1158
	;;
#0:	       cmplt	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB11_72
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1158
	;;
#3:	       or	r2, r0 -> r3.23 ; vfprintf.c:1158
	;;
	       nop	1
	;;
; BB#71:                                ; %bb70.bb2.i_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#2:	       ldi	0 -> r2.23
#0:	       br	.BB11_73
#1:	       fop	dmov	d6 -> d7
	;;
	       nop	2
	;;
.BB11_72:                               ; %bb.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dabs	d6 -> d7
#2:	       ldi	45 -> r2.23
	;;
.BB11_73:                               ; %bb2.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	100 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB11_77
	;;
	       nop	2
	;;
; BB#74:                                ; %bb2.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	69 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_80
	;;
	       nop	2
	;;
; BB#75:                                ; %bb2.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_79
	;;
	       nop	2
	;;
.BB11_76:                               ; %bb2.i.bb8.i_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r10, r14, 26
#1:	       br	.BB11_81
	;;
	       nop	2
	;;
.BB11_77:                               ; %bb2.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	101 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_80
	;;
	       nop	2
	;;
; BB#78:                                ; %bb2.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpne	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_76
	;;
	       nop	2
	;;
.BB11_79:                               ; %bb2.i.bb9.i_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	3 -> r2
#1:	       br	.BB11_82
#2:	       stm.s	r10, r14, 26
	;;
	       nop	2
	;;
.BB11_80:                               ; %bb7.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r10, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 26
	;;
.BB11_81:                               ; %bb8.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	2 -> r2
	;;
.BB11_82:                               ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	12 -> r4
#1:	       fop	fmov	f14 -> f0
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	256 -> r4
#2:	       fop	fmov	f15 -> f1
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f0 -> r0
	;;
#2:	       add	r4, 4 -> r2.24
#0:	       add	r4, 16 -> r1
	;;
#2:	       stm.a	r2.24, r15, 0
#3:	       add	r4, 12 -> r3.24
	;;
#0:	       stm.a	r1, r15, 1
#1:	       ldx	$f1 -> r1
	;;
#3:	       stm.a	r3.24, r15, 2
	;;
#0:	       ldm.s	r14, 104
	;;
#0:	       callg	__dtoa_r
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#0:	       ldi	101 -> r1
#1:	       s2add	r15, 3 -> r15
#2:	       stm.s	r0, r14, 21
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB11_88
	;;
	       nop	2
	;;
; BB#83:                                ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_92
	;;
	       nop	2
	;;
; BB#84:                                ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	71 -> r1
	;;
.BB11_85:                               ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB11_97
	;;
	       nop	2
	;;
; BB#86:                                ; %bb11.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB11_90
	;;
	       nop	2
	;;
; BB#87:                                ; %bb11.bb22_crit_edge.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 268
#1:	       br	.BB11_103
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	1
	;;
.BB11_88:                               ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_92
	;;
	       nop	2
	;;
; BB#89:                                ; %bb9.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	103 -> r1
#1:	       br	.BB11_85
	;;
	       nop	2
	;;
.BB11_90:                               ; %bb12.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_92
	;;
	       nop	2
	;;
; BB#91:                                ; %bb12.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpne	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB11_97
	;;
	       nop	2
	;;
.BB11_92:                               ; %bb14.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r1
#1:	       ldi	48 -> r0
	;;
#0:	       cmpne	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB11_94
	;;
	       nop	2
	;;
; BB#93:                                ; %bb14.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1
	;;
#0:	       btest	r1, 9 -> c1
	;;
#0:	if  c1 br	.BB11_95
	;;
	       nop	2
	;;
.BB11_94:                               ; %bb14.bb17_crit_edge.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260
#1:	       br	.BB11_96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	1
	;;
.BB11_95:                               ; %bb16.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       sub	r1, r3 -> r1
	;;
#2:	       stm.a	r1, r2.24, 0
	;;
.BB11_96:                               ; %bb17.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r1, r3 -> r3
	;;
#0:	       stm.s	r3, r14, 26
	;;
.BB11_97:                               ; %bb18.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
#1:	       ldm.s	r14, 104
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r3 -> r1
#1:	       ldx	$f0 -> r0
	;;
#0:	       btest	r0, 9 -> c1
	;;
#0:	if  c1 br	.BB11_99
	;;
	       nop	2
	;;
; BB#98:                                ; %bb21.preheader.thread.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#3:	       stm.a	r1, r3.24, 0
#0:	       br	.BB11_103
	;;
	       nop	2
	;;
.BB11_99:                               ; %bb21.preheader.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 268
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB11_101
	;;
	       nop	2
	;;
; BB#100:                               ; %bb21.preheader.i.cvt.exit_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       or	r0, 0 -> r1
#1:	       br	.BB11_103
	;;
	       nop	2
	;;
.BB11_101:                              ; %bb20.i.preheader
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 84
	;;
#0:	       sub	r3, r0 -> r2
#1:	       add	r0, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, r2 -> r2
	;;
.BB11_102:                              ; %bb20.i
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r2, 1 -> r2
#1:	       ldi	48 -> r3
#2:	       sub	r0, 1 -> r4
#3:	       add	r0, 1 -> r5
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stmb.a	r3, r4, 0
	;;
#0:	if  c1 br	.BB11_102
#3:	       stm.a	r0, r3.24, 0
#1:	       or	r5, 0 -> r0
	;;
	       nop	2
	;;
.BB11_103:                              ; %cvt.exit
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84
#1:	       ldi	71 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r1, r2 -> r1
	;;
#0:	       stm.s	r1, r14, 18
#1:	if !c1 ldi	103 -> r1
	;;
#0:	if !c1 cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB11_109
	;;
	       nop	2
	;;
; BB#104:                               ; %bb72
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1164
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1164
	;;
#0:	       cmplt	r0, -3 -> c1
#1:	       stm.s	r0, r14, 19
	;;
#0:	if !c1 cmplt	r10, r0 -> c1
	;;
#0:	if  c1 br	.BB11_108
	;;
	       nop	2
	;;
; BB#105:                               ; %bb72.bb94_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	103 -> r13
	;;
.BB11_106:                              ; %bb94
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1192
#1:	       ldm.s	r14, 72         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1192
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1192
	;;
#0:	if  c1 br	.BB11_130
	;;
	       nop	2
	;;
; BB#107:                               ; %bb95
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1194
	;;
#0:	       br	.BB11_131
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1194
#2:	       ldm.s	r14, 76
	;;
#0:	       and	r1, 1 -> r1     ; vfprintf.c:1194
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r1 -> r0
	;;
.BB11_108:                              ; %bb74
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       sub	r13, 2 -> r13
	;;
.BB11_109:                              ; %bb76
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	101 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1173
	;;
#0:	if  c1 br	.BB11_123       ; vfprintf.c:1173
	;;                              ; vfprintf.c:1173
	       nop	2               ; vfprintf.c:1173
	;;
; BB#110:                               ; %bb77
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1174
#1:	       ldi	1 -> r10
#2:	       ldiu	224 -> r3
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1174
	;;
#0:	       sub	r1, 1 -> r0
#1:	       sub	r10, r1 -> r1
#2:	       ldi	43 -> r10
	;;
#0:	       stm.s	r10, r14, 26
#1:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1742[ vfprintf.c:1175 ]
#2:	       or	r0, 0 -> r10
	;;
#0:	       ldm.s	r14, 104
#1:	if  c1 or	r1, 0 -> r10
#2:	       ldi	45 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	if  c1 or	r1, 0 -> r2
#1:	       add	r3, 28 -> r1
#2:	       cmplt	r10, 10 -> c1   ; vfprintf.c:1749[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB11_118       ; vfprintf.c:1749[ vfprintf.c:1175 ]
#1:	       stm.s	r1, r14, 22
	;;
#0:	       stmb.a	r2, r1, 1
	;;
#2:	       stm.a	r0, r2.24, 0    ; vfprintf.c:1174
	;;
#0:	       stmb.a	r13, r1, 0      ; vfprintf.c:1741[ vfprintf.c:1175 ]
	;;
; BB#111:                               ; %bb77.bb4.i_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#2:	       ldi	0 -> r2.24
	;;
.BB11_112:                              ; %bb4.i
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       or	r10, 0 -> r0    ; vfprintf.c:1752[ vfprintf.c:1175 ]
#1:	       callg	___divsi3       ; vfprintf.c:1752[ vfprintf.c:1175 ]
#2:	       ldi	10 -> r1
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175 ]
	       nop	3               ; vfprintf.c:1752[ vfprintf.c:1175 ]
	;;
#1:	       callg	___modsi3       ; vfprintf.c:1751[ vfprintf.c:1175 ]
#2:	       ldiu	256 -> r2
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:1752[ vfprintf.c:1175 ]
#3:	       or	r10, 0 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 20 -> r1
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1751[ vfprintf.c:1175 ]
#1:	       ldi	10 -> r1
	;;                              ; vfprintf.c:1751[ vfprintf.c:1175 ]
	       nop	0               ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       ldi	99 -> r3
#1:	       ldm.s	r14, 104
#2:	       s2add	r0, 12 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#1:	       cmplt	r3, r10 -> c1
#2:	       add	r2.24, 1 -> r2
#0:	       or	r0.23, 0 -> r10
	;;
#0:	if  c1 br	.BB11_112       ; vfprintf.c:1752[ vfprintf.c:1175 ]
#1:	       ldx	$mem, 0 -> r1
	;;
#2:	       sub	r1, r2.24 -> r1
	;;
#0:	       stmb.a	r0, r1, 6       ; vfprintf.c:1751[ vfprintf.c:1175 ]
#2:	       or	r2, 0 -> r2.24
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175 ]
	       nop	0               ; vfprintf.c:1752[ vfprintf.c:1175 ]
	;;
; BB#113:                               ; %bb5.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#1:	       ldm.s	r14, 20
#0:	       s2add	r0.23, 12 -> r10 ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stmb.a	r10, r1, 5      ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       sub	r0, r2 -> r0
	;;
#0:	       ldm.s	r14, 32         ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB11_115       ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175 ]
	       nop	2               ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
; BB#114:                               ; %bb5.i.exponent.exit_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 48
#1:	       br	.BB11_119
	;;
	       nop	2
	;;
.BB11_115:                              ; %bb5.i.bb6.i_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 48
#1:	       add	r2, 1 -> r1
#2:	       add	r2, 2 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB11_116:                              ; %bb6.i
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 104
#1:	       sub	r1, 1 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB11_116       ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       sub	r3, r10 -> r3
#2:	       sub	r10, 1 -> r10
	;;
#0:	       ldm.f	r3, 8           ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       add	r3, 8 -> r4
	;;
#0:	       ldx	$membu, r4 -> r3 ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       add	r0, 1 -> r4
	;;
#0:	       stmb.a	r3, r0, 0       ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       or	r4, 0 -> r0
	;;
; BB#117:                               ; %bb7.bb10.loopexit_crit_edge.i
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 24
#1:	       br	.BB11_120
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, r2 -> r1
	;;
	       nop	0
	;;
.BB11_118:                              ; %bb9.i398
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1758[ vfprintf.c:1175 ]
#1:	       ldi	48 -> r1
#2:	       s2add	r10, 12 -> r10  ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r1, r0, 2       ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r10, r0, 3      ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldm.s	r14, 28
	;;
.BB11_119:                              ; %bb9.i398
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldx	$mem, 0 -> r1
	;;
.BB11_120:                              ; %exponent.exit
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       sub	r1, r10 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175 ]
#1:	       ldi	1 -> r10
	;;
#0:	       stm.s	r0, r14, 11     ; vfprintf.c:1176
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1176
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1176
	;;
#0:	       add	r0, r1 -> r0    ; vfprintf.c:1176
#1:	       cmplt	r10, r1 -> c1   ; vfprintf.c:1177
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1177
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1177
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1177
	;;
#0:	if  c1 br	.BB11_122
	;;
	       nop	2
	;;
.BB11_121:                              ; %bb79.bb103_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB11_132
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
.BB11_122:                              ; %bb81
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1178
#1:	       br	.BB11_121
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1178
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1178
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB11_123:                              ; %bb82
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	102 -> r1
#1:	       ldm.s	r14, 260        ; vfprintf.c:1184
	;;
#0:	       cmpeq	r13, r1 -> c1   ; vfprintf.c:1183
	;;
#0:	if !c1 br	.BB11_106
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
; BB#124:                               ; %bb83
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmplt	r0, 1 -> c1     ; vfprintf.c:1184
	;;
#0:	if  c1 br	.BB11_128       ; vfprintf.c:1184
	;;                              ; vfprintf.c:1184
	       nop	2               ; vfprintf.c:1184
	;;
; BB#125:                               ; %bb84
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1186
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1186
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1186
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1186
	;;
#0:	if !c1 br	.BB11_131
	;;
	       nop	2
	;;
; BB#126:                               ; %bb87
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1187
#1:	       br	.BB11_131
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1187
	;;
#0:	       add	r10, r0 -> r1   ; vfprintf.c:1187
	;;
#0:	       add	r1, 1 -> r0     ; vfprintf.c:1187
	;;
.BB11_127:                              ; %bb89.bb103_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	1 -> r0
#1:	       br	.BB11_131
	;;
	       nop	2
	;;
.BB11_128:                              ; %bb88
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1189
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1189
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1189
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1189
	;;
#0:	if !c1 br	.BB11_127
	;;
	       nop	2
	;;
; BB#129:                               ; %bb91
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r10, 2 -> r0    ; vfprintf.c:1189
#1:	       br	.BB11_131
	;;
	       nop	2
	;;
.BB11_130:                              ; %bb98
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 76
#1:	       ldi	2 -> r1
#2:	       ldi	1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 72         ; vfprintf.c:1197
	;;
#0:	       cmplt	r0, 1 -> c1
#1:	       sub	r1, r0 -> r1    ; vfprintf.c:1197
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1197
	;;
#0:	       add	r10, r0 -> r0   ; vfprintf.c:1197
	;;
.BB11_131:                              ; %bb98
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
.BB11_132:                              ; %bb103
                                        ;   in Loop: Header=BB11_6 Depth=1
#2:	       mask	r2.23, 0 -> r1  ; vfprintf.c:1220
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1220
	;;
#0:	if  c1 br	.BB11_134       ; vfprintf.c:1220
	;;                              ; vfprintf.c:1220
	       nop	2               ; vfprintf.c:1220
	;;
; BB#133:                               ; %bb103.bb173_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 264
#1:	       ldga	___mem_emergency -> r1
#2:	       ldi	0 -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stm.a	r3.31, r1, 0
	;;
#0:	       ldm.s	r14, 100
	;;
#0:	       br	.BB11_135
#1:	       ldx	$mem, 0 -> r1
#2:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       stm.s	r1, r14, 26
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB11_134:                              ; %bb104
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r0
#1:	       ldi	45 -> r1
	;;
#0:	       stm.s	r0, r14, 17
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1221
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1221
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1221
	;;
#0:	       stmb.a	r1, r10, 0      ; vfprintf.c:1221
	;;
.BB11_135:                              ; %bb104
                                        ;   in Loop: Header=BB11_6 Depth=1
#3:	       or	r3.23, 0 -> r1
#0:	       br	.BB11_189
	;;
#0:	       stm.s	r1, r14, 29     ; vfprintf.c:1221
	;;
	       nop	1
	;;
.BB11_136:                              ; %bb105
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1230
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1230
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1230
	;;
#0:	if !c1 br	.BB11_138       ; vfprintf.c:1230
	;;                              ; vfprintf.c:1230
	       nop	2               ; vfprintf.c:1230
	;;
; BB#137:                               ; %bb106
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1231
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1231
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1231
	;;
#0:	       br	.BB11_8
#1:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1231
#2:	       stm.s	r1, r14, 27     ; vfprintf.c:1231
#3:	       or	r11, 0 -> r1
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1231
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:1231
#1:	       ldi	-1 -> r10
	;;
.BB11_138:                              ; %bb107
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239
#1:	       ldm.s	r14, 116        ; vfprintf.c:1232
	;;
#0:	       add	r1, 4 -> r10    ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1232
	;;
#0:	       btest	r1, 6 -> c1     ; vfprintf.c:1232
	;;
#0:	if !c1 br	.BB11_141       ; vfprintf.c:1232
	;;                              ; vfprintf.c:1232
	       nop	2               ; vfprintf.c:1232
	;;
; BB#139:                               ; %bb108
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1233
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1233
#1:	       ldm.s	r14, 80         ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1233
	;;
#0:	       stmh.a	r0, r1, 0       ; vfprintf.c:1233
	;;
.BB11_140:                              ; %bb108
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       stm.s	r10, r14, 27    ; vfprintf.c:1233
#1:	       br	.BB11_8
#2:	       or	r11, 0 -> r1
#3:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB11_141:                              ; %bb109
                                        ;   in Loop: Header=BB11_8 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239
	;;
#0:	       br	.BB11_140
#1:	       ldm.f	r1, 0           ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239
#1:	       ldm.s	r14, 80         ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1239
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1239
	;;
.BB11_142:                              ; %bb110
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1242
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1242
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1242
	;;
#0:	       stm.s	r1, r14, 29
	;;
.BB11_143:                              ; %bb111
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1245
	;;
#0:	if !c1 br	.BB11_145       ; vfprintf.c:1245
	;;                              ; vfprintf.c:1245
	       nop	2               ; vfprintf.c:1245
	;;
; BB#144:                               ; %bb112
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1245
#1:	       br	.BB11_146
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
	;;
.BB11_145:                              ; %bb113
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245
#1:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB11_146:                              ; %bb113
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
#0:	       br	.BB11_168
#1:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 27
#1:	       ldi	0 -> r1
	;;
.BB11_147:                              ; %bb118
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1260
#1:	       ldiu	128 -> r3
#2:	       ldi	120 -> r13
#3:	       ldi	48 -> r2
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1260
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1260
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1260
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1260
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1260
#1:	       ldga	._.str430 -> r0
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:1263
	;;
#0:	       ldm.s	r14, 116        ; vfprintf.c:1263
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1263
	;;
#0:	       or	r1, 2 -> r1     ; vfprintf.c:1263
	;;
#0:	       br	.BB11_168
#1:	       stm.s	r1, r14, 29
#2:	       ldi	2 -> r1
	;;
#0:	       stm.s	r0, r14, 16
#1:	       add	r3, 0 -> r0
	;;
#0:	       stmb.a	r13, r0, 1      ; vfprintf.c:1265
	;;
#0:	       stmb.a	r2, r0, 0       ; vfprintf.c:1264
	;;
.BB11_148:                              ; %bb119
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1272
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1272
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1272
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1272
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1278
	;;
#0:	if  c1 br	.BB11_150       ; vfprintf.c:1278
#1:	       stm.s	r1, r14, 27     ; vfprintf.c:1271
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1271
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1271
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1271
	;;
; BB#149:                               ; %bb120
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	6 -> r1
#1:	       ldi	0 -> r0
	;;
#0:	       br	.BB11_154
#1:	       cmpult	r1, r10 -> c1
#2:	       stm.s	r0, r14, 26
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldga	._.str531 -> r1
	;;
#0:	       stm.s	r1, r14, 21
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 19
	;;
.BB11_150:                              ; %bb124
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmplt	r10, 0 -> c1    ; vfprintf.c:1347
	;;
#0:	if  c1 br	.BB11_155       ; vfprintf.c:1347
	;;                              ; vfprintf.c:1347
	       nop	2               ; vfprintf.c:1347
	;;
; BB#151:                               ; %bb125
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r1
#1:	       or	r10, 0 -> r2    ; vfprintf.c:1353
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1353
#1:	       ldi	0 -> r1
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1353
	;;
#0:	       callg	_memchr         ; vfprintf.c:1353
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1353
	;;                              ; vfprintf.c:1353
	       nop	3               ; vfprintf.c:1353
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1355
	;;
#0:	if !c1 ldm.s	r14, 84         ; vfprintf.c:1356
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1356
	;;
#0:	if !c1 sub	r0, r1 -> r0    ; vfprintf.c:1356
	;;
#0:	if !c1 stm.s	r0, r14, 22     ; vfprintf.c:1357
#1:	if !c1 cmplt	r10, r0 -> c1   ; vfprintf.c:1357
	;;
#0:	if  c1 br	.BB11_153
	;;
	       nop	2
	;;
; BB#152:                               ; %bb126.bb173_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r1
#1:	       br	.BB11_22
	;;
#0:	       stm.s	r1, r14, 26
	;;
	       nop	1
	;;
.BB11_153:                              ; %bb127
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
#1:	       or	r1, 0 -> r0
	;;
.BB11_154:                              ; %bb127
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 17
#1:	       br	.BB11_189
	;;
#0:	       stm.s	r10, r14, 22
	;;
	       nop	1
	;;
.BB11_155:                              ; %bb129
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 26    ; vfprintf.c:1362
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1362
	;;
#0:	       callg	_strlen         ; vfprintf.c:1362
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1362
	;;                              ; vfprintf.c:1362
	       nop	3               ; vfprintf.c:1362
	;;
#0:	       br	.BB11_189
#1:	       or	r10, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 19
#1:	       or	r10, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 17
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB11_156:                              ; %bb130
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1366
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1366
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1366
	;;
#0:	       stm.s	r1, r14, 29
	;;
.BB11_157:                              ; %bb131
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1369
	;;
#0:	if !c1 br	.BB11_159       ; vfprintf.c:1369
	;;                              ; vfprintf.c:1369
	       nop	2               ; vfprintf.c:1369
	;;
; BB#158:                               ; %bb132
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1369
#1:	       br	.BB11_160
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
	;;
.BB11_159:                              ; %bb133
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369
#1:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB11_160:                              ; %bb133
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
#0:	       br	.BB11_168
#1:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 27
#1:	       ldi	1 -> r1
	;;
.BB11_161:                              ; %hex.loopexit
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldga	._.str632 -> r0
	;;
.BB11_162:                              ; %hex.loopexit
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 16
	;;
#0:	       ldm.s	r14, 116        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1377
	;;
#0:	if !c1 br	.BB11_164       ; vfprintf.c:1377
	;;                              ; vfprintf.c:1377
	       nop	2               ; vfprintf.c:1377
	;;
; BB#163:                               ; %bb140
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1377
#1:	       br	.BB11_165
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
	;;
.BB11_164:                              ; %bb141
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377
#1:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB11_165:                              ; %bb141
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:1380
	;;
#0:	       ldm.s	r14, 116        ; vfprintf.c:1380
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1380
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1380
	;;
#0:	if  c1 ldm.s	r14, 88
	;;
#0:	if  c1 ldx	$mem, 0 -> r0
	;;
#0:	if  c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB11_167
	;;
	       nop	2
	;;
; BB#166:                               ; %bb145.nosign_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	2 -> r1
#1:	       br	.BB11_168
	;;
	       nop	2
	;;
.BB11_167:                              ; %bb148
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	128 -> r3
#1:	       or	r1, 2 -> r1     ; vfprintf.c:1383
#2:	       ldi	48 -> r0
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 29
#2:	       ldi	2 -> r1
	;;
#0:	       add	r3, 0 -> r2
	;;
#0:	       stmb.a	r0, r2, 0       ; vfprintf.c:1381
	;;
#0:	       stmb.a	r13, r2, 1      ; vfprintf.c:1382
	;;
.BB11_168:                              ; %nosign
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 26     ; vfprintf.c:1390
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1390
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1390
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:1390
	;;
.BB11_169:                              ; %number
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1397
#1:	       ldi	-1 -> r0
#2:	       ldi	-129 -> r2
	;;
#0:	       cmplt	r0, r10 -> c1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1397
#1:	       ldm.s	r14, 88
	;;
#0:	       and	r0, r2 -> r2    ; vfprintf.c:1397
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	if  c1 or	r2, 0 -> r0
	;;
#0:	       or	r3, r10 -> r3
#1:	       stm.s	r0, r14, 29
	;;
#0:	       cmpeq	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB11_183       ; vfprintf.c:1405
	;;                              ; vfprintf.c:1405
	       nop	2               ; vfprintf.c:1405
	;;
; BB#170:                               ; %bb153
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:1411
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1411
	;;
#0:	if  c1 br	.BB11_175       ; vfprintf.c:1411
	;;                              ; vfprintf.c:1411
	       nop	2               ; vfprintf.c:1411
	;;
; BB#171:                               ; %bb153
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpeq	r1, 1 -> c1
	;;
#0:	if  c1 br	.BB11_179
	;;
	       nop	2
	;;
; BB#172:                               ; %bb153
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       cmpne	r1, 2 -> c1
	;;
#0:	if  c1 br	.BB11_182
	;;
	       nop	2
	;;
; BB#173:                               ; %bb153.bb162_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
	;;
.BB11_174:                              ; %bb162
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 88         ; vfprintf.c:1459
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1459
#1:	       ldm.s	r14, 64         ; vfprintf.c:1459
	;;
#0:	       and	r0, 15 -> r1    ; vfprintf.c:1459
#1:	       sr	r0, 4 -> r0     ; vfprintf.c:1460
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1459
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1461
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1459
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1459
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1459
#1:	       stm.s	r0, r14, 22
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	if  c1 br	.BB11_174
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.s	r2, r14, 21     ; vfprintf.c:1459
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1459
	;;
#0:	       br	.BB11_188
	;;
	       nop	2
	;;
.BB11_175:                              ; %bb153.bb154_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
	;;
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB11_176:                              ; %bb154
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 88         ; vfprintf.c:1414
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1414
	;;
#0:	       and	r0, 7 -> r2     ; vfprintf.c:1414
#1:	       sr	r0, 3 -> r0     ; vfprintf.c:1415
	;;
#0:	       stm.s	r0, r14, 22
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1416
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB11_176       ; vfprintf.c:1416
#1:	       sub	r3, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 21
#1:	       ldi	48 -> r3
	;;
#0:	       or	r2, r3 -> r2
#1:	       sub	r1, 1 -> r3
	;;
#0:	       stmb.a	r2, r1, 0       ; vfprintf.c:1414
#1:	       or	r3, 0 -> r1
	;;
; BB#177:                               ; %bb155
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1418
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1418
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1418
	;;
#0:	if  c1 mask	r2, 0 -> r1
#1:	if  c1 ldi	48 -> r0
	;;
#0:	if  c1 cmpne	r1, r0 -> c1
	;;
#0:	if !c1 br	.BB11_188
	;;
	       nop	2
	;;
; BB#178:                               ; %bb158
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stmb.a	r0, r3, 0       ; vfprintf.c:1419
#1:	       br	.BB11_187
#2:	       or	r3, 0 -> r0
	;;
	       nop	2
	;;
.BB11_179:                              ; %bb159
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 10 -> c1
	;;
#0:	if  c1 br	.BB11_372       ; vfprintf.c:1424
	;;                              ; vfprintf.c:1424
	       nop	2               ; vfprintf.c:1424
	;;
; BB#180:                               ; %bb159.bb161_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
	;;
.BB11_181:                              ; %bb161
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 88         ; vfprintf.c:1453
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___udivsi3      ; vfprintf.c:1453
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1453
	;;                              ; vfprintf.c:1453
	       nop	3               ; vfprintf.c:1453
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1432
#1:	       or	r0, 0 -> r1.23  ; vfprintf.c:1453
#2:	       ldi	10 -> r1
	;;
#3:	       ldi	48 -> r3.23
	;;
#0:	       callg	___umodsi3      ; vfprintf.c:1432
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1432
	;;                              ; vfprintf.c:1432
	       nop	3               ; vfprintf.c:1432
	;;
#0:	       ldm.s	r14, 84
#1:	       ldi	9 -> r2
	;;
#3:	       or	r0, r3.23 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 21
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1432
	;;
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r2, r0 -> c1
#1:	       or	r1.23, 0 -> r0
	;;
#0:	if  c1 br	.BB11_181
#1:	       stm.s	r0, r14, 22     ; vfprintf.c:1454
	;;
	       nop	2
	;;
#0:	       br	.BB11_188
	;;
	       nop	2
	;;
.BB11_182:                              ; %bb163
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldga	._.str733 -> r0 ; vfprintf.c:1466
#1:	       callg	_strlen         ; vfprintf.c:1466
	;;
#0:	       stm.s	r0, r14, 21
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19     ; vfprintf.c:1466
#1:	       ldga	._.str733 -> r0 ; vfprintf.c:1466
	;;                              ; vfprintf.c:1466
	       nop	1               ; vfprintf.c:1466
	;;
#0:	       br	.BB11_189
#1:	       stm.s	r10, r14, 17
	;;
#0:	       stm.s	r0, r14, 22
	;;
	       nop	1
	;;
.BB11_183:                              ; %bb164
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:1479
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 or	r0, 0 -> r1     ; vfprintf.c:1479
	;;
#0:	if  c1 btest	r1, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 br	.BB11_185
	;;
	       nop	2
	;;
; BB#184:                               ; %bb164.bb168_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 60
#1:	       br	.BB11_187
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB11_185:                              ; %bb167
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	48 -> r1
	;;
.BB11_186:                              ; %bb167
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 52         ; vfprintf.c:1480
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1480
	;;
#0:	       stmb.a	r1, r0, 0       ; vfprintf.c:1480
	;;
.BB11_187:                              ; %bb167
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
.BB11_188:                              ; %bb168
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19     ; vfprintf.c:1482
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1482
#1:	       ldm.s	r14, 60         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1482
	;;
#0:	       sub	r1, r0 -> r0    ; vfprintf.c:1482
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	       stm.s	r10, r14, 17
	;;
.BB11_189:                              ; %bb173
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104
#1:	       ldi	132 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 68         ; vfprintf.c:1511
	;;
#0:	       mask	r1, 0 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1511
#2:	       ldm.s	r14, 88         ; vfprintf.c:1511
	;;
#0:	       ldx	$c1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1511
#1:	       ldm.s	r14, 116
	;;
#0:	       cmple	r1, r0 -> c2    ; vfprintf.c:1511
	;;
#0:	if  c2 or	r0, 0 -> r1     ; vfprintf.c:1511
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r2, r1 -> r1
#1:	       and	r0, r3 -> r3    ; vfprintf.c:1518
#2:	       btest	r0, 1 -> c1
#3:	       and	r0, 2 -> r0     ; vfprintf.c:1514
	;;
#0:	       add	r1, 2 -> r2     ; vfprintf.c:1515
#1:	       stm.s	r3, r14, 9      ; vfprintf.c:1514
	;;
#0:	if !c1 or	r1, 0 -> r2
#1:	       cmpeq	r3, 0 -> c1     ; vfprintf.c:1518
#2:	       stm.s	r0, r14, 10
	;;
#0:	if !c1 br	.BB11_202
#1:	       stm.s	r2, r14, 26     ; vfprintf.c:1518
	;;
	       nop	2
	;;
; BB#190:                               ; %bb179
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       or	r2, 0 -> r1     ; vfprintf.c:1519
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1519
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1519
	;;
#0:	if !c1 br	.BB11_196
	;;
	       nop	2
	;;
#0:	       br	.BB11_202
	;;
	       nop	2
	;;
.BB11_191:                              ; %bb180
                                        ;   in Loop: Header=BB11_196 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
#1:	       ldm.f	r1, 4           ; vfprintf.c:1519
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1519
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1519
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_193       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#192:                               ; %bb180.bb184_crit_edge
                                        ;   in Loop: Header=BB11_196 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1519
#1:	       br	.BB11_195
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB11_193:                              ; %bb181
                                        ;   in Loop: Header=BB11_196 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 92         ; vfprintf.c:1519
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1519
#1:	       add	r2, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#194:                               ; %bb181.bb184_crit_edge
                                        ;   in Loop: Header=BB11_196 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_195:                              ; %bb181.bb184_crit_edge
                                        ;   in Loop: Header=BB11_196 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_196:                              ; %bb185
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1519
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1519
#1:	       ldga	_blanks.3634 -> r1 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_191       ; vfprintf.c:1519
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	1               ; vfprintf.c:1519
	;;
; BB#197:                               ; %bb186
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
#1:	       ldm.f	r1, 4           ; vfprintf.c:1519
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1519
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_199       ; vfprintf.c:1519
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#198:                               ; %bb186.bb190_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1519
#1:	       br	.BB11_201
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB11_199:                              ; %bb187
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1519
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1519
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#200:                               ; %bb187.bb190_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_201:                              ; %bb187.bb190_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_202:                              ; %bb190
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 264        ; vfprintf.c:1522
#1:	       ldga	___mem_emergency -> r1 ; vfprintf.c:1522
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1522
	;;
#2:	       stm.a	r2.31, r1, 0    ; vfprintf.c:1522
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1522
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1522
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:1522
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1522
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1522
	;;
#0:	if !c1 br	.BB11_208
	;;
	       nop	2
	;;
; BB#203:                               ; %bb191
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
#1:	       ldm.s	r14, 112        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1523
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1523
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
#1:	       ldm.f	r1, 4           ; vfprintf.c:1523
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1523
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1523
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1523
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1523
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB11_205       ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	2               ; vfprintf.c:1523
	;;
; BB#204:                               ; %bb191.bb195_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1523
#1:	       br	.BB11_207
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1523
	;;
	       nop	0
	;;
.BB11_205:                              ; %bb192
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1523
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1523
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	3               ; vfprintf.c:1523
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#206:                               ; %bb192.bb195_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_207:                              ; %bb192.bb195_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_208:                              ; %bb195
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 40         ; vfprintf.c:1524
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1524
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1524
	;;
#0:	if !c1 br	.BB11_214
	;;
	       nop	2
	;;
; BB#209:                               ; %bb196
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	128 -> r3
#1:	       ldm.s	r14, 112        ; vfprintf.c:1525
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       add	r3, 0 -> r1
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1525
	;;
#0:	       stm.a	2, r0, 1        ; vfprintf.c:1525
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
#1:	       ldm.f	r1, 4           ; vfprintf.c:1525
	;;
#0:	       add	r0, 2 -> r0     ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1525
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1525
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1525
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1525
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB11_211       ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	2               ; vfprintf.c:1525
	;;
; BB#210:                               ; %bb196.bb201_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1525
#1:	       br	.BB11_213
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1525
	;;
	       nop	0
	;;
.BB11_211:                              ; %bb198
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1525
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1525
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	3               ; vfprintf.c:1525
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#212:                               ; %bb198.bb201_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_213:                              ; %bb198.bb201_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_214:                              ; %bb201
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 36         ; vfprintf.c:1528
#1:	       ldi	128 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1528
	;;
#0:	       cmpeq	r0, r1 -> c1    ; vfprintf.c:1528
	;;
#0:	if !c1 br	.BB11_227
	;;
	       nop	2
	;;
; BB#215:                               ; %bb202
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1529
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1529
	;;
#0:	if !c1 br	.BB11_221
	;;
	       nop	2
	;;
#0:	       br	.BB11_227
	;;
	       nop	2
	;;
.BB11_216:                              ; %bb203
                                        ;   in Loop: Header=BB11_221 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
#1:	       ldm.f	r1, 4           ; vfprintf.c:1529
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1529
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_218       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#217:                               ; %bb203.bb207_crit_edge
                                        ;   in Loop: Header=BB11_221 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1529
#1:	       br	.BB11_220
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB11_218:                              ; %bb204
                                        ;   in Loop: Header=BB11_221 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 92         ; vfprintf.c:1529
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1529
#1:	       add	r2, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#219:                               ; %bb204.bb207_crit_edge
                                        ;   in Loop: Header=BB11_221 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_220:                              ; %bb204.bb207_crit_edge
                                        ;   in Loop: Header=BB11_221 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_221:                              ; %bb208
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1529
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1529
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_216       ; vfprintf.c:1529
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	1               ; vfprintf.c:1529
	;;
; BB#222:                               ; %bb209
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
#1:	       ldm.f	r1, 4           ; vfprintf.c:1529
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1529
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_224       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#223:                               ; %bb209.bb213_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1529
#1:	       br	.BB11_226
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB11_224:                              ; %bb210
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1529
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1529
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#225:                               ; %bb210.bb213_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_226:                              ; %bb210.bb213_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_227:                              ; %bb213
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 68         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.s	r14, 88         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       sub	r1, r0 -> r10   ; vfprintf.c:1532
#1:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB11_233
	;;
	       nop	2
	;;
#0:	       br	.BB11_239
	;;
	       nop	2
	;;
.BB11_228:                              ; %bb214
                                        ;   in Loop: Header=BB11_233 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
#1:	       ldm.f	r1, 4           ; vfprintf.c:1532
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1532
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1532
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB11_230       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#229:                               ; %bb214.bb218_crit_edge
                                        ;   in Loop: Header=BB11_233 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1532
#1:	       br	.BB11_232
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB11_230:                              ; %bb215
                                        ;   in Loop: Header=BB11_233 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 92         ; vfprintf.c:1532
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1532
#1:	       add	r2, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#231:                               ; %bb215.bb218_crit_edge
                                        ;   in Loop: Header=BB11_233 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_232:                              ; %bb215.bb218_crit_edge
                                        ;   in Loop: Header=BB11_233 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_233:                              ; %bb219
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1532
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1532
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_228       ; vfprintf.c:1532
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	1               ; vfprintf.c:1532
	;;
; BB#234:                               ; %bb220
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
#1:	       ldm.f	r1, 4           ; vfprintf.c:1532
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1532
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB11_236       ; vfprintf.c:1532
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#235:                               ; %bb220.bb224_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1532
#1:	       br	.BB11_238
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB11_236:                              ; %bb221
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1532
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1532
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#237:                               ; %bb221.bb224_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_238:                              ; %bb221.bb224_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_239:                              ; %bb224
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1536
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1536
	;;
#0:	       btest	r1, 8 -> c1     ; vfprintf.c:1536
	;;
#0:	if  c1 br	.BB11_245       ; vfprintf.c:1536
	;;                              ; vfprintf.c:1536
	       nop	2               ; vfprintf.c:1536
	;;
; BB#240:                               ; %bb225
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
#1:	       ldm.s	r14, 112        ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
#1:	       ldm.f	r1, 4           ; vfprintf.c:1537
	;;
#0:	       add	r13, r0 -> r13  ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1537
#1:	       stm.a	r13, r1, 2      ; vfprintf.c:1537
	;;
#0:	       add	r2, 1 -> r13    ; vfprintf.c:1537
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1537
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1537
	;;
#0:	if  c1 br	.BB11_242
	;;
	       nop	2
	;;
.BB11_241:                              ; %bb225.bb366_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1537
#1:	       br	.BB11_354
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1552
	;;
	       nop	0
	;;
.BB11_242:                              ; %bb226
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1537
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1537
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
	;;                              ; vfprintf.c:1537
	       nop	3               ; vfprintf.c:1537
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1537
	;;
#0:	if !c1 br	.BB11_353
	;;
	       nop	2
	;;
.BB11_243:                              ; %bb389
#0:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldm.s	r0, -740
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r0, -736
#2:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
#1:	       stx	r1.31 -> $f14
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r0, -732
#2:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
#1:	       stx	r1.31 -> $f15
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r0, -728
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
#2:	       stx	r2.31 -> $f12
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r0, -724
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
#2:	       stx	r2.31 -> $f13
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r0, -720
	;;
#3:	       stx	r3.31 -> $f10
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $f11
	;;
.BB11_244:                              ; %bb389
#0:	       ldm.s	r14, 308
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 312
	;;
#0:	       stx	r0 -> $f15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 316
	;;
#0:	       stx	r0 -> $f14
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 320
	;;
#0:	       stx	r0 -> $f13
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 324
	;;
#0:	       stx	r0 -> $f12
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 328
	;;
#0:	       stx	r0 -> $f11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 332
	;;
#0:	       stx	r0 -> $f10
	;;
#3:	       ldx	$mem, 0 -> r3.24
#0:	       ldm.s	r14, 336
	;;
#2:	       ldx	$mem, 0 -> r2.24
#0:	       ldm.s	r14, 340
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 344
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 348
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 352
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 356
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 360
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 364
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 368
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB11_371
#2:	       ldx	$mem, 0 -> r2.31
#1:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $rb
	;;
.BB11_245:                              ; %bb229
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmplt	r13, r1 -> c1   ; vfprintf.c:1539
	;;
#0:	if  c1 br	.BB11_327       ; vfprintf.c:1539
	;;                              ; vfprintf.c:1539
	       nop	2               ; vfprintf.c:1539
	;;
; BB#246:                               ; %bb230
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1540
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1540
	;;
#0:	       btest	r1, 9 -> c1     ; vfprintf.c:1540
	;;
#0:	if  c1 br	.BB11_264       ; vfprintf.c:1540
	;;                              ; vfprintf.c:1540
	       nop	2               ; vfprintf.c:1540
	;;
; BB#247:                               ; %bb231
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1542
#1:	       ldga	._.str834 -> r1 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1542
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1542
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
#1:	       ldm.f	r1, 4           ; vfprintf.c:1542
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1542
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1542
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1542
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1542
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB11_249       ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	2               ; vfprintf.c:1542
	;;
; BB#248:                               ; %bb231.bb235_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1542
#1:	       br	.BB11_251
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1542
	;;
	       nop	0
	;;
.BB11_249:                              ; %bb232
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1542
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1542
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	3               ; vfprintf.c:1542
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#250:                               ; %bb232.bb235_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_251:                              ; %bb232.bb235_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
#0:	       ldm.s	r14, 260        ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1543
#1:	       ldm.s	r14, 72         ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1543
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1543
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1543
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1543
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1543
	;;
#0:	if !c1 br	.BB11_355
	;;
	       nop	2
	;;
; BB#252:                               ; %bb238
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1544
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:576
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 56         ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1544
#1:	       ldm.f	r0, 4           ; vfprintf.c:1544
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1544
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1544
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1544
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1544
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB11_254       ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	2               ; vfprintf.c:1544
	;;
; BB#253:                               ; %bb238.bb242_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1544
#1:	       br	.BB11_256
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1544
	;;
	       nop	0
	;;
.BB11_254:                              ; %bb239
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1544
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1544
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	3               ; vfprintf.c:1544
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#255:                               ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_256:                              ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
#1:	       ldi	0 -> r1
	;;
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB11_262
	;;
	       nop	2
	;;
#0:	       br	.BB11_355
	;;
	       nop	2
	;;
.BB11_257:                              ; %bb243
                                        ;   in Loop: Header=BB11_262 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
#1:	       ldm.f	r1, 4           ; vfprintf.c:1545
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1545
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB11_259       ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	2               ; vfprintf.c:1545
	;;
; BB#258:                               ; %bb243.bb247_crit_edge
                                        ;   in Loop: Header=BB11_262 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1545
#1:	       br	.BB11_261
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1545
	;;
	       nop	0
	;;
.BB11_259:                              ; %bb244
                                        ;   in Loop: Header=BB11_262 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1545
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1545
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	3               ; vfprintf.c:1545
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#260:                               ; %bb244.bb247_crit_edge
                                        ;   in Loop: Header=BB11_262 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_261:                              ; %bb244.bb247_crit_edge
                                        ;   in Loop: Header=BB11_262 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_262:                              ; %bb248
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1545
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1545
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_257       ; vfprintf.c:1545
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	1               ; vfprintf.c:1545
	;;
.BB11_263:                              ; %bb249
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
#1:	       ldm.f	r1, 4           ; vfprintf.c:1545
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1545
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1545
	;;
#0:	if !c1 br	.BB11_241
	;;
	       nop	2
	;;
#0:	       br	.BB11_242
	;;
	       nop	2
	;;
.BB11_264:                              ; %bb253
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1547
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1547
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1547
	;;
#0:	if  c1 br	.BB11_288       ; vfprintf.c:1547
	;;                              ; vfprintf.c:1547
	       nop	2               ; vfprintf.c:1547
	;;
; BB#265:                               ; %bb254
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1548
#1:	       ldga	._.str834 -> r1 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1548
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1548
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
#1:	       ldm.f	r1, 4           ; vfprintf.c:1548
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1548
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1548
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1548
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1548
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB11_267       ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	2               ; vfprintf.c:1548
	;;
; BB#266:                               ; %bb254.bb258_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1548
#1:	       br	.BB11_269
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1548
	;;
	       nop	0
	;;
.BB11_267:                              ; %bb255
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1548
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1548
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	3               ; vfprintf.c:1548
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#268:                               ; %bb255.bb258_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_269:                              ; %bb255.bb258_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
#0:	       ldm.s	r14, 260        ; vfprintf.c:1549
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1549
#1:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r1, r0 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1549
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1549
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 br	.BB11_355
	;;
	       nop	2
	;;
; BB#270:                               ; %bb262
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1550
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:576
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 56         ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1550
#1:	       ldm.f	r0, 4           ; vfprintf.c:1550
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1550
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1550
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1550
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1550
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB11_272       ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	2               ; vfprintf.c:1550
	;;
; BB#271:                               ; %bb262.bb266_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1550
#1:	       br	.BB11_274
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1550
	;;
	       nop	0
	;;
.BB11_272:                              ; %bb263
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1550
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1550
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	3               ; vfprintf.c:1550
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#273:                               ; %bb263.bb266_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_274:                              ; %bb266
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1551
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;
#0:	       sub	r2, r0 -> r10   ; vfprintf.c:1551
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB11_280
	;;
	       nop	2
	;;
#0:	       br	.BB11_285
	;;
	       nop	2
	;;
.BB11_275:                              ; %bb267
                                        ;   in Loop: Header=BB11_280 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r0, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB11_277       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#276:                               ; %bb267.bb271_crit_edge
                                        ;   in Loop: Header=BB11_280 Depth=2
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1551
#1:	       br	.BB11_279
	;;
	       nop	2
	;;
.BB11_277:                              ; %bb268
                                        ;   in Loop: Header=BB11_280 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1551
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1551
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#278:                               ; %bb268.bb271_crit_edge
                                        ;   in Loop: Header=BB11_280 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_279:                              ; %bb271
                                        ;   in Loop: Header=BB11_280 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB11_280:                              ; %bb272
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1551
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_275       ; vfprintf.c:1551
#1:	       stm.a	r0, r1, 0       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#281:                               ; %bb273
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r0, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB11_283       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#282:                               ; %bb273.bb277_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1551
#1:	       br	.BB11_285
	;;
	       nop	2
	;;
.BB11_283:                              ; %bb274
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1551
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1551
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#284:                               ; %bb274.bb277_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_285:                              ; %bb277
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1552
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1552
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1552
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1552
	;;
.BB11_286:                              ; %bb277
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1552
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1552
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1552
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1552
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1552
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1552
#1:	       ldm.f	r2, 4           ; vfprintf.c:1552
	;;
#0:	       add	r3, r0 -> r0    ; vfprintf.c:1552
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1552
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1552
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1552
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1552
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1552
	;;
#0:	if  c1 br	.BB11_242
	;;
	       nop	2
	;;
; BB#287:                               ; %bb277.bb366_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1552
#1:	       br	.BB11_354
	;;
	       nop	2
	;;
.BB11_288:                              ; %bb281
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.s	r14, 72         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
#1:	       or	r0, 0 -> r10
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB11_294
	;;
	       nop	2
	;;
; BB#289:                               ; %bb285
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
#1:	       ldm.s	r14, 112        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1556
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556
	;;
#0:	       add	r0, r10 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_291       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#290:                               ; %bb285.bb289_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1556
#1:	       br	.BB11_293
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB11_291:                              ; %bb286
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1556
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1556
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#292:                               ; %bb286.bb289_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_293:                              ; %bb286.bb289_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_294:                              ; %bb289
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1556
#1:	       cmplt	r10, 0 -> c1
#2:	       ldi	0 -> r1
	;;
#0:	if  c1 or	r1, 0 -> r10    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       sub	r0, r10 -> r0   ; vfprintf.c:1556
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB11_307
	;;
	       nop	2
	;;
; BB#295:                               ; %bb297.preheader
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 76
	;;
#0:	       xor	r0, -1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       xor	r0, -1 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       xor	r2, -1 -> r1
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB11_301
#1:	       cmplt	r2, r1 -> c1
#2:	       ldi	0 -> r2
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       sub	r0, r2 -> r10
	;;
#0:	       or	r10, 0 -> r13
#1:	       or	r10, 0 -> r1.23
	;;
.BB11_296:                              ; %bb292
                                        ;   in Loop: Header=BB11_301 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_298       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#297:                               ; %bb292.bb296_crit_edge
                                        ;   in Loop: Header=BB11_301 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1556
#1:	       br	.BB11_300
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB11_298:                              ; %bb293
                                        ;   in Loop: Header=BB11_301 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 92         ; vfprintf.c:1556
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1556
#1:	       add	r2, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#299:                               ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB11_301 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_300:                              ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB11_301 Depth=2
#0:	       sub	r10, 16 -> r10
#2:	       stm.s	r1, r14, 28
#1:	       sub	r1.23, 16 -> r1.23
#3:	       sub	r13, 16 -> r13
	;;
.BB11_301:                              ; %bb297
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1556
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1556
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_296       ; vfprintf.c:1556
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	1               ; vfprintf.c:1556
	;;
; BB#302:                               ; %bb298
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556
	;;
#1:	       add	r0, r1.23 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_304       ; vfprintf.c:1556
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#303:                               ; %bb298.bb302_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1556
#1:	       br	.BB11_306
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB11_304:                              ; %bb299
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1556
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1556
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#305:                               ; %bb299.bb302_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_306:                              ; %bb299.bb302_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_307:                              ; %bb302
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1577
#1:	       ldm.s	r14, 76         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1558
#1:	       ldm.s	r14, 84         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1558
	;;
#0:	       add	r0, r2 -> r0    ; vfprintf.c:1558
	;;
#0:	       stm.s	r0, r14, 25     ; vfprintf.c:1577
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1577
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1577
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1577
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1577
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1577
	;;
#0:	if !c1 br	.BB11_313
	;;
	       nop	2
	;;
; BB#308:                               ; %bb305
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1578
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:576
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 56         ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1578
#1:	       ldm.f	r0, 4           ; vfprintf.c:1578
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1578
#1:	       ldi	7 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1578
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1578
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1578
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB11_310       ; vfprintf.c:1578
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	2               ; vfprintf.c:1578
	;;
; BB#309:                               ; %bb305.bb309_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1578
#1:	       br	.BB11_312
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1578
	;;
	       nop	0
	;;
.BB11_310:                              ; %bb306
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1578
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1578
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	3               ; vfprintf.c:1578
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#311:                               ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_312:                              ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_313:                              ; %bb309
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1579
#1:	       ldm.s	r14, 84         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
#1:	       ldm.s	r14, 72         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       add	r0, r1 -> r0    ; vfprintf.c:1579
#1:	       sub	r1, r10 -> r1   ; vfprintf.c:1579
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 100        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
	;;
#0:	       sub	r0, r2 -> r13   ; vfprintf.c:1579
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if  c1 or	r1, 0 -> r13
#1:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB11_319
	;;
	       nop	2
	;;
; BB#314:                               ; %bb313
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1579
#1:	       or	r2, 0 -> r0     ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1579
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
#1:	       ldm.f	r1, 4           ; vfprintf.c:1579
	;;
#0:	       add	r0, r13 -> r0   ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1579
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB11_316       ; vfprintf.c:1579
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#315:                               ; %bb313.bb317_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1579
#1:	       br	.BB11_318
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB11_316:                              ; %bb314
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r3
#1:	       ldm.s	r14, 92         ; vfprintf.c:1579
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1579
#1:	       add	r3, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#317:                               ; %bb314.bb317_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_318:                              ; %bb314.bb317_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_319:                              ; %bb317
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 260        ; vfprintf.c:1579
#1:	       ldi	0 -> r0
#2:	       cmplt	r13, 0 -> c1
	;;
#0:	       sub	r0, r13 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.s	r14, 72         ; vfprintf.c:1579
#2:	if  c1 or	r0, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1579
	;;
#0:	       sub	r3, r1 -> r3    ; vfprintf.c:1579
	;;
#0:	       add	r3, r2 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB11_355
	;;
	       nop	2
	;;
; BB#320:                               ; %bb325.preheader
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 100
#1:	       sub	r10, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 72
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 88
	;;
#0:	       sub	r0, r3 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       sub	r2, r4 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
#1:	       ldi	-1 -> r0
	;;
#0:	       br	.BB11_326
#1:	       cmplt	r0, r2 -> c1
#2:	       add	r3, r2 -> r0
	;;
#0:	       sub	r0, r1 -> r1
#1:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r2, 0 -> r0
	;;
#0:	       sub	r1, r0 -> r10
	;;
.BB11_321:                              ; %bb320
                                        ;   in Loop: Header=BB11_326 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
#1:	       ldm.f	r1, 4           ; vfprintf.c:1579
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1579
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1579
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB11_323       ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#322:                               ; %bb320.bb324_crit_edge
                                        ;   in Loop: Header=BB11_326 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1579
#1:	       br	.BB11_325
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB11_323:                              ; %bb321
                                        ;   in Loop: Header=BB11_326 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1579
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1579
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#324:                               ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB11_326 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_325:                              ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB11_326 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_326:                              ; %bb325
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1579
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1579
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_321
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1579
	;;
	       nop	1
	;;
#0:	       br	.BB11_263
	;;
	       nop	2
	;;
.BB11_327:                              ; %bb330
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 72         ; vfprintf.c:1583
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1583
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1583
	;;
#0:	if !c1 ldm.s	r14, 116        ; vfprintf.c:1583
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1583
	;;
#0:	if !c1 btest	r1, 0 -> c1     ; vfprintf.c:1583
	;;
#0:	if !c1 br	.BB11_348
	;;
	       nop	2
	;;
; BB#328:                               ; %bb333
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
#1:	       ldm.s	r14, 112        ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1584
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1584
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
#1:	       ldm.f	r1, 4           ; vfprintf.c:1584
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1584
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1584
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1584
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1584
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB11_330       ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	2               ; vfprintf.c:1584
	;;
; BB#329:                               ; %bb333.bb337_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1584
#1:	       br	.BB11_332
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1584
	;;
	       nop	0
	;;
.BB11_330:                              ; %bb334
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1584
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1584
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	3               ; vfprintf.c:1584
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#331:                               ; %bb334.bb337_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_332:                              ; %bb337
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldga	._.str65 -> r0  ; vfprintf.c:576
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 56         ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1586
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1585
#1:	       ldm.s	r14, 96         ; vfprintf.c:1586
	;;
#0:	       add	r2, 1 -> r10    ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1586
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1586
#1:	       ldm.f	r2, 4           ; vfprintf.c:1586
	;;
#0:	       add	r3, r0 -> r0    ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1586
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1586
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1586
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1586
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB11_334       ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	2               ; vfprintf.c:1586
	;;
; BB#333:                               ; %bb337.bb341_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1586
#1:	       br	.BB11_336
	;;
	       nop	2
	;;
.BB11_334:                              ; %bb338
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1586
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1586
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	3               ; vfprintf.c:1586
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#335:                               ; %bb338.bb341_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_336:                              ; %bb341
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1587
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1587
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1587
	;;
#0:	if  c1 br	.BB11_339       ; vfprintf.c:1587
	;;                              ; vfprintf.c:1587
	       nop	2               ; vfprintf.c:1587
	;;
; BB#337:                               ; %bb342
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stm.a	r10, r1, 0      ; vfprintf.c:1588
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1588
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1588
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1588
#1:	       ldm.f	r2, 4           ; vfprintf.c:1588
	;;
#0:	       add	r0, r3 -> r0    ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1588
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1588
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1588
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1588
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1588
	;;
#0:	if  c1 br	.BB11_350
	;;
	       nop	2
	;;
; BB#338:                               ; %bb342.bb361_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1588
#1:	       br	.BB11_352
	;;
	       nop	2
	;;
.BB11_339:                              ; %bb346
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB11_345
	;;
	       nop	2
	;;
#0:	       br	.BB11_352
	;;
	       nop	2
	;;
.BB11_340:                              ; %bb347
                                        ;   in Loop: Header=BB11_345 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r0, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB11_342       ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#341:                               ; %bb347.bb351_crit_edge
                                        ;   in Loop: Header=BB11_345 Depth=2
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1591
#1:	       br	.BB11_344
	;;
	       nop	2
	;;
.BB11_342:                              ; %bb348
                                        ;   in Loop: Header=BB11_345 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1591
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1591
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	3               ; vfprintf.c:1591
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#343:                               ; %bb348.bb351_crit_edge
                                        ;   in Loop: Header=BB11_345 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_344:                              ; %bb351
                                        ;   in Loop: Header=BB11_345 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB11_345:                              ; %bb352
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1591
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB11_340       ; vfprintf.c:1591
#1:	       stm.a	r0, r1, 0       ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#346:                               ; %bb353
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r0, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB11_350
	;;
	       nop	2
	;;
; BB#347:                               ; %bb353.bb361_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1591
#1:	       br	.BB11_352
	;;
	       nop	2
	;;
.BB11_348:                              ; %bb357
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
#1:	       ldm.s	r14, 112        ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1593
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1593
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
#1:	       ldm.f	r1, 4           ; vfprintf.c:1593
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1593
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1593
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1593
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1593
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1593
	;;
#0:	if  c1 br	.BB11_350
	;;
	       nop	2
	;;
; BB#349:                               ; %bb357.bb361_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1593
#1:	       br	.BB11_352
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1593
	;;
	       nop	0
	;;
.BB11_350:                              ; %bb343
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1588
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1588
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1588
	;;                              ; vfprintf.c:1588
	       nop	3               ; vfprintf.c:1588
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1588
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#351:                               ; %bb358.bb361_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_352:                              ; %bb361
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r5
	;;
#0:	       br	.BB11_286
#1:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 28 -> r0
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1594
	;;
#0:	       ldm.s	r14, 44         ; vfprintf.c:1594
	;;
.BB11_353:                              ; %bb363.bb366_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_354:                              ; %bb363.bb366_crit_edge
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       stm.s	r1, r14, 28
	;;
.BB11_355:                              ; %bb366
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1601
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1601
	;;
#0:	       btest	r1, 2 -> c1     ; vfprintf.c:1601
	;;
#0:	if !c1 br	.BB11_365
	;;
	       nop	2
	;;
; BB#356:                               ; %bb367
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1602
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1602
	;;
#0:	if !c1 br	.BB11_362
	;;
	       nop	2
	;;
#0:	       br	.BB11_365
	;;
	       nop	2
	;;
.BB11_357:                              ; %bb368
                                        ;   in Loop: Header=BB11_362 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
#1:	       ldm.f	r1, 4           ; vfprintf.c:1602
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1602
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1602
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB11_359       ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	2               ; vfprintf.c:1602
	;;
; BB#358:                               ; %bb368.bb372_crit_edge
                                        ;   in Loop: Header=BB11_362 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1602
#1:	       br	.BB11_361
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1602
	;;
	       nop	0
	;;
.BB11_359:                              ; %bb369
                                        ;   in Loop: Header=BB11_362 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 92         ; vfprintf.c:1602
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1602
#1:	       add	r13, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
; BB#360:                               ; %bb369.bb372_crit_edge
                                        ;   in Loop: Header=BB11_362 Depth=2
#0:	       ldiu	160 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 12 -> r1
	;;
.BB11_361:                              ; %bb369.bb372_crit_edge
                                        ;   in Loop: Header=BB11_362 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 28
	;;
.BB11_362:                              ; %bb373
                                        ;   Parent Loop BB11_6 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1602
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1602
#1:	       ldga	_blanks.3634 -> r1 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB11_357       ; vfprintf.c:1602
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	1               ; vfprintf.c:1602
	;;
; BB#363:                               ; %bb374
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
#1:	       ldm.f	r1, 4           ; vfprintf.c:1602
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1602
	;;
#0:	       cmplt	r0, 8 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB11_365
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1602
	;;
	       nop	2
	;;
; BB#364:                               ; %bb375
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1602
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1602
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
.BB11_365:                              ; %bb378
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1607
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1607
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if  c1 br	.BB11_367
	;;
	       nop	2
	;;
; BB#366:                               ; %bb381
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1607
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1607
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1607
	;;                              ; vfprintf.c:1607
	       nop	3               ; vfprintf.c:1607
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
.BB11_367:                              ; %bb382
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1605
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1605
#1:	       ldm.s	r14, 80         ; vfprintf.c:1605
	;;
#0:	       cmple	r12, r1 -> c1   ; vfprintf.c:1605
	;;
#0:	if  c1 or	r1, 0 -> r12    ; vfprintf.c:1605
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605
	;;
#0:	       add	r12, r0 -> r0   ; vfprintf.c:1605
	;;
#0:	       br	.BB11_6
#1:	       stm.s	r0, r14, 20     ; vfprintf.c:1607
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1607
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:1607
#1:	       or	r11, 0 -> r1
	;;
.BB11_368:                              ; %done
#0:	       ldm.s	r14, 96         ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if  c1 br	.BB11_370
	;;
	       nop	2
	;;
; BB#369:                               ; %bb385
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 92         ; vfprintf.c:1615
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___ssprint_r    ; vfprintf.c:1615
#1:	       add	r10, 12 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;                              ; vfprintf.c:1615
	       nop	3               ; vfprintf.c:1615
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if  c1 br	.BB11_243
	;;
	       nop	2
	;;
.BB11_370:                              ; %bb386
#0:	       ldm.s	r14, 96         ; vfprintf.c:1615
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1615
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldm.s	r0, -740
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r0, -736
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
#2:	       stx	r2.31 -> $f14
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r0, -732
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
#2:	       stx	r2.31 -> $f15
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r0, -728
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#3:	       stx	r3.31 -> $f12
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r0, -724
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r0, -720
	;;
#0:	       stx	r0.31 -> $f10
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r14, 308
	;;
#3:	       stx	r3.31 -> $f13
	;;
#1:	       ldx	$mem, 0 -> r0
#2:	       ldm.s	r14, 312
#0:	       stx	r0.31 -> $f11
	;;
#0:	       stx	r0 -> $f15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 316
	;;
#0:	       stx	r0 -> $f14
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 320
	;;
#0:	       stx	r0 -> $f13
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 324
	;;
#0:	       stx	r0 -> $f12
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 328
	;;
#0:	       stx	r0 -> $f11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 332
	;;
#0:	       stx	r0 -> $f10
	;;
#3:	       ldx	$mem, 0 -> r3.24
#0:	       ldm.s	r14, 336
	;;
#2:	       ldx	$mem, 0 -> r2.24
#0:	       ldm.s	r14, 340
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 344
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 348
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 352
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 356
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 360
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 364
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 368
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stx	r1.31 -> $rb
	;;
.BB11_371:                              ; %bb389
#0:	       ldm.s	r15, 0
#1:	       ldiu	372 -> r0
	;;
#0:	       add	r15, r0 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB11_372:                              ; %bb160
                                        ;   in Loop: Header=BB11_6 Depth=1
#0:	       s2add	r0, 12 -> r1    ; vfprintf.c:1425
#1:	       br	.BB11_186
	;;
	       nop	2
	;;
	.align	4
__svfprintf_r_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI11_0:
	.long	.BB11_26-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_29-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_30-__svfprintf_r_start
	.long	.BB11_33-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_32-__svfprintf_r_start
	.long	.BB11_34-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_43-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_45-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_52-__svfprintf_r_start
	.long	.BB11_61-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_61-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_48-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_142-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_156-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_161-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_51-__svfprintf_r_start
	.long	.BB11_53-__svfprintf_r_start
	.long	.BB11_61-__svfprintf_r_start
	.long	.BB11_61-__svfprintf_r_start
	.long	.BB11_61-__svfprintf_r_start
	.long	.BB11_49-__svfprintf_r_start
	.long	.BB11_53-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_50-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_136-__svfprintf_r_start
	.long	.BB11_143-__svfprintf_r_start
	.long	.BB11_147-__svfprintf_r_start
	.long	.BB11_50-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_148-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_157-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_21-__svfprintf_r_start
	.long	.BB11_25-__svfprintf_r_start

	.text
	.align	4
__vfprintf_r:                           ; @_vfprintf_r
	.size	__vfprintf_r_end-__vfprintf_r
__vfprintf_r_start:
; BB#0:                                 ; %bb
#2:	       wb.s	r15, 379
#3:	       ldiu	1516 -> r3
#1:	       ldx	$rb, 0 -> r1.31
#0:	       ldx	$f11 -> r0.31
	;;
#0:	       sub	r15, r3 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       ldiu	1408 -> r3
	;;
#3:	       ldx	$f10 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, r3 -> r3
	;;
#2:	       stm.s	r2.31, r15, 2
#1:	       ldx	$f12 -> r1.31
	;;
#0:	       stm.s	r10, r3, 26
#2:	       ldx	$f13 -> r2.31
#1:	       ldiu	1404 -> r10
	;;
#0:	       stm.s	r11, r3, 25
#1:	       add	r14, r10 -> r10
	;;
#0:	       stm.s	r12, r3, 24
	;;
#0:	       stm.s	r13, r3, 23
	;;
#0:	       stm.s	r0.23, r3, 22
	;;
#1:	       stm.s	r1.23, r3, 21
	;;
#2:	       stm.s	r2.23, r3, 20
	;;
#3:	       stm.s	r3.23, r3, 19
	;;
#0:	       stm.s	r0.24, r3, 18
	;;
#2:	       stm.s	r2.24, r3, 17
	;;
#3:	       stm.s	r3.24, r3, 16
	;;
#3:	       stm.s	r3.25, r3, 15
	;;
#3:	       stm.s	r3.31, r3, 14
	;;
#0:	       stm.s	r0.31, r3, 13
#3:	       ldx	$f14 -> r3.31
	;;
#1:	       stm.s	r1.31, r3, 12
#0:	       ldx	$f15 -> r0.31
	;;
#2:	       stm.s	r2.31, r3, 11
#1:	       ldx	$f10 -> r1.31
	;;
#3:	       stm.s	r3.31, r3, 10
#2:	       ldx	$f12 -> r2.31
	;;
#0:	       stm.s	r0.31, r3, 9
#3:	       ldx	$f14 -> r3.31
	;;
#1:	       stm.s	r1.31, r3, 7
	;;
#1:	       ldx	$f11 -> r1.31
	;;
#1:	       stm.s	r1.31, r10, 8
#0:	       ldiu	1408 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#2:	       stm.s	r2.31, r10, 5
#0:	       ldiu	1404 -> r10
	;;
#0:	       add	r14, r10 -> r10
#2:	       ldx	$f13 -> r2.31
	;;
#2:	       stm.s	r2.31, r10, 6
#0:	       ldiu	1408 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#3:	       stm.s	r3.31, r10, 3
#0:	       ldiu	1404 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	_strlen         ; vfprintf.c:576
#3:	       ldx	$f15 -> r3.31
	;;
#3:	       stm.s	r3.31, r10, 4
	;;
#0:	       stm.s	r2, r14, 29
	;;
#0:	       stm.s	r1, r14, 31
	;;
#0:	       stm.s	r0, r14, 25
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:576
	;;
#0:	       stm.s	r0, r14, 16     ; vfprintf.c:576
	;;
#0:	       ldmg.d	_impure_data+56 ; vfprintf.c:710
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:710
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:710
	;;
#0:	if  c1 br	.BB12_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_impure_data -> r0 ; vfprintf.c:710
#1:	       callg	___sinit        ; vfprintf.c:710
	;;                              ; vfprintf.c:710
	       nop	3               ; vfprintf.c:710
	;;
.BB12_2:                                ; %bb2
#0:	       ldm.s	r14, 100        ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:713
	;;
#0:	       add	r0, 12 -> r1    ; vfprintf.c:713
	;;
#0:	       stm.s	r1, r14, 5      ; vfprintf.c:713
	;;
#0:	       ldm.f	r0, 12          ; vfprintf.c:713
	;;
#0:	       ldx	$memhu, r1 -> r0 ; vfprintf.c:713
	;;
#0:	       btest	r0, 13 -> c1    ; vfprintf.c:713
	;;
#0:	if  c1 br	.BB12_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb3
#0:	       ldm.s	r14, 100        ; vfprintf.c:713
#2:	       ldiu	2047 -> r1
#1:	       ldga	8192 -> r1.16
	;;
#0:	       ldim	2043 -> r1
#1:	       or	r0, r1.16 -> r0 ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:713
	;;
#0:	       ldm.f	r3, 100         ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:713
	;;
#0:	       and	r4, r1 -> r1    ; vfprintf.c:713
	;;
#0:	       stm.a	r1, r3, 25      ; vfprintf.c:713
	;;
#0:	       stmh.a	r0, r3, 6       ; vfprintf.c:713
	;;
.BB12_4:                                ; %bb4
#0:	       btest	r0, 3 -> c1     ; vfprintf.c:716
	;;
#0:	if !c1 br	.BB12_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       ldm.s	r14, 100        ; vfprintf.c:716
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:716
	;;
#0:	       ldm.f	r1, 16          ; vfprintf.c:716
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:716
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:716
	;;
#0:	if !c1 br	.BB12_8
	;;
	       nop	2
	;;
.BB12_6:                                ; %bb6
#0:	       ldm.s	r14, 100        ; vfprintf.c:716
	;;
#0:	       callg	___swsetup_r    ; vfprintf.c:716
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:716
	;;                              ; vfprintf.c:716
	       nop	3               ; vfprintf.c:716
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:716
	;;
#0:	if  c1 br	.BB12_388       ; vfprintf.c:716
	;;                              ; vfprintf.c:716
	       nop	2               ; vfprintf.c:716
	;;
; BB#7:                                 ; %bb6.bb8_crit_edge
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stm.a	r0.31, r0, 0
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
.BB12_8:                                ; %bb8
#0:	       and	r0, 26 -> r1    ; vfprintf.c:722
	;;
#0:	       cmpne	r1, 10 -> c1    ; vfprintf.c:722
	;;
#0:	if !c1 ldm.s	r14, 100        ; vfprintf.c:722
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:722
	;;
#0:	if !c1 ldm.f	r1, 14          ; vfprintf.c:722
#1:	if !c1 add	r1, 14 -> r3    ; vfprintf.c:722
	;;
#0:	if !c1 ldx	$memhs, r3 -> r1 ; vfprintf.c:722
	;;
#0:	if !c1 cmplt	r1, 0 -> c1     ; vfprintf.c:722
	;;
#0:	if  c1 br	.BB12_17
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb10
#0:	       ldm.s	r14, 100        ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       ldiu	1312 -> r11
#2:	       ldiu	2045 -> r3
#3:	       ldiu	288 -> r12
	;;
#0:	       add	r14, r11 -> r11
#1:	       ldim	31 -> r3
#2:	       add	r14, r12 -> r12
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       add	r11, 4 -> r10
#2:	       and	r0, r3 -> r0    ; vfprintf.c:349[ vfprintf.c:725 ]
	;;
#0:	       ldm.f	r4, 28          ; vfprintf.c:352[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r5   ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       ldm.f	r4, 100         ; vfprintf.c:350[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r6   ; vfprintf.c:350[ vfprintf.c:725 ]
#1:	       ldm.f	r4, 36          ; vfprintf.c:353[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:353[ vfprintf.c:725 ]
#1:	       stm.a	r5, r10, 7      ; vfprintf.c:352[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r1, r10, 7      ; vfprintf.c:351[ vfprintf.c:725 ]
#1:	       ldiu	1024 -> r1
	;;
#0:	       stm.a	r6, r10, 25     ; vfprintf.c:350[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:349[ vfprintf.c:725 ]
#1:	       add	r12, 4 -> r0
	;;
#0:	       stm.a	r3, r10, 9      ; vfprintf.c:353[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:356[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r0, r10, 4      ; vfprintf.c:356[ vfprintf.c:725 ]
#1:	       or	r10, 0 -> r0    ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r1, r10, 2      ; vfprintf.c:357[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r1, r10, 5      ; vfprintf.c:357[ vfprintf.c:725 ]
	;;
#0:	       stm.a	0, r10, 6       ; vfprintf.c:358[ vfprintf.c:725 ]
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldm.s	r14, 116        ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       callg	__vfprintf_r    ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:364[ vfprintf.c:725 ]
	;;                              ; vfprintf.c:364[ vfprintf.c:725 ]
	       nop	3               ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       or	r0, 0 -> r11    ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldi	-1 -> r0
	;;
#0:	       cmplt	r0, r11 -> c1
	;;
#0:	if !c1 br	.BB12_11
	;;
	       nop	2
	;;
; BB#10:                                ; %bb.i406
#0:	       ldiu	1312 -> r12
#1:	       callg	__fflush_r      ; vfprintf.c:365[ vfprintf.c:725 ]
#2:	       ldga	_impure_data -> r0 ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	       add	r14, r12 -> r12
	;;
#0:	       add	r12, 4 -> r1
	;;                              ; vfprintf.c:365[ vfprintf.c:725 ]
	       nop	1               ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	if !c1 ldi	-1 -> r11
	;;
.BB12_11:                               ; %bb3.i
#0:	       ldiu	1312 -> r1
#1:	       ldm.f	r10, 12
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 16 -> r0
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 6 -> c1     ; vfprintf.c:367[ vfprintf.c:725 ]
	;;
#0:	if !c1 br	.BB12_15        ; vfprintf.c:367[ vfprintf.c:725 ]
	;;                              ; vfprintf.c:367[ vfprintf.c:725 ]
	       nop	2               ; vfprintf.c:367[ vfprintf.c:725 ]
	;;
; BB#12:                                ; %bb4.i408
#0:	       ldm.s	r14, 100        ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       ldga	___mem_emergency -> r1 ; vfprintf.c:368[ vfprintf.c:725 ]
#2:	       ldi	64 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldm.f	r0, 12          ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#1:	       stm.a	r1.31, r1, 0    ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldm.s	r14, 20         ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldx	$memhu, r1 -> r1 ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       or	r1, r3 -> r1    ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r1, r0, 6       ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
#2:	       or	r11, 0 -> r0    ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 396         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 400         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f14   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 404         ; vfprintf.c:1622
#2:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f15   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 408         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f12   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 412         ; vfprintf.c:1622
#2:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f13   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 416         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f10   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 420         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f11   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 424         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f15   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 428         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f14   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f13   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f12   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f11   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f10   ; vfprintf.c:1622
	;;
.BB12_13:                               ; %bb4.i408
#0:	       ldm.s	r1, 444         ; vfprintf.c:1622
#1:	       or	r14, 0 -> r15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.25 ; vfprintf.c:1622
#0:	       ldm.s	r1, 448         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 452         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 456         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.24 ; vfprintf.c:1622
#1:	       ldm.s	r1, 460         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 464         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 468         ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 472         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:1622
#1:	       ldm.s	r1, 476         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1622
#1:	       ldm.s	r1, 480         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1622
#1:	       ldm.s	r1, 484         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:1622
#1:	       ldm.s	r1, 488         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1622
#1:	       ldm.s	r15, 8          ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r15, 4          ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $ro    ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $rb    ; vfprintf.c:1622
	;;
.BB12_14:                               ; %bb4.i408
#0:	       ldm.s	r15, 0          ; vfprintf.c:1622
#1:	       ldiu	1516 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r15, r1 -> r15  ; vfprintf.c:1622
	;;
#0:	       ret                      ; vfprintf.c:1622
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:1622
	;;                              ; vfprintf.c:1622
	       nop	3               ; vfprintf.c:1622
	;;
.BB12_15:                               ; %__sbprintf.exit
#0:	       ldiu	1024 -> r1      ; vfprintf.c:1622
#1:	       or	r11, 0 -> r0    ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 396         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 400         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f14   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 404         ; vfprintf.c:1622
#2:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f15   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 408         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f12   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 412         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f13   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 416         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f10   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 420         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f11   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 424         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f15   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 428         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f14   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f13   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f12   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f11   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f10   ; vfprintf.c:1622
	;;
.BB12_16:                               ; %__sbprintf.exit
#0:	       ldm.s	r1, 444         ; vfprintf.c:1622
#1:	       or	r14, 0 -> r15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.25 ; vfprintf.c:1622
#0:	       ldm.s	r1, 448         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 452         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 456         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.24 ; vfprintf.c:1622
#1:	       ldm.s	r1, 460         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 464         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 468         ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 472         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:1622
#1:	       ldm.s	r1, 476         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1622
#1:	       ldm.s	r1, 480         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1622
#1:	       ldm.s	r1, 484         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:1622
#1:	       ldm.s	r1, 488         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1622
#1:	       ldm.s	r15, 8          ; vfprintf.c:1622
	;;
#0:	       br	.BB12_14
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#2:	       ldm.s	r15, 4          ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $ro    ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $rb    ; vfprintf.c:1622
	;;
.BB12_17:                               ; %bb11
#1:	       ldiu	160 -> r2
#2:	       fop	dzero -> d5
#0:	       ldi	48 -> r0.24
	;;
#0:	       add	r14, r2 -> r2
#1:	       fop	dzero -> d6
	;;
#0:	       add	r2, 20 -> r0
#1:	       ldiu	160 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 17
	;;
#0:	       add	r2, 19 -> r0
#1:	       ldiu	256 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 15
	;;
#0:	       add	r2, 6 -> r0
#1:	       ldiu	224 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 14
	;;
#0:	       add	r2, 20 -> r0
#1:	       ldiu	256 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 26
	;;
#0:	       add	r2, 8 -> r1
	;;
#0:	       stm.s	r1, r14, 9
#1:	       add	r2, 27 -> r1
	;;
#0:	       stm.s	r1, r14, 10
#1:	       add	r2, 7 -> r1
	;;
#0:	       stm.s	r1, r14, 8
#1:	       add	r2, 26 -> r1
#2:	       ldiu	160 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r1, r14, 7
	;;
#0:	       add	r2, 20 -> r1
	;;
#0:	       stm.s	r1, r14, 6      ; vfprintf.c:744
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:744
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:742
	;;
#0:	       stm.a	0, r0, 2        ; vfprintf.c:743
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 20
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	       stm.s	r0, r14, 13
	;;
#0:	       stm.s	r0, r14, 18
	;;
.BB12_18:                               ; %bb13.outer
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB12_378 Depth 2
                                        ;     Child Loop BB12_20 Depth 2
                                        ;       Child Loop BB12_30 Depth 3
                                        ;         Child Loop BB12_31 Depth 4
                                        ;           Child Loop BB12_57 Depth 5
                                        ;           Child Loop BB12_51 Depth 5
                                        ;     Child Loop BB12_113 Depth 2
                                        ;     Child Loop BB12_123 Depth 2
                                        ;     Child Loop BB12_127 Depth 2
                                        ;     Child Loop BB12_188 Depth 2
                                        ;     Child Loop BB12_195 Depth 2
                                        ;     Child Loop BB12_190 Depth 2
                                        ;     Child Loop BB12_211 Depth 2
                                        ;     Child Loop BB12_236 Depth 2
                                        ;     Child Loop BB12_248 Depth 2
                                        ;     Child Loop BB12_315 Depth 2
                                        ;     Child Loop BB12_296 Depth 2
                                        ;     Child Loop BB12_359 Depth 2
                                        ;     Child Loop BB12_340 Depth 2
                                        ;     Child Loop BB12_276 Depth 2
#0:	       ldm.s	r14, 24
#1:	       br	.BB12_20
#2:	       ldi	-1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 30
	;;
	       nop	0
	;;
.BB12_19:                               ; %bb14
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       sub	r10, 1 -> r10
	;;
.BB12_20:                               ; %bb15
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB12_30 Depth 3
                                        ;         Child Loop BB12_31 Depth 4
                                        ;           Child Loop BB12_57 Depth 5
                                        ;           Child Loop BB12_51 Depth 5
#0:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, r10 -> r11
	;;
#0:	       ldm.f	r11, -1         ; vfprintf.c:772
#1:	       sub	r11, 1 -> r12
	;;
#0:	       ldx	$membu, r12 -> r0 ; vfprintf.c:772
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_22
	;;
	       nop	2
	;;
; BB#21:                                ; %bb15
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       mask	r0, 0 -> r1
#1:	       ldi	37 -> r3
	;;
#0:	       cmpne	r1, r3 -> c1
	;;
#0:	if  c1 br	.BB12_19
	;;
	       nop	2
	;;
.BB12_22:                               ; %bb17
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:775
	;;
#0:	if !c1 br	.BB12_28
	;;
	       nop	2
	;;
; BB#23:                                ; %bb18
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 124        ; vfprintf.c:776
#1:	       xor	r10, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:776
#1:	       ldm.s	r14, 120        ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776
	;;
#0:	       stm.a	r3, r1, 0       ; vfprintf.c:776
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:776
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776
#1:	       ldm.f	r0, 4           ; vfprintf.c:776
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
#1:	       ldx	$mem, 0 -> r3   ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 2       ; vfprintf.c:776
#1:	       add	r3, 1 -> r1     ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:776
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:776
	;;
#0:	if  c1 br	.BB12_25        ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	2               ; vfprintf.c:776
	;;
; BB#24:                                ; %bb18.bb22_crit_edge
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:776
#1:	       br	.BB12_27
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:776
	;;
	       nop	0
	;;
.BB12_25:                               ; %bb19
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:776
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:776
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	3               ; vfprintf.c:776
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:776
	;;
#0:	if !c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#26:                                ; %bb19.bb22_crit_edge
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_27:                               ; %bb19.bb22_crit_edge
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.f	r11, -1
	;;
#0:	       ldx	$membu, r12 -> r0
#1:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 22
	;;
.BB12_28:                               ; %bb23
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:783
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:783
	;;
#0:	if  c1 br	.BB12_384
	;;
	       nop	2
	;;
; BB#29:                                ; %bb24
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldiu	256 -> r2
#1:	       ldi	0 -> r0
#2:	       ldi	-1 -> r10
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 28
#2:	       or	r0, 0 -> r12
	;;
#0:	       add	r2, 16 -> r1
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:793
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:793
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 31
	;;
.BB12_30:                               ; %rflag
                                        ;   Parent Loop BB12_18 Depth=1
                                        ;     Parent Loop BB12_20 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB12_31 Depth 4
                                        ;           Child Loop BB12_57 Depth 5
                                        ;           Child Loop BB12_51 Depth 5
#0:	       ldm.f	r11, 0          ; vfprintf.c:805
	;;
#0:	       ldx	$membs, r11 -> r13 ; vfprintf.c:805
#1:	       add	r11, 1 -> r11   ; vfprintf.c:805
	;;
.BB12_31:                               ; %reswitch
                                        ;   Parent Loop BB12_18 Depth=1
                                        ;     Parent Loop BB12_20 Depth=2
                                        ;       Parent Loop BB12_30 Depth=3
                                        ; =>      This Loop Header: Depth=4
                                        ;           Child Loop BB12_57 Depth 5
                                        ;           Child Loop BB12_51 Depth 5
#0:	       ldi	31 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB12_34
	;;
	       nop	2
	;;
; BB#32:                                ; %reswitch
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpeq	r13, 0 -> c1
	;;
#0:	if  c1 br	.BB12_384
	;;
	       nop	2
	;;
.BB12_33:                               ; %bb178
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	128 -> r2
#1:	       ldi	0 -> r0
#2:	       ldi	1 -> r1
	;;
#0:	       stm.s	r0, r14, 28
#1:	       add	r14, r2 -> r2
	;;
#0:	       stm.s	r1, r14, 21
#1:	       add	r2, 12 -> r1
	;;
#0:	       stm.s	r1, r14, 23     ; vfprintf.c:1490
	;;
#0:	       stmb.a	r13, r1, 0      ; vfprintf.c:1490
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1492
	;;
#0:	       br	.BB12_204
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1492
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1492
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB12_34:                               ; %reswitch
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       ldi	-32 -> r0
#1:	       ldi	88 -> r1
	;;
#0:	       add	r13, r0 -> r0
	;;
#0:	       cmpult	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB12_33
	;;
	       nop	2
	;;
; BB#35:                                ; %reswitch
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       ldga	.JTI12_0 -> r1
	;;
#0:	       s2add	r1, r0 -> r0
	;;
#0:	       ldm.d	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       br	r0
	;;
	       nop	3
	;;
.BB12_36:                               ; %reswitch.hex_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldga	._.str430 -> r0
#1:	       br	.BB12_176
	;;
	       nop	2
	;;
.BB12_37:                               ; %bb25
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:822
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:822
	;;
#0:	       mask	r13, 0 -> r13   ; vfprintf.c:822
	;;
#0:	       cmpne	r13, 0 -> c1    ; vfprintf.c:822
	;;
#0:	if  c1 br	.BB12_30
	;;
	       nop	2
	;;
; BB#38:                                ; %bb26
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldi	32 -> r13
	;;
.BB12_39:                               ; %bb26
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       stm.s	r13, r14, 28    ; vfprintf.c:823
#1:	       br	.BB12_30
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:823
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:823
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:823
	;;
.BB12_40:                               ; %bb27
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:826
#1:	       br	.BB12_30
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:826
	;;
#0:	       or	r13, 1 -> r13   ; vfprintf.c:826
	;;
#0:	       stm.s	r13, r14, 31    ; vfprintf.c:826
	;;
.BB12_41:                               ; %bb28
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:865
#1:	       ldi	-1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:865
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:865
#1:	       add	r2, 4 -> r2     ; vfprintf.c:865
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:865
#1:	       stm.s	r2, r14, 29
	;;
#0:	       cmplt	r13, r12 -> c1
	;;
#0:	if  c1 br	.BB12_30
	;;
	       nop	2
	;;
; BB#42:                                ; %bb29
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldi	0 -> r13
	;;
#0:	       sub	r13, r12 -> r12 ; vfprintf.c:871
	;;
.BB12_43:                               ; %bb30
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:874
#1:	       br	.BB12_30
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:874
	;;
#0:	       or	r13, 4 -> r13   ; vfprintf.c:874
	;;
#0:	       stm.s	r13, r14, 31    ; vfprintf.c:874
	;;
.BB12_44:                               ; %bb31
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldi	43 -> r13
#1:	       br	.BB12_39
	;;
	       nop	2
	;;
.BB12_45:                               ; %bb32
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       ldm.f	r11, 0          ; vfprintf.c:880
#1:	       ldi	42 -> r13
#2:	       add	r11, 1 -> r0    ; vfprintf.c:880
	;;
#0:	       ldx	$membu, r11 -> r10 ; vfprintf.c:880
	;;
#0:	       cmpeq	r10, r13 -> c1
	;;
#0:	if  c1 br	.BB12_48        ; vfprintf.c:880
	;;                              ; vfprintf.c:880
	       nop	2               ; vfprintf.c:880
	;;
; BB#46:                                ; %bb37.preheader
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       mask	r10, 8 -> r13
#1:	       ldi	-48 -> r10
	;;
#0:	       add	r13, r10 -> r10
	;;
#0:	       cmpult	r10, 10 -> c1
	;;
#0:	if  c1 br	.BB12_50        ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#47:                                ; %bb37.preheader.bb38_crit_edge
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       ldi	0 -> r10
#1:	       br	.BB12_53
#2:	       or	r0, 0 -> r11
	;;
	       nop	2
	;;
.BB12_48:                               ; %bb33
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:910
#1:	       ldi	-1 -> r13
#2:	       or	r0, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:910
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:910
#1:	       add	r2, 4 -> r2     ; vfprintf.c:910
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:910
#1:	       stm.s	r2, r14, 29
	;;
#0:	       cmplt	r13, r10 -> c1  ; vfprintf.c:914
	;;
#0:	if  c1 br	.BB12_30
	;;
	       nop	2
	;;
; BB#49:                                ; %bb34
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       or	r0, 0 -> r11
#1:	       br	.BB12_30
#2:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB12_50:                               ; %bb36.preheader
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       add	r11, 1 -> r11
#1:	       ldi	0 -> r10
	;;
.BB12_51:                               ; %bb36
                                        ;   Parent Loop BB12_18 Depth=1
                                        ;     Parent Loop BB12_20 Depth=2
                                        ;       Parent Loop BB12_30 Depth=3
                                        ;         Parent Loop BB12_31 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#1:	       ldm.f	r11, 0
#0:	       mul	r10, 10 -> $mul0 ; vfprintf.c:920
#2:	       ldi	-48 -> r1
	;;
#0:	       ldx	$mul0, 0 -> r10 ; vfprintf.c:920
	;;
#0:	       ldx	$membs, r11 -> r0
#1:	       add	r13, r10 -> r10
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r0, r1 -> r13
#1:	       add	r10, r1 -> r10  ; vfprintf.c:920
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r0, 0 -> r13
	;;
#0:	if  c1 br	.BB12_51        ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#52:                                ; %bb36.bb38_crit_edge
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       or	r0, 0 -> r13
	;;
.BB12_53:                               ; %bb38
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       cmplt	r10, -1 -> c1
#1:	       br	.BB12_31
#2:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10    ; vfprintf.c:923
	;;
	       nop	1
	;;
.BB12_54:                               ; %bb39
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldi	128 -> r13
	;;
.BB12_55:                               ; %bb39
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:931
#1:	       br	.BB12_30
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:931
	;;
#0:	       or	r0, r13 -> r0   ; vfprintf.c:931
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:931
	;;
.BB12_56:                               ; %reswitch.bb41_crit_edge
                                        ;   in Loop: Header=BB12_31 Depth=4
#0:	       ldi	0 -> r12
	;;
.BB12_57:                               ; %bb41
                                        ;   Parent Loop BB12_18 Depth=1
                                        ;     Parent Loop BB12_20 Depth=2
                                        ;       Parent Loop BB12_30 Depth=3
                                        ;         Parent Loop BB12_31 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#0:	       ldm.f	r11, 0          ; vfprintf.c:938
#1:	       mul	r12, 10 -> $mul1 ; vfprintf.c:937
#2:	       ldi	-48 -> r1
	;;
#1:	       ldx	$mul1, 0 -> r12 ; vfprintf.c:937
	;;
#0:	       ldx	$membs, r11 -> r0 ; vfprintf.c:938
#1:	       add	r13, r12 -> r12
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r0, r1 -> r13
#1:	       add	r12, r1 -> r12  ; vfprintf.c:937
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r0, 0 -> r13
	;;
#0:	if  c1 br	.BB12_57
	;;
	       nop	2
	;;
; BB#58:                                ;   in Loop: Header=BB12_31 Depth=4
#0:	       or	r0, 0 -> r13
#1:	       br	.BB12_31
	;;
	       nop	2
	;;
.BB12_59:                               ; %bb43
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:955
#1:	       br	.BB12_30
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:955
	;;
#0:	       or	r13, 8 -> r13   ; vfprintf.c:955
	;;
#0:	       stm.s	r13, r14, 31    ; vfprintf.c:955
	;;
.BB12_60:                               ; %bb44
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldi	64 -> r13
#1:	       br	.BB12_55
	;;
	       nop	2
	;;
.BB12_61:                               ; %bb46
                                        ;   in Loop: Header=BB12_30 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:977
#1:	       br	.BB12_30
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:977
	;;
#0:	       or	r13, 16 -> r13  ; vfprintf.c:977
	;;
#0:	       stm.s	r13, r14, 31    ; vfprintf.c:977
	;;
.BB12_62:                               ; %bb47
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1036
#1:	       ldiu	128 -> r3
#2:	       ldi	0 -> r0
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1036
#1:	       add	r3, 12 -> r1
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1036
	;;
#0:	       ldx	$membu, r2 -> r10 ; vfprintf.c:1036
#1:	       stm.s	r0, r14, 28
#2:	       add	r2, 4 -> r2     ; vfprintf.c:1036
	;;
#0:	       stm.s	r1, r14, 23     ; vfprintf.c:1036
	;;
#0:	       stm.s	r2, r14, 29
#1:	       ldi	1 -> r2
	;;
#0:	       stm.s	r2, r14, 21     ; vfprintf.c:1036
	;;
#0:	       br	.BB12_166
#1:	       stmb.a	r10, r1, 0      ; vfprintf.c:1036
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1039
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1039
	;;
#0:	       stmb.a	0, r10, 0       ; vfprintf.c:1039
	;;
.BB12_63:                               ; %bb49
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1042
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1042
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1042
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB12_64:                               ; %bb50
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB12_66        ; vfprintf.c:1046
	;;                              ; vfprintf.c:1046
	       nop	2               ; vfprintf.c:1046
	;;
; BB#65:                                ; %bb51
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
#1:	       br	.BB12_68
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
.BB12_66:                               ; %bb52
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1046
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       btest	r0, 6 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB12_69
	;;
	       nop	2
	;;
; BB#67:                                ; %bb53
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       mask	r0, 12 -> r0
	;;
.BB12_68:                               ; %bb53
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 24
	;;
.BB12_69:                               ; %bb56
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1050
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1050
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1050
	;;
#0:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1050
	;;
#0:	if  c1 br	.BB12_71        ; vfprintf.c:1050
	;;                              ; vfprintf.c:1050
	       nop	2               ; vfprintf.c:1050
	;;
; BB#70:                                ; %bb56.number_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	1 -> r0
#1:	       br	.BB12_183
	;;
	       nop	2
	;;
.BB12_71:                               ; %bb57
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1054
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1054
	;;
#0:	       sub	r0, r1 -> r1    ; vfprintf.c:1054
#1:	       ldi	1 -> r0
	;;
#0:	       stm.s	r1, r14, 24
#1:	       ldi	45 -> r1
	;;
#0:	       br	.BB12_183
#1:	       stm.s	r1, r14, 28     ; vfprintf.c:1055
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1055
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1055
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1055
	;;
.BB12_72:                               ; %bb59
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1071
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1071
#1:	       ldm.f	r2, 4           ; vfprintf.c:1071
#2:	       add	r2, 8 -> r2     ; vfprintf.c:1071
	;;
#0:	       stx	r0 -> $f0       ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1071
#1:	       fop	fmov	f0 -> f12 ; vfprintf.c:1071
#2:	       stm.s	r2, r14, 29
	;;
#0:	       stx	r1 -> $f1       ; vfprintf.c:1071
	;;
#0:	       callg	___fpclassifyd  ; vfprintf.c:1079
#1:	       fop	fmov	f1 -> f13 ; vfprintf.c:1071
	;;
#0:	       fop	fmov	f12 -> f0 ; vfprintf.c:1079
	;;
#0:	       fop	fmov	f13 -> f1 ; vfprintf.c:1079
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1079
	;;
#0:	       ldx	$f1 -> r1       ; vfprintf.c:1079
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_76
	;;
	       nop	2
	;;
; BB#73:                                ; %bb59
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB12_77
	;;
	       nop	2
	;;
; BB#74:                                ; %bb60
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dzero -> d0
#1:	       ldga	._.str127 -> r1
	;;
#0:	       fop	dcmp	d6, d0 -> f0 ; vfprintf.c:1080
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1080
	;;
#0:	       btest	r0, 2 -> c1     ; vfprintf.c:1080
	;;
#0:	if  c1 ldi	45 -> r0
	;;
#0:	if  c1 stm.s	r0, r14, 28     ; vfprintf.c:1081
	;;
#0:	if  c1 ldm.s	r14, 108        ; vfprintf.c:1081
	;;
#0:	if  c1 ldx	$mem, 0 -> r10  ; vfprintf.c:1081
	;;
#0:	if  c1 stmb.a	r0, r10, 0      ; vfprintf.c:1081
#1:	       ldi	72 -> r0
#2:	       ldi	-129 -> r10
	;;
#0:	       cmplt	r13, r0 -> c1
#1:	       ldga	._.str26 -> r0
	;;
.BB12_75:                               ; %bb62
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	if  c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 23     ; vfprintf.c:1087
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1087
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1087
	;;
#0:	       and	r0, r10 -> r0   ; vfprintf.c:1087
#1:	       ldi	3 -> r10
	;;
#0:	       br	.BB12_204
#1:	       stm.s	r0, r14, 31
#2:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
#0:	       stm.s	r10, r14, 21
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB12_76:                               ; %bb67
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	72 -> r0
#1:	       br	.BB12_75
#2:	       ldi	-129 -> r10
#3:	       ldga	._.str329 -> r1
	;;
#0:	       cmplt	r13, r0 -> c1
#1:	       ldga	._.str228 -> r0
	;;
	       nop	1
	;;
.BB12_77:                               ; %bb71
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:1152
	;;
#0:	if  c1 br	.BB12_79        ; vfprintf.c:1152
	;;                              ; vfprintf.c:1152
	       nop	2               ; vfprintf.c:1152
	;;
; BB#78:                                ; %bb71.bb77_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	6 -> r10
#1:	       br	.BB12_81
	;;
	       nop	2
	;;
.BB12_79:                               ; %bb73
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	71 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 ldi	103 -> r0
	;;
#0:	if !c1 cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB12_81
	;;
	       nop	2
	;;
; BB#80:                                ; %bb75
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1154
	;;
#0:	if !c1 ldi	1 -> r10
	;;
.BB12_81:                               ; %bb77
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	128 -> r3
#1:	       fop	fmov	f12 -> f0
	;;
#0:	       add	r14, r3 -> r3
#1:	       ldx	$f0 -> r1
	;;
#0:	       add	r3, 0 -> r0
#1:	       fop	fmov	f13 -> f0
	;;
#0:	       stm.a	r1, r0, 0
#1:	       ldx	$f0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
#1:	       ldi	256 -> r1
	;;
#0:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 124        ; vfprintf.c:1158
	;;
#0:	       cmplt	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_83
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1158
	;;
#1:	       or	r2, r1 -> r1.23 ; vfprintf.c:1158
	;;
	       nop	1
	;;
; BB#82:                                ; %bb77.bb2.i_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#3:	       ldi	0 -> r3.23
#0:	       br	.BB12_84
#1:	       fop	dmov	d6 -> d7
	;;
	       nop	2
	;;
.BB12_83:                               ; %bb.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dabs	d6 -> d7
	;;
#3:	       ldi	45 -> r3.23
	;;
.BB12_84:                               ; %bb2.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	100 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB12_88
	;;
	       nop	2
	;;
; BB#85:                                ; %bb2.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	69 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_91
	;;
	       nop	2
	;;
; BB#86:                                ; %bb2.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_90
	;;
	       nop	2
	;;
.BB12_87:                               ; %bb2.i.bb8.i_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#2:	       or	r10, 0 -> r2.23
#0:	       br	.BB12_92
	;;
	       nop	2
	;;
.BB12_88:                               ; %bb2.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	101 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_91
	;;
	       nop	2
	;;
; BB#89:                                ; %bb2.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpne	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_87
	;;
	       nop	2
	;;
.BB12_90:                               ; %bb2.i.bb9.i405_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	3 -> r2
#1:	       br	.BB12_93
#2:	       or	r10, 0 -> r2.23
	;;
	       nop	2
	;;
.BB12_91:                               ; %bb7.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#2:	       add	r10, 1 -> r2.23
	;;
.BB12_92:                               ; %bb8.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	2 -> r2
	;;
.BB12_93:                               ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	12 -> r4
#1:	       fop	fmov	f15 -> f1
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	256 -> r4
#2:	       fop	fmov	f14 -> f0
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f1 -> r1
	;;
#2:	       add	r4, 12 -> r2.24
#0:	       ldiu	288 -> r4
	;;
#2:	       stm.a	r2.24, r15, 0
#0:	       add	r14, r4 -> r4
	;;
#0:	       callg	__dtoa_r
#1:	       add	r4, 0 -> r0
#2:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
#2:	       or	r2.23, 0 -> r3
	;;
#0:	       stm.a	r0, r15, 1
#1:	       ldx	$f0 -> r0
	;;
#3:	       add	r4, 28 -> r3.24
	;;
#3:	       stm.a	r3.24, r15, 2
	;;
#0:	       stm.s	r0, r14, 23
#1:	       ldi	101 -> r0
#2:	       s2add	r15, 3 -> r15
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB12_99
	;;
	       nop	2
	;;
; BB#94:                                ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_103
	;;
	       nop	2
	;;
; BB#95:                                ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	71 -> r0
	;;
.BB12_96:                               ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB12_108
	;;
	       nop	2
	;;
; BB#97:                                ; %bb11.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_101
	;;
	       nop	2
	;;
; BB#98:                                ; %bb11.bb22_crit_edge.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 284
#1:	       br	.BB12_114
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_99:                               ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_103
	;;
	       nop	2
	;;
; BB#100:                               ; %bb9.i405
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	103 -> r0
#1:	       br	.BB12_96
	;;
	       nop	2
	;;
.BB12_101:                              ; %bb12.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_103
	;;
	       nop	2
	;;
; BB#102:                               ; %bb12.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpne	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB12_108
	;;
	       nop	2
	;;
.BB12_103:                              ; %bb14.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92
#1:	       ldi	48 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r0
	;;
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB12_105
	;;
	       nop	2
	;;
; BB#104:                               ; %bb14.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       btest	r0, 9 -> c1
	;;
#0:	if  c1 br	.BB12_106
	;;
	       nop	2
	;;
.BB12_105:                              ; %bb14.bb17_crit_edge.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268
#1:	       br	.BB12_107
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_106:                              ; %bb16.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	1 -> r0
	;;
#2:	       sub	r0, r2.23 -> r0
	;;
#2:	       stm.a	r0, r2.24, 0
	;;
.BB12_107:                              ; %bb17.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#2:	       add	r0, r2.23 -> r2.23
	;;
.BB12_108:                              ; %bb18.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
#1:	       ldm.s	r14, 92
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r1, 9 -> c1
#2:	       add	r0, r2.23 -> r0
	;;
#0:	if  c1 br	.BB12_110
	;;
	       nop	2
	;;
; BB#109:                               ; %bb21.preheader.thread.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#3:	       stm.a	r0, r3.24, 0
#0:	       br	.BB12_114
	;;
	       nop	2
	;;
.BB12_110:                              ; %bb21.preheader.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 284
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB12_112
	;;
	       nop	2
	;;
; BB#111:                               ; %bb21.preheader.i.cvt.exit_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       or	r1, 0 -> r0
#1:	       br	.BB12_114
	;;
	       nop	2
	;;
.BB12_112:                              ; %bb20.i.preheader
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92
#2:	       sub	r2.23, r1 -> r2
#1:	       add	r1, 1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, r2 -> r2
	;;
.BB12_113:                              ; %bb20.i
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r2, 1 -> r2
#1:	       ldi	48 -> r3
#2:	       sub	r1, 1 -> r4
#3:	       add	r1, 1 -> r5
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stmb.a	r3, r4, 0
	;;
#0:	if  c1 br	.BB12_113
#3:	       stm.a	r1, r3.24, 0
#1:	       or	r5, 0 -> r1
	;;
	       nop	2
	;;
.BB12_114:                              ; %cvt.exit
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92
#1:	       ldi	71 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r0, r2 -> r0
	;;
#0:	       stm.s	r0, r14, 20
#1:	if !c1 ldi	103 -> r0
	;;
#0:	if !c1 cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB12_120
	;;
	       nop	2
	;;
; BB#115:                               ; %bb79
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1164
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1164
	;;
#0:	       cmplt	r0, -3 -> c1
#1:	       stm.s	r0, r14, 24
	;;
#0:	if !c1 cmplt	r10, r0 -> c1
	;;
#0:	if  c1 br	.BB12_119
	;;
	       nop	2
	;;
; BB#116:                               ; %bb79.bb101_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	103 -> r13
	;;
.BB12_117:                              ; %bb101
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1192
#1:	       ldm.s	r14, 80         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1192
	;;
#0:	       cmplt	r10, r0 -> c1   ; vfprintf.c:1192
	;;
#0:	if  c1 br	.BB12_142
	;;
	       nop	2
	;;
; BB#118:                               ; %bb102
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1194
#1:	       br	.BB12_143
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1194
#1:	       ldm.s	r14, 96
	;;
#0:	       and	r0, 1 -> r0     ; vfprintf.c:1194
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_119:                              ; %bb81
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       sub	r13, 2 -> r13
	;;
.BB12_120:                              ; %bb83
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	101 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1   ; vfprintf.c:1173
	;;
#0:	if  c1 br	.BB12_134       ; vfprintf.c:1173
	;;                              ; vfprintf.c:1173
	       nop	2               ; vfprintf.c:1173
	;;
; BB#121:                               ; %bb84
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1174
#1:	       ldi	1 -> r10
#2:	       ldiu	256 -> r3
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1174
	;;
#0:	       sub	r0, 1 -> r1
#1:	       sub	r10, r0 -> r0
#2:	       ldi	43 -> r10
	;;
#0:	       stm.s	r10, r14, 24
#1:	       cmplt	r1, 0 -> c1     ; vfprintf.c:1742[ vfprintf.c:1175 ]
#2:	       or	r1, 0 -> r10
	;;
#0:	       ldm.s	r14, 96
#1:	if  c1 or	r0, 0 -> r10
#2:	       ldi	45 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	if  c1 or	r0, 0 -> r2
#1:	       add	r3, 4 -> r0
#2:	       cmplt	r10, 10 -> c1   ; vfprintf.c:1749[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB12_129       ; vfprintf.c:1749[ vfprintf.c:1175 ]
#1:	       stm.s	r0, r14, 28
	;;
#0:	       stmb.a	r2, r0, 1
	;;
#2:	       stm.a	r1, r2.24, 0    ; vfprintf.c:1174
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:1741[ vfprintf.c:1175 ]
	;;
; BB#122:                               ; %bb84.bb4.i_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#3:	       ldi	0 -> r3.24
	;;
.BB12_123:                              ; %bb4.i
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       or	r10, 0 -> r0    ; vfprintf.c:1752[ vfprintf.c:1175 ]
#1:	       callg	___divsi3       ; vfprintf.c:1752[ vfprintf.c:1175 ]
#2:	       ldi	10 -> r1
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175 ]
	       nop	3               ; vfprintf.c:1752[ vfprintf.c:1175 ]
	;;
#0:	       ldiu	256 -> r2
#2:	       or	r0, 0 -> r2.23  ; vfprintf.c:1752[ vfprintf.c:1175 ]
#1:	       or	r10, 0 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175 ]
#3:	       ldi	10 -> r1
	;;
#0:	       callg	___modsi3       ; vfprintf.c:1751[ vfprintf.c:1175 ]
#1:	       add	r14, r2 -> r2
	;;
#3:	       add	r2, 20 -> r3.25
	;;                              ; vfprintf.c:1751[ vfprintf.c:1175 ]
	       nop	2               ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       ldi	99 -> r3
#1:	       s2add	r0, 12 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       cmplt	r3, r10 -> c1
#2:	       or	r2.23, 0 -> r10
	;;
#0:	if  c1 br	.BB12_123       ; vfprintf.c:1752[ vfprintf.c:1175 ]
#3:	       sub	r3.25, r3.24 -> r2
	;;
#3:	       add	r3.24, 1 -> r1
#0:	       stmb.a	r0, r2, 6       ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#3:	       or	r1, 0 -> r3.24
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175 ]
	       nop	0               ; vfprintf.c:1752[ vfprintf.c:1175 ]
	;;
; BB#124:                               ; %bb5.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 28
#2:	       s2add	r2.23, 12 -> r10 ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stmb.a	r10, r2, 5      ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       sub	r0, r1 -> r0
	;;
#0:	       ldm.s	r14, 40         ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       cmpult	r0, r10 -> c1   ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB12_126       ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175 ]
	       nop	2               ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
; BB#125:                               ; %bb5.i.exponent.exit_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 56
#1:	       br	.BB12_130
	;;
	       nop	2
	;;
.BB12_126:                              ; %bb5.i.bb6.i_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 56
#1:	       add	r1, 1 -> r10
#2:	       add	r1, 2 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
.BB12_127:                              ; %bb6.i
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r10, 1 -> r10
	;;
#3:	       sub	r3.25, r0 -> r3
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       sub	r0, 1 -> r0
	;;
#0:	if  c1 br	.BB12_127       ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       ldm.f	r3, 8           ; vfprintf.c:1754[ vfprintf.c:1175 ]
#2:	       add	r3, 8 -> r4
	;;
#0:	       ldx	$membu, r4 -> r3 ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       add	r2, 1 -> r4
	;;
#0:	       stmb.a	r3, r2, 0       ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       or	r4, 0 -> r2
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175 ]
	       nop	0               ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
; BB#128:                               ; %bb7.bb10.loopexit_crit_edge.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 32
#1:	       br	.BB12_131
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, r1 -> r10
	;;
	       nop	0
	;;
.BB12_129:                              ; %bb9.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1758[ vfprintf.c:1175 ]
#1:	       ldi	48 -> r0
#2:	       s2add	r10, 12 -> r10  ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r0, r1, 2       ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r10, r1, 3      ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldm.s	r14, 36
	;;
.BB12_130:                              ; %bb9.i
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_131:                              ; %exponent.exit
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       sub	r10, r0 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       stm.s	r0, r14, 13     ; vfprintf.c:1176
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1176
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1176
	;;
#0:	       add	r0, r10 -> r0   ; vfprintf.c:1176
	;;
#0:	       stm.s	r0, r14, 21
#1:	       ldi	1 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1177
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1177
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1177
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1177
	;;
#0:	if  c1 br	.BB12_133
	;;
	       nop	2
	;;
.BB12_132:                              ; %bb86.bb110_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB12_145
	;;
#0:	       stm.s	r0, r14, 24
	;;
	       nop	1
	;;
.BB12_133:                              ; %bb88
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1178
#1:	       br	.BB12_132
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1178
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1178
	;;
#0:	       stm.s	r0, r14, 21
	;;
.BB12_134:                              ; %bb89
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1184
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184
	;;
#0:	       stm.s	r0, r14, 24
#1:	       ldi	102 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1   ; vfprintf.c:1183
	;;
#0:	if !c1 br	.BB12_117
	;;
	       nop	2
	;;
; BB#135:                               ; %bb90
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1184
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184
	;;
#0:	       cmplt	r0, 1 -> c1     ; vfprintf.c:1184
	;;
#0:	if  c1 br	.BB12_140       ; vfprintf.c:1184
	;;                              ; vfprintf.c:1184
	       nop	2               ; vfprintf.c:1184
	;;
; BB#136:                               ; %bb91
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1186
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1186
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1186
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1186
	;;
#0:	if  c1 br	.BB12_138
	;;
	       nop	2
	;;
; BB#137:                               ; %bb92.bb110_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96
#1:	       br	.BB12_144
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_138:                              ; %bb94
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1187
#1:	       br	.BB12_144
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1187
	;;
#0:	       add	r10, r0 -> r0   ; vfprintf.c:1187
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1187
	;;
.BB12_139:                              ; %bb96.bb110_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	1 -> r0
#1:	       br	.BB12_144
	;;
	       nop	2
	;;
.BB12_140:                              ; %bb95
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1189
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1189
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1189
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1189
	;;
#0:	if !c1 br	.BB12_139
	;;
	       nop	2
	;;
; BB#141:                               ; %bb98
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r10, 2 -> r0    ; vfprintf.c:1189
#1:	       br	.BB12_144
	;;
	       nop	2
	;;
.BB12_142:                              ; %bb105
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmplt	r10, 1 -> c1
#1:	       ldi	2 -> r0
#2:	       ldm.s	r14, 80         ; vfprintf.c:1197
	;;
#0:	       sub	r0, r10 -> r0   ; vfprintf.c:1197
#1:	       ldi	1 -> r10
	;;
#0:	if  c1 or	r0, 0 -> r10
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1197
	;;
.BB12_143:                              ; %bb105
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r10, r0 -> r0   ; vfprintf.c:1197
	;;
.BB12_144:                              ; %bb105
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
.BB12_145:                              ; %bb110
                                        ;   in Loop: Header=BB12_18 Depth=1
#3:	       mask	r3.23, 0 -> r0  ; vfprintf.c:1220
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1220
	;;
#0:	if  c1 br	.BB12_147       ; vfprintf.c:1220
	;;                              ; vfprintf.c:1220
	       nop	2               ; vfprintf.c:1220
	;;
; BB#146:                               ; %bb110.bb180_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 272
#1:	       ldga	___mem_emergency -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stm.a	r0.31, r0, 0
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       br	.BB12_148
#1:	       ldx	$mem, 0 -> r0
#2:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$membu, r0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB12_147:                              ; %bb111
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
#1:	       ldi	45 -> r0
	;;
#0:	       stm.s	r0, r14, 28     ; vfprintf.c:1221
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1221
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1221
	;;
#0:	       stmb.a	r0, r10, 0      ; vfprintf.c:1221
	;;
.BB12_148:                              ; %bb111
                                        ;   in Loop: Header=BB12_18 Depth=1
#1:	       or	r1.23, 0 -> r0
#0:	       br	.BB12_204
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:1221
	;;
	       nop	1
	;;
.BB12_149:                              ; %bb112
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 124        ; vfprintf.c:1230
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1230
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1230
	;;
#0:	if !c1 br	.BB12_151       ; vfprintf.c:1230
	;;                              ; vfprintf.c:1230
	       nop	2               ; vfprintf.c:1230
	;;
; BB#150:                               ; %bb113
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1231
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1231
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1231
#1:	       stm.s	r2, r14, 29     ; vfprintf.c:1231
	;;
#0:	       br	.BB12_20
#1:	       ldm.s	r14, 88         ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1231
	;;
#0:	       stm.a	r10, r0, 0      ; vfprintf.c:1231
#1:	       ldi	-1 -> r10
	;;
#0:	       stm.s	r11, r14, 31
	;;
.BB12_151:                              ; %bb114
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1239
#1:	       ldm.s	r14, 124        ; vfprintf.c:1232
	;;
#0:	       add	r2, 4 -> r0     ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1232
	;;
#0:	       btest	r10, 6 -> c1    ; vfprintf.c:1232
	;;
#0:	if !c1 br	.BB12_153       ; vfprintf.c:1232
	;;                              ; vfprintf.c:1232
	       nop	2               ; vfprintf.c:1232
	;;
; BB#152:                               ; %bb115
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1233
	;;
#0:	       br	.BB12_154
#1:	       ldm.f	r2, 0           ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1233
#1:	       ldm.s	r14, 88         ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1233
	;;
#0:	       stmh.a	r12, r10, 0     ; vfprintf.c:1233
	;;
.BB12_153:                              ; %bb116
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       ldm.f	r2, 0           ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1239
#1:	       ldm.s	r14, 88         ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1239
	;;
#0:	       stm.a	r12, r10, 0     ; vfprintf.c:1239
	;;
.BB12_154:                              ; %bb116
                                        ;   in Loop: Header=BB12_20 Depth=2
#0:	       stm.s	r11, r14, 31
#1:	       br	.BB12_20
#2:	       or	r0, 0 -> r2
#3:	       ldi	-1 -> r10
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1239
	;;
	       nop	1
	;;
.BB12_155:                              ; %bb117
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1242
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1242
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1242
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB12_156:                              ; %bb118
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1245
	;;
#0:	if !c1 br	.BB12_158       ; vfprintf.c:1245
	;;                              ; vfprintf.c:1245
	       nop	2               ; vfprintf.c:1245
	;;
; BB#157:                               ; %bb119
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1245
	;;
#0:	       br	.BB12_159
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1245
	;;
.BB12_158:                              ; %bb120
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
.BB12_159:                              ; %bb124
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116
#1:	       br	.BB12_182
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29
	;;
.BB12_160:                              ; %bb125
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1260
#1:	       ldiu	128 -> r3
#2:	       ldga	._.str430 -> r1
#3:	       ldi	120 -> r13
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1260
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1260
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1260
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1260
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1260
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1263
#1:	       ldi	48 -> r2
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1263
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1263
	;;
#0:	       or	r0, 2 -> r0     ; vfprintf.c:1263
	;;
#0:	       br	.BB12_182
#1:	       stm.s	r0, r14, 31
#2:	       ldi	2 -> r0
	;;
#0:	       stm.s	r1, r14, 18
#1:	       add	r3, 8 -> r1
	;;
#0:	       stmb.a	r13, r1, 1      ; vfprintf.c:1265
	;;
#0:	       stmb.a	r2, r1, 0       ; vfprintf.c:1264
	;;
.BB12_161:                              ; %bb126
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1272
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1272
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1272
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1272
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1278
	;;
#0:	if  c1 br	.BB12_163       ; vfprintf.c:1278
#1:	       stm.s	r2, r14, 29     ; vfprintf.c:1271
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1271
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1271
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1271
	;;
; BB#162:                               ; %bb127
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	6 -> r0
#1:	       ldi	0 -> r1
	;;
#0:	       br	.BB12_168
#1:	       cmpult	r0, r10 -> c1
#2:	       stm.s	r1, r14, 28
	;;
#0:	if  c1 or	r0, 0 -> r10
#1:	       ldga	._.str531 -> r0
	;;
#0:	       stm.s	r0, r14, 23
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
#1:	       or	r1, 0 -> r0
	;;
.BB12_163:                              ; %bb131
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmplt	r10, 0 -> c1    ; vfprintf.c:1347
	;;
#0:	if  c1 br	.BB12_169       ; vfprintf.c:1347
	;;                              ; vfprintf.c:1347
	       nop	2               ; vfprintf.c:1347
	;;
; BB#164:                               ; %bb132
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r10, 0 -> r2    ; vfprintf.c:1353
	;;
#0:	       stm.s	r0, r14, 28     ; vfprintf.c:1353
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1353
	;;
#0:	       callg	_memchr         ; vfprintf.c:1353
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1353
	;;                              ; vfprintf.c:1353
	       nop	3               ; vfprintf.c:1353
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1355
	;;
#0:	if !c1 ldm.s	r14, 92         ; vfprintf.c:1356
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1356
	;;
#0:	if !c1 sub	r0, r1 -> r0    ; vfprintf.c:1356
	;;
#0:	if !c1 stm.s	r0, r14, 21     ; vfprintf.c:1357
#1:	if !c1 cmplt	r10, r0 -> c1   ; vfprintf.c:1357
	;;
#0:	if  c1 br	.BB12_167
	;;
	       nop	2
	;;
; BB#165:                               ; %bb133.bb180_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
	;;
.BB12_166:                              ; %bb133.bb180_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       or	r0, 0 -> r10
#1:	       br	.BB12_204
	;;
#0:	       stm.s	r10, r14, 24
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	0
	;;
.BB12_167:                              ; %bb134
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
.BB12_168:                              ; %bb134
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 19
#1:	       br	.BB12_204
	;;
#0:	       stm.s	r10, r14, 21
	;;
	       nop	1
	;;
.BB12_169:                              ; %bb136
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 28    ; vfprintf.c:1362
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1362
	;;
#0:	       callg	_strlen         ; vfprintf.c:1362
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1362
	;;                              ; vfprintf.c:1362
	       nop	3               ; vfprintf.c:1362
	;;
#0:	       br	.BB12_197
#1:	       or	r10, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
	       nop	1
	;;
.BB12_170:                              ; %bb137
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1366
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1366
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1366
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB12_171:                              ; %bb138
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1369
	;;
#0:	if !c1 br	.BB12_173       ; vfprintf.c:1369
	;;                              ; vfprintf.c:1369
	       nop	2               ; vfprintf.c:1369
	;;
; BB#172:                               ; %bb139
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1369
	;;
#0:	       br	.BB12_174
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1369
	;;
.BB12_173:                              ; %bb140
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
.BB12_174:                              ; %bb144
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116
#1:	       br	.BB12_182
#2:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29
	;;
.BB12_175:                              ; %hex.loopexit
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldga	._.str632 -> r0
	;;
.BB12_176:                              ; %hex.loopexit
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 18
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1377
	;;
#0:	if !c1 br	.BB12_178       ; vfprintf.c:1377
	;;                              ; vfprintf.c:1377
	       nop	2               ; vfprintf.c:1377
	;;
; BB#177:                               ; %bb147
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1377
	;;
#0:	       br	.BB12_179
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1377
	;;
.BB12_178:                              ; %bb148
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
.BB12_179:                              ; %bb152
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1380
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1380
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1380
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1380
	;;
#0:	if  c1 ldm.s	r14, 96
	;;
#0:	if  c1 ldx	$mem, 0 -> r0
	;;
#0:	if  c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_181
	;;
	       nop	2
	;;
; BB#180:                               ; %bb152.nosign_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	2 -> r0
#1:	       br	.BB12_182
	;;
	       nop	2
	;;
.BB12_181:                              ; %bb155
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1383
#1:	       ldiu	128 -> r3
#2:	       ldi	48 -> r1
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1383
#1:	       add	r3, 8 -> r2
	;;
#0:	       or	r0, 2 -> r0     ; vfprintf.c:1383
	;;
#0:	       stm.s	r0, r14, 31
#1:	       ldi	2 -> r0
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1381
	;;
#0:	       stmb.a	r13, r2, 1      ; vfprintf.c:1382
	;;
.BB12_182:                              ; %nosign
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r1
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:1390
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1390
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1390
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1390
	;;
.BB12_183:                              ; %number
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1397
#1:	       ldi	-1 -> r1
#2:	       ldi	-129 -> r2
	;;
#0:	       cmplt	r1, r10 -> c1
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1397
#1:	       ldm.s	r14, 96
	;;
#0:	       and	r1, r2 -> r2    ; vfprintf.c:1397
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	if  c1 or	r2, 0 -> r1
	;;
#0:	       or	r3, r10 -> r3
#1:	       stm.s	r1, r14, 31
	;;
#0:	       cmpeq	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB12_198       ; vfprintf.c:1405
	;;                              ; vfprintf.c:1405
	       nop	2               ; vfprintf.c:1405
	;;
; BB#184:                               ; %bb160
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:1411
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1411
	;;
#0:	if  c1 br	.BB12_189       ; vfprintf.c:1411
	;;                              ; vfprintf.c:1411
	       nop	2               ; vfprintf.c:1411
	;;
; BB#185:                               ; %bb160
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpeq	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB12_193
	;;
	       nop	2
	;;
; BB#186:                               ; %bb160
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       cmpne	r0, 2 -> c1
	;;
#0:	if  c1 br	.BB12_196
	;;
	       nop	2
	;;
; BB#187:                               ; %bb160.bb169_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB12_188:                              ; %bb169
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 96         ; vfprintf.c:1459
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1459
#1:	       ldm.s	r14, 72         ; vfprintf.c:1459
	;;
#0:	       and	r0, 15 -> r1    ; vfprintf.c:1459
#1:	       sr	r0, 4 -> r0     ; vfprintf.c:1460
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1459
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1461
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1459
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1459
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1459
#1:	       stm.s	r0, r14, 24
	;;
#0:	       ldm.s	r14, 92
	;;
#0:	if  c1 br	.BB12_188
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.s	r2, r14, 23     ; vfprintf.c:1459
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1459
	;;
#0:	       br	.BB12_203
	;;
	       nop	2
	;;
.BB12_189:                              ; %bb160.bb161_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_190:                              ; %bb161
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 96         ; vfprintf.c:1414
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1414
	;;
#0:	       and	r1, 7 -> r2     ; vfprintf.c:1414
#1:	       sr	r1, 3 -> r1     ; vfprintf.c:1415
	;;
#0:	       stm.s	r1, r14, 24
#1:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1416
	;;
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB12_190       ; vfprintf.c:1416
#1:	       sub	r3, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 23
#1:	       ldi	48 -> r3
	;;
#0:	       or	r2, r3 -> r2
#1:	       sub	r0, 1 -> r3
	;;
#0:	       stmb.a	r2, r0, 0       ; vfprintf.c:1414
#1:	       or	r3, 0 -> r0
	;;
; BB#191:                               ; %bb162
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1418
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1418
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1418
	;;
#0:	if  c1 mask	r2, 0 -> r0
#1:	if  c1 ldi	48 -> r1
	;;
#0:	if  c1 cmpne	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB12_203
	;;
	       nop	2
	;;
; BB#192:                               ; %bb165
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stmb.a	r1, r3, 0       ; vfprintf.c:1419
#1:	       br	.BB12_202
#2:	       or	r3, 0 -> r0
	;;
	       nop	2
	;;
.BB12_193:                              ; %bb166
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 10 -> c1
	;;
#0:	if  c1 br	.BB12_389       ; vfprintf.c:1424
	;;                              ; vfprintf.c:1424
	       nop	2               ; vfprintf.c:1424
	;;
; BB#194:                               ; %bb166.bb168_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB12_195:                              ; %bb168
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 96         ; vfprintf.c:1453
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___udivsi3      ; vfprintf.c:1453
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1453
	;;                              ; vfprintf.c:1453
	       nop	3               ; vfprintf.c:1453
	;;
#1:	       ldm.s	r14, 96         ; vfprintf.c:1432
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:1453
#2:	       ldi	10 -> r1
	;;
#0:	       callg	___umodsi3      ; vfprintf.c:1432
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1432
	;;                              ; vfprintf.c:1432
	       nop	3               ; vfprintf.c:1432
	;;
#1:	       ldm.s	r14, 92
#0:	       or	r0, r0.24 -> r0
#2:	       ldi	9 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 23
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1432
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#1:	       cmpult	r2, r0 -> c1
#0:	       or	r0.23, 0 -> r0
	;;
#0:	if  c1 br	.BB12_195
#1:	       stm.s	r0, r14, 24     ; vfprintf.c:1454
	;;
	       nop	2
	;;
#0:	       br	.BB12_203
	;;
	       nop	2
	;;
.BB12_196:                              ; %bb170
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldga	._.str733 -> r0 ; vfprintf.c:1466
#1:	       callg	_strlen         ; vfprintf.c:1466
	;;
#0:	       stm.s	r0, r14, 23
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1466
#1:	       ldga	._.str733 -> r0 ; vfprintf.c:1466
	;;                              ; vfprintf.c:1466
	       nop	1               ; vfprintf.c:1466
	;;
.BB12_197:                              ; %bb170
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r10, r14, 19
#1:	       br	.BB12_204
	;;
#0:	       stm.s	r0, r14, 21
	;;
	       nop	1
	;;
.BB12_198:                              ; %bb171
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:1479
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 or	r1, 0 -> r0     ; vfprintf.c:1479
	;;
#0:	if  c1 btest	r0, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 br	.BB12_200
	;;
	       nop	2
	;;
; BB#199:                               ; %bb171.bb175_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 68
#1:	       br	.BB12_202
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_200:                              ; %bb174
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	48 -> r0
	;;
.BB12_201:                              ; %bb174
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 60         ; vfprintf.c:1480
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1480
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1480
#1:	       or	r1, 0 -> r0
	;;
.BB12_202:                              ; %bb174
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 23
	;;
.BB12_203:                              ; %bb175
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1482
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1482
#1:	       ldm.s	r14, 68         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1482
	;;
#0:	       sub	r0, r1 -> r0    ; vfprintf.c:1482
	;;
#0:	       stm.s	r0, r14, 21
	;;
#0:	       stm.s	r10, r14, 19
	;;
.BB12_204:                              ; %bb180
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112
#1:	       ldi	132 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 76         ; vfprintf.c:1511
	;;
#0:	       mask	r0, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1511
#1:	       ldm.s	r14, 84         ; vfprintf.c:1511
#2:	       cmpne	r0, 0 -> c1
	;;
#0:	       ldx	$c1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1511
#1:	       ldm.s	r14, 124
	;;
#0:	       cmple	r1, r0 -> c2    ; vfprintf.c:1511
	;;
#0:	if  c2 or	r0, 0 -> r1     ; vfprintf.c:1511
	;;
#0:	       add	r2, r1 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r3 -> r3    ; vfprintf.c:1518
#1:	       btest	r1, 1 -> c1
#2:	       add	r0, 2 -> r2     ; vfprintf.c:1515
#3:	       and	r1, 2 -> r1     ; vfprintf.c:1514
	;;
#0:	if !c1 or	r0, 0 -> r2
#1:	       cmpeq	r3, 0 -> c1     ; vfprintf.c:1518
#2:	       stm.s	r3, r14, 11     ; vfprintf.c:1514
	;;
#0:	if !c1 br	.BB12_217
#1:	       stm.s	r1, r14, 12
	;;
#0:	       stm.s	r2, r14, 28     ; vfprintf.c:1518
	;;
	       nop	1
	;;
; BB#205:                               ; %bb186
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       or	r2, 0 -> r0     ; vfprintf.c:1519
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1519
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1519
	;;
#0:	if !c1 br	.BB12_211
	;;
	       nop	2
	;;
#0:	       br	.BB12_217
	;;
	       nop	2
	;;
.BB12_206:                              ; %bb187
                                        ;   in Loop: Header=BB12_211 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
#1:	       ldm.f	r0, 4           ; vfprintf.c:1519
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1519
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1519
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB12_208       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#207:                               ; %bb187.bb191_crit_edge
                                        ;   in Loop: Header=BB12_211 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
#1:	       br	.BB12_210
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB12_208:                              ; %bb188
                                        ;   in Loop: Header=BB12_211 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1519
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1519
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if !c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#209:                               ; %bb188.bb191_crit_edge
                                        ;   in Loop: Header=BB12_211 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_210:                              ; %bb188.bb191_crit_edge
                                        ;   in Loop: Header=BB12_211 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_211:                              ; %bb192
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1519
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1519
#1:	       ldga	_blanks.3634 -> r0 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB12_206       ; vfprintf.c:1519
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	1               ; vfprintf.c:1519
	;;
; BB#212:                               ; %bb193
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
#1:	       ldm.f	r0, 4           ; vfprintf.c:1519
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1519
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB12_214       ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#213:                               ; %bb193.bb197_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
#1:	       br	.BB12_216
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB12_214:                              ; %bb194
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1519
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1519
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#215:                               ; %bb194.bb197_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_216:                              ; %bb194.bb197_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_217:                              ; %bb197
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 272        ; vfprintf.c:1522
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:1522
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1522
	;;
#3:	       stm.a	r3.31, r0, 0    ; vfprintf.c:1522
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1522
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1522
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:1522
	;;
#0:	       ldx	$membu, r0 -> r0 ; vfprintf.c:1522
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1522
	;;
#0:	if !c1 br	.BB12_223
	;;
	       nop	2
	;;
; BB#218:                               ; %bb198
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
#1:	       ldm.s	r14, 120        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1523
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1523
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
#1:	       ldm.f	r0, 4           ; vfprintf.c:1523
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1523
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1523
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1523
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1523
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB12_220       ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	2               ; vfprintf.c:1523
	;;
; BB#219:                               ; %bb198.bb202_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1523
#1:	       br	.BB12_222
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1523
	;;
	       nop	0
	;;
.BB12_220:                              ; %bb199
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1523
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1523
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	3               ; vfprintf.c:1523
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#221:                               ; %bb199.bb202_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_222:                              ; %bb199.bb202_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_223:                              ; %bb202
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 48         ; vfprintf.c:1524
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1524
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1524
	;;
#0:	if !c1 br	.BB12_229
	;;
	       nop	2
	;;
; BB#224:                               ; %bb203
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	128 -> r3
#1:	       ldm.s	r14, 120        ; vfprintf.c:1525
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       add	r3, 8 -> r0
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1525
	;;
#0:	       stm.a	2, r1, 1        ; vfprintf.c:1525
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
#1:	       ldm.f	r0, 4           ; vfprintf.c:1525
	;;
#0:	       add	r1, 2 -> r1     ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1525
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1525
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1525
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1525
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB12_226       ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	2               ; vfprintf.c:1525
	;;
; BB#225:                               ; %bb203.bb208_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1525
#1:	       br	.BB12_228
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1525
	;;
	       nop	0
	;;
.BB12_226:                              ; %bb205
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1525
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1525
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	3               ; vfprintf.c:1525
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#227:                               ; %bb205.bb208_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_228:                              ; %bb205.bb208_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_229:                              ; %bb208
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 44         ; vfprintf.c:1528
#1:	       ldi	128 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1528
	;;
#0:	       cmpeq	r1, r0 -> c1    ; vfprintf.c:1528
	;;
#0:	if !c1 br	.BB12_242
	;;
	       nop	2
	;;
; BB#230:                               ; %bb209
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1529
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1529
	;;
#0:	if !c1 br	.BB12_236
	;;
	       nop	2
	;;
#0:	       br	.BB12_242
	;;
	       nop	2
	;;
.BB12_231:                              ; %bb210
                                        ;   in Loop: Header=BB12_236 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
#1:	       ldm.f	r0, 4           ; vfprintf.c:1529
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1529
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_233       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#232:                               ; %bb210.bb214_crit_edge
                                        ;   in Loop: Header=BB12_236 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
#1:	       br	.BB12_235
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB12_233:                              ; %bb211
                                        ;   in Loop: Header=BB12_236 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1529
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1529
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#234:                               ; %bb211.bb214_crit_edge
                                        ;   in Loop: Header=BB12_236 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_235:                              ; %bb211.bb214_crit_edge
                                        ;   in Loop: Header=BB12_236 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_236:                              ; %bb215
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1529
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1529
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_231       ; vfprintf.c:1529
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	1               ; vfprintf.c:1529
	;;
; BB#237:                               ; %bb216
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
#1:	       ldm.f	r0, 4           ; vfprintf.c:1529
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1529
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_239       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#238:                               ; %bb216.bb220_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
#1:	       br	.BB12_241
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB12_239:                              ; %bb217
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1529
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1529
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#240:                               ; %bb217.bb220_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_241:                              ; %bb217.bb220_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_242:                              ; %bb220
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.s	r14, 84         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       sub	r1, r0 -> r10   ; vfprintf.c:1532
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB12_248
	;;
	       nop	2
	;;
#0:	       br	.BB12_254
	;;
	       nop	2
	;;
.BB12_243:                              ; %bb221
                                        ;   in Loop: Header=BB12_248 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.f	r0, 4           ; vfprintf.c:1532
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1532
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1532
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB12_245       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#244:                               ; %bb221.bb225_crit_edge
                                        ;   in Loop: Header=BB12_248 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
#1:	       br	.BB12_247
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB12_245:                              ; %bb222
                                        ;   in Loop: Header=BB12_248 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1532
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1532
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#246:                               ; %bb222.bb225_crit_edge
                                        ;   in Loop: Header=BB12_248 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_247:                              ; %bb222.bb225_crit_edge
                                        ;   in Loop: Header=BB12_248 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_248:                              ; %bb226
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1532
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1532
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_243       ; vfprintf.c:1532
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	1               ; vfprintf.c:1532
	;;
; BB#249:                               ; %bb227
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.f	r0, 4           ; vfprintf.c:1532
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1532
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB12_251       ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#250:                               ; %bb227.bb231_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
#1:	       br	.BB12_253
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB12_251:                              ; %bb228
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1532
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1532
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#252:                               ; %bb228.bb231_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_253:                              ; %bb228.bb231_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_254:                              ; %bb231
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1536
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1536
	;;
#0:	       btest	r0, 8 -> c1     ; vfprintf.c:1536
	;;
#0:	if  c1 br	.BB12_259       ; vfprintf.c:1536
	;;                              ; vfprintf.c:1536
	       nop	2               ; vfprintf.c:1536
	;;
; BB#255:                               ; %bb232
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
#1:	       ldm.s	r14, 120        ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r13, 0      ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r13, 1      ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       ldm.f	r13, 8          ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537
#1:	       ldm.f	r13, 4          ; vfprintf.c:1537
	;;
#0:	       add	r1, r0 -> r0    ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1537
#1:	       stm.a	r0, r13, 2      ; vfprintf.c:1537
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r13, 1      ; vfprintf.c:1537
#1:	       ldi	7 -> r13
	;;
#0:	       cmplt	r13, r0 -> c1   ; vfprintf.c:1537
	;;
#0:	if  c1 br	.BB12_257       ; vfprintf.c:1537
	;;                              ; vfprintf.c:1537
	       nop	2               ; vfprintf.c:1537
	;;
; BB#256:                               ; %bb232.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1537
#1:	       br	.BB12_371
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       add	r13, 8 -> r13   ; vfprintf.c:1537
	;;
#0:	       stm.s	r13, r14, 30
	;;
.BB12_257:                              ; %bb233
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1537
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1537
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
	;;                              ; vfprintf.c:1537
	       nop	3               ; vfprintf.c:1537
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1537
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#258:                               ; %bb233.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r0
#1:	       br	.BB12_371
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r13
	;;
#0:	       stm.s	r13, r14, 30
	;;
.BB12_259:                              ; %bb236
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmplt	r13, r0 -> c1   ; vfprintf.c:1539
	;;
#0:	if  c1 br	.BB12_341       ; vfprintf.c:1539
	;;                              ; vfprintf.c:1539
	       nop	2               ; vfprintf.c:1539
	;;
; BB#260:                               ; %bb237
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1540
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1540
	;;
#0:	       btest	r0, 9 -> c1     ; vfprintf.c:1540
	;;
#0:	if  c1 br	.BB12_280       ; vfprintf.c:1540
	;;                              ; vfprintf.c:1540
	       nop	2               ; vfprintf.c:1540
	;;
; BB#261:                               ; %bb238
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1542
#1:	       ldga	._.str834 -> r0 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1542
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1542
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
#1:	       ldm.f	r0, 4           ; vfprintf.c:1542
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1542
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1542
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1542
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1542
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB12_263       ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	2               ; vfprintf.c:1542
	;;
; BB#262:                               ; %bb238.bb242_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1542
#1:	       br	.BB12_265
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1542
	;;
	       nop	0
	;;
.BB12_263:                              ; %bb239
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1542
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1542
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	3               ; vfprintf.c:1542
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#264:                               ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_265:                              ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 268        ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1543
#1:	       ldm.s	r14, 80         ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1543
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1543
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1543
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1543
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1543
	;;
#0:	if !c1 br	.BB12_371
	;;
	       nop	2
	;;
; BB#266:                               ; %bb245
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1544
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 64         ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1544
#1:	       ldm.f	r1, 4           ; vfprintf.c:1544
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1544
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1544
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1544
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB12_268       ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	2               ; vfprintf.c:1544
	;;
; BB#267:                               ; %bb245.bb249_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1544
#1:	       br	.BB12_270
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1544
	;;
	       nop	0
	;;
.BB12_268:                              ; %bb246
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1544
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1544
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	3               ; vfprintf.c:1544
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#269:                               ; %bb246.bb249_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_270:                              ; %bb246.bb249_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB12_276
	;;
	       nop	2
	;;
#0:	       br	.BB12_371
	;;
	       nop	2
	;;
.BB12_271:                              ; %bb250
                                        ;   in Loop: Header=BB12_276 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
#1:	       ldm.f	r0, 4           ; vfprintf.c:1545
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1545
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB12_273       ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	2               ; vfprintf.c:1545
	;;
; BB#272:                               ; %bb250.bb254_crit_edge
                                        ;   in Loop: Header=BB12_276 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
#1:	       br	.BB12_275
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1545
	;;
	       nop	0
	;;
.BB12_273:                              ; %bb251
                                        ;   in Loop: Header=BB12_276 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1545
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1545
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	3               ; vfprintf.c:1545
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#274:                               ; %bb251.bb254_crit_edge
                                        ;   in Loop: Header=BB12_276 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_275:                              ; %bb251.bb254_crit_edge
                                        ;   in Loop: Header=BB12_276 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_276:                              ; %bb255
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1545
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_271       ; vfprintf.c:1545
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	1               ; vfprintf.c:1545
	;;
.BB12_277:                              ; %bb256
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
#1:	       ldm.f	r0, 4           ; vfprintf.c:1545
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1545
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB12_368
	;;
	       nop	2
	;;
; BB#278:                               ; %bb256.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
.BB12_279:                              ; %bb284.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1552
#1:	       br	.BB12_370
	;;
	       nop	2
	;;
.BB12_280:                              ; %bb260
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1547
#1:	       ldi	0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1547
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1547
	;;
#0:	if  c1 br	.BB12_302       ; vfprintf.c:1547
	;;                              ; vfprintf.c:1547
	       nop	2               ; vfprintf.c:1547
	;;
; BB#281:                               ; %bb261
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1548
#1:	       ldga	._.str834 -> r0 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1548
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1548
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
#1:	       ldm.f	r0, 4           ; vfprintf.c:1548
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1548
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1548
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1548
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1548
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB12_283       ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	2               ; vfprintf.c:1548
	;;
; BB#282:                               ; %bb261.bb265_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1548
#1:	       br	.BB12_285
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1548
	;;
	       nop	0
	;;
.BB12_283:                              ; %bb262
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1548
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1548
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	3               ; vfprintf.c:1548
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#284:                               ; %bb262.bb265_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_285:                              ; %bb262.bb265_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 268        ; vfprintf.c:1549
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1549
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1549
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1549
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 br	.BB12_371
	;;
	       nop	2
	;;
; BB#286:                               ; %bb269
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1550
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 64         ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1550
#1:	       ldm.f	r1, 4           ; vfprintf.c:1550
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1550
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1550
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1550
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB12_288       ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	2               ; vfprintf.c:1550
	;;
; BB#287:                               ; %bb269.bb273_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1550
#1:	       br	.BB12_290
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1550
	;;
	       nop	0
	;;
.BB12_288:                              ; %bb270
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1550
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1550
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	3               ; vfprintf.c:1550
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#289:                               ; %bb270.bb273_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_290:                              ; %bb273
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1551
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       sub	r2, r1 -> r10   ; vfprintf.c:1551
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB12_296
	;;
	       nop	2
	;;
#0:	       br	.BB12_301
	;;
	       nop	2
	;;
.BB12_291:                              ; %bb274
                                        ;   in Loop: Header=BB12_296 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r1, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB12_293       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#292:                               ; %bb274.bb278_crit_edge
                                        ;   in Loop: Header=BB12_296 Depth=2
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1551
#1:	       br	.BB12_295
	;;
	       nop	2
	;;
.BB12_293:                              ; %bb275
                                        ;   in Loop: Header=BB12_296 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1551
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1551
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#294:                               ; %bb275.bb278_crit_edge
                                        ;   in Loop: Header=BB12_296 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_295:                              ; %bb278
                                        ;   in Loop: Header=BB12_296 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB12_296:                              ; %bb279
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1551
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_291       ; vfprintf.c:1551
#1:	       stm.a	r1, r0, 0       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#297:                               ; %bb280
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r1, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB12_299       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#298:                               ; %bb280.bb284_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1551
#1:	       br	.BB12_301
	;;
	       nop	2
	;;
.BB12_299:                              ; %bb281
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1551
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1551
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#300:                               ; %bb281.bb284_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_301:                              ; %bb284
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1552
#1:	       br	.BB12_367
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1552
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1552
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1552
	;;
.BB12_302:                              ; %bb288
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.s	r14, 80         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
#1:	       or	r0, 0 -> r10
#2:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r1, 0 -> r10
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB12_308
	;;
	       nop	2
	;;
; BB#303:                               ; %bb292
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1556
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#0:	       add	r1, r10 -> r1   ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_305       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#304:                               ; %bb292.bb296_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB12_307
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB12_305:                              ; %bb293
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#306:                               ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_307:                              ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_308:                              ; %bb296
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
#1:	       cmplt	r10, 0 -> c1
#2:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       sub	r1, r10 -> r1   ; vfprintf.c:1556
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB12_321
	;;
	       nop	2
	;;
; BB#309:                               ; %bb304.preheader
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 96
	;;
#0:	       xor	r0, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       xor	r1, -1 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       xor	r2, -1 -> r0
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB12_315
#1:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       sub	r1, r2 -> r10
	;;
#0:	       or	r10, 0 -> r13
#2:	       or	r10, 0 -> r2.23
	;;
.BB12_310:                              ; %bb299
                                        ;   in Loop: Header=BB12_315 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_312       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#311:                               ; %bb299.bb303_crit_edge
                                        ;   in Loop: Header=BB12_315 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB12_314
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB12_312:                              ; %bb300
                                        ;   in Loop: Header=BB12_315 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#313:                               ; %bb300.bb303_crit_edge
                                        ;   in Loop: Header=BB12_315 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_314:                              ; %bb300.bb303_crit_edge
                                        ;   in Loop: Header=BB12_315 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
#2:	       sub	r13, 16 -> r13
	;;
#2:	       sub	r2.23, 16 -> r2.23
	;;
.BB12_315:                              ; %bb304
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1556
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_310       ; vfprintf.c:1556
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	1               ; vfprintf.c:1556
	;;
; BB#316:                               ; %bb305
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       stm.a	r13, r0, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#2:	       add	r1, r2.23 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_318       ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#317:                               ; %bb305.bb309_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB12_320
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB12_318:                              ; %bb306
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#319:                               ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_320:                              ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_321:                              ; %bb309
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1577
#1:	       ldm.s	r14, 96         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1558
#1:	       ldm.s	r14, 92         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1558
	;;
#0:	       add	r1, r2 -> r1    ; vfprintf.c:1558
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:1577
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1577
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1577
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1577
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1577
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1577
	;;
#0:	if !c1 br	.BB12_327
	;;
	       nop	2
	;;
; BB#322:                               ; %bb312
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1578
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 64         ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1578
#1:	       ldm.f	r1, 4           ; vfprintf.c:1578
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1578
#1:	       ldi	7 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1578
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1578
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1578
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB12_324       ; vfprintf.c:1578
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	2               ; vfprintf.c:1578
	;;
; BB#323:                               ; %bb312.bb316_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1578
#1:	       br	.BB12_326
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1578
	;;
	       nop	0
	;;
.BB12_324:                              ; %bb313
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1578
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1578
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	3               ; vfprintf.c:1578
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#325:                               ; %bb313.bb316_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_326:                              ; %bb313.bb316_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_327:                              ; %bb316
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1579
#1:	       ldm.s	r14, 92         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.s	r14, 80         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r1, r0 -> r1    ; vfprintf.c:1579
#1:	       sub	r0, r10 -> r0   ; vfprintf.c:1579
	;;
#0:	       stm.s	r1, r14, 24     ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
	;;
#0:	       sub	r1, r2 -> r13   ; vfprintf.c:1579
#1:	       ldi	0 -> r2
	;;
#0:	       cmplt	r0, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if  c1 or	r0, 0 -> r13
	;;
#0:	       cmplt	r2, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB12_333
	;;
	       nop	2
	;;
; BB#328:                               ; %bb320
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.s	r14, 120        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1579
	;;
#0:	       stm.a	r13, r0, 1      ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.f	r0, 4           ; vfprintf.c:1579
	;;
#0:	       add	r1, r13 -> r1   ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1579
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB12_330       ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#329:                               ; %bb320.bb324_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1579
#1:	       br	.BB12_332
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB12_330:                              ; %bb321
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r3
#1:	       ldm.s	r14, 100        ; vfprintf.c:1579
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1579
#1:	       add	r3, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#331:                               ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_332:                              ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_333:                              ; %bb324
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1579
#1:	       ldi	0 -> r2
#2:	       cmplt	r13, 0 -> c1
	;;
#0:	       sub	r2, r13 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
#1:	       ldm.s	r14, 80         ; vfprintf.c:1579
#2:	if  c1 or	r2, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1579
	;;
#0:	       sub	r3, r0 -> r3    ; vfprintf.c:1579
	;;
#0:	       add	r3, r1 -> r1
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB12_371
	;;
	       nop	2
	;;
; BB#334:                               ; %bb332.preheader
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 108
#1:	       sub	r10, 1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 80
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 96
	;;
#0:	       sub	r1, r3 -> r1
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       sub	r2, r4 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1
	;;
#0:	       br	.BB12_340
#1:	if  c1 or	r1, 0 -> r2
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1
#1:	       add	r3, r2 -> r3
	;;
#0:	       sub	r3, r0 -> r0
#1:	if  c1 or	r2, 0 -> r1
	;;
#0:	       sub	r0, r1 -> r10
	;;
.BB12_335:                              ; %bb327
                                        ;   in Loop: Header=BB12_340 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.f	r0, 4           ; vfprintf.c:1579
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1579
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1579
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB12_337       ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#336:                               ; %bb327.bb331_crit_edge
                                        ;   in Loop: Header=BB12_340 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1579
#1:	       br	.BB12_339
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB12_337:                              ; %bb328
                                        ;   in Loop: Header=BB12_340 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1579
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1579
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#338:                               ; %bb328.bb331_crit_edge
                                        ;   in Loop: Header=BB12_340 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_339:                              ; %bb328.bb331_crit_edge
                                        ;   in Loop: Header=BB12_340 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_340:                              ; %bb332
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1579
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1579
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_335
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1579
	;;
	       nop	1
	;;
#0:	       br	.BB12_277
	;;
	       nop	2
	;;
.BB12_341:                              ; %bb337
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 80         ; vfprintf.c:1583
#1:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1583
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1583
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1583
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1583
	;;
#0:	if !c1 btest	r0, 0 -> c1     ; vfprintf.c:1583
	;;
#0:	if !c1 br	.BB12_362
	;;
	       nop	2
	;;
; BB#342:                               ; %bb340
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
#1:	       ldm.s	r14, 120        ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1584
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1584
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
#1:	       ldm.f	r0, 4           ; vfprintf.c:1584
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1584
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1584
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1584
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1584
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB12_344       ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	2               ; vfprintf.c:1584
	;;
; BB#343:                               ; %bb340.bb344_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1584
#1:	       br	.BB12_346
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1584
	;;
	       nop	0
	;;
.BB12_344:                              ; %bb341
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1584
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1584
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	3               ; vfprintf.c:1584
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#345:                               ; %bb341.bb344_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_346:                              ; %bb344
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldga	._.str65 -> r1  ; vfprintf.c:1544
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 64         ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1586
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1585
#1:	       ldm.s	r14, 104        ; vfprintf.c:1586
	;;
#0:	       add	r2, 1 -> r10    ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1586
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1586
#1:	       ldm.f	r2, 4           ; vfprintf.c:1586
	;;
#0:	       add	r3, r1 -> r1    ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1586
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1586
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1586
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1586
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB12_348       ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	2               ; vfprintf.c:1586
	;;
; BB#347:                               ; %bb344.bb348_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1586
#1:	       br	.BB12_350
	;;
	       nop	2
	;;
.BB12_348:                              ; %bb345
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1586
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1586
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	3               ; vfprintf.c:1586
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#349:                               ; %bb345.bb348_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_350:                              ; %bb348
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1587
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1587
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1587
	;;
#0:	if  c1 br	.BB12_353       ; vfprintf.c:1587
	;;                              ; vfprintf.c:1587
	       nop	2               ; vfprintf.c:1587
	;;
; BB#351:                               ; %bb349
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       stm.a	r10, r0, 0      ; vfprintf.c:1588
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1588
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1588
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1588
#1:	       ldm.f	r2, 4           ; vfprintf.c:1588
	;;
#0:	       add	r1, r3 -> r1    ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1588
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1588
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1588
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1588
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1588
	;;
#0:	if  c1 br	.BB12_364
	;;
	       nop	2
	;;
; BB#352:                               ; %bb349.bb368_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1588
#1:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_353:                              ; %bb353
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 80
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r10
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB12_359
	;;
	       nop	2
	;;
#0:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_354:                              ; %bb354
                                        ;   in Loop: Header=BB12_359 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r1, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB12_356       ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#355:                               ; %bb354.bb358_crit_edge
                                        ;   in Loop: Header=BB12_359 Depth=2
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1591
#1:	       br	.BB12_358
	;;
	       nop	2
	;;
.BB12_356:                              ; %bb355
                                        ;   in Loop: Header=BB12_359 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1591
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1591
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	3               ; vfprintf.c:1591
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#357:                               ; %bb355.bb358_crit_edge
                                        ;   in Loop: Header=BB12_359 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_358:                              ; %bb358
                                        ;   in Loop: Header=BB12_359 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB12_359:                              ; %bb359
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1591
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB12_354       ; vfprintf.c:1591
#1:	       stm.a	r1, r0, 0       ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#360:                               ; %bb360
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r1, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB12_364
	;;
	       nop	2
	;;
; BB#361:                               ; %bb360.bb368_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1591
#1:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_362:                              ; %bb364
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
#1:	       ldm.s	r14, 120        ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1593
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1593
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
#1:	       ldm.f	r0, 4           ; vfprintf.c:1593
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1593
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1593
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1593
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1593
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1593
	;;
#0:	if  c1 br	.BB12_364
	;;
	       nop	2
	;;
; BB#363:                               ; %bb364.bb368_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1593
#1:	       br	.BB12_366
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1593
	;;
	       nop	0
	;;
.BB12_364:                              ; %bb365
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1593
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1593
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;                              ; vfprintf.c:1593
	       nop	3               ; vfprintf.c:1593
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1593
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#365:                               ; %bb365.bb368_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_366:                              ; %bb368
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	256 -> r5
	;;
#0:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 4 -> r1
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1594
	;;
#0:	       ldm.s	r14, 52         ; vfprintf.c:1594
	;;
.BB12_367:                              ; %bb368
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1594
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1594
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1594
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1594
#1:	       ldm.f	r2, 4           ; vfprintf.c:1594
	;;
#0:	       add	r3, r1 -> r1    ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1594
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1594
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1594
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1594
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1594
	;;
#0:	if !c1 br	.BB12_279
	;;
	       nop	2
	;;
.BB12_368:                              ; %bb370
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1594
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1594
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1594
	;;                              ; vfprintf.c:1594
	       nop	3               ; vfprintf.c:1594
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1594
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#369:                               ; %bb370.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_370:                              ; %bb370.bb373_crit_edge
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB12_371:                              ; %bb373
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1601
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1601
	;;
#0:	       btest	r0, 2 -> c1     ; vfprintf.c:1601
	;;
#0:	if !c1 br	.BB12_381
	;;
	       nop	2
	;;
; BB#372:                               ; %bb374
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1602
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1602
	;;
#0:	if !c1 br	.BB12_378
	;;
	       nop	2
	;;
#0:	       br	.BB12_381
	;;
	       nop	2
	;;
.BB12_373:                              ; %bb375
                                        ;   in Loop: Header=BB12_378 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
#1:	       ldm.f	r0, 4           ; vfprintf.c:1602
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1602
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1602
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB12_375       ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	2               ; vfprintf.c:1602
	;;
; BB#374:                               ; %bb375.bb379_crit_edge
                                        ;   in Loop: Header=BB12_378 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1602
#1:	       br	.BB12_377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1602
	;;
	       nop	0
	;;
.BB12_375:                              ; %bb376
                                        ;   in Loop: Header=BB12_378 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1602
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1602
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
; BB#376:                               ; %bb376.bb379_crit_edge
                                        ;   in Loop: Header=BB12_378 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB12_377:                              ; %bb376.bb379_crit_edge
                                        ;   in Loop: Header=BB12_378 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB12_378:                              ; %bb380
                                        ;   Parent Loop BB12_18 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1602
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1602
#1:	       ldga	_blanks.3634 -> r0 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB12_373       ; vfprintf.c:1602
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	1               ; vfprintf.c:1602
	;;
; BB#379:                               ; %bb381
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
#1:	       ldm.f	r0, 4           ; vfprintf.c:1602
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1602
	;;
#0:	       cmplt	r1, 8 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB12_381
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1602
	;;
	       nop	2
	;;
; BB#380:                               ; %bb382
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1602
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1602
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB12_387
	;;
	       nop	2
	;;
.BB12_381:                              ; %bb385
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1605
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605
#1:	       ldm.s	r14, 104        ; vfprintf.c:1607
	;;
#0:	       cmple	r12, r0 -> c1   ; vfprintf.c:1605
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
#1:	if  c1 or	r0, 0 -> r12    ; vfprintf.c:1605
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1607
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
#1:	       ldm.s	r14, 88         ; vfprintf.c:1605
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if  c1 br	.BB12_383
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605
	;;
#0:	       add	r12, r0 -> r0   ; vfprintf.c:1605
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1607
	;;
	       nop	0
	;;
; BB#382:                               ; %bb388
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1607
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1607
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1607
	;;                              ; vfprintf.c:1607
	       nop	3               ; vfprintf.c:1607
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if !c1 br	.BB12_387
	;;
	       nop	2
	;;
.BB12_383:                              ; %bb389
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1607
#1:	       br	.BB12_18
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1607
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1607
	;;
#0:	       stm.s	r11, r14, 31
	;;
.BB12_384:                              ; %done
#0:	       ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if  c1 br	.BB12_386
	;;
	       nop	2
	;;
; BB#385:                               ; %bb392
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1615
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1615
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;                              ; vfprintf.c:1615
	       nop	3               ; vfprintf.c:1615
	;;
#0:	       br	.BB12_387
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if !c1 ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	if !c1 stm.a	0, r0, 1        ; vfprintf.c:1615
	;;
.BB12_386:                              ; %bb393
#0:	       ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1615
	;;
.BB12_387:                              ; %bb396
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stm.a	r2.31, r0, 0
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r0 -> r1
#1:	       ldm.s	r14, 88
#2:	       ldi	-1 -> r0
	;;
#0:	       btest	r1, 6 -> c1
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	if !c1 or	r1, 0 -> r0
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 396         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 400         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 404         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 408         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f12   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 412         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 416         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f10   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 420         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#2:	       ldm.s	r1, 424         ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f11   ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f15   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 428         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f12   ; vfprintf.c:1622
	;;
#0:	       br	.BB12_13
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#2:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f11   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f10   ; vfprintf.c:1622
	;;
.BB12_388:                              ; %bb400
#0:	       ldiu	1024 -> r1      ; vfprintf.c:1622
#1:	       ldi	-1 -> r0
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 396         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 400         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f14   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 404         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 408         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f12   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 412         ; vfprintf.c:1622
#2:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f13   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 416         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f10   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 420         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f15   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 424         ; vfprintf.c:1622
#1:	       stx	r1.31 -> $f11   ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 428         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f14   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f13   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f12   ; vfprintf.c:1622
	;;
#0:	       br	.BB12_16
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f11   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f10   ; vfprintf.c:1622
	;;
.BB12_389:                              ; %bb167
                                        ;   in Loop: Header=BB12_18 Depth=1
#0:	       s2add	r0, 12 -> r0    ; vfprintf.c:1425
#1:	       br	.BB12_201
	;;
	       nop	2
	;;
	.align	4
__vfprintf_r_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI12_0:
	.long	.BB12_37-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_40-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_41-__vfprintf_r_start
	.long	.BB12_44-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_43-__vfprintf_r_start
	.long	.BB12_45-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_54-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_56-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_63-__vfprintf_r_start
	.long	.BB12_72-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_72-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_59-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_155-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_170-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_175-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_62-__vfprintf_r_start
	.long	.BB12_64-__vfprintf_r_start
	.long	.BB12_72-__vfprintf_r_start
	.long	.BB12_72-__vfprintf_r_start
	.long	.BB12_72-__vfprintf_r_start
	.long	.BB12_60-__vfprintf_r_start
	.long	.BB12_64-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_61-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_149-__vfprintf_r_start
	.long	.BB12_156-__vfprintf_r_start
	.long	.BB12_160-__vfprintf_r_start
	.long	.BB12_61-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_161-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_171-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_33-__vfprintf_r_start
	.long	.BB12_36-__vfprintf_r_start

	.text
	.align	4
___ssprint_r:                           ; @__ssprint_r
	.size	___ssprint_r_end-___ssprint_r
___ssprint_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 13         ; vfprintf.c:205
#1:	       ldiu	52 -> r3        ; vfprintf.c:205
	;;
#0:	       sub	r15, r3 -> r15  ; vfprintf.c:205
#2:	       ldx	$rb, 0 -> r2.31 ; vfprintf.c:205
	;;
#3:	       ldx	$ro, 0 -> r3.31 ; vfprintf.c:205
	;;
#0:	       stm.s	r14, r15, 0     ; vfprintf.c:205
#1:	       or	r15, 0 -> r14   ; vfprintf.c:205
	;;
#2:	       stm.s	r2.31, r15, 1   ; vfprintf.c:205
	;;
#3:	       stm.s	r3.31, r15, 2   ; vfprintf.c:205
	;;
#0:	       stm.s	r10, r14, 12    ; vfprintf.c:205
	;;
#0:	       stm.s	r11, r14, 11    ; vfprintf.c:205
	;;
#0:	       stm.s	r12, r14, 10    ; vfprintf.c:205
	;;
#0:	       stm.s	r13, r14, 9     ; vfprintf.c:205
	;;
#0:	       stm.s	r0.23, r14, 8   ; vfprintf.c:205
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:205
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:205
#1:	       stm.s	r1, r14, 5
	;;
#0:	       cmpeq	r2, 0 -> c1     ; vfprintf.c:205
	;;
#0:	if  c1 br	.BB13_2         ; vfprintf.c:205
	;;                              ; vfprintf.c:205
	       nop	2               ; vfprintf.c:205
	;;
; BB#1:                                 ; %bb2.preheader
#0:	       ldm.s	r14, 20         ; vfprintf.c:202
#1:	       or	r0, 0 -> r10
#2:	       ldi	0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:202
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:202
	;;
#0:	       br	.BB13_6
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:202
	;;
#0:	       add	r0, 4 -> r0
	;;
#0:	       stm.s	r0, r14, 4
	;;
#0:	       stm.s	r11, r14, 7
	;;
.BB13_2:                                ; %bb
#0:	       or	r1, 0 -> r10    ; vfprintf.c:206
#1:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r10, 1       ; vfprintf.c:206
	;;
.BB13_3:                                ; %bb
#0:	       ldm.s	r14, 32         ; vfprintf.c:280
#1:	       or	r14, 0 -> r15   ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:280
#1:	       ldm.s	r14, 36         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:280
#1:	       ldm.s	r14, 40         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:280
#1:	       ldm.s	r14, 44         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:280
#1:	       ldm.s	r14, 48         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:280
#1:	       ldm.s	r15, 8          ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:280
#1:	       ldm.s	r15, 4          ; vfprintf.c:280
	;;
#0:	       stx	r0.31 -> $ro    ; vfprintf.c:280
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:280
	;;
#1:	       stx	r1.31 -> $rb    ; vfprintf.c:280
	;;
.BB13_4:                                ; %bb
#0:	       ldm.s	r15, 0          ; vfprintf.c:280
#1:	       s2add	r15, 13 -> r15  ; vfprintf.c:280
	;;
#0:	       ret                      ; vfprintf.c:280
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:280
	;;                              ; vfprintf.c:280
	       nop	3               ; vfprintf.c:280
	;;
.BB13_5:                                ; %bb1
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       ldm.s	r14, 16         ; vfprintf.c:212
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:212
	;;
#0:	       ldm.f	r0, -4          ; vfprintf.c:212
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:212
	;;
#0:	       stm.s	r11, r14, 7     ; vfprintf.c:213
	;;
#0:	       ldm.f	r0, 0           ; vfprintf.c:213
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:213
#1:	       stm.s	r0, r14, 4
	;;
.BB13_6:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r11, 0 -> c1    ; vfprintf.c:211
	;;
#0:	if  c1 br	.BB13_5         ; vfprintf.c:211
	;;                              ; vfprintf.c:211
	       nop	2               ; vfprintf.c:211
	;;
; BB#7:                                 ; %bb3
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       ldm.f	r10, 8          ; vfprintf.c:216
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:216
	;;
#0:	       cmpule	r12, r11 -> c1  ; vfprintf.c:217
	;;
#0:	if !c1 br	.BB13_15
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb4
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       add	r10, 12 -> r0
	;;
#0:	       stm.s	r0, r14, 6
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r0 -> r1
#1:	       ldiu	1152 -> r0
	;;
#0:	       and	r1, r0 -> r0    ; vfprintf.c:217
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:217
	;;
#0:	if  c1 br	.BB13_15
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb5
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       ldm.f	r10, 20         ; vfprintf.c:228
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:228
#1:	       ldm.f	r10, 16         ; vfprintf.c:220
	;;
#0:	       mul	r12, 3 -> $mul0 ; vfprintf.c:228
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:220
#1:	       ldm.f	r10, 0          ; vfprintf.c:220
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:220
	;;
#1:	       sub	r2, r0 -> r12   ; vfprintf.c:220
#0:	       ldx	$mul0, 0 -> r2  ; vfprintf.c:228
	;;
#0:	       sr	r2, 31 -> r3    ; vfprintf.c:228
#1:	       add	r11, r12 -> r4  ; vfprintf.c:229
	;;
#0:	       add	r2, r3 -> r2    ; vfprintf.c:228
#1:	       add	r4, 1 -> r3     ; vfprintf.c:229
	;;
#0:	       sra	r2, 1 -> r13    ; vfprintf.c:228
	;;
#0:	       cmpult	r13, r3 -> c1   ; vfprintf.c:229
	;;
#0:	if  c1 or	r3, 0 -> r13
#1:	       btest	r1, 10 -> c1    ; vfprintf.c:231
	;;
#0:	if !c1 br	.BB13_12        ; vfprintf.c:231
	;;                              ; vfprintf.c:231
	       nop	2               ; vfprintf.c:231
	;;
; BB#10:                                ; %bb8
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       or	r13, 0 -> r0    ; vfprintf.c:234
#1:	       callg	__malloc_r      ; vfprintf.c:234
	;;                              ; vfprintf.c:234
	       nop	3               ; vfprintf.c:234
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:235
	;;
#0:	if  c1 br	.BB13_18
	;;
	       nop	2
	;;
; BB#11:                                ; %bb10
                                        ;   in Loop: Header=BB13_6 Depth=1
#1:	       ldm.f	r10, 16         ; vfprintf.c:240
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:234
#2:	       or	r12, 0 -> r2    ; vfprintf.c:240
	;;
#0:	       callg	_memcpy         ; vfprintf.c:240
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:240
	;;                              ; vfprintf.c:240
	       nop	3               ; vfprintf.c:240
	;;
#0:	       ldm.f	r10, 12         ; vfprintf.c:241
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:241
#2:	       ldiu	895 -> r1
	;;
#0:	       ldim	31 -> r1
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:241
	;;
#1:	       stm.a	r1.31, r0, 0    ; vfprintf.c:241
	;;
#0:	       ldm.s	r14, 24         ; vfprintf.c:241
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:241
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:241
	;;
#0:	       br	.BB13_14
#1:	       ldx	$memhu, r0 -> r0 ; vfprintf.c:241
	;;
#0:	       and	r0, r1 -> r0    ; vfprintf.c:241
#1:	       ldi	128 -> r1
	;;
#0:	       or	r0, r1 -> r0    ; vfprintf.c:241
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:241
	;;
.BB13_12:                               ; %bb11
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       or	r13, 0 -> r1    ; vfprintf.c:245
#1:	       callg	__realloc_r     ; vfprintf.c:245
	;;                              ; vfprintf.c:245
	       nop	3               ; vfprintf.c:245
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:247
	;;
#0:	if  c1 br	.BB13_17        ; vfprintf.c:247
	;;                              ; vfprintf.c:247
	       nop	2               ; vfprintf.c:247
	;;
; BB#13:                                ; %bb11.bb13_crit_edge
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       or	r0, 0 -> r0.23
	;;
.BB13_14:                               ; %bb13
                                        ;   in Loop: Header=BB13_6 Depth=1
#1:	       sub	r13, r12 -> r0  ; vfprintf.c:260
#0:	       add	r0.23, r12 -> r12 ; vfprintf.c:257
	;;
#0:	       stm.a	r0, r10, 2      ; vfprintf.c:260
	;;
#0:	       stm.a	r13, r10, 5     ; vfprintf.c:258
	;;
#0:	       stm.a	r0.23, r10, 4   ; vfprintf.c:256
	;;
#0:	       stm.a	r12, r10, 0     ; vfprintf.c:257
#1:	       or	r11, 0 -> r12
	;;
.BB13_15:                               ; %bb14
                                        ;   in Loop: Header=BB13_6 Depth=1
#0:	       ldm.f	r10, 0          ; vfprintf.c:264
#1:	       cmpult	r11, r12 -> c1  ; vfprintf.c:262
	;;
#0:	if  c1 or	r11, 0 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:264
#1:	       ldm.s	r14, 28         ; vfprintf.c:264
#2:	       or	r12, 0 -> r2    ; vfprintf.c:264
	;;
#0:	       callg	_memmove        ; vfprintf.c:264
#1:	       ldx	$mem, 0 -> r13  ; vfprintf.c:264
	;;
#0:	       or	r13, 0 -> r1    ; vfprintf.c:264
	;;                              ; vfprintf.c:264
	       nop	2               ; vfprintf.c:264
	;;
#0:	       ldm.f	r10, 8          ; vfprintf.c:265
#1:	       add	r13, r11 -> r13 ; vfprintf.c:268
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:265
#1:	       ldm.f	r10, 0          ; vfprintf.c:266
	;;
#0:	       sub	r0, r12 -> r0   ; vfprintf.c:265
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:266
#1:	       stm.a	r0, r10, 2      ; vfprintf.c:265
	;;
#0:	       add	r1, r12 -> r0   ; vfprintf.c:266
	;;
#0:	       stm.s	r13, r14, 7     ; vfprintf.c:266
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:266
	;;
#0:	       ldm.s	r14, 20         ; vfprintf.c:270
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:270
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:270
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:270
	;;
#0:	       cmpne	r0, r11 -> c1   ; vfprintf.c:270
#1:	       sub	r0, r11 -> r2   ; vfprintf.c:270
#2:	       ldi	0 -> r11
	;;
#0:	if  c1 br	.BB13_6
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:270
	;;
	       nop	2
	;;
; BB#16:                                ; %bb17
#0:	       stm.a	0, r1, 2        ; vfprintf.c:272
#1:	       or	r14, 0 -> r15   ; vfprintf.c:280
#2:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:273
	;;
#0:	       ldm.s	r14, 32         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:280
#1:	       ldm.s	r14, 36         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:280
#1:	       ldm.s	r14, 40         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:280
#1:	       ldm.s	r14, 44         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:280
#1:	       ldm.s	r14, 48         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:280
#1:	       ldm.s	r15, 8          ; vfprintf.c:280
	;;
#0:	       br	.BB13_4
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:280
#1:	       ldm.s	r15, 4          ; vfprintf.c:280
	;;
#2:	       stx	r2.31 -> $ro    ; vfprintf.c:280
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:280
	;;
#3:	       stx	r3.31 -> $rb    ; vfprintf.c:280
	;;
.BB13_17:                               ; %bb12
#0:	       ldm.f	r10, 16         ; vfprintf.c:249
#1:	       ldga	_impure_data -> r0 ; vfprintf.c:249
	;;
#0:	       callg	__free_r        ; vfprintf.c:249
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:249
	;;                              ; vfprintf.c:249
	       nop	3               ; vfprintf.c:249
	;;
.BB13_18:                               ; %err
#0:	       ldga	_impure_data -> r0
#1:	       ldi	64 -> r1
	;;
#0:	       stm.a	12, r0, 0
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:277
	;;
#0:	       ldm.f	r10, 12         ; vfprintf.c:277
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:277
	;;
#0:	       stm.a	r0.31, r0, 0    ; vfprintf.c:277
	;;
#0:	       ldm.s	r14, 24         ; vfprintf.c:277
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:277
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:277
	;;
#0:	       ldx	$memhu, r0 -> r0 ; vfprintf.c:277
	;;
#0:	       or	r0, r1 -> r0    ; vfprintf.c:277
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:277
#1:	       ldi	-1 -> r0
	;;
#0:	       br	.BB13_3
#1:	       ldm.s	r14, 20         ; vfprintf.c:278
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:278
	;;
#0:	       stm.a	0, r1, 2        ; vfprintf.c:278
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:279
	;;
	.align	4
___ssprint_r_end:

	.align	4
___fpclassifyd:                         ; @__fpclassifyd
	.size	___fpclassifyd_end-___fpclassifyd
___fpclassifyd_start:
; BB#0:                                 ; %entry
#0:	       stx	r0 -> $f0
#1:	       wb.s	r15, 3
#2:	       ldiu	12 -> r3
	;;
#0:	       fop	fmov	f0 -> f2
#1:	       sub	r15, r3 -> r15
	;;
#0:	       fop	fmov	f2 -> f0
#1:	       add	r15, 4 -> r2
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stx	r1 -> $f1
#1:	       stm.a	r0, r2, 0
	;;
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       ldx	$f3 -> r0
	;;
#0:	       stm.a	r0, r2, 1
	;;
#0:	       ldm.f	r2, 4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r2, 0
#2:	       ldga	0 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	if  c1 br	.BB14_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB14_3
	;;
	       nop	2
	;;
.BB14_2:                                ; %bb1
#0:	       cmpne	r1, 0 -> c1     ; s_fpclassify.c:16
	;;
#0:	if !c1 ret                      ; s_fpclassify.c:30
#1:	if !c1 ldi	2 -> r0
#2:	if !c1 s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
.BB14_3:                                ; %bb3
#0:	       ldiu	0 -> r2
#1:	       ldga	0 -> r3
	;;
#0:	       ldim	1536 -> r2
#1:	       ldih	1023 -> r3
	;;
#0:	       add	r0, r2 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB14_10
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb3
#0:	       ldga	1048576 -> r2
#1:	       ldiu	2047 -> r3
	;;
#0:	       ldih	1023 -> r2
#1:	       ldim	1023 -> r3
	;;
#0:	       add	r0, r2 -> r2
#1:	       ldih	1022 -> r3
	;;
#0:	       cmpult	r3, r2 -> c1
	;;
#0:	if !c1 ret                      ; s_fpclassify.c:30
#1:	if !c1 ldi	4 -> r0
#2:	if !c1 s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
; BB#5:                                 ; %bb6
#0:	       ldiu	0 -> r2
	;;
#0:	       ldim	512 -> r2
	;;
#0:	       cmpult	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB14_11
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb6
#0:	       ldiu	2047 -> r2
	;;
#0:	       ldim	511 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if !c1 ret                      ; s_fpclassify.c:30
#1:	if !c1 ldi	3 -> r0
#2:	if !c1 s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
; BB#7:                                 ; %bb9
#0:	       ldiu	0 -> r2
	;;
#0:	       ldim	1536 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB14_9
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb9
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1023 -> r2
	;;
#0:	       cmpne	r0, r2 -> c1
	;;
#0:	if  c1 ret                      ; s_fpclassify.c:30
#1:	if  c1 ldi	0 -> r0
#2:	if  c1 s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
.BB14_9:                                ; %bb11
#0:	       cmpeq	r1, 0 -> c1     ; s_fpclassify.c:26
#1:	       ret
#2:	       s2add	r15, 3 -> r15
	;;
#0:	       ldx	$c1 -> r0
	;;
	       nop	2
	;;
.BB14_10:                               ; %bb3.bb14_crit_edge
#0:	       ldi	4 -> r0
#1:	       ret                      ; s_fpclassify.c:30
#2:	       s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
.BB14_11:                               ; %bb6.bb14_crit_edge
#0:	       ldi	3 -> r0
#1:	       ret                      ; s_fpclassify.c:30
#2:	       s2add	r15, 3 -> r15   ; s_fpclassify.c:30
	;;                              ; s_fpclassify.c:30
	       nop	3               ; s_fpclassify.c:30
	;;
.BB14_12:                               ; %bb13
	.align	4
___fpclassifyd_end:

	.align	4
__cleanup_r:                            ; @_cleanup_r
	.size	__cleanup_r_end-__cleanup_r
__cleanup_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 4          ; findfp.c:165
#1:	       ldiu	16 -> r1        ; findfp.c:165
	;;
#0:	       sub	r15, r1 -> r15  ; findfp.c:165
#2:	       ldx	$rb, 0 -> r2.31 ; findfp.c:165
	;;
#3:	       ldx	$ro, 0 -> r3.31 ; findfp.c:165
	;;
#0:	       stm.s	r14, r15, 0     ; findfp.c:165
#1:	       or	r15, 0 -> r14   ; findfp.c:165
	;;
#2:	       stm.s	r2.31, r15, 1   ; findfp.c:165
	;;
#3:	       stm.s	r3.31, r15, 2   ; findfp.c:165
	;;
#0:	       callg	__fwalk         ; findfp.c:165
	;;                              ; findfp.c:165
	       nop	3               ; findfp.c:165
	;;
#0:	       or	r14, 0 -> r15   ; findfp.c:167
	;;
#0:	       ldm.s	r15, 8          ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; findfp.c:167
#1:	       ldm.s	r15, 4          ; findfp.c:167
	;;
#0:	       stx	r0.31 -> $ro    ; findfp.c:167
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; findfp.c:167
#0:	       ldm.s	r15, 0          ; findfp.c:167
#2:	       s2add	r15, 4 -> r15   ; findfp.c:167
	;;
#1:	       stx	r1.31 -> $rb    ; findfp.c:167
	;;
#0:	       ret                      ; findfp.c:167
#1:	       ldx	$mem, 0 -> r14  ; findfp.c:167
	;;                              ; findfp.c:167
	       nop	3               ; findfp.c:167
	;;
	.align	4
__cleanup_r_end:

	.align	4
___sinit:                               ; @__sinit
	.size	___sinit_end-___sinit
___sinit_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 7          ; findfp.c:187
#1:	       ldiu	28 -> r2        ; findfp.c:187
	;;
#0:	       sub	r15, r2 -> r15  ; findfp.c:187
#2:	       ldx	$rb, 0 -> r2.31 ; findfp.c:187
	;;
#3:	       ldx	$ro, 0 -> r3.31 ; findfp.c:187
	;;
#0:	       stm.s	r14, r15, 0     ; findfp.c:187
#1:	       or	r15, 0 -> r14   ; findfp.c:187
	;;
#2:	       stm.s	r2.31, r15, 1   ; findfp.c:187
	;;
#3:	       stm.s	r3.31, r15, 2   ; findfp.c:187
	;;
#0:	       stm.s	r10, r14, 6     ; findfp.c:187
	;;
#0:	       stm.s	r11, r14, 5     ; findfp.c:187
	;;
#0:	       stm.s	r12, r14, 4     ; findfp.c:187
	;;
#0:	       ldm.f	r0, 56          ; findfp.c:187
	;;
#0:	       ldx	$mem, 0 -> r1   ; findfp.c:187
	;;
#0:	       cmpeq	r1, 0 -> c1     ; findfp.c:187
	;;
#0:	if  c1 br	.BB16_3         ; findfp.c:187
	;;                              ; findfp.c:187
	       nop	2               ; findfp.c:187
	;;
; BB#1:                                 ; %bb
#0:	       ldm.s	r14, 16         ; findfp.c:227
#1:	       or	r14, 0 -> r15   ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:227
#1:	       ldm.s	r14, 20         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:227
#1:	       ldm.s	r14, 24         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:227
#1:	       ldm.s	r15, 8          ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; findfp.c:227
#1:	       ldm.s	r15, 4          ; findfp.c:227
	;;
#0:	       stx	r0.31 -> $ro    ; findfp.c:227
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; findfp.c:227
	;;
#1:	       stx	r1.31 -> $rb    ; findfp.c:227
	;;
.BB16_2:                                ; %bb
#0:	       ldm.s	r15, 0          ; findfp.c:227
#1:	       s2add	r15, 7 -> r15   ; findfp.c:227
	;;
#0:	       ret                      ; findfp.c:227
#1:	       ldx	$mem, 0 -> r14  ; findfp.c:227
	;;                              ; findfp.c:227
	       nop	3               ; findfp.c:227
	;;
.BB16_3:                                ; %bb1
#0:	       or	r0, 0 -> r10
#1:	       ldi	736 -> r0
#2:	       ldi	740 -> r1
#3:	       ldi	748 -> r2
	;;
#0:	       ldm.f	r10, 4          ; findfp.c:209
#1:	       add	r10, r0 -> r0
#2:	       add	r10, r1 -> r1
#3:	       ldi	744 -> r3
	;;
#1:	       add	r10, r2 -> r2
#2:	       add	r10, r3 -> r3
#0:	       ldga	__cleanup_r -> r0.16 ; findfp.c:194
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:209
#1:	       stm.a	0, r0, 0        ; findfp.c:197
	;;
#0:	       s2add	r11, 23 -> r0
	;;
#0:	       stm.a	3, r1, 0        ; findfp.c:199
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r3, 0       ; findfp.c:200
	;;
#0:	       stm.a	r0.16, r10, 15  ; findfp.c:194
	;;
#0:	       stm.a	1, r10, 14      ; findfp.c:195
	;;
#0:	       stm.a	0, r11, 4
	;;
#0:	       stmh.a	0, r11, 7
	;;
#0:	       stm.a	0, r11, 25
	;;
#0:	       stmh.a	4, r11, 6
	;;
#0:	       stm.a	0, r11, 2
	;;
#0:	       stm.a	0, r11, 0
	;;
#0:	       stm.a	0, r11, 1
	;;
#0:	       stm.a	0, r11, 5
	;;
#0:	       stm.a	0, r11, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r11, 11
	;;
#0:	       stm.a	r1, r11, 10
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r11, 9
	;;
#0:	       stm.a	r11, r11, 7
	;;
#0:	       stm.a	r3, r11, 8
#1:	       ldi	18 -> r11
	;;
#0:	       ldm.f	r10, 8          ; findfp.c:220
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:220
	;;
#0:	       stm.a	0, r12, 4
#1:	       s2add	r12, 23 -> r0
	;;
#0:	       stmh.a	1, r12, 7
	;;
#0:	       stm.a	0, r12, 25
	;;
#0:	       stmh.a	9, r12, 6
	;;
#0:	       stm.a	0, r12, 2
	;;
#0:	       stm.a	0, r12, 0
	;;
#0:	       stm.a	0, r12, 1
	;;
#0:	       stm.a	0, r12, 5
	;;
#0:	       stm.a	0, r12, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r12, 11
	;;
#0:	       stm.a	r1, r12, 10
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r12, 9
	;;
#0:	       stm.a	r12, r12, 7
	;;
#0:	       stm.a	r3, r12, 8
	;;
#0:	       ldm.f	r10, 12         ; findfp.c:225
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:225
	;;
#0:	       stm.a	0, r10, 4
#1:	       s2add	r10, 23 -> r0
	;;
#0:	       stmh.a	2, r10, 7
	;;
#0:	       stm.a	0, r10, 25
	;;
#0:	       stmh.a	r11, r10, 6
	;;
#0:	       stm.a	0, r10, 2
	;;
#0:	       stm.a	0, r10, 0
	;;
#0:	       stm.a	0, r10, 1
	;;
#0:	       stm.a	0, r10, 5
	;;
#0:	       stm.a	0, r10, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r10, 11
#1:	       or	r14, 0 -> r15   ; findfp.c:227
	;;
#0:	       stm.a	r1, r10, 10
	;;
#0:	       stm.a	r2, r10, 9
	;;
#0:	       stm.a	r10, r10, 7
	;;
#0:	       stm.a	r3, r10, 8
	;;
#0:	       ldm.s	r14, 16         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:227
#1:	       ldm.s	r14, 20         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:227
#1:	       ldm.s	r14, 24         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:227
#1:	       ldm.s	r15, 8          ; findfp.c:227
	;;
#0:	       br	.BB16_2
#2:	       ldx	$mem, 0 -> r2.31 ; findfp.c:227
#1:	       ldm.s	r15, 4          ; findfp.c:227
	;;
#2:	       stx	r2.31 -> $ro    ; findfp.c:227
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; findfp.c:227
	;;
#3:	       stx	r3.31 -> $rb    ; findfp.c:227
	;;
	.align	4
___sinit_end:

	.align	4
___sprint_r:                            ; @__sprint_r
	.size	___sprint_r_end-___sprint_r
___sprint_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 11
#3:	       ldiu	44 -> r2
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 10
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 9
	;;
#0:	       stm.s	r12, r14, 8
	;;
#0:	       stm.s	r13, r14, 7
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:300
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:300
#1:	       stm.s	r1, r14, 4
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:300
	;;
#0:	if  c1 br	.BB17_3         ; vfprintf.c:300
	;;                              ; vfprintf.c:300
	       nop	2               ; vfprintf.c:300
	;;
; BB#1:                                 ; %bb
#0:	       stm.a	0, r1, 1        ; vfprintf.c:301
#1:	       or	r14, 0 -> r15   ; vfprintf.c:326
#2:	       ldi	0 -> r0
	;;
#0:	       ldm.s	r14, 28         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:326
#1:	       ldm.s	r14, 32         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:326
#1:	       ldm.s	r14, 36         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:326
#1:	       ldm.s	r14, 40         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:326
#1:	       ldm.s	r15, 8          ; vfprintf.c:326
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:326
#0:	       ldm.s	r15, 4          ; vfprintf.c:326
	;;
#2:	       stx	r2.31 -> $ro    ; vfprintf.c:326
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:326
	;;
#3:	       stx	r3.31 -> $rb    ; vfprintf.c:326
	;;
.BB17_2:                                ; %bb
#0:	       ldm.s	r15, 0          ; vfprintf.c:326
#1:	       s2add	r15, 11 -> r15  ; vfprintf.c:326
	;;
#0:	       ret                      ; vfprintf.c:326
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:326
	;;                              ; vfprintf.c:326
	       nop	3               ; vfprintf.c:326
	;;
.BB17_3:                                ; %bb1
#0:	       ldi	101 -> r1
#1:	       ldm.f	r10, 101        ; vfprintf.c:304
	;;
#0:	       add	r10, r1 -> r1   ; vfprintf.c:304
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:304
	;;
#0:	       btest	r1, 5 -> c1     ; vfprintf.c:304
	;;
#0:	if !c1 br	.BB17_13        ; vfprintf.c:304
	;;                              ; vfprintf.c:304
	       nop	2               ; vfprintf.c:304
	;;
; BB#4:                                 ; %bb2
#0:	       ldm.s	r14, 16         ; vfprintf.c:309
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:309
	;;
#0:	       br	.BB17_11
#1:	       ldm.f	r1, 0           ; vfprintf.c:309
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:309
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 6      ; vfprintf.c:309
	;;
.BB17_5:                                ; %bb3
                                        ;   in Loop: Header=BB17_11 Depth=1
#0:	       ldm.s	r14, 24         ; vfprintf.c:313
#1:	       ldi	0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:313
	;;
#0:	       ldm.f	r0, 0           ; vfprintf.c:313
	;;
#0:	       br	.BB17_9
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:313
	;;
#0:	       stm.s	r1, r14, 5      ; vfprintf.c:312
#1:	       sr	r1, 2 -> r12
	;;
#0:	       ldm.f	r0, -4          ; vfprintf.c:312
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:312
	;;
.BB17_6:                                ; %bb4
                                        ;   in Loop: Header=BB17_9 Depth=2
#0:	       s2add	r11, r13 -> r0
#1:	       or	r10, 0 -> r1    ; vfprintf.c:315
	;;
#0:	       ldm.f	r0, 0           ; vfprintf.c:315
	;;
#0:	       callg	__fputwc_r      ; vfprintf.c:315
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:315
	;;                              ; vfprintf.c:315
	       nop	3               ; vfprintf.c:315
	;;
#0:	       cmpne	r0, -1 -> c1    ; vfprintf.c:315
	;;
#0:	if  c1 br	.BB17_8         ; vfprintf.c:315
	;;                              ; vfprintf.c:315
	       nop	2               ; vfprintf.c:315
	;;
; BB#7:                                 ; %bb4.out_crit_edge
#0:	       ldi	-1 -> r0
#1:	       br	.BB17_14
	;;
	       nop	2
	;;
.BB17_8:                                ; %bb6
                                        ;   in Loop: Header=BB17_9 Depth=2
#0:	       add	r13, 1 -> r13   ; vfprintf.c:314
	;;
.BB17_9:                                ; %bb7
                                        ;   Parent Loop BB17_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       cmplt	r13, r12 -> c1  ; vfprintf.c:314
	;;
#0:	if  c1 br	.BB17_6         ; vfprintf.c:314
	;;                              ; vfprintf.c:314
	       nop	2               ; vfprintf.c:314
	;;
; BB#10:                                ; %bb8
                                        ;   in Loop: Header=BB17_11 Depth=1
#0:	       ldm.s	r14, 16         ; vfprintf.c:311
#1:	       ldi	-4 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:311
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:311
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:311
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 24
	;;
#0:	       and	r3, r2 -> r2
	;;
#0:	       sub	r0, r2 -> r0    ; vfprintf.c:311
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 8 -> r2
	;;
#0:	       stm.s	r2, r14, 6      ; vfprintf.c:311
	;;
#0:	       stm.a	r0, r1, 2       ; vfprintf.c:311
	;;
.BB17_11:                               ; %bb9
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB17_9 Depth 2
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:310
	;;
#0:	if  c1 br	.BB17_5         ; vfprintf.c:310
	;;                              ; vfprintf.c:310
	       nop	2               ; vfprintf.c:310
	;;
; BB#12:                                ; %bb9.out_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB17_14
	;;
	       nop	2
	;;
.BB17_13:                               ; %bb10
#0:	       ldm.s	r14, 16         ; vfprintf.c:322
#1:	       or	r10, 0 -> r0    ; vfprintf.c:322
	;;
#0:	       callg	___sfvwrite_r   ; vfprintf.c:322
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:322
	;;                              ; vfprintf.c:322
	       nop	3               ; vfprintf.c:322
	;;
.BB17_14:                               ; %out
#0:	       ldm.s	r14, 16         ; vfprintf.c:324
#1:	       or	r14, 0 -> r15   ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:324
	;;
#0:	       stm.a	0, r1, 2        ; vfprintf.c:324
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:325
	;;
#0:	       ldm.s	r14, 28         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:326
#1:	       ldm.s	r14, 32         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:326
#1:	       ldm.s	r14, 36         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:326
#1:	       ldm.s	r14, 40         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:326
#1:	       ldm.s	r15, 8          ; vfprintf.c:326
	;;
#1:	       br	.BB17_2
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:326
#2:	       ldm.s	r15, 4          ; vfprintf.c:326
	;;
#0:	       stx	r0.31 -> $ro    ; vfprintf.c:326
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:326
	;;
#1:	       stx	r1.31 -> $rb    ; vfprintf.c:326
	;;
	.align	4
___sprint_r_end:

	.align	4
___swsetup_r:                           ; @__swsetup_r
	.size	___swsetup_r_end-___swsetup_r
___swsetup_r_start:
; BB#0:                                 ; %bb
#0:	       wb.s	r15, 6
#1:	       ldiu	24 -> r1
	;;
#0:	       sub	r15, r1 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
	;;
#0:	       ldmg.d	_impure_data+56 ; wsetup.c:38
	;;
#0:	       ldx	$mem, 0 -> r0   ; wsetup.c:38
	;;
#0:	       cmpne	r0, 0 -> c1     ; wsetup.c:38
	;;
#0:	if  c1 br	.BB18_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_impure_data -> r0 ; wsetup.c:38
#1:	       callg	___sinit        ; wsetup.c:38
	;;                              ; wsetup.c:38
	       nop	3               ; wsetup.c:38
	;;
.BB18_2:                                ; %bb2
#0:	       ldm.f	r10, 12         ; wsetup.c:44
#1:	       add	r10, 12 -> r11  ; wsetup.c:44
	;;
#0:	       ldx	$memhu, r11 -> r0 ; wsetup.c:44
	;;
#0:	       btest	r0, 3 -> c1     ; wsetup.c:44
	;;
#0:	if  c1 br	.BB18_11
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb3
#0:	       btest	r0, 4 -> c1     ; wsetup.c:46
	;;
#0:	if !c1 br	.BB18_23        ; wsetup.c:46
	;;                              ; wsetup.c:46
	       nop	2               ; wsetup.c:46
	;;
; BB#4:                                 ; %bb5
#0:	       btest	r0, 2 -> c1     ; wsetup.c:48
	;;
#0:	if !c1 br	.BB18_10
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb6
#0:	       ldm.f	r10, 48         ; wsetup.c:51
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:51
	;;
#0:	       cmpne	r1, 0 -> c1     ; wsetup.c:51
	;;
#0:	if !c1 br	.BB18_9
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb7
#0:	       s2add	r10, 16 -> r2
	;;
#0:	       cmpne	r1, r2 -> c1    ; wsetup.c:52
	;;
#0:	if !c1 br	.BB18_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb8
#0:	       ldga	_impure_data -> r0 ; wsetup.c:52
#1:	       callg	__free_r        ; wsetup.c:52
	;;                              ; wsetup.c:52
	       nop	3               ; wsetup.c:52
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r11 -> r0
	;;
.BB18_8:                                ; %bb9
#0:	       stm.a	0, r10, 12      ; wsetup.c:52
	;;
.BB18_9:                                ; %bb10
#0:	       ldm.f	r10, 16         ; wsetup.c:55
#1:	       ldiu	2011 -> r1
	;;
#0:	       ldim	31 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; wsetup.c:55
#1:	       and	r0, r1 -> r0    ; wsetup.c:53
	;;
#0:	       stm.a	r2, r10, 0      ; wsetup.c:55
	;;
#0:	       stmh.a	r0, r10, 6      ; wsetup.c:53
	;;
#0:	       stm.a	0, r10, 1       ; wsetup.c:54
	;;
.BB18_10:                               ; %bb11
#0:	       or	r0, 8 -> r0     ; wsetup.c:57
	;;
#0:	       stmh.a	r0, r10, 6      ; wsetup.c:57
	;;
.BB18_11:                               ; %bb12
#0:	       ldm.f	r10, 16         ; wsetup.c:65
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:65
	;;
#0:	       cmpeq	r1, 0 -> c1     ; wsetup.c:65
	;;
#0:	if !c1 br	.BB18_14
	;;
	       nop	2
	;;
; BB#12:                                ; %bb13
#0:	       btest	r0, 9 -> c1     ; wsetup.c:65
	;;
#0:	if  c1 ldi	128 -> r1
	;;
#0:	if  c1 and	r0, r1 -> r1    ; wsetup.c:65
	;;
#0:	if  c1 cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB18_14
	;;
	       nop	2
	;;
; BB#13:                                ; %bb15
#0:	       or	r10, 0 -> r0    ; wsetup.c:67
#1:	       callg	___smakebuf_r   ; wsetup.c:67
	;;                              ; wsetup.c:67
	       nop	3               ; wsetup.c:67
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r11 -> r0
	;;
.BB18_14:                               ; %bb16
#0:	       btest	r0, 0 -> c1     ; wsetup.c:69
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 br	.BB18_16        ; wsetup.c:69
	;;                              ; wsetup.c:69
	       nop	2               ; wsetup.c:69
	;;
; BB#15:                                ; %bb17
#0:	       ldm.f	r10, 20         ; wsetup.c:77
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB18_20
#1:	       ldx	$mem, 0 -> r0   ; wsetup.c:77
	;;
#0:	       sub	r2, r0 -> r0    ; wsetup.c:77
	;;
#0:	       stm.a	r0, r10, 6      ; wsetup.c:77
	;;
#0:	       stm.a	0, r10, 2       ; wsetup.c:76
	;;
.BB18_16:                               ; %bb18
#0:	       btest	r1, 1 -> c1     ; wsetup.c:80
	;;
#0:	if !c1 br	.BB18_18        ; wsetup.c:80
	;;                              ; wsetup.c:80
	       nop	2               ; wsetup.c:80
	;;
; BB#17:                                ; %bb18.bb21_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB18_19
	;;
	       nop	2
	;;
.BB18_18:                               ; %bb19
#0:	       ldm.f	r10, 20         ; wsetup.c:80
	;;
#0:	       ldx	$mem, 0 -> r0   ; wsetup.c:80
	;;
.BB18_19:                               ; %bb21
#0:	       stm.a	r0, r10, 2      ; wsetup.c:80
	;;
.BB18_20:                               ; %bb22
#0:	       ldm.f	r10, 16         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r0   ; wsetup.c:82
	;;
#0:	       cmpne	r0, 0 -> c1     ; wsetup.c:82
	;;
#0:	if  c1 br	.BB18_22        ; wsetup.c:82
	;;                              ; wsetup.c:82
	       nop	2               ; wsetup.c:82
	;;
; BB#21:                                ; %bb23
#0:	       sr	r1, 7 -> r0
#1:	       br	.BB18_24
#2:	       ldi	-1 -> r1
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r1, 0 -> r0
	;;
	       nop	0
	;;
.BB18_22:                               ; %bb25
#0:	       ldm.s	r14, 16         ; wsetup.c:82
#1:	       or	r14, 0 -> r15   ; wsetup.c:82
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; wsetup.c:82
#1:	       ldm.s	r14, 20         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r10  ; wsetup.c:82
#1:	       ldm.s	r15, 8          ; wsetup.c:82
	;;
#0:	       br	.BB18_25
#2:	       ldx	$mem, 0 -> r2.31 ; wsetup.c:82
#1:	       ldm.s	r15, 4          ; wsetup.c:82
	;;
#2:	       stx	r2.31 -> $ro    ; wsetup.c:82
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; wsetup.c:82
	;;
#3:	       stx	r3.31 -> $rb    ; wsetup.c:82
	;;
.BB18_23:                               ; %bb27
#0:	       ldi	-1 -> r0
	;;
.BB18_24:                               ; %bb27
#0:	       ldm.s	r14, 16         ; wsetup.c:82
#1:	       or	r14, 0 -> r15   ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r11  ; wsetup.c:82
#1:	       ldm.s	r14, 20         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r10  ; wsetup.c:82
#1:	       ldm.s	r15, 8          ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; wsetup.c:82
#1:	       ldm.s	r15, 4          ; wsetup.c:82
	;;
#0:	       stx	r0.31 -> $ro    ; wsetup.c:82
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; wsetup.c:82
	;;
#1:	       stx	r1.31 -> $rb    ; wsetup.c:82
	;;
.BB18_25:                               ; %bb27
#0:	       ldm.s	r15, 0          ; wsetup.c:82
#1:	       s2add	r15, 6 -> r15   ; wsetup.c:82
	;;
#0:	       ret                      ; wsetup.c:82
#1:	       ldx	$mem, 0 -> r14  ; wsetup.c:82
	;;                              ; wsetup.c:82
	       nop	3               ; wsetup.c:82
	;;
	.align	4
___swsetup_r_end:

	.align	4
__dtoa_r:                               ; @_dtoa_r
	.size	__dtoa_r_end-__dtoa_r
__dtoa_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 89
#2:	       ldiu	356 -> r4
#0:	       ldx	$f10 -> r0.31
#3:	       ldiu	252 -> r5
	;;
#0:	       sub	r15, r4 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       ldiu	256 -> r4
#3:	       stx	r0 -> $f0
	;;
#3:	       ldx	$ro, 0 -> r3.31
#1:	       ldx	$f11 -> r1.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       fop	fmov	f0 -> f2
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       add	r14, r4 -> r4
#1:	       add	r14, r5 -> r5
#3:	       fop	fmov	f2 -> f0
	;;
#3:	       stm.s	r3.31, r15, 2
#2:	       ldx	$f12 -> r2.31
	;;
#0:	       stm.s	r10, r4, 24
#1:	       ldx	$f0 -> r0
	;;
#0:	       stm.s	r11, r4, 23
#1:	       stx	r1 -> $f1
	;;
#0:	       stm.s	r12, r4, 22
#1:	       fop	fmov	f1 -> f3
	;;
#0:	       stm.s	r13, r4, 21
	;;
#0:	       stm.s	r0.31, r4, 20
#3:	       ldx	$f13 -> r3.31
	;;
#1:	       stm.s	r1.31, r4, 19
#0:	       ldx	$f14 -> r0.31
	;;
#2:	       stm.s	r2.31, r4, 18
#1:	       ldx	$f15 -> r1.31
	;;
#3:	       stm.s	r3.31, r4, 17
#2:	       ldx	$f10 -> r2.31
	;;
#0:	       stm.s	r0.31, r4, 16
#3:	       ldx	$f12 -> r3.31
	;;
#1:	       stm.s	r1.31, r4, 15
#0:	       ldx	$f14 -> r0.31
	;;
#2:	       stm.s	r2.31, r4, 13
#0:	       ldiu	252 -> r4
	;;
#0:	       add	r14, r4 -> r4
#2:	       ldx	$f11 -> r2.31
	;;
#2:	       stm.s	r2.31, r4, 14
#0:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#3:	       stm.s	r3.31, r4, 11
#0:	       ldiu	252 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#3:	       ldx	$f13 -> r3.31
	;;
#3:	       stm.s	r3.31, r4, 12
#0:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       stm.s	r0.31, r4, 9
#1:	       ldx	$f3 -> r4
	;;
#0:	       ldx	$f15 -> r0.31
	;;
#0:	       stm.s	r0.31, r5, 10
#1:	       ldiu	256 -> r5
	;;
#0:	       stm.s	r3, r14, 11
#1:	       add	r14, r5 -> r5
	;;
#0:	       stm.s	r2, r14, 25
#1:	       add	r5, 20 -> r2
#2:	       ldiu	352 -> r5
	;;
#0:	       stm.a	r0, r2, 0
#1:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 4 -> r0
#1:	       add	r5, 8 -> r1
#2:	       add	r5, 12 -> r3
	;;
#0:	       stm.a	r4, r2, 1
	;;
#0:	       ldmg.d	_impure_data+64 ; dtoa.c:239
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:239
#1:	       ldm.f	r0, 0
	;;
#0:	       cmpeq	r4, 0 -> c1     ; dtoa.c:239
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 9
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 12
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	if  c1 br	.BB19_2
#1:	       stm.s	r0, r14, 22
	;;
#0:	       ldm.f	r2, 4
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24     ; dtoa.c:239
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_impure_data+68 ; dtoa.c:241
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:241
	;;
#0:	       stm.a	r0, r4, 1       ; dtoa.c:241
	;;
#0:	       ldmg.d	_impure_data+68 ; dtoa.c:242
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:242
#1:	       ldmg.d	_impure_data+64 ; dtoa.c:242
	;;
#0:	       sl	r1, r0 -> r0    ; dtoa.c:242
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:242
	;;
#0:	       stm.a	r0, r2, 2       ; dtoa.c:242
	;;
#0:	       ldmg.d	_impure_data+64 ; dtoa.c:243
	;;
#0:	       callg	__Bfree         ; dtoa.c:243
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:243
	;;                              ; dtoa.c:243
	       nop	3               ; dtoa.c:243
	;;
#0:	       ldga	_impure_data -> r0 ; dtoa.c:241
	;;
#0:	       stm.a	0, r0, 16       ; dtoa.c:244
	;;
.BB19_2:                                ; %bb1
#0:	       ldm.s	r14, 96         ; dtoa.c:247
#1:	       ldi	-1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:247
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:247
	;;
#0:	if  c1 br	.BB19_4         ; dtoa.c:247
	;;                              ; dtoa.c:247
	       nop	2               ; dtoa.c:247
	;;
; BB#3:                                 ; %bb2
#0:	       ldiu	2047 -> r0
	;;
#0:	       ldim	1023 -> r0
	;;
#0:	       br	.BB19_5
#1:	       ldih	1023 -> r0
	;;
#0:	       and	r1, r0 -> r1
	;;
#0:	       stm.s	r1, r14, 24     ; dtoa.c:250
	;;
#0:	       stm.a	1, r10, 0       ; dtoa.c:250
	;;
.BB19_4:                                ; %bb3
#0:	       stm.a	0, r10, 0       ; dtoa.c:254
	;;
.BB19_5:                                ; %bb4
#0:	       ldm.s	r14, 96
#1:	       ldga	1048576 -> r0
	;;
#0:	       ldih	1023 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r0 -> r1
	;;
#0:	       cmpne	r1, r0 -> c1    ; dtoa.c:258
#1:	       stm.s	r1, r14, 6      ; dtoa.c:258
	;;
#0:	if  c1 br	.BB19_10        ; dtoa.c:258
	;;                              ; dtoa.c:258
	       nop	2               ; dtoa.c:258
	;;
; BB#6:                                 ; %bb5
#0:	       ldm.s	r14, 96
#1:	       ldiu	2047 -> r0
#2:	       ldga	._.str59 -> r2
	;;
#0:	       ldim	511 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 88         ; dtoa.c:265
	;;
#0:	       and	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:265
#1:	       ldm.s	r14, 36         ; dtoa.c:264
	;;
#0:	       or	r1, r0 -> r0    ; dtoa.c:265
#1:	       ldiu	1807 -> r1
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	._.str160 -> r0
#2:	       ldim	4 -> r1
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:264
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:264
	;;
#0:	       ldm.s	r14, 48         ; dtoa.c:270
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:270
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:270
	;;
#0:	if !c1 br	.BB19_13
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb10
#0:	       ldm.f	r0, 3           ; dtoa.c:271
#1:	       add	r0, 3 -> r1     ; dtoa.c:271
	;;
#0:	       ldx	$membu, r1 -> r2 ; dtoa.c:271
#1:	       ldm.s	r14, 48         ; dtoa.c:271
	;;
#0:	       cmpne	r2, 0 -> c1     ; dtoa.c:271
	;;
#0:	if  c1 add	r0, 8 -> r1     ; dtoa.c:271
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:271
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:271
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f14   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f15   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f12   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -716        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f13   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -712        ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f10   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f11   ; dtoa.c:861
	;;
.BB19_8:                                ; %bb13
#0:	       ldm.s	r14, 316        ; dtoa.c:861
#1:	       or	r14, 0 -> r15   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 320        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f15      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 324        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f14      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 328        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f13      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 332        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f12      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 336        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f11      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 340        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f10      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:861
#1:	       ldm.s	r14, 344        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:861
#1:	       ldm.s	r14, 348        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:861
#1:	       ldm.s	r14, 352        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:861
#1:	       ldm.s	r15, 8          ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r15, 4          ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $ro    ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $rb    ; dtoa.c:861
	;;
.BB19_9:                                ; %bb13
#0:	       ldm.s	r15, 0          ; dtoa.c:861
#1:	       ldiu	356 -> r1       ; dtoa.c:861
	;;
#0:	       add	r15, r1 -> r15  ; dtoa.c:861
	;;
#0:	       ret                      ; dtoa.c:861
#1:	       ldx	$mem, 0 -> r14  ; dtoa.c:861
	;;                              ; dtoa.c:861
	       nop	3               ; dtoa.c:861
	;;
.BB19_10:                               ; %bb15
#0:	       ldiu	256 -> r2
#1:	       ldm.s	r14, 88
#2:	       fop	dzero -> d0
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 12 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 0
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f10
	;;
#0:	       stx	r0 -> $f3
	;;
#0:	       fop	fmov	f3 -> f11
	;;
#0:	       fop	dcmp	d5, d0 -> f0 ; dtoa.c:282
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:282
	;;
#0:	       btest	r0, 9 -> c1     ; dtoa.c:282
	;;
#0:	if  c1 br	.BB19_16        ; dtoa.c:282
	;;                              ; dtoa.c:282
	       nop	2               ; dtoa.c:282
	;;
; BB#11:                                ; %bb16
#0:	       ldm.s	r14, 48         ; dtoa.c:286
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:286
#1:	       ldm.s	r14, 36         ; dtoa.c:284
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:286
	;;
#0:	if  c1 br	.BB19_15        ; dtoa.c:286
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:284
	;;
#0:	       stm.a	1, r0, 0        ; dtoa.c:284
	;;                              ; dtoa.c:286
	       nop	1               ; dtoa.c:286
	;;
; BB#12:                                ; %bb16.bb215_crit_edge
#0:	       ldga	._.str834 -> r0
	;;
.BB19_13:                               ; %bb215
#0:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f14   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f15   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f12   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -716        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -712        ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $f10   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#3:	       stx	r3.31 -> $f13   ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $f11   ; dtoa.c:861
	;;
.BB19_14:                               ; %bb215
#0:	       ldm.s	r14, 316        ; dtoa.c:861
#1:	       or	r14, 0 -> r15   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 320        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f15      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 324        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f14      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 328        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f13      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 332        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f12      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 336        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f11      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 340        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f10      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:861
#1:	       ldm.s	r14, 344        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:861
#1:	       ldm.s	r14, 348        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:861
#1:	       ldm.s	r14, 352        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:861
#1:	       ldm.s	r15, 8          ; dtoa.c:861
	;;
#0:	       br	.BB19_9
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#1:	       ldm.s	r15, 4          ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $ro    ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $rb    ; dtoa.c:861
	;;
.BB19_15:                               ; %bb17
#0:	       ldm.s	r14, 48         ; dtoa.c:287
#1:	       ldga	._.str834 -> r0 ; dtoa.c:287
	;;
#0:	       add	r0, 1 -> r1     ; dtoa.c:287
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:287
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:287
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -728        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f14   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -724        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f15   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f12   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -716        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f13   ; dtoa.c:861
	;;
#0:	       br	.BB19_14
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#1:	       ldm.s	r1, -712        ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $f10   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $f11   ; dtoa.c:861
	;;
.BB19_16:                               ; %bb19
#0:	       ldiu	256 -> r12
#1:	       ldm.s	r14, 96
#2:	       fop	fmov	f11 -> f1 ; dtoa.c:291
#3:	       ldiu	2047 -> r10
	;;
#0:	       add	r14, r12 -> r12
#1:	       fop	fmov	f10 -> f0 ; dtoa.c:291
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       add	r12, 28 -> r2
#2:	       ldiu	288 -> r12
#3:	       ldx	$f1 -> r1       ; dtoa.c:291
	;;
#0:	       callg	___d2b          ; dtoa.c:291
#1:	       add	r14, r12 -> r12
#2:	       sr	r0, 20 -> r0
	;;
#0:	       and	r0, r10 -> r11  ; dtoa.c:295
#1:	       add	r12, 0 -> r3
#2:	       ldx	$f0 -> r0       ; dtoa.c:291
	;;                              ; dtoa.c:291
	       nop	2               ; dtoa.c:291
	;;
#0:	       cmpeq	r11, 0 -> c1    ; dtoa.c:295
#1:	       stm.s	r0, r14, 26     ; dtoa.c:291
	;;
#0:	if  c1 br	.BB19_18        ; dtoa.c:295
	;;                              ; dtoa.c:295
	       nop	2               ; dtoa.c:295
	;;
; BB#17:                                ; %bb20
#0:	       ldm.s	r14, 96
#1:	       ldi	-1023 -> r0
#2:	       ldga	1048576 -> r2
#3:	       ldim	511 -> r10
	;;
#0:	       add	r11, r0 -> r3
#1:	       ldi	0 -> r0
#2:	       ldih	511 -> r2
	;;
#0:	       br	.BB19_22
#1:	       ldx	$mem, 0 -> r1
#2:	       stm.s	r0, r14, 7      ; dtoa.c:300
	;;
#0:	       ldm.s	r14, 88
#1:	       and	r1, r10 -> r1
	;;
#0:	       or	r1, r2 -> r0    ; dtoa.c:300
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB19_18:                               ; %bb21
#0:	       ldm.s	r14, 284        ; dtoa.c:340
#1:	       ldi	33 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:340
#1:	       ldm.s	r14, 288        ; dtoa.c:340
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:340
	;;
#0:	       add	r0, r1 -> r0    ; dtoa.c:340
#1:	       ldiu	1074 -> r1
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:340
	;;
#0:	       cmplt	r1, r3 -> c1    ; dtoa.c:344
	;;
#0:	if  c1 br	.BB19_20        ; dtoa.c:344
	;;                              ; dtoa.c:344
	       nop	2               ; dtoa.c:344
	;;
; BB#19:                                ; %bb22
#0:	       ldm.s	r14, 96         ; dtoa.c:344
#1:	       ldi	-1010 -> r1
#2:	       ldiu	1042 -> r3
	;;
#0:	       sub	r1, r0 -> r1
#1:	       add	r0, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:344
#1:	       ldm.s	r14, 88         ; dtoa.c:344
	;;
#0:	       br	.BB19_21
#1:	       sl	r2, r1 -> r1    ; dtoa.c:344
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:344
	;;
#0:	       sr	r2, r3 -> r3    ; dtoa.c:344
	;;
#0:	       or	r1, r3 -> r1    ; dtoa.c:344
	;;
.BB19_20:                               ; %bb23
#0:	       ldiu	1006 -> r1
#1:	       ldm.s	r14, 88         ; dtoa.c:344
	;;
#0:	       ldim	2047 -> r1
	;;
#0:	       sub	r1, r0 -> r1
#1:	       ldx	$mem, 0 -> r3   ; dtoa.c:344
	;;
#0:	       sl	r3, r1 -> r1    ; dtoa.c:344
	;;
.BB19_21:                               ; %bb24
#0:	       ldiu	224 -> r5
#1:	       ldga	1048576 -> r2
#2:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldih	537 -> r2
#2:	       ldim	0 -> r4
	;;
#0:	       add	r5, 28 -> r3
#1:	       ldih	0 -> r4
#2:	       ldiu	256 -> r5
	;;
#0:	       stm.a	r1, r3, 0       ; dtoa.c:347
#1:	       add	r14, r5 -> r5
	;;
#0:	       stm.a	r2, r3, 1       ; dtoa.c:347
#1:	       ldiu	0 -> r2
	;;
#0:	       ldim	512 -> r2
	;;
#0:	       ldih	537 -> r2
	;;
#0:	       ldm.f	r3, 0           ; dtoa.c:347
#1:	       stx	r2 -> $f4
#2:	       ldga	1048576 -> r2
	;;
#0:	       ldih	2032 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:347
#1:	       ldm.f	r3, 4           ; dtoa.c:347
	;;
#0:	       stx	r1 -> $f0       ; dtoa.c:347
#1:	       add	r5, 4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:347
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:347
	;;
#0:	       stx	r3 -> $f1       ; dtoa.c:347
#1:	       sub	r0, 1 -> r3
#2:	       ldi	1 -> r0
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:347
#1:	       stm.s	r0, r14, 7
	;;
#0:	       stx	r4 -> $f0
	;;
#0:	       fop	fmov	f4 -> f1
	;;
#0:	       fop	dsub	d1, d0 -> d0 ; dtoa.c:347
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r0
	;;
#0:	       stm.a	r0, r1, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       ldm.f	r1, 4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r1, 0
	;;
#0:	       add	r0, r2 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB19_22:                               ; %bb25
#0:	       ldiu	224 -> r5
#1:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldim	0 -> r4
	;;
#0:	       add	r5, 20 -> r2
#1:	       ldih	0 -> r4
	;;
#0:	       stm.a	r1, r2, 0
	;;
#0:	       stm.a	r0, r2, 1
#1:	       ldiu	0 -> r0
	;;
#0:	       ldim	768 -> r0
	;;
#0:	       ldih	1535 -> r0
	;;
#0:	       ldm.f	r2, 0
#1:	       stx	r0 -> $f4
#2:	       ldiu	865 -> r0
	;;
#0:	       ldim	488 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r2, 4
#2:	       ldih	795 -> r0
	;;
#0:	       stx	r1 -> $f0
#1:	       ldiu	1959 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       fop	fmov	f0 -> f2
#2:	       ldim	592 -> r1
	;;
#0:	       stx	r2 -> $f1
#1:	       ldiu	179 -> r2
#2:	       ldih	510 -> r1
	;;
#0:	       stx	r4 -> $f0
#1:	       ldiu	552 -> r4
#2:	       ldim	25 -> r2
	;;
#0:	       fop	fmov	f1 -> f3
#1:	       ldim	209 -> r4
#2:	       ldih	1115 -> r2
	;;
#0:	       fop	fmov	f4 -> f1
#1:	       ldih	510 -> r4
	;;
#0:	       fop	dadd	d1, d0 -> d0
	;;
#0:	       stx	r0 -> $f2
#1:	       ldiu	507 -> r0
	;;
#0:	       fop	fmov	f2 -> f4
#1:	       ldim	1007 -> r0
	;;
#0:	       stx	r1 -> $f2
#1:	       ldiu	1043 -> r1
#2:	       ldih	644 -> r0
	;;
#0:	       stx	r2 -> $f3
#1:	       ldim	616 -> r1
	;;
#0:	       fop	fmov	f2 -> f5
#1:	       ldih	510 -> r1
	;;
#0:	       fop	fmov	f3 -> f2
	;;
	       nop	0
	;;
#0:	       stx	r4 -> $f6
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:356
	;;
#0:	       stx	r3 -> $f0       ; dtoa.c:356
	;;
#0:	       fop	si2df	f0 -> d0 ; dtoa.c:356
	;;
#0:	       stx	r1 -> $f6
	;;
#0:	       stx	r0 -> $f4
	;;
	       nop	0
	;;
#0:	       fop	fmov	f6 -> f5
	;;
	       nop	0
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:356
	;;
#0:	       fop	dzero -> d0
	;;
	       nop	5
	;;
#0:	       fop	dcmp	d1, d0 -> f0 ; dtoa.c:359
	;;
#0:	       fop	df2si	d1 -> f4 ; dtoa.c:358
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:359
	;;
#0:	       btest	r0, 2 -> c1     ; dtoa.c:359
	;;
#0:	if !c1 br	.BB19_24
	;;
#0:	       ldx	$f4 -> r0       ; dtoa.c:358
	;;
#0:	       stm.s	r0, r14, 21     ; dtoa.c:359
	;;
	       nop	0
	;;
; BB#23:                                ; %bb26
#0:	       stx	r0 -> $f0       ; dtoa.c:359
	;;
#0:	       fop	si2df	f0 -> d0 ; dtoa.c:359
	;;
	       nop	2
	;;
#0:	       fop	dcmp	d0, d1 -> f0 ; dtoa.c:359
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:359
	;;
#0:	       btest	r0, 0 -> c1     ; dtoa.c:359
	;;
#0:	if !c1 ldm.s	r14, 84
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 sub	r0, 1 -> r0
	;;
#0:	if !c1 stm.s	r0, r14, 21
	;;
.BB19_24:                               ; %bb28
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 23 -> c1
	;;
#0:	if  c1 br	.BB19_26        ; dtoa.c:362
	;;                              ; dtoa.c:362
	       nop	2               ; dtoa.c:362
	;;
; BB#25:                                ; %bb28.bb32_crit_edge
#0:	       ldi	1 -> r0
#1:	       br	.BB19_27
	;;
	       nop	2
	;;
.BB19_26:                               ; %bb29
#0:	       ldm.s	r14, 84         ; dtoa.c:364
#1:	       ldga	___mprec_tens -> r0 ; dtoa.c:364
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:364
	;;
#0:	       sl	r1, 3 -> r2     ; dtoa.c:364
	;;
#0:	       add	r0, r2 -> r0    ; dtoa.c:364
	;;
#0:	       ldm.f	r0, 0           ; dtoa.c:364
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:364
#1:	       ldm.f	r0, 4           ; dtoa.c:364
	;;
#0:	       stx	r2 -> $f0       ; dtoa.c:364
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:364
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:364
	;;
#0:	       stx	r0 -> $f1       ; dtoa.c:364
#1:	       sub	r1, 1 -> r0
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:364
	;;
#0:	       fop	dcmp	d5, d1 -> f0 ; dtoa.c:364
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r2       ; dtoa.c:364
	;;
#0:	       btest	r2, 2 -> c1     ; dtoa.c:364
	;;
#0:	if  c1 or	r0, 0 -> r1
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r1, r14, 21
	;;
.BB19_27:                               ; %bb29
#0:	       stm.s	r0, r14, 8
#1:	       ldi	1 -> r1
#2:	       ldi	-1 -> r2
	;;
#0:	       ldm.s	r14, 288        ; dtoa.c:368
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:368
	;;
#0:	       stm.s	r0, r14, 5      ; dtoa.c:368
#1:	       sub	r0, r3 -> r0    ; dtoa.c:368
	;;
#0:	       sub	r0, 1 -> r4
#1:	       sub	r1, r0 -> r0
#2:	       ldi	0 -> r1
	;;
#0:	       cmplt	r2, r4 -> c1
#1:	       stm.s	r1, r14, 10
	;;
#0:	if  c1 or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 20
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r4, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 16     ; dtoa.c:379
	;;
#0:	       ldm.s	r14, 84         ; dtoa.c:379
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:379
	;;
#0:	       cmplt	r0, 0 -> c1     ; dtoa.c:379
	;;
#0:	if  c1 br	.BB19_29        ; dtoa.c:379
	;;                              ; dtoa.c:379
	       nop	2               ; dtoa.c:379
	;;
; BB#28:                                ; %bb36
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 23     ; dtoa.c:383
	;;
#0:	       ldm.s	r14, 84         ; dtoa.c:383
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:383
#1:	       ldm.s	r14, 64         ; dtoa.c:383
	;;
#0:	       br	.BB19_30
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:383
	;;
#0:	       add	r0, r1 -> r0    ; dtoa.c:383
	;;
#0:	       stm.s	r0, r14, 16
	;;
#0:	       stm.s	r1, r14, 10
	;;
.BB19_29:                               ; %bb37
#0:	       ldm.s	r14, 84         ; dtoa.c:387
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:387
#1:	       ldm.s	r14, 80         ; dtoa.c:387
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:387
	;;
#0:	       sub	r0, r1 -> r0    ; dtoa.c:387
	;;
#0:	       stm.s	r0, r14, 20     ; dtoa.c:388
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:388
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:388
	;;
#0:	       sub	r0, r1 -> r0    ; dtoa.c:388
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB19_30:                               ; %bb38
#0:	       ldm.s	r14, 100        ; dtoa.c:391
#1:	       ldi	9 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:391
	;;
#0:	       cmpult	r0, r1 -> c1    ; dtoa.c:391
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r1
#1:	       ldi	5 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:394
#1:	       sub	r1, 4 -> r2
#2:	       stm.s	r1, r14, 25
	;;
#0:	if  c1 or	r2, 0 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1    ; dtoa.c:401
#1:	       stm.s	r1, r14, 19     ; dtoa.c:401
	;;
#0:	if  c1 br	.BB19_41        ; dtoa.c:401
	;;                              ; dtoa.c:401
	       nop	2               ; dtoa.c:401
	;;
; BB#31:                                ; %bb38
#0:	       ldm.s	r14, 76
#1:	       ldga	.JTI19_0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       s2add	r3, r0 -> r3
	;;
#0:	       ldm.d	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       br	r3
	;;
	       nop	3
	;;
.BB19_32:                               ; %bb38.bb49_crit_edge
#0:	       ldi	1 -> r3
#1:	       br	.BB19_39
	;;
	       nop	2
	;;
.BB19_33:                               ; %bb38.bb45_crit_edge
#0:	       ldi	1 -> r3
#1:	       br	.BB19_37
	;;
	       nop	2
	;;
.BB19_34:                               ; %bb38.bb51.thread_crit_edge
#0:	       ldi	0 -> r3
#1:	       ldi	1 -> r0
	;;
#0:	       stm.s	r3, r14, 11
#1:	       ldi	-1 -> r3
	;;
#0:	       stm.s	r3, r14, 17
	;;
#0:	       stm.s	r0, r14, 14
	;;
#0:	       stm.s	r3, r14, 13
	;;
.BB19_35:                               ; %bb51.thread
#0:	       ldga	_impure_data -> r3 ; dtoa.c:427
#1:	       br	.BB19_46
#2:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r3, 17       ; dtoa.c:427
	;;
	       nop	1
	;;
.BB19_36:                               ; %bb44
#0:	       ldi	0 -> r3
	;;
.BB19_37:                               ; %bb44
#0:	       stm.s	r3, r14, 14
#1:	       ldi	1 -> r0
	;;
#0:	       ldm.s	r14, 44
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       cmplt	r3, 1 -> c1
	;;
#0:	       br	.BB19_42
#1:	if  c1 or	r0, 0 -> r3
	;;
#0:	       stm.s	r3, r14, 11
	;;
#0:	       stm.s	r3, r14, 13
	;;
#0:	       stm.s	r3, r14, 17
	;;
.BB19_38:                               ; %bb48
#0:	       ldi	0 -> r3
	;;
.BB19_39:                               ; %bb48
#0:	       stm.s	r3, r14, 14
	;;
#0:	       ldm.s	r14, 84         ; dtoa.c:420
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:420
#1:	       ldm.s	r14, 44         ; dtoa.c:420
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:420
	;;
#0:	       add	r0, r3 -> r3    ; dtoa.c:420
	;;
#0:	       stm.s	r3, r14, 13     ; dtoa.c:420
#1:	       add	r3, 1 -> r3     ; dtoa.c:420
	;;
#0:	       cmplt	r3, 1 -> c1
#1:	       stm.s	r3, r14, 17
	;;
#0:	if  c1 br	.BB19_35
	;;
	       nop	2
	;;
; BB#40:                                ; %bb49.bb51_crit_edge
#0:	       ldm.s	r14, 68
#1:	       br	.BB19_42
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
	       nop	1
	;;
.BB19_41:                               ; %bb38.bb51_crit_edge
#0:	       ldi	1 -> r0
	;;
#0:	       stm.s	r0, r14, 14
#1:	       ldi	-1 -> r0
	;;
#0:	       stm.s	r0, r14, 13
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB19_42:                               ; %bb51
#0:	       cmpult	r3, 24 -> c1    ; dtoa.c:427
#1:	       ldga	_impure_data -> r0 ; dtoa.c:427
	;;
#0:	if  c1 br	.BB19_225       ; dtoa.c:427
#1:	       stm.a	0, r0, 17       ; dtoa.c:427
	;;                              ; dtoa.c:427
	       nop	2               ; dtoa.c:427
	;;
; BB#43:                                ; %bb51.bb52_crit_edge
#0:	       ldi	0 -> r0
#1:	       ldi	4 -> r1
	;;
.BB19_44:                               ; %bb52
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r1, 1 -> r1     ; dtoa.c:428
#1:	       add	r0, 1 -> r0     ; dtoa.c:429
	;;
#0:	       add	r1, 20 -> r2    ; dtoa.c:427
	;;
#0:	       cmpule	r2, r3 -> c1    ; dtoa.c:427
	;;
#0:	if  c1 br	.BB19_44        ; dtoa.c:427
	;;                              ; dtoa.c:427
	       nop	2               ; dtoa.c:427
	;;
; BB#45:                                ; %bb53.bb54_crit_edge
#0:	       ldga	_impure_data -> r1
	;;
#0:	       stm.a	r0, r1, 17
	;;
.BB19_46:                               ; %bb54
#0:	       callg	__Balloc        ; dtoa.c:430
	;;                              ; dtoa.c:430
	       nop	3               ; dtoa.c:430
	;;
#0:	       stm.s	r0, r14, 18     ; dtoa.c:430
#1:	       ldga	_impure_data -> r2 ; dtoa.c:430
#2:	       ldi	14 -> r1
	;;
#0:	       stm.a	r0, r2, 16      ; dtoa.c:430
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r1, r0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 100
#1:	if !c1 ldi	5 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r1
	;;
#0:	if !c1 cmplt	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB19_115
	;;
	       nop	2
	;;
; BB#47:                                ; %bb56
#0:	       ldm.s	r14, 84         ; dtoa.c:442
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:442
	;;
#0:	       cmplt	r0, 1 -> c1     ; dtoa.c:442
	;;
#0:	if  c1 br	.BB19_57        ; dtoa.c:442
	;;                              ; dtoa.c:442
	       nop	2               ; dtoa.c:442
	;;
; BB#48:                                ; %bb57
#0:	       and	r0, 15 -> r1    ; dtoa.c:444
#1:	       ldga	___mprec_tens -> r2 ; dtoa.c:444
#2:	       sra	r0, 4 -> r10    ; dtoa.c:445
	;;
#0:	       sl	r1, 3 -> r1     ; dtoa.c:444
#1:	       btest	r10, 4 -> c1    ; dtoa.c:446
	;;
#0:	       add	r2, r1 -> r1    ; dtoa.c:444
	;;
#0:	       ldm.f	r1, 0           ; dtoa.c:444
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:444
#1:	       ldm.f	r1, 4           ; dtoa.c:444
	;;
#0:	if  c1 br	.BB19_50        ; dtoa.c:446
#1:	       stx	r2 -> $f0       ; dtoa.c:444
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:444
#1:	       fop	fmov	f0 -> f12 ; dtoa.c:444
	;;
#0:	       stx	r1 -> $f1       ; dtoa.c:444
	;;
#0:	       fop	fmov	f1 -> f13 ; dtoa.c:444
	;;
; BB#49:                                ; %bb57.bb62.preheader_crit_edge
#0:	       ldm.s	r14, 88
#1:	       br	.BB19_51
#2:	       ldi	2 -> r11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	0
	;;
.BB19_50:                               ; %bb58
#0:	       ldiu	1852 -> r0
#1:	       ldiu	2013 -> r1
#2:	       ldiu	224 -> r12
#3:	       fop	fmov	f10 -> f0 ; dtoa.c:450
	;;
#0:	       ldim	631 -> r0
#1:	       ldim	681 -> r1
#2:	       add	r14, r12 -> r12
#3:	       fop	fmov	f11 -> f1 ; dtoa.c:450
	;;
#0:	       ldih	1019 -> r0
#1:	       ldih	936 -> r1
#2:	       add	r12, 12 -> r11
	;;
#0:	       stx	r1 -> $f4
	;;
#0:	       stx	r0 -> $f2
	;;
#0:	       fop	fmov	f4 -> f3
	;;
#0:	       callg	___divdf3       ; dtoa.c:450
#1:	       fop	fmov	f2 -> f4 ; dtoa.c:450
	;;
#0:	       ldx	$f3 -> r3       ; dtoa.c:450
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:450
	;;
#0:	       ldx	$f1 -> r1       ; dtoa.c:450
	;;
#0:	       ldx	$f4 -> r2       ; dtoa.c:450
	;;
#0:	       ldx	$f0 -> r0
#1:	       and	r10, 15 -> r10  ; dtoa.c:449
	;;
#0:	       stm.a	r0, r11, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       stm.a	r0, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r11, 4
#2:	       ldi	3 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB19_51:                               ; %bb62.preheader
#0:	       cmpeq	r10, 0 -> c1    ; dtoa.c:453
	;;
#0:	if  c1 br	.BB19_56
	;;
	       nop	2
	;;
; BB#52:                                ; %bb62.preheader.bb59_crit_edge
#0:	       ldga	___mprec_bigtens -> r2
	;;
.BB19_53:                               ; %bb59
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:454
	;;
#0:	if !c1 br	.BB19_55
	;;
	       nop	2
	;;
; BB#54:                                ; %bb60
                                        ;   in Loop: Header=BB19_53 Depth=1
#0:	       ldm.f	r2, 0           ; dtoa.c:457
#1:	       add	r11, 1 -> r11   ; dtoa.c:456
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:457
#1:	       ldm.f	r2, 4           ; dtoa.c:457
	;;
#0:	       stx	r3 -> $f0       ; dtoa.c:457
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:457
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:457
	;;
#0:	       stx	r4 -> $f1       ; dtoa.c:457
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:457
	;;
#0:	       fop	dmul	d1, d6 -> d6 ; dtoa.c:457
	;;
	       nop	6
	;;
.BB19_55:                               ; %bb61
                                        ;   in Loop: Header=BB19_53 Depth=1
#0:	       sra	r10, 1 -> r10   ; dtoa.c:453
#1:	       add	r2, 8 -> r2
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:453
	;;
#0:	if  c1 br	.BB19_53
	;;
	       nop	2
	;;
.BB19_56:                               ; %bb63
#0:	       ldiu	224 -> r12
#1:	       ldiu	192 -> r13
#2:	       fop	fmov	f12 -> f0 ; dtoa.c:459
	;;
#0:	       add	r14, r12 -> r12
#1:	       add	r14, r13 -> r13
#2:	       ldx	$f13 -> r3      ; dtoa.c:459
	;;
#0:	       add	r12, 4 -> r2
#1:	       add	r13, 28 -> r10
	;;
#0:	       stm.a	r0, r2, 0
	;;
#0:	       stm.a	r1, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r2, 4
#2:	       ldx	$f0 -> r2       ; dtoa.c:459
	;;
#0:	       stx	r0 -> $f1
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       fop	fmov	f1 -> f4
	;;
#0:	       callg	___divdf3       ; dtoa.c:459
#1:	       stx	r1 -> $f2
	;;
#0:	       fop	fmov	f2 -> f5
	;;
#0:	       fop	fmov	f4 -> f1 ; dtoa.c:459
	;;
#0:	       ldx	$f1 -> r0       ; dtoa.c:459
	;;
#0:	       ldx	$f5 -> r1       ; dtoa.c:459
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stm.a	r0, r10, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       br	.BB19_64
#1:	       stm.a	r0, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB19_57:                               ; %bb64
#0:	       ldm.s	r14, 84         ; dtoa.c:461
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:461
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:461
	;;
#0:	if  c1 br	.BB19_59        ; dtoa.c:461
	;;                              ; dtoa.c:461
	       nop	2               ; dtoa.c:461
	;;
; BB#58:                                ; %bb64.bb71_crit_edge
#0:	       ldm.s	r14, 88
#1:	       br	.BB19_64
#2:	       ldi	2 -> r11
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
	       nop	0
	;;
.BB19_59:                               ; %bb65
#0:	       ldm.s	r14, 84         ; dtoa.c:461
#1:	       ldi	0 -> r10
#2:	       ldga	___mprec_tens -> r0 ; dtoa.c:463
#3:	       ldiu	192 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:461
	;;
#0:	       sub	r10, r11 -> r10 ; dtoa.c:461
	;;
#0:	       and	r10, 15 -> r11  ; dtoa.c:463
	;;
#0:	       sl	r11, 3 -> r11   ; dtoa.c:463
	;;
#0:	       add	r0, r11 -> r11  ; dtoa.c:463
#1:	       sra	r10, 4 -> r0    ; dtoa.c:464
	;;
#0:	       ldm.f	r11, 0          ; dtoa.c:463
#1:	       cmpeq	r0, 0 -> c1     ; dtoa.c:464
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:463
#1:	       ldm.f	r11, 4          ; dtoa.c:463
	;;
#0:	       stx	r12 -> $f0      ; dtoa.c:463
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:463
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:463
	;;
#0:	       stx	r11 -> $f1      ; dtoa.c:463
#1:	       add	r1, 20 -> r11
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:463
	;;
#0:	       fop	dmul	d5, d1 -> d0 ; dtoa.c:463
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r10
	;;
#0:	       stm.a	r10, r11, 0
#1:	       ldx	$f1 -> r10
	;;
#0:	if  c1 br	.BB19_226       ; dtoa.c:464
#1:	       stm.a	r10, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r11, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
; BB#60:                                ; %bb65.bb66_crit_edge
#0:	       ldga	___mprec_bigtens -> r1
#1:	       ldi	2 -> r11
	;;
.BB19_61:                               ; %bb66
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:465
	;;
#0:	if !c1 br	.BB19_63
	;;
	       nop	2
	;;
; BB#62:                                ; %bb68
                                        ;   in Loop: Header=BB19_61 Depth=1
#0:	       ldiu	192 -> r4
#1:	       add	r11, 1 -> r11   ; dtoa.c:467
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 12 -> r2
	;;
#0:	       stm.a	r12, r2, 0
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r1, 0           ; dtoa.c:468
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:468
#1:	       ldm.f	r2, 0
	;;
#0:	       stx	r10 -> $f2      ; dtoa.c:468
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r2, 4
#2:	       fop	fmov	f2 -> f6 ; dtoa.c:468
	;;
#0:	       stx	r12 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r1, 4           ; dtoa.c:468
#2:	       fop	fmov	f0 -> f4
	;;
#0:	       stx	r2 -> $f1
#1:	       ldiu	192 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:468
#1:	       fop	fmov	f1 -> f5
#2:	       add	r14, r2 -> r2
	;;
#0:	       stx	r3 -> $f3       ; dtoa.c:468
#1:	       add	r2, 4 -> r10
	;;
#0:	       fop	fmov	f3 -> f7 ; dtoa.c:468
	;;
#0:	       fop	dmul	d2, d3 -> d0 ; dtoa.c:468
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r12
	;;
#0:	       stm.a	r12, r10, 0
#1:	       ldx	$f1 -> r12
	;;
#0:	       stm.a	r12, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB19_63:                               ; %bb69
                                        ;   in Loop: Header=BB19_61 Depth=1
#0:	       sra	r0, 1 -> r0     ; dtoa.c:464
#1:	       add	r1, 8 -> r1
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:464
	;;
#0:	if  c1 br	.BB19_61
	;;
	       nop	2
	;;
.BB19_64:                               ; %bb71
#0:	       ldm.s	r14, 32         ; dtoa.c:471
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:471
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:471
	;;
#0:	if  c1 br	.BB19_66        ; dtoa.c:471
	;;                              ; dtoa.c:471
	       nop	2               ; dtoa.c:471
	;;
.BB19_65:                               ; %bb71.bb76_crit_edge
#0:	       ldm.s	r14, 84
#1:	       br	.BB19_69
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 15
	;;
#0:	       ldm.s	r14, 68
	;;
.BB19_66:                               ; %bb72
#0:	       ldiu	160 -> r4
#1:	       ldiu	0 -> r1
#2:	       ldiu	0 -> r3
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldim	512 -> r1
#2:	       ldim	0 -> r3
	;;
#0:	       add	r4, 28 -> r0
#1:	       ldih	511 -> r1
#2:	       ldih	0 -> r3
	;;
#0:	       stm.a	r12, r0, 0
#1:	       stx	r3 -> $f2
	;;
#0:	       stm.a	r10, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f0 -> f4
	;;
#0:	       stx	r0 -> $f1
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       fop	fmov	f1 -> f5
	;;
#0:	       fop	fmov	f0 -> f3
	;;
#0:	       fop	dcmp	d2, d1 -> f0 ; dtoa.c:471
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:471
	;;
#0:	       btest	r0, 13 -> c1    ; dtoa.c:471
	;;
#0:	if !c1 ldm.s	r14, 68
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB19_65
	;;
	       nop	2
	;;
; BB#67:                                ; %bb74
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       cmplt	r10, 1 -> c1
	;;
#0:	if  c1 br	.BB19_115
	;;
	       nop	2
	;;
; BB#68:                                ; %bb75
#0:	       ldiu	0 -> r10
#1:	       ldiu	0 -> r12
#2:	       ldm.s	r14, 84
#3:	       ldiu	160 -> r1
	;;
#0:	       ldim	128 -> r10
#1:	       ldim	0 -> r12
#2:	       add	r14, r1 -> r1
#3:	       add	r11, 1 -> r11   ; dtoa.c:478
	;;
#0:	       ldih	513 -> r10
#1:	       ldih	0 -> r12
	;;
#0:	       stx	r10 -> $f2
#1:	       add	r1, 20 -> r10
	;;
#0:	       stx	r12 -> $f0
#1:	       ldx	$mem, 0 -> r12
	;;
#0:	       fop	fmov	f2 -> f1
#1:	       sub	r12, 1 -> r12
	;;
#0:	       fop	dmul	d2, d0 -> d0 ; dtoa.c:477
#1:	       stm.s	r12, r14, 15    ; dtoa.c:478
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r12
	;;
#0:	       stm.a	r12, r10, 0
#1:	       ldx	$f1 -> r12
	;;
#0:	       stm.a	r12, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 52
	;;
.BB19_69:                               ; %bb75
#0:	       ldiu	160 -> r5
#1:	       ldx	$mem, 0 -> r0
#2:	       stx	r11 -> $f0      ; dtoa.c:480
#3:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       stm.s	r0, r14, 25
#2:	       ldiu	0 -> r3
#3:	       ldim	896 -> r4
	;;
#0:	       add	r5, 12 -> r0
#1:	       fop	si2df	f0 -> d0 ; dtoa.c:480
#2:	       ldim	0 -> r3
#3:	       ldih	512 -> r4
	;;
#0:	       stm.a	r12, r0, 0
#1:	       ldih	0 -> r3
#2:	       stx	r4 -> $f6
#3:	       ldiu	160 -> r5
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldiu	0 -> r2
	;;
	       nop	0
	;;
#0:	       stm.a	r10, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f2
#1:	       ldga	0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f4
#2:	       ldm.s	r14, 100        ; dtoa.c:482
#3:	       ldih	2022 -> r1
	;;
#0:	       stx	r0 -> $f3
#1:	       add	r5, 4 -> r0
	;;
#0:	       fop	fmov	f3 -> f5
#1:	       ldx	$mem, 0 -> r4   ; dtoa.c:482
	;;
#0:	       stx	r3 -> $f2
#1:	       cmpne	r4, 0 -> c1     ; dtoa.c:482
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:480
	;;
	       nop	6
	;;
#0:	       fop	fmov	f2 -> f0
	;;
#0:	       ldx	$f0 -> r4
	;;
#0:	       stm.a	r4, r0, 0
#1:	       ldx	$f3 -> r4
	;;
#0:	       stm.a	r4, r0, 1
	;;
#0:	if  c1 br	.BB19_76        ; dtoa.c:482
#1:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       ldm.f	r0, 0
	;;
#0:	       add	r4, r1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
; BB#70:                                ; %bb77
#0:	       ldiu	128 -> r4
#1:	       ldim	640 -> r2
#2:	       stx	r3 -> $f0
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldih	1536 -> r2
	;;
#0:	       add	r4, 28 -> r10
#1:	       stx	r2 -> $f2
	;;
#0:	       stm.a	r0, r10, 0
#1:	       fop	fmov	f2 -> f1
	;;
#0:	       fop	dadd	d2, d0 -> d2
	;;
	       nop	0
	;;
#0:	       stm.a	r1, r10, 1
	;;
	       nop	1
	;;
#0:	       ldm.f	r10, 0
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r10, 4
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       fop	fmov	f0 -> f2
	;;
#0:	       stx	r1 -> $f1
	;;
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       fop	dcmp	d2, d1 -> f0 ; dtoa.c:486
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:486
	;;
#0:	       btest	r0, 11 -> c1    ; dtoa.c:486
	;;
#0:	if  c1 br	.BB19_74        ; dtoa.c:486
	;;                              ; dtoa.c:486
	       nop	2               ; dtoa.c:486
	;;
; BB#71:                                ; %bb77.one_digit_crit_edge
#0:	       ldi	0 -> r0
	;;
.BB19_72:                               ; %bb77.one_digit_crit_edge
#0:	       stm.s	r0, r14, 25
	;;
.BB19_73:                               ; %one_digit
#0:	       ldm.s	r14, 60         ; dtoa.c:735
#1:	       ldi	49 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:735
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:735
	;;
#0:	       stm.s	r10, r14, 21
#1:	       ldi	0 -> r10
	;;
#0:	       br	.BB19_171
#1:	       stm.s	r10, r14, 24    ; dtoa.c:734
	;;
#0:	       ldm.s	r14, 72         ; dtoa.c:734
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:734
	;;
#0:	       add	r10, 1 -> r13   ; dtoa.c:734
#1:	       stmb.a	r1, r10, 0      ; dtoa.c:734
	;;
.BB19_74:                               ; %bb78
#0:	       fop	dabs	d1 -> d0 ; dtoa.c:488
	;;
#0:	       fop	dcmp	d2, d0 -> f0 ; dtoa.c:488
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:488
	;;
#0:	       btest	r0, 13 -> c1    ; dtoa.c:488
	;;
#0:	if  c1 br	.BB19_115
	;;
	       nop	2
	;;
.BB19_75:                               ; %bb78.no_digits_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB19_170
	;;
#0:	       stm.s	r0, r14, 25
	;;
	       nop	1
	;;
.BB19_76:                               ; %bb79
#0:	       ldm.s	r14, 56         ; dtoa.c:493
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:493
	;;
#0:	       cmpeq	r2, 0 -> c1     ; dtoa.c:493
	;;
#0:	if  c1 br	.BB19_87        ; dtoa.c:493
	;;                              ; dtoa.c:493
	       nop	2               ; dtoa.c:493
	;;
; BB#77:                                ; %bb80
#0:	       ldiu	128 -> r5
#2:	       ldm.s	r14, 100
#1:	       ldga	___mprec_tens -> r1.16 ; dtoa.c:498
#3:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldim	0 -> r4
	;;
#0:	       add	r5, 20 -> r2
#1:	       ldx	$mem, 0 -> r3
#2:	       or	r4, 0 -> r11
#3:	       ldih	511 -> r4
	;;
#0:	       stm.a	r0, r2, 0
#1:	       sl	r3, 3 -> r3
#2:	       ldih	0 -> r11
	;;
#1:	       add	r3, r1.16 -> r3 ; dtoa.c:498
#0:	       stx	r11 -> $f2
	;;
#0:	       stm.a	r1, r2, 1
	;;
#0:	       ldm.f	r3, -8          ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:498
#1:	       ldm.f	r2, 0
	;;
#0:	       stx	r0 -> $f0       ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r3, -4          ; dtoa.c:498
#2:	       fop	fmov	f0 -> f4 ; dtoa.c:498
	;;
#0:	       stx	r4 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:498
#1:	       ldm.f	r2, 4
#2:	       fop	fmov	f0 -> f3
	;;
#0:	       stx	r3 -> $f1       ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       fop	fmov	f1 -> f5 ; dtoa.c:498
	;;
#0:	       fop	fmov	f2 -> f0 ; dtoa.c:498
#1:	       stm.s	r2, r14, 4
	;;
#0:	       fop	fmov	f4 -> f1 ; dtoa.c:498
	;;
#0:	       callg	___divdf3       ; dtoa.c:498
#1:	       stx	r1 -> $f12
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:498
	;;
#0:	       ldx	$f3 -> r1       ; dtoa.c:498
	;;
#0:	       ldx	$f1 -> r2       ; dtoa.c:498
	;;
#0:	       ldx	$f5 -> r3       ; dtoa.c:498
	;;
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 72
	;;
#0:	       stx	r2 -> $f2
	;;
#0:	       fop	fmov	f2 -> f13
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 1 -> r13
#1:	       fop	dsub	d0, d6 -> d2 ; dtoa.c:498
#2:	       ldi	1 -> r0
	;;
	       nop	6
	;;
.BB19_78:                               ; %bb81
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldiu	128 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 12 -> r1
	;;
#0:	       stm.a	r12, r1, 0
	;;
#0:	       stm.a	r10, r1, 1
#1:	       sub	r13, 1 -> r10
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r1, 4
	;;
#0:	       stx	r12 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       fop	fmov	f0 -> f2
	;;
#0:	       stx	r1 -> $f1
	;;
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       fop	df2si	d1 -> f0 ; dtoa.c:501
	;;
	       nop	2
	;;
#0:	       fop	si2df	f0 -> d3 ; dtoa.c:502
	;;
#0:	       ldx	$f0 -> r1       ; dtoa.c:501
	;;
#0:	       s2add	r1, 12 -> r1    ; dtoa.c:503
	;;
#0:	       stmb.a	r1, r10, 0      ; dtoa.c:503
	;;
#0:	       fop	dsub	d1, d3 -> d0 ; dtoa.c:502
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d0, d2 -> f2 ; dtoa.c:504
	;;
	       nop	0
	;;
#0:	       ldx	$f2 -> r1       ; dtoa.c:504
	;;
#0:	       btest	r1, 13 -> c1    ; dtoa.c:504
	;;
#0:	if  c1 br	.BB19_80        ; dtoa.c:504
	;;                              ; dtoa.c:504
	       nop	2               ; dtoa.c:504
	;;
; BB#79:                                ; %bb81.ret1_crit_edge
#0:	       ldm.s	r14, 60
#1:	       br	.BB19_175
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
	;;
	       nop	0
	;;
.BB19_80:                               ; %bb82
                                        ;   in Loop: Header=BB19_78 Depth=1
#0:	       ldiu	0 -> r1
#1:	       stx	r11 -> $f2
	;;
#0:	       ldim	512 -> r1
	;;
#0:	       ldih	511 -> r1
	;;
#0:	       stx	r1 -> $f6
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dsub	d1, d0 -> d1 ; dtoa.c:506
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d2 -> f2 ; dtoa.c:506
	;;
	       nop	0
	;;
#0:	       ldx	$f2 -> r1       ; dtoa.c:506
	;;
#0:	       btest	r1, 13 -> c1    ; dtoa.c:506
	;;
#0:	if  c1 br	.BB19_85        ; dtoa.c:506
	;;                              ; dtoa.c:506
	       nop	2               ; dtoa.c:506
	;;
; BB#81:                                ; %bb82.bb106.preheader_crit_edge
#0:	       or	r13, 0 -> r10
	;;
.BB19_82:                               ; %bb106.preheader
#0:	       ldi	57 -> r11
	;;
.BB19_83:                               ; %bb106
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r10, 0 -> r13
	;;
#0:	       ldm.f	r13, -1         ; dtoa.c:579
#1:	       sub	r13, 1 -> r10
	;;
#0:	       ldx	$membu, r10 -> r0 ; dtoa.c:579
	;;
#0:	       cmpeq	r0, r11 -> c1   ; dtoa.c:579
	;;
#0:	if  c1 br	.BB19_111
	;;
	       nop	2
	;;
; BB#84:                                ; %bb107.loopexit
#0:	       ldm.s	r14, 60
#1:	       br	.BB19_175
#2:	       add	r0, 1 -> r11
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
	;;
#0:	       stmb.a	r11, r10, 0     ; dtoa.c:586
	;;
.BB19_85:                               ; %bb83
                                        ;   in Loop: Header=BB19_78 Depth=1
#0:	       ldm.s	r14, 100        ; dtoa.c:508
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:508
	;;
#0:	       cmple	r10, r0 -> c1   ; dtoa.c:508
	;;
#0:	if  c1 br	.BB19_115
	;;
	       nop	2
	;;
; BB#86:                                ; %bb84
                                        ;   in Loop: Header=BB19_78 Depth=1
#0:	       ldiu	0 -> r10
#1:	       stx	r11 -> $f2
#2:	       ldiu	128 -> r2
#3:	       add	r13, 1 -> r13
	;;
#0:	       ldim	128 -> r10
#1:	       add	r14, r2 -> r2
#2:	       add	r0, 1 -> r0
	;;
#0:	       ldih	513 -> r10
	;;
#0:	       stx	r10 -> $f6
#1:	       add	r2, 4 -> r10
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dmul	d0, d1 -> d0 ; dtoa.c:511
	;;
#0:	       fop	dmul	d2, d1 -> d2 ; dtoa.c:510
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r1
	;;
#0:	       stm.a	r1, r10, 0
#1:	       ldx	$f1 -> r1
	;;
#0:	       br	.BB19_78
#1:	       stm.a	r1, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB19_87:                               ; %bb85
#0:	       s2add	r14, 24 -> r3
#1:	       fop	df2si	d2 -> f0 ; dtoa.c:521
	;;
#0:	       add	r3, 28 -> r10
	;;
#0:	       stm.a	r0, r10, 0
	;;
	       nop	0
	;;
#0:	       fop	si2df	f0 -> d1 ; dtoa.c:522
	;;
#0:	       stm.a	r1, r10, 1
#1:	       ldga	___mprec_tens -> r1 ; dtoa.c:518
	;;
	       nop	1
	;;
#0:	       ldm.s	r14, 100
#1:	       fop	dsub	d2, d1 -> d1 ; dtoa.c:522
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.f	r10, 0
	;;
#0:	       sl	r13, 3 -> r0
#1:	       cmpne	r13, 1 -> c1    ; dtoa.c:524
	;;
#0:	       add	r0, r1 -> r0    ; dtoa.c:518
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       ldm.f	r0, -8          ; dtoa.c:518
#1:	       stx	r1 -> $f1
	;;
#0:	       fop	fmov	f1 -> f12
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:518
#1:	       ldm.f	r10, 4
	;;
#0:	       stx	r2 -> $f7       ; dtoa.c:518
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r0, -4          ; dtoa.c:518
#2:	       fop	fmov	f7 -> f14 ; dtoa.c:518
	;;
#0:	       stx	r10 -> $f6
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:518
#1:	       ldm.s	r14, 72         ; dtoa.c:523
#2:	       ldx	$f0 -> r10      ; dtoa.c:521
	;;
#0:	       stx	r0 -> $f8       ; dtoa.c:518
#1:	       s2add	r10, 12 -> r10  ; dtoa.c:523
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:523
#1:	       fop	fmov	f6 -> f13
	;;
#0:	       fop	fmov	f8 -> f15 ; dtoa.c:518
#1:	       stmb.a	r10, r0, 0      ; dtoa.c:523
	;;
#0:	       fop	dmul	d6, d7 -> d2 ; dtoa.c:518
	;;
	       nop	2
	;;
#0:	if  c1 br	.BB19_95        ; dtoa.c:524
	;;
	       nop	2
	;;
; BB#88:                                ; %bb85.bb87_crit_edge
#0:	       or	r0, 0 -> r10    ; dtoa.c:523
#1:	       br	.BB19_90
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:523
	;;
	       nop	1
	;;
.BB19_89:                               ; %bb86.bb87_crit_edge
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, r13 -> r10
	;;
.BB19_90:                               ; %bb87
#0:	       ldiu	0 -> r13
	;;
#0:	       ldim	0 -> r13
	;;
#0:	       or	r13, 0 -> r0
#1:	       ldih	511 -> r13
	;;
#0:	       ldih	0 -> r0
#1:	       stx	r13 -> $f6
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dadd	d2, d0 -> d0 ; dtoa.c:526
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d0 -> f0 ; dtoa.c:526
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r1       ; dtoa.c:526
	;;
#0:	       btest	r1, 11 -> c1    ; dtoa.c:526
	;;
#0:	if !c1 br	.BB19_82
	;;
	       nop	2
	;;
; BB#91:                                ; %bb88
#0:	       stx	r13 -> $f6
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dsub	d0, d2 -> d2 ; dtoa.c:528
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d2 -> f0 ; dtoa.c:528
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r13      ; dtoa.c:528
	;;
#0:	       btest	r13, 13 -> c1   ; dtoa.c:528
	;;
#0:	if  c1 br	.BB19_115
	;;
	       nop	2
	;;
; BB#92:                                ; %bb89.preheader
#0:	       add	r10, 1 -> r13
#1:	       ldi	48 -> r10
	;;
.BB19_93:                               ; %bb89
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r13, -2         ; dtoa.c:530
#1:	       sub	r13, 2 -> r0
#2:	       sub	r13, 1 -> r13
	;;
#0:	       ldx	$membu, r0 -> r0 ; dtoa.c:530
	;;
#0:	       cmpeq	r0, r10 -> c1   ; dtoa.c:530
	;;
#0:	if  c1 br	.BB19_93        ; dtoa.c:530
	;;                              ; dtoa.c:530
	       nop	2               ; dtoa.c:530
	;;
; BB#94:                                ; %bb89.ret1_crit_edge
#0:	       ldm.s	r14, 60
#1:	       br	.BB19_175
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 21
	;;
	       nop	0
	;;
.BB19_95:                               ; %bb91.preheader
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 72
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       add	r13, 1 -> r13
	;;
.BB19_96:                               ; %bb91
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldiu	0 -> r1
#1:	       ldiu	0 -> r0
#2:	       sub	r10, 1 -> r10
	;;
#0:	       ldim	128 -> r1
#1:	       ldim	0 -> r0
#2:	       cmpeq	r10, 0 -> c1
	;;
#0:	       ldih	513 -> r1
#1:	       ldih	0 -> r0
	;;
#0:	       stx	r1 -> $f6
	;;
#0:	       stx	r0 -> $f0
#1:	       add	r13, 1 -> r0
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dmul	d1, d0 -> d1 ; dtoa.c:519
	;;
	       nop	6
	;;
#0:	       fop	df2si	d1 -> f0 ; dtoa.c:521
	;;
	       nop	2
	;;
#0:	       fop	si2df	f0 -> d3 ; dtoa.c:522
	;;
#0:	       ldx	$f0 -> r1       ; dtoa.c:521
	;;
#0:	       s2add	r1, 12 -> r1    ; dtoa.c:523
	;;
#0:	       stmb.a	r1, r13, 0      ; dtoa.c:523
#1:	       or	r0, 0 -> r13
	;;
#0:	       fop	dsub	d1, d3 -> d1 ; dtoa.c:522
	;;
	       nop	2
	;;
#0:	if !c1 br	.BB19_96
	;;
	       nop	2
	;;
#0:	       br	.BB19_89
	;;
	       nop	2
	;;
.BB19_97:                               ; %bb94
#0:	       ldm.s	r14, 84         ; dtoa.c:552
#1:	       ldga	___mprec_tens -> r0 ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:552
	;;
#0:	       sl	r10, 3 -> r10   ; dtoa.c:552
	;;
#0:	       add	r0, r10 -> r10  ; dtoa.c:552
#1:	       ldi	-1 -> r0
	;;
#0:	       ldm.f	r10, 0          ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:552
#1:	       ldm.f	r10, 4          ; dtoa.c:552
	;;
#0:	       stx	r13 -> $f0      ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:552
#1:	       ldm.s	r14, 44         ; dtoa.c:553
#2:	       fop	fmov	f0 -> f12 ; dtoa.c:552
	;;
#0:	       stx	r10 -> $f1      ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:553
#1:	       fop	fmov	f1 -> f13 ; dtoa.c:552
	;;
#0:	       cmplt	r0, r10 -> c1   ; dtoa.c:553
	;;
#0:	if  c1 br	.BB19_99
	;;
	       nop	2
	;;
; BB#98:                                ; %bb94
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       cmplt	r10, 1 -> c1
	;;
#0:	if  c1 br	.BB19_103
	;;
	       nop	2
	;;
.BB19_99:                               ; %bb99.preheader
#0:	       ldm.s	r14, 72
#1:	       ldiu	0 -> r11
#2:	       fop	dzero -> d5
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 68
	;;
#0:	       add	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       sub	r13, 1 -> r13
	;;
.BB19_100:                              ; %bb99
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 88
#1:	       s2add	r14, 24 -> r4
#2:	       fop	fmov	f12 -> f0 ; dtoa.c:562
#3:	       sub	r10, 1 -> r12
	;;
#0:	       add	r4, 20 -> r0
#1:	       fop	fmov	f13 -> f1 ; dtoa.c:562
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldx	$f0 -> r2       ; dtoa.c:562
	;;
#0:	       stm.a	r1, r0, 0
#1:	       ldx	$f1 -> r3       ; dtoa.c:562
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f14
	;;
#0:	       stx	r0 -> $f3
	;;
#0:	       callg	___divdf3       ; dtoa.c:562
#1:	       fop	fmov	f3 -> f15
	;;
#0:	       fop	fmov	f14 -> f2 ; dtoa.c:562
	;;
#0:	       fop	fmov	f15 -> f3 ; dtoa.c:562
	;;
#0:	       ldx	$f2 -> r0       ; dtoa.c:562
	;;
#0:	       ldx	$f3 -> r1       ; dtoa.c:562
	;;
#0:	       fop	df2si	d0 -> f0 ; dtoa.c:562
#1:	       cmpne	r13, 0 -> c1    ; dtoa.c:573
	;;
	       nop	2
	;;
#0:	       fop	si2df	f0 -> d1 ; dtoa.c:563
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:562
	;;
#0:	       s2add	r0, 12 -> r0    ; dtoa.c:572
	;;
#0:	       stmb.a	r0, r12, 0      ; dtoa.c:572
	;;
#0:	       fop	dmul	d1, d6 -> d1 ; dtoa.c:563
	;;
	       nop	6
	;;
#0:	       fop	dsub	d7, d1 -> d1 ; dtoa.c:563
	;;
	       nop	2
	;;
#0:	if  c1 br	.BB19_113
	;;
	       nop	2
	;;
; BB#101:                               ; %bb100
#0:	       fop	dadd	d1, d1 -> d1 ; dtoa.c:575
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d6 -> f1 ; dtoa.c:576
	;;
	       nop	0
	;;
#0:	       ldx	$f1 -> r13      ; dtoa.c:576
	;;
#0:	       btest	r13, 11 -> c1   ; dtoa.c:576
	;;
#0:	if  c1 br	.BB19_106
	;;
	       nop	2
	;;
.BB19_102:                              ; %bb100.bb106.preheader_crit_edge
#0:	       ldm.s	r14, 84
#1:	       br	.BB19_82
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       stm.s	r13, r14, 15
	;;
	       nop	0
	;;
.BB19_103:                              ; %bb96
#0:	       cmplt	r10, 0 -> c1    ; dtoa.c:556
	;;
#0:	if  c1 br	.BB19_75
	;;
	       nop	2
	;;
; BB#104:                               ; %bb97
#0:	       ldiu	0 -> r10
#1:	       ldiu	0 -> r13
	;;
#0:	       ldim	640 -> r10
#1:	       ldim	0 -> r13
	;;
#0:	       ldih	512 -> r10
#1:	       ldih	0 -> r13
	;;
#0:	       stx	r10 -> $f2
	;;
#0:	       stx	r13 -> $f0
	;;
#0:	       fop	fmov	f2 -> f1
	;;
#0:	       fop	dmul	d6, d0 -> d6 ; dtoa.c:556
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d5, d6 -> f0 ; dtoa.c:556
	;;
	       nop	0
	;;
#0:	       ldx	$f0 -> r10      ; dtoa.c:556
	;;
#0:	       btest	r10, 3 -> c1    ; dtoa.c:556
	;;
#0:	if  c1 br	.BB19_75
	;;
	       nop	2
	;;
; BB#105:                               ; %bb97.one_digit_crit_edge
#0:	       ldm.s	r14, 84
#1:	       br	.BB19_72
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 15
	;;
	       nop	0
	;;
.BB19_106:                              ; %bb101
#0:	       fop	dcmp	d1, d6 -> f1 ; dtoa.c:576
	;;
	       nop	0
	;;
#0:	       ldx	$f1 -> r13      ; dtoa.c:576
	;;
#0:	       btest	r13, 0 -> c1    ; dtoa.c:576
	;;
#0:	if  c1 br	.BB19_110       ; dtoa.c:576
	;;                              ; dtoa.c:576
	       nop	2               ; dtoa.c:576
	;;
.BB19_107:                              ; %bb101.ret1_crit_edge
#0:	       ldm.s	r14, 104
#1:	       or	r10, 0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB19_108:                              ; %ret1
#0:	       ldm.s	r14, 84         ; dtoa.c:858
	;;
#0:	       callg	__Bfree         ; dtoa.c:856
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:858
	;;
#0:	       add	r1, 1 -> r10    ; dtoa.c:858
	;;                              ; dtoa.c:856
	       nop	2               ; dtoa.c:856
	;;
#0:	       stmb.a	0, r13, 0       ; dtoa.c:857
	;;
#0:	       ldm.s	r14, 36         ; dtoa.c:858
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:858
	;;
#0:	       stm.a	r10, r0, 0      ; dtoa.c:858
	;;
#0:	       ldm.s	r14, 48         ; dtoa.c:859
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:859
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:859
	;;
#0:	if  c1 br	.BB19_224
	;;
	       nop	2
	;;
; BB#109:                               ; %ret1.bb215_crit_edge
#0:	       ldm.s	r14, 72
#1:	       br	.BB19_13
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB19_110:                              ; %bb102
#0:	       ldx	$f0 -> r13      ; dtoa.c:562
	;;
#0:	       btest	r13, 0 -> c1    ; dtoa.c:576
	;;
#0:	if  c1 br	.BB19_102
	;;
	       nop	2
	;;
#0:	       br	.BB19_107
	;;
	       nop	2
	;;
.BB19_111:                              ; %bb104
                                        ;   in Loop: Header=BB19_83 Depth=1
#0:	       ldm.s	r14, 72         ; dtoa.c:580
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:580
	;;
#0:	       cmpne	r0, r10 -> c1   ; dtoa.c:580
	;;
#0:	if  c1 br	.BB19_83
	;;
	       nop	2
	;;
; BB#112:                               ; %bb105
#0:	       ldm.s	r14, 60         ; dtoa.c:582
#1:	       ldi	48 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:582
	;;
#0:	       br	.BB19_175
#1:	       add	r11, 1 -> r11   ; dtoa.c:582
	;;
#0:	       stm.s	r11, r14, 21
#1:	       ldi	49 -> r11
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:583
	;;
#0:	       stmb.a	r11, r10, 0     ; dtoa.c:586
	;;
.BB19_113:                              ; %bb108
                                        ;   in Loop: Header=BB19_100 Depth=1
#0:	       or	r11, 0 -> r1
#1:	       or	r11, 0 -> r0
	;;
#0:	       ldim	128 -> r1
#1:	       ldim	0 -> r0
	;;
#0:	       ldih	513 -> r1
#1:	       ldih	0 -> r0
	;;
#0:	       stx	r1 -> $f4
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       fop	fmov	f4 -> f1
	;;
#0:	       fop	dmul	d1, d0 -> d0 ; dtoa.c:590
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d0, d5 -> f2 ; dtoa.c:590
	;;
	       nop	0
	;;
#0:	       ldx	$f2 -> r0       ; dtoa.c:590
	;;
#0:	       btest	r0, 9 -> c1     ; dtoa.c:590
	;;
#0:	if !c1 br	.BB19_107
	;;
	       nop	2
	;;
; BB#114:                               ; %bb109
                                        ;   in Loop: Header=BB19_100 Depth=1
#0:	       s2add	r14, 24 -> r2
#1:	       fop	fmov	f0 -> f2
#2:	       add	r10, 1 -> r10
#3:	       sub	r13, 1 -> r13
	;;
#0:	       add	r2, 12 -> r0
#1:	       ldx	$f2 -> r1
	;;
#0:	       stm.a	r1, r0, 0
#1:	       ldx	$f1 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       br	.BB19_100
#1:	       stm.s	r1, r14, 22
	;;
#0:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB19_115:                              ; %bb92
#0:	       ldm.s	r14, 284        ; dtoa.c:549
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:549
	;;
#0:	       cmplt	r10, 0 -> c1    ; dtoa.c:549
	;;
#0:	if !c1 ldm.s	r14, 84
#1:	if !c1 ldi	14 -> r13
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmplt	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB19_97
	;;
	       nop	2
	;;
; BB#116:                               ; %bb110
#0:	       ldm.s	r14, 56         ; dtoa.c:599
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:599
	;;
#0:	       cmpne	r13, 0 -> c1    ; dtoa.c:599
	;;
#0:	if  c1 br	.BB19_118       ; dtoa.c:599
#1:	       ldx	$c1, 0 -> r0    ; dtoa.c:599
	;;
#0:	       stm.s	r0, r14, 15     ; dtoa.c:599
	;;                              ; dtoa.c:599
	       nop	1               ; dtoa.c:599
	;;
; BB#117:                               ; %bb110.bb122_crit_edge
#0:	       ldm.s	r14, 80
#1:	       br	.BB19_130
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
	       nop	0
	;;
.BB19_118:                              ; %bb111
#0:	       ldm.s	r14, 76         ; dtoa.c:601
#1:	       ldi	1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:601
	;;
#0:	       cmplt	r13, r0 -> c1   ; dtoa.c:601
	;;
#0:	if  c1 br	.BB19_123       ; dtoa.c:601
	;;                              ; dtoa.c:601
	       nop	2               ; dtoa.c:601
	;;
; BB#119:                               ; %bb112
#0:	       ldm.s	r14, 28         ; dtoa.c:603
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:603
	;;
#0:	       cmpeq	r13, 0 -> c1    ; dtoa.c:603
	;;
#0:	if  c1 br	.BB19_122       ; dtoa.c:603
	;;                              ; dtoa.c:603
	       nop	2               ; dtoa.c:603
	;;
; BB#120:                               ; %bb113
#0:	       ldiu	1075 -> r13
	;;
#0:	       add	r10, r13 -> r0  ; dtoa.c:603
	;;
.BB19_121:                              ; %bb113
#0:	       ldm.s	r14, 80
#1:	       br	.BB19_129
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
	       nop	0
	;;
.BB19_122:                              ; %bb114
#0:	       ldm.s	r14, 20         ; dtoa.c:603
#1:	       br	.BB19_121
#2:	       ldi	54 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:603
	;;
#0:	       sub	r13, r0 -> r0   ; dtoa.c:603
	;;
	       nop	0
	;;
.BB19_123:                              ; %bb116
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 92         ; dtoa.c:616
	;;
#0:	       sub	r13, 1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:616
	;;
#0:	       cmplt	r0, r13 -> c1   ; dtoa.c:616
	;;
#0:	if  c1 br	.BB19_125       ; dtoa.c:616
	;;                              ; dtoa.c:616
	       nop	2               ; dtoa.c:616
	;;
; BB#124:                               ; %bb117
#0:	       ldm.s	r14, 92         ; dtoa.c:617
#1:	       br	.BB19_126
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:617
	;;
#0:	       sub	r0, r13 -> r1   ; dtoa.c:617
#1:	       or	r0, 0 -> r13
	;;
	       nop	0
	;;
.BB19_125:                              ; %bb118
#0:	       ldm.s	r14, 40
#1:	       or	r0, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, r1 -> r0
#1:	       ldi	0 -> r1
	;;
#0:	       add	r0, r13 -> r0   ; dtoa.c:620
	;;
#0:	       stm.s	r0, r14, 10
	;;
.BB19_126:                              ; %bb119
#0:	       ldm.s	r14, 68         ; dtoa.c:624
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:624
#1:	       ldm.s	r14, 80
	;;
#0:	       cmplt	r0, 0 -> c1     ; dtoa.c:624
#1:	       sra	r0, 31 -> r10   ; dtoa.c:624
	;;
#0:	if  c1 br	.BB19_128       ; dtoa.c:624
#1:	       and	r10, r0 -> r10
#2:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, r10 -> r10
	;;                              ; dtoa.c:624
	       nop	1               ; dtoa.c:624
	;;
; BB#127:                               ; %bb119.bb121_crit_edge
#0:	       or	r1, 0 -> r0
#1:	       br	.BB19_129
	;;
#0:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB19_128:                              ; %bb120
#0:	       ldi	0 -> r0
#1:	       stm.s	r1, r14, 23
	;;
.BB19_129:                              ; %bb121
#0:	       ldm.s	r14, 80         ; dtoa.c:630
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:630
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:630
	;;
#0:	       stm.s	r1, r14, 20     ; dtoa.c:631
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:631
	;;
#0:	       callg	___i2b          ; dtoa.c:632
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:631
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:631
	;;
#0:	       stm.s	r1, r14, 16     ; dtoa.c:632
	;;                              ; dtoa.c:632
	       nop	1               ; dtoa.c:632
	;;
.BB19_130:                              ; %bb122
#0:	       cmplt	r10, 1 -> c1    ; dtoa.c:634
#1:	       stm.s	r0, r14, 25
	;;
#0:	if  c1 br	.BB19_133
	;;
	       nop	2
	;;
; BB#131:                               ; %bb122
#0:	       ldm.s	r14, 64
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB19_133
	;;
	       nop	2
	;;
; BB#132:                               ; %bb124
#0:	       or	r1, 0 -> r0     ; dtoa.c:636
#1:	       ldm.s	r14, 80         ; dtoa.c:637
#2:	       or	r10, 0 -> r1    ; dtoa.c:636
	;;
#0:	       cmple	r0, r10 -> c1   ; dtoa.c:636
	;;
#0:	if  c1 or	r0, 0 -> r1     ; dtoa.c:636
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:637
	;;
#0:	       sub	r2, r1 -> r2    ; dtoa.c:637
#1:	       sub	r0, r1 -> r0    ; dtoa.c:639
#2:	       sub	r10, r1 -> r10  ; dtoa.c:638
	;;
#0:	       stm.s	r2, r14, 20     ; dtoa.c:638
	;;
#0:	       stm.s	r0, r14, 16
	;;
.BB19_133:                              ; %bb125
#0:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1   ; dtoa.c:641
	;;
#0:	if !c1 br	.BB19_141
	;;
	       nop	2
	;;
; BB#134:                               ; %bb126
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB19_139       ; dtoa.c:643
	;;                              ; dtoa.c:643
	       nop	2               ; dtoa.c:643
	;;
; BB#135:                               ; %bb127
#0:	       ldm.s	r14, 92         ; dtoa.c:645
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:645
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:645
	;;
#0:	if !c1 br	.BB19_137
	;;
	       nop	2
	;;
; BB#136:                               ; %bb128
#0:	       ldm.s	r14, 100        ; dtoa.c:647
	;;
#0:	       callg	___pow5mult     ; dtoa.c:647
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:647
	;;                              ; dtoa.c:647
	       nop	3               ; dtoa.c:647
	;;
#0:	       stm.s	r0, r14, 25     ; dtoa.c:647
	;;
#0:	       ldm.s	r14, 104        ; dtoa.c:648
	;;
#0:	       callg	___multiply     ; dtoa.c:648
#1:	       ldx	$mem, 0 -> r11  ; dtoa.c:648
	;;
#0:	       or	r11, 0 -> r1    ; dtoa.c:648
	;;                              ; dtoa.c:648
	       nop	2               ; dtoa.c:648
	;;
#0:	       callg	__Bfree         ; dtoa.c:649
#1:	       or	r0, 0 -> r12    ; dtoa.c:648
#2:	       or	r11, 0 -> r0    ; dtoa.c:649
	;;                              ; dtoa.c:649
	       nop	3               ; dtoa.c:649
	;;
#0:	       stm.s	r12, r14, 26
	;;
.BB19_137:                              ; %bb129
#0:	       ldm.s	r14, 92         ; dtoa.c:652
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:652
	;;
#0:	       cmpne	r13, r0 -> c1   ; dtoa.c:652
	;;
#0:	if !c1 br	.BB19_141
	;;
	       nop	2
	;;
; BB#138:                               ; %bb130
#0:	       ldm.s	r14, 92         ; dtoa.c:652
#1:	       br	.BB19_140
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:652
#1:	       ldm.s	r14, 104        ; dtoa.c:653
	;;
#0:	       sub	r13, r0 -> r1   ; dtoa.c:652
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:653
	;;
.BB19_139:                              ; %bb131
#0:	       ldm.s	r14, 104        ; dtoa.c:656
#1:	       or	r13, 0 -> r1    ; dtoa.c:656
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:656
	;;
.BB19_140:                              ; %bb131
#0:	       callg	___pow5mult     ; dtoa.c:656
	;;                              ; dtoa.c:656
	       nop	3               ; dtoa.c:656
	;;
#0:	       stm.s	r0, r14, 26
	;;
.BB19_141:                              ; %bb132
#0:	       ldi	0 -> r13
#1:	       callg	___i2b          ; dtoa.c:658
	;;                              ; dtoa.c:658
	       nop	3               ; dtoa.c:658
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:659
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:659
	;;
#0:	       cmplt	r13, r1 -> c1   ; dtoa.c:659
	;;
#0:	if !c1 br	.BB19_143
	;;
	       nop	2
	;;
; BB#142:                               ; %bb133
#0:	       callg	___pow5mult     ; dtoa.c:660
	;;                              ; dtoa.c:660
	       nop	3               ; dtoa.c:660
	;;
.BB19_143:                              ; %bb133
#0:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 76
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       cmplt	r13, 2 -> c1
	;;
#0:	if  c1 br	.BB19_145       ; dtoa.c:665
	;;                              ; dtoa.c:665
	       nop	2               ; dtoa.c:665
	;;
.BB19_144:                              ; %bb134.bb139_crit_edge
#0:	       ldi	0 -> r13
#1:	       br	.BB19_148
	;;
	       nop	2
	;;
.BB19_145:                              ; %bb135
#0:	       ldm.s	r14, 88         ; dtoa.c:667
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:667
	;;
#0:	       cmpne	r13, 0 -> c1    ; dtoa.c:667
	;;
#0:	if  c1 br	.BB19_144
	;;
	       nop	2
	;;
; BB#146:                               ; %bb136
#0:	       ldm.s	r14, 96
#1:	       ldiu	2047 -> r13
	;;
#0:	       ldim	511 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       and	r0, r13 -> r13
	;;
#0:	       cmpne	r13, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 24
#1:	if !c1 ldi	0 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r13
	;;
#0:	if !c1 or	r0, r13 -> r13
	;;
#0:	if !c1 cmpeq	r13, 0 -> c1
	;;
#0:	if  c1 br	.BB19_144
	;;
	       nop	2
	;;
; BB#147:                               ; %bb138
#0:	       ldm.s	r14, 80         ; dtoa.c:674
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:674
	;;
#0:	       add	r13, 1 -> r13   ; dtoa.c:674
	;;
#0:	       stm.s	r13, r14, 20    ; dtoa.c:675
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:675
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:675
	;;
#0:	       add	r13, 1 -> r13   ; dtoa.c:675
	;;
#0:	       stm.s	r13, r14, 16
#1:	       ldi	1 -> r13
	;;
.BB19_148:                              ; %bb138
#0:	       stm.s	r13, r14, 14
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:689
	;;
#0:	       cmpne	r13, 0 -> c1    ; dtoa.c:689
	;;
#0:	if  c1 br	.BB19_150       ; dtoa.c:689
	;;                              ; dtoa.c:689
	       nop	2               ; dtoa.c:689
	;;
; BB#149:                               ; %bb139.bb142_crit_edge
#0:	       ldi	1 -> r13
#1:	       br	.BB19_151
	;;
	       nop	2
	;;
.BB19_150:                              ; %bb140
#0:	       ldm.s	r14, 92         ; dtoa.c:689
#1:	       ldi	32 -> r11
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:689
	;;
#0:	       ldm.f	r13, 16         ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;
#0:	       s2add	r13, r0 -> r13
	;;
#0:	       ldm.f	r13, 16         ; dtoa.c:689
	;;
#0:	       callg	___hi0bits      ; dtoa.c:689
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;                              ; dtoa.c:689
	       nop	3               ; dtoa.c:689
	;;
#0:	       sub	r11, r0 -> r13  ; dtoa.c:689
	;;
.BB19_151:                              ; %bb142
#0:	       ldm.s	r14, 64         ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;
#0:	       add	r13, r0 -> r13  ; dtoa.c:689
#1:	       ldi	32 -> r0
	;;
#0:	       and	r13, 31 -> r13  ; dtoa.c:689
	;;
#0:	       cmpeq	r13, 0 -> c1    ; dtoa.c:689
#1:	       sub	r0, r13 -> r0   ; dtoa.c:690
	;;
#0:	if  c1 or	r13, 0 -> r0
	;;
#0:	       cmpult	r0, 5 -> c1     ; dtoa.c:695
	;;
#0:	if  c1 br	.BB19_153       ; dtoa.c:695
	;;                              ; dtoa.c:695
	       nop	2               ; dtoa.c:695
	;;
; BB#152:                               ; %bb145
#0:	       ldm.s	r14, 80         ; dtoa.c:698
#1:	       sub	r0, 4 -> r0
	;;
#0:	       add	r0, r10 -> r10  ; dtoa.c:699
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:698
	;;
#0:	       add	r0, r13 -> r13  ; dtoa.c:698
	;;
#0:	       stm.s	r13, r14, 20    ; dtoa.c:699
	;;
#0:	       br	.BB19_155
#1:	       ldm.s	r14, 64         ; dtoa.c:700
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:700
	;;
#0:	       add	r0, r13 -> r13  ; dtoa.c:700
	;;
#0:	       stm.s	r13, r14, 16    ; dtoa.c:700
	;;
.BB19_153:                              ; %bb146
#0:	       cmpult	r0, 4 -> c1
	;;
#0:	if !c1 br	.BB19_155
	;;
	       nop	2
	;;
; BB#154:                               ; %bb147
#0:	       ldm.s	r14, 80         ; dtoa.c:705
#1:	       add	r0, 28 -> r13   ; dtoa.c:704
	;;
#0:	       add	r13, r10 -> r10 ; dtoa.c:706
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:705
	;;
#0:	       add	r13, r0 -> r0   ; dtoa.c:705
	;;
#0:	       stm.s	r0, r14, 20     ; dtoa.c:706
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:707
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:707
	;;
#0:	       add	r13, r0 -> r0   ; dtoa.c:707
	;;
#0:	       stm.s	r0, r14, 16
	;;
.BB19_155:                              ; %bb148
#0:	       ldm.s	r14, 80         ; dtoa.c:709
#1:	       ldi	0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:709
	;;
#0:	       cmplt	r13, r0 -> c1   ; dtoa.c:709
	;;
#0:	if !c1 br	.BB19_157
	;;
	       nop	2
	;;
; BB#156:                               ; %bb149
#0:	       ldm.s	r14, 104        ; dtoa.c:710
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:710
#1:	       ldm.s	r14, 80         ; dtoa.c:710
	;;
#0:	       callg	___lshift       ; dtoa.c:710
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:710
	;;                              ; dtoa.c:710
	       nop	3               ; dtoa.c:710
	;;
#0:	       stm.s	r0, r14, 26
	;;
.BB19_157:                              ; %bb150
#0:	       ldm.s	r14, 64         ; dtoa.c:711
#1:	       ldi	0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:711
	;;
#0:	       cmplt	r13, r0 -> c1   ; dtoa.c:711
	;;
#0:	if !c1 br	.BB19_159
	;;
	       nop	2
	;;
; BB#158:                               ; %bb151
#0:	       ldm.s	r14, 92         ; dtoa.c:712
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:712
#1:	       ldm.s	r14, 64         ; dtoa.c:712
	;;
#0:	       callg	___lshift       ; dtoa.c:712
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:712
	;;                              ; dtoa.c:712
	       nop	3               ; dtoa.c:712
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB19_159:                              ; %bb152
#0:	       ldm.s	r14, 32         ; dtoa.c:713
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:713
	;;
#0:	       cmpne	r13, 0 -> c1    ; dtoa.c:713
	;;
#0:	if !c1 br	.BB19_164
	;;
	       nop	2
	;;
; BB#160:                               ; %bb153
#0:	       ldm.s	r14, 104        ; dtoa.c:715
#1:	       ldi	-1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:715
#1:	       ldm.s	r14, 92         ; dtoa.c:715
	;;
#0:	       callg	___mcmp         ; dtoa.c:715
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:715
	;;                              ; dtoa.c:715
	       nop	3               ; dtoa.c:715
	;;
#0:	       cmplt	r13, r0 -> c1   ; dtoa.c:715
	;;
#0:	if  c1 br	.BB19_164
	;;
	       nop	2
	;;
; BB#161:                               ; %bb154
#0:	       ldm.s	r14, 84
#1:	       ldi	10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       sub	r13, 1 -> r13
	;;
#0:	       stm.s	r13, r14, 21    ; dtoa.c:718
	;;
#0:	       ldm.s	r14, 104        ; dtoa.c:718
	;;
#0:	       callg	___multadd      ; dtoa.c:718
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:718
	;;                              ; dtoa.c:718
	       nop	3               ; dtoa.c:718
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:718
	;;
#0:	       ldm.s	r14, 60         ; dtoa.c:719
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:719
	;;
#0:	       stx	r1 -> $c1       ; dtoa.c:719
	;;
#0:	if  c1 br	.BB19_163       ; dtoa.c:719
	;;                              ; dtoa.c:719
	       nop	2               ; dtoa.c:719
	;;
; BB#162:                               ; %bb154.bb157_crit_edge
#0:	       ldm.s	r14, 52
#1:	       br	.BB19_164
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       stm.s	r13, r14, 17
	;;
	       nop	0
	;;
.BB19_163:                              ; %bb155
#0:	       ldm.s	r14, 100        ; dtoa.c:720
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:720
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:720
	;;                              ; dtoa.c:720
	       nop	3               ; dtoa.c:720
	;;
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       stm.s	r13, r14, 17
	;;
#0:	       stm.s	r0, r14, 25
	;;
.BB19_164:                              ; %bb157
#0:	       ldm.s	r14, 68         ; dtoa.c:724
#1:	       ldi	0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:724
	;;
#0:	       cmplt	r13, r0 -> c1   ; dtoa.c:724
	;;
#0:	if !c1 ldm.s	r14, 76
	;;
#0:	if !c1 ldx	$mem, 0 -> r13
	;;
#0:	if !c1 cmplt	r13, 3 -> c1
	;;
#0:	if  c1 br	.BB19_176
	;;
	       nop	2
	;;
; BB#165:                               ; %bb159
#0:	       ldi	-1 -> r10
#1:	       or	r0, 0 -> r13    ; dtoa.c:726
	;;
#0:	       cmplt	r10, r13 -> c1  ; dtoa.c:726
	;;
#0:	if  c1 br	.BB19_167       ; dtoa.c:726
	;;                              ; dtoa.c:726
	       nop	2               ; dtoa.c:726
	;;
; BB#166:                               ; %bb159.no_digits_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB19_170
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB19_167:                              ; %bb160
#0:	       ldm.s	r14, 92         ; dtoa.c:726
#1:	       ldi	5 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:726
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:726
	;;                              ; dtoa.c:726
	       nop	3               ; dtoa.c:726
	;;
#0:	       ldm.s	r14, 104        ; dtoa.c:726
#1:	       or	r0, 0 -> r1     ; dtoa.c:726
	;;
#0:	       or	r1, 0 -> r10    ; dtoa.c:726
	;;
#0:	       callg	___mcmp         ; dtoa.c:726
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:726
	;;                              ; dtoa.c:726
	       nop	3               ; dtoa.c:726
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB19_169       ; dtoa.c:726
	;;                              ; dtoa.c:726
	       nop	2               ; dtoa.c:726
	;;
; BB#168:                               ; %bb160.one_digit_crit_edge
#0:	       ldm.s	r14, 84
#1:	       br	.BB19_73
#2:	       or	r10, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
#0:	       stm.s	r13, r14, 15
	;;
	       nop	0
	;;
.BB19_169:                              ; %bb160.no_digits_crit_edge
#0:	       or	r10, 0 -> r0
	;;
.BB19_170:                              ; %no_digits
#0:	       ldm.s	r14, 44         ; dtoa.c:730
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:730
	;;
#0:	       xor	r10, -1 -> r10  ; dtoa.c:730
	;;
#0:	       stm.s	r10, r14, 21
#1:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 24
	;;
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r13
	;;
.BB19_171:                              ; %ret
#0:	       ldm.s	r14, 100        ; dtoa.c:849
	;;
#0:	       callg	__Bfree         ; dtoa.c:848
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:849
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:849
	;;
#0:	       ldx	$c1, 0 -> r10   ; dtoa.c:848
	;;
#0:	       stm.s	r10, r14, 23    ; dtoa.c:848
	;;                              ; dtoa.c:848
	       nop	0               ; dtoa.c:848
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:849
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:849
	;;
#0:	       stx	r0 -> $c1       ; dtoa.c:849
	;;
#0:	if !c1 br	.BB19_175
	;;
	       nop	2
	;;
; BB#172:                               ; %bb209
#0:	       ldm.s	r14, 96         ; dtoa.c:851
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:851
	;;
#0:	       cmpeq	r0, 0 -> c1     ; dtoa.c:851
	;;
#0:	if !c1 ldm.s	r14, 100
#1:	if !c1 or	r0, 0 -> r1
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmpeq	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB19_174
	;;
	       nop	2
	;;
; BB#173:                               ; %bb211
#0:	       or	r1, 0 -> r0     ; dtoa.c:852
#1:	       callg	__Bfree         ; dtoa.c:852
	;;                              ; dtoa.c:852
	       nop	3               ; dtoa.c:852
	;;
.BB19_174:                              ; %bb212
#0:	       ldm.s	r14, 100        ; dtoa.c:853
	;;
#0:	       callg	__Bfree         ; dtoa.c:853
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:853
	;;                              ; dtoa.c:853
	       nop	3               ; dtoa.c:853
	;;
.BB19_175:                              ; %bb212
#0:	       ldm.s	r14, 104
#1:	       br	.BB19_108
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB19_176:                              ; %bb161
#0:	       ldm.s	r14, 60         ; dtoa.c:738
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:738
	;;
#0:	       stx	r0 -> $c1       ; dtoa.c:738
	;;
#0:	if  c1 br	.BB19_179       ; dtoa.c:738
	;;                              ; dtoa.c:738
	       nop	2               ; dtoa.c:738
	;;
; BB#177:                               ; %bb197.preheader
#0:	       ldm.s	r14, 104        ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:820
#1:	       ldm.s	r14, 92         ; dtoa.c:820
	;;
#0:	       callg	_quorem         ; dtoa.c:820
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:820
	;;                              ; dtoa.c:820
	       nop	3               ; dtoa.c:820
	;;
#0:	       s2add	r0, 12 -> r10   ; dtoa.c:820
#1:	       ldi	1 -> r13
	;;
#0:	       stm.s	r10, r14, 22
	;;
#0:	       ldm.s	r14, 72         ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:820
	;;
#0:	       stmb.a	r10, r0, 0      ; dtoa.c:820
	;;
#0:	       ldm.s	r14, 68         ; dtoa.c:821
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:821
	;;
#0:	       cmplt	r13, r10 -> c1  ; dtoa.c:821
	;;
#0:	if  c1 br	.BB19_213       ; dtoa.c:821
	;;                              ; dtoa.c:821
	       nop	2               ; dtoa.c:821
	;;
; BB#178:                               ; %bb197.preheader.bb199_crit_edge
#0:	       ldm.s	r14, 72         ; dtoa.c:820
#1:	       br	.BB19_216
#2:	       ldi	0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:820
#1:	       stm.s	r13, r14, 24
	;;
#0:	       ldm.s	r14, 104
#1:	       add	r10, 1 -> r10   ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB19_179:                              ; %bb162
#0:	       ldi	0 -> r13
	;;
#0:	       cmplt	r13, r10 -> c1  ; dtoa.c:740
	;;
#0:	if  c1 br	.BB19_181       ; dtoa.c:740
	;;                              ; dtoa.c:740
	       nop	2               ; dtoa.c:740
	;;
; BB#180:                               ; %bb162.bb164_crit_edge
#0:	       ldm.s	r14, 100
#1:	       br	.BB19_182
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 24
	;;
	       nop	0
	;;
.BB19_181:                              ; %bb163
#0:	       ldm.s	r14, 100        ; dtoa.c:741
#1:	       or	r10, 0 -> r1    ; dtoa.c:741
	;;
#0:	       callg	___lshift       ; dtoa.c:741
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:741
	;;                              ; dtoa.c:741
	       nop	3               ; dtoa.c:741
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB19_182:                              ; %bb164
#0:	       ldm.s	r14, 56         ; dtoa.c:748
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:748
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:748
	;;
#0:	if  c1 br	.BB19_184       ; dtoa.c:748
	;;                              ; dtoa.c:748
	       nop	2               ; dtoa.c:748
	;;
; BB#183:                               ; %bb164.bb167.preheader_crit_edge
#0:	       ldm.s	r14, 96
#1:	       br	.BB19_185
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 25
	;;
	       nop	0
	;;
.BB19_184:                              ; %bb165
#0:	       ldm.s	r14, 96         ; dtoa.c:750
#1:	       ldi	8 -> r13
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:750
	;;
#0:	       ldm.f	r10, 4          ; dtoa.c:750
	;;
#0:	       callg	__Balloc        ; dtoa.c:750
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:750
	;;                              ; dtoa.c:750
	       nop	3               ; dtoa.c:750
	;;
#0:	       ldm.f	r10, 16         ; dtoa.c:751
#1:	       or	r0, 0 -> r11    ; dtoa.c:750
#2:	       add	r10, 12 -> r1   ; dtoa.c:751
	;;
#0:	       add	r11, 12 -> r0   ; dtoa.c:751
	;;
#0:	       callg	_memcpy         ; dtoa.c:751
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:751
	;;
#0:	       s2add	r13, r2 -> r2   ; dtoa.c:751
	;;                              ; dtoa.c:751
	       nop	2               ; dtoa.c:751
	;;
#0:	       callg	___lshift       ; dtoa.c:752
#1:	       ldi	1 -> r1
#2:	       or	r11, 0 -> r0    ; dtoa.c:752
	;;                              ; dtoa.c:752
	       nop	3               ; dtoa.c:752
	;;
#0:	       stm.s	r0, r14, 25
	;;
.BB19_185:                              ; %bb167.preheader
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 68
	;;
#0:	       add	r10, 1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 20
	;;
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       and	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 17
	;;
.BB19_186:                              ; %bb167
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 104        ; dtoa.c:757
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:757
#1:	       ldm.s	r14, 92         ; dtoa.c:757
	;;
#0:	       callg	_quorem         ; dtoa.c:757
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:757
	;;                              ; dtoa.c:757
	       nop	3               ; dtoa.c:757
	;;
#0:	       or	r0, 0 -> r10    ; dtoa.c:757
	;;
#0:	       stm.s	r10, r14, 15
#1:	       s2add	r10, 12 -> r10  ; dtoa.c:757
	;;
#0:	       stm.s	r10, r14, 22    ; dtoa.c:761
	;;
#0:	       ldm.s	r14, 104        ; dtoa.c:761
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:761
#1:	       ldm.s	r14, 96         ; dtoa.c:761
	;;
#0:	       callg	___mcmp         ; dtoa.c:761
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:761
	;;                              ; dtoa.c:761
	       nop	3               ; dtoa.c:761
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:762
#1:	       or	r0, 0 -> r10    ; dtoa.c:761
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:762
#1:	       ldm.s	r14, 100        ; dtoa.c:762
	;;
#0:	       callg	___mdiff        ; dtoa.c:762
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:762
	;;                              ; dtoa.c:762
	       nop	3               ; dtoa.c:762
	;;
#0:	       ldm.f	r0, 12          ; dtoa.c:763
#1:	       or	r0, 0 -> r11    ; dtoa.c:762
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:763
	;;
#0:	       cmpeq	r1, 0 -> c1     ; dtoa.c:763
	;;
#0:	if  c1 br	.BB19_188       ; dtoa.c:763
	;;                              ; dtoa.c:763
	       nop	2               ; dtoa.c:763
	;;
; BB#187:                               ; %bb167.bb170_crit_edge
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldi	1 -> r12
#1:	       br	.BB19_189
	;;
	       nop	2
	;;
.BB19_188:                              ; %bb168
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 104        ; dtoa.c:763
#1:	       or	r11, 0 -> r1    ; dtoa.c:763
	;;
#0:	       callg	___mcmp         ; dtoa.c:763
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:763
	;;                              ; dtoa.c:763
	       nop	3               ; dtoa.c:763
	;;
#0:	       or	r0, 0 -> r12
	;;
.BB19_189:                              ; %bb170
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 76
	;;
#0:	       callg	__Bfree         ; dtoa.c:764
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r12, r1 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       or	r11, 0 -> r0    ; dtoa.c:764
	;;
#0:	       ldx	$c1, 0 -> r1    ; dtoa.c:764
	;;
#0:	       stm.s	r1, r14, 16     ; dtoa.c:764
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:766
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:766
	;;
#0:	       stx	r0 -> $c1       ; dtoa.c:766
	;;
#0:	if !c1 ldm.s	r14, 68
#1:	if !c1 ldi	0 -> r1
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 or	r0, r1 -> r0
	;;
#0:	if !c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB19_192
	;;
	       nop	2
	;;
; BB#190:                               ; %bb173
#0:	       ldm.s	r14, 88         ; dtoa.c:768
#1:	       ldi	57 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:768
	;;
#0:	       cmpne	r0, r12 -> c1   ; dtoa.c:768
	;;
#0:	if !c1 br	.BB19_201
	;;
	       nop	2
	;;
; BB#191:                               ; %bb174
#0:	       ldm.s	r14, 60         ; dtoa.c:771
#1:	       ldi	0 -> r12
#2:	       ldi	49 -> r0
	;;
#0:	       cmplt	r12, r10 -> c1  ; dtoa.c:770
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:771
#1:	       ldm.s	r14, 88
	;;
#0:	       br	.BB19_221
#1:	       add	r10, r0 -> r10  ; dtoa.c:771
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
#0:	if  c1 or	r10, 0 -> r12
#1:	       sub	r13, 1 -> r10
	;;
#0:	       stmb.a	r12, r10, 0     ; dtoa.c:790
	;;
.BB19_192:                              ; %bb177
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       cmplt	r10, 0 -> c1    ; dtoa.c:776
	;;
#0:	if  c1 br	.BB19_194
	;;
	       nop	2
	;;
; BB#193:                               ; %bb178
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 76
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r10, r1 -> r10
	;;
#0:	       cmpne	r10, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 68
#1:	if !c1 ldi	0 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r10
	;;
#0:	if !c1 or	r10, r0 -> r10
	;;
#0:	if !c1 cmpne	r10, 0 -> c1
	;;
#0:	if  c1 br	.BB19_199
	;;
	       nop	2
	;;
.BB19_194:                              ; %bb181
#0:	       ldi	0 -> r10
	;;
#0:	       cmplt	r10, r12 -> c1  ; dtoa.c:782
	;;
#0:	if !c1 br	.BB19_198
	;;
	       nop	2
	;;
; BB#195:                               ; %bb182
#0:	       ldm.s	r14, 104        ; dtoa.c:784
#1:	       ldi	1 -> r1
	;;
#0:	       callg	___lshift       ; dtoa.c:784
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:784
	;;                              ; dtoa.c:784
	       nop	3               ; dtoa.c:784
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:784
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:785
	;;
#0:	       callg	___mcmp         ; dtoa.c:785
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:785
	;;                              ; dtoa.c:785
	       nop	3               ; dtoa.c:785
	;;
#0:	       cmplt	r10, r0 -> c1   ; dtoa.c:786
	;;
#0:	if  c1 br	.BB19_197
	;;
	       nop	2
	;;
; BB#196:                               ; %bb183
#0:	       cmpeq	r0, 0 -> c1     ; dtoa.c:786
	;;
#0:	if  c1 ldm.s	r14, 88         ; dtoa.c:786
	;;
#0:	if  c1 ldx	$mem, 0 -> r10  ; dtoa.c:786
	;;
#0:	if  c1 btest	r10, 0 -> c1    ; dtoa.c:786
	;;
#0:	if !c1 br	.BB19_198
	;;
	       nop	2
	;;
.BB19_197:                              ; %bb186
#0:	       ldm.s	r14, 60         ; dtoa.c:786
#1:	       ldi	49 -> r10
#2:	       ldi	58 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:786
	;;
#0:	       add	r0, r10 -> r10  ; dtoa.c:786
	;;
#0:	       cmpeq	r10, r12 -> c1  ; dtoa.c:786
#1:	       stm.s	r10, r14, 22
	;;
#0:	if  c1 br	.BB19_201
	;;
	       nop	2
	;;
.BB19_198:                              ; %bb187
#0:	       ldm.s	r14, 88         ; dtoa.c:790
#1:	       br	.BB19_221
#2:	       sub	r13, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:790
	;;
#0:	       stmb.a	r12, r10, 0     ; dtoa.c:790
	;;
	       nop	0
	;;
.BB19_199:                              ; %bb188
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       cmplt	r12, 1 -> c1    ; dtoa.c:793
	;;
#0:	if  c1 br	.BB19_207       ; dtoa.c:793
	;;                              ; dtoa.c:793
	       nop	2               ; dtoa.c:793
	;;
; BB#200:                               ; %bb189
#0:	       ldm.s	r14, 88         ; dtoa.c:795
#1:	       ldi	57 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:795
	;;
#0:	       cmpne	r0, r10 -> c1   ; dtoa.c:795
	;;
#0:	if  c1 br	.BB19_205       ; dtoa.c:795
	;;                              ; dtoa.c:795
	       nop	2               ; dtoa.c:795
	;;
.BB19_201:                              ; %bb189.round_9_up_crit_edge
#0:	       or	r13, 0 -> r10
#1:	       ldi	57 -> r0
#2:	       sub	r13, 1 -> r13
	;;
#0:	       stmb.a	r0, r13, 0      ; dtoa.c:798
	;;
.BB19_202:                              ; %bb205.preheader
#0:	       ldm.s	r14, 72
#1:	       add	r10, 1 -> r13
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r0, r10 -> r10
#1:	       ldi	57 -> r0
	;;
.BB19_203:                              ; %bb205
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r13, -2         ; dtoa.c:833
#1:	       sub	r13, 2 -> r1
	;;
#0:	       ldx	$membu, r1 -> r2 ; dtoa.c:833
	;;
#0:	       cmpeq	r2, r0 -> c1    ; dtoa.c:833
	;;
#0:	if  c1 br	.BB19_222
	;;
	       nop	2
	;;
; BB#204:                               ; %bb206
#0:	       add	r2, 1 -> r10    ; dtoa.c:840
#1:	       br	.BB19_221
#2:	       sub	r13, 1 -> r13
	;;
#0:	       stmb.a	r10, r1, 0      ; dtoa.c:840
	;;
	       nop	1
	;;
.BB19_205:                              ; %bb190
#0:	       ldm.s	r14, 88         ; dtoa.c:801
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:801
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:801
	;;
.BB19_206:                              ; %bb190
#0:	       sub	r13, 1 -> r0
#1:	       br	.BB19_221
	;;
#0:	       stmb.a	r10, r0, 0      ; dtoa.c:801
	;;
	       nop	1
	;;
.BB19_207:                              ; %bb191
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 80         ; dtoa.c:805
#1:	       sub	r13, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:805
#1:	       ldm.s	r14, 88         ; dtoa.c:804
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:805
	;;
#0:	if  c1 br	.BB19_209       ; dtoa.c:805
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:804
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:804
	;;                              ; dtoa.c:805
	       nop	1               ; dtoa.c:805
	;;
; BB#208:                               ; %bb191.bb199_crit_edge
#0:	       ldm.s	r14, 104
#1:	       br	.BB19_216
#2:	       or	r13, 0 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB19_209:                              ; %bb192
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 104        ; dtoa.c:807
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:807
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:807
	;;                              ; dtoa.c:807
	       nop	3               ; dtoa.c:807
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:807
	;;
#0:	       ldm.s	r14, 96         ; dtoa.c:808
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:808
#1:	       ldm.s	r14, 100        ; dtoa.c:808
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:808
	;;
#0:	       cmpne	r10, r0 -> c1   ; dtoa.c:808
	;;
#0:	if  c1 br	.BB19_212       ; dtoa.c:808
	;;                              ; dtoa.c:808
	       nop	2               ; dtoa.c:808
	;;
; BB#210:                               ; %bb193
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldi	10 -> r1
#1:	       callg	___multadd      ; dtoa.c:809
	;;                              ; dtoa.c:809
	       nop	3               ; dtoa.c:809
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB19_211:                              ; %bb193
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       stm.s	r0, r14, 25
#1:	       add	r13, 1 -> r13
	;;
#0:	       br	.BB19_186
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 20
	;;
.BB19_212:                              ; %bb194
                                        ;   in Loop: Header=BB19_186 Depth=1
#0:	       ldm.s	r14, 96         ; dtoa.c:812
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:812
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:812
	;;                              ; dtoa.c:812
	       nop	3               ; dtoa.c:812
	;;
#0:	       stm.s	r0, r14, 24     ; dtoa.c:812
#1:	       ldi	10 -> r1
	;;
#0:	       ldm.s	r14, 100        ; dtoa.c:813
	;;
#0:	       callg	___multadd      ; dtoa.c:813
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:813
	;;                              ; dtoa.c:813
	       nop	3               ; dtoa.c:813
	;;
#0:	       br	.BB19_211
	;;
	       nop	2
	;;
.BB19_213:                              ; %bb.nph489
#0:	       ldm.s	r14, 104
#1:	       or	r10, 0 -> r13
#2:	       add	r0, 1 -> r11
	;;
#0:	       sub	r13, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB19_214:                              ; %bb198
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldi	10 -> r1
#1:	       callg	___multadd      ; dtoa.c:823
	;;                              ; dtoa.c:823
	       nop	3               ; dtoa.c:823
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:820
#1:	       or	r0, 0 -> r13    ; dtoa.c:823
#2:	       sub	r10, 1 -> r10
	;;
#0:	       callg	_quorem         ; dtoa.c:820
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:820
	;;                              ; dtoa.c:820
	       nop	3               ; dtoa.c:820
	;;
#0:	       cmpeq	r10, 0 -> c1
#1:	       s2add	r0, 12 -> r0    ; dtoa.c:820
#2:	       add	r11, 1 -> r1
	;;
#0:	if !c1 br	.BB19_214
#1:	       stm.s	r0, r14, 22
	;;
#0:	       stmb.a	r0, r11, 0      ; dtoa.c:820
#1:	       or	r1, 0 -> r11
#2:	       or	r13, 0 -> r0
	;;
	       nop	1
	;;
; BB#215:                               ; %bb197.bb199.loopexit427_crit_edge
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 24
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r10 -> r10
#1:	       or	r13, 0 -> r0
	;;
.BB19_216:                              ; %bb199
#0:	       ldi	1 -> r1
#1:	       callg	___lshift       ; dtoa.c:828
	;;                              ; dtoa.c:828
	       nop	3               ; dtoa.c:828
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:828
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:829
	;;
#0:	       callg	___mcmp         ; dtoa.c:829
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:829
	;;                              ; dtoa.c:829
	       nop	3               ; dtoa.c:829
	;;
#0:	       cmplt	r0, 1 -> c1     ; dtoa.c:830
	;;
#0:	if !c1 br	.BB19_202
	;;
	       nop	2
	;;
; BB#217:                               ; %bb200
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:830
	;;
#0:	if  c1 br	.BB19_219
	;;
	       nop	2
	;;
; BB#218:                               ; %bb201
#0:	       ldm.s	r14, 88         ; dtoa.c:830
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:830
	;;
#0:	       cmpne	r13, 0 -> c1    ; dtoa.c:830
	;;
#0:	if  c1 br	.BB19_202
	;;
	       nop	2
	;;
.BB19_219:                              ; %bb207.preheader
#0:	       add	r10, 1 -> r13
#1:	       ldi	48 -> r10
	;;
.BB19_220:                              ; %bb207
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r13, -2         ; dtoa.c:844
#1:	       sub	r13, 2 -> r0
#2:	       sub	r13, 1 -> r13
	;;
#0:	       ldx	$membu, r0 -> r0 ; dtoa.c:844
	;;
#0:	       cmpeq	r0, r10 -> c1   ; dtoa.c:844
	;;
#0:	if  c1 br	.BB19_220
	;;
	       nop	2
	;;
.BB19_221:                              ; %bb207.ret_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB19_171
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB19_222:                              ; %bb203
                                        ;   in Loop: Header=BB19_203 Depth=1
#0:	       sub	r13, 1 -> r13
	;;
#0:	       add	r13, r10 -> r1
	;;
#0:	       cmpne	r1, 1 -> c1     ; dtoa.c:834
	;;
#0:	if  c1 br	.BB19_203
	;;
	       nop	2
	;;
; BB#223:                               ; %bb204
#0:	       ldm.s	r14, 84         ; dtoa.c:836
#1:	       br	.BB19_206
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:836
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:836
	;;
#0:	       stm.s	r10, r14, 21
#1:	       ldi	49 -> r10
	;;
.BB19_224:                              ; %bb213
#0:	       ldm.s	r14, 48         ; dtoa.c:860
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:860
	;;
#0:	       stm.a	r13, r0, 0      ; dtoa.c:860
	;;
#0:	       ldm.s	r14, 72         ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:861
#1:	       ldm.s	r1, -732        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f14   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -720        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f12   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -716        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f13   ; dtoa.c:861
	;;
#0:	       br	.BB19_8
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#2:	       ldm.s	r1, -712        ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $f10   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#3:	       stx	r3.31 -> $f15   ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $f11   ; dtoa.c:861
	;;
.BB19_225:                              ; %bb51.bb54_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB19_46
	;;
	       nop	2
	;;
.BB19_226:                              ; %bb65.bb71_crit_edge
#0:	       ldi	2 -> r11
#1:	       br	.BB19_64
	;;
	       nop	2
	;;
	.align	4
__dtoa_r_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI19_0:
	.long	.BB19_34-__dtoa_r_start
	.long	.BB19_34-__dtoa_r_start
	.long	.BB19_36-__dtoa_r_start
	.long	.BB19_38-__dtoa_r_start
	.long	.BB19_33-__dtoa_r_start
	.long	.BB19_32-__dtoa_r_start

	.text
	.align	4
_quorem:                                ; @quorem
	.size	_quorem_end-_quorem
_quorem_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 10
#2:	       ldiu	40 -> r2
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
	;;
#0:	       stm.s	r12, r14, 7
	;;
#0:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r1, r14, 5
	;;
#0:	       ldm.f	r1, 16          ; dtoa.c:49
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:49
	;;
#0:	       stm.s	r0, r14, 4      ; dtoa.c:54
	;;
#0:	       ldm.f	r10, 16         ; dtoa.c:54
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:54
	;;
#0:	       cmple	r0, r1 -> c1    ; dtoa.c:54
	;;
#0:	if  c1 br	.BB20_3         ; dtoa.c:54
	;;                              ; dtoa.c:54
	       nop	2               ; dtoa.c:54
	;;
; BB#1:                                 ; %entry.bb19_crit_edge
#0:	       ldi	0 -> r0
	;;
.BB20_2:                                ; %bb19
#0:	       ldm.s	r14, 24         ; dtoa.c:141
#1:	       or	r14, 0 -> r15   ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:141
#1:	       ldm.s	r14, 28         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:141
#1:	       ldm.s	r14, 32         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:141
#1:	       ldm.s	r14, 36         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:141
#1:	       ldm.s	r15, 8          ; dtoa.c:141
	;;
#0:	       br	.BB20_22
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:141
#2:	       ldm.s	r15, 4          ; dtoa.c:141
	;;
#1:	       stx	r1.31 -> $ro    ; dtoa.c:141
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:141
	;;
#2:	       stx	r2.31 -> $rb    ; dtoa.c:141
	;;
.BB20_3:                                ; %bb1
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 20
	;;
#0:	       sub	r0, 1 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       s2add	r10, r11 -> r0
	;;
#0:	       s2add	r1, r11 -> r12
	;;
#0:	       ldm.f	r12, 20         ; dtoa.c:60
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:60
#1:	       ldm.f	r0, 20          ; dtoa.c:60
	;;
#0:	       add	r1, 1 -> r1     ; dtoa.c:60
	;;
#0:	       callg	___udivsi3      ; dtoa.c:60
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:60
	;;                              ; dtoa.c:60
	       nop	3               ; dtoa.c:60
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:65
#1:	       add	r12, 20 -> r12
#2:	       or	r0, 0 -> r13    ; dtoa.c:60
	;;
#0:	if !c1 br	.BB20_12
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb2
#0:	       ldm.s	r14, 20
#1:	       ldi	0 -> r2
#2:	       add	r10, 20 -> r0
	;;
#0:	       or	r2, 0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 20 -> r1
	;;
.BB20_5:                                ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, 0           ; dtoa.c:72
#1:	       add	r1, 4 -> r1
	;;
#0:	       cmpule	r1, r12 -> c1   ; dtoa.c:92
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:72
#1:	       ldm.f	r0, 0           ; dtoa.c:76
	;;
#0:	       mask	r4, 4 -> r6     ; dtoa.c:73
#1:	       sr	r4, 16 -> r4    ; dtoa.c:74
	;;
#0:	       mul	r6, r13 -> $mul0 ; dtoa.c:73
#1:	       mul	r4, r13 -> $mul1 ; dtoa.c:74
#2:	       ldx	$mem, 0 -> r5   ; dtoa.c:76
	;;
#0:	       ldx	$mul0, 0 -> r6  ; dtoa.c:73
#1:	       ldx	$mul1, 0 -> r7  ; dtoa.c:74
	;;
#0:	       add	r6, r2 -> r2    ; dtoa.c:73
#1:	       mask	r5, 4 -> r6     ; dtoa.c:76
	;;
#0:	       sr	r2, 16 -> r4    ; dtoa.c:74
#1:	       mask	r2, 4 -> r2     ; dtoa.c:76
	;;
#0:	       sub	r6, r2 -> r2    ; dtoa.c:76
#1:	       add	r4, r7 -> r4    ; dtoa.c:74
	;;
#0:	       add	r2, r3 -> r2    ; dtoa.c:76
#1:	       sr	r5, 16 -> r3    ; dtoa.c:79
#2:	       mask	r4, 4 -> r5     ; dtoa.c:79
	;;
#0:	       sub	r3, r5 -> r3    ; dtoa.c:79
#1:	       sra	r2, 16 -> r5    ; dtoa.c:77
#2:	       mask	r2, 4 -> r6     ; dtoa.c:82
#3:	       sr	r4, 16 -> r2    ; dtoa.c:75
	;;
#0:	if  c1 br	.BB20_5         ; dtoa.c:92
#1:	       add	r3, r5 -> r3    ; dtoa.c:79
#2:	       add	r0, 4 -> r4
	;;
#0:	       sl	r3, 16 -> r5    ; dtoa.c:82
#1:	       sra	r3, 16 -> r3    ; dtoa.c:80
	;;
#0:	       or	r5, r6 -> r5    ; dtoa.c:82
	;;
#0:	       stm.a	r5, r0, 0       ; dtoa.c:82
#1:	       or	r4, 0 -> r0
	;;
; BB#6:                                 ; %bb4
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       s2add	r10, r0 -> r0
	;;
#0:	       ldm.f	r0, 16          ; dtoa.c:93
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:93
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:93
	;;
#0:	if  c1 br	.BB20_12
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb5
#0:	       add	r10, 20 -> r11
#1:	       br	.BB20_9
#2:	       add	r0, 12 -> r0
#3:	       ldi	-1 -> r1
	;;
	       nop	2
	;;
.BB20_8:                                ; %bb6
                                        ;   in Loop: Header=BB20_9 Depth=1
#0:	       sub	r0, 4 -> r0
#1:	       sub	r1, 1 -> r1
	;;
.BB20_9:                                ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpule	r0, r11 -> c1   ; dtoa.c:96
	;;
#0:	if  c1 br	.BB20_11
	;;
	       nop	2
	;;
; BB#10:                                ; %bb8
                                        ;   in Loop: Header=BB20_9 Depth=1
#0:	       ldm.f	r0, 0           ; dtoa.c:96
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:96
	;;
#0:	       cmpeq	r2, 0 -> c1     ; dtoa.c:96
	;;
#0:	if  c1 br	.BB20_8         ; dtoa.c:96
	;;                              ; dtoa.c:96
	       nop	2               ; dtoa.c:96
	;;
.BB20_11:                               ; %bb9
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r11, r1 -> r11
	;;
#0:	       stm.a	r11, r10, 4     ; dtoa.c:98
	;;
.BB20_12:                               ; %bb10
#0:	       ldm.s	r14, 20         ; dtoa.c:101
#1:	       or	r10, 0 -> r0    ; dtoa.c:101
	;;
#0:	       callg	___mcmp         ; dtoa.c:101
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:101
	;;                              ; dtoa.c:101
	       nop	3               ; dtoa.c:101
	;;
#0:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB20_14        ; dtoa.c:101
	;;                              ; dtoa.c:101
	       nop	2               ; dtoa.c:101
	;;
; BB#13:                                ; %bb10.bb19_crit_edge
#0:	       or	r13, 0 -> r0
#1:	       br	.BB20_2
	;;
	       nop	2
	;;
.BB20_14:                               ; %bb11
#0:	       ldm.s	r14, 20
#1:	       ldi	0 -> r2
#2:	       add	r10, 20 -> r0
	;;
#0:	       or	r2, 0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 20 -> r1
	;;
.BB20_15:                               ; %bb12
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, 0           ; dtoa.c:111
#1:	       add	r1, 4 -> r1
	;;
#0:	       cmpule	r1, r12 -> c1   ; dtoa.c:131
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:111
#1:	       ldm.f	r0, 0           ; dtoa.c:115
	;;
#0:	       mask	r4, 4 -> r6     ; dtoa.c:112
	;;
#0:	       add	r6, r2 -> r6    ; dtoa.c:112
#1:	       add	r4, r2 -> r2
#2:	       ldx	$mem, 0 -> r5   ; dtoa.c:115
#3:	       sr	r4, 16 -> r4    ; dtoa.c:113
	;;
#0:	       sr	r6, 16 -> r6    ; dtoa.c:113
#1:	       mask	r5, 4 -> r7     ; dtoa.c:115
#2:	       mask	r2, 4 -> r2
	;;
#0:	       sub	r7, r2 -> r2    ; dtoa.c:115
#1:	       add	r6, r4 -> r4    ; dtoa.c:113
	;;
#0:	       add	r2, r3 -> r2    ; dtoa.c:115
#1:	       sr	r5, 16 -> r3    ; dtoa.c:118
#2:	       mask	r4, 4 -> r5     ; dtoa.c:118
	;;
#0:	       sub	r3, r5 -> r3    ; dtoa.c:118
#1:	       sra	r2, 16 -> r5    ; dtoa.c:116
#2:	       mask	r2, 4 -> r6     ; dtoa.c:121
#3:	       sr	r4, 16 -> r2    ; dtoa.c:114
	;;
#0:	if  c1 br	.BB20_15        ; dtoa.c:131
#1:	       add	r3, r5 -> r3    ; dtoa.c:118
#2:	       add	r0, 4 -> r4
	;;
#0:	       sl	r3, 16 -> r5    ; dtoa.c:121
#1:	       sra	r3, 16 -> r3    ; dtoa.c:119
	;;
#0:	       or	r5, r6 -> r5    ; dtoa.c:121
	;;
#0:	       stm.a	r5, r0, 0       ; dtoa.c:121
#1:	       or	r4, 0 -> r0
	;;
; BB#16:                                ; %bb13
#0:	       add	r10, 20 -> r1
	;;
#0:	       s2add	r1, r11 -> r0
	;;
#0:	       ldm.f	r0, 0           ; dtoa.c:134
#1:	       add	r13, 1 -> r0    ; dtoa.c:103
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:134
	;;
#0:	       cmpeq	r2, 0 -> c1     ; dtoa.c:134
	;;
#0:	if !c1 br	.BB20_2
	;;
	       nop	2
	;;
; BB#17:                                ; %bb15.preheader
#0:	       add	r10, 16 -> r2
#1:	       br	.BB20_19
#2:	       sl	r11, 2 -> r3
	;;
	       nop	2
	;;
.BB20_18:                               ; %bb14
                                        ;   in Loop: Header=BB20_19 Depth=1
#0:	       sub	r11, 1 -> r11
#1:	       sub	r3, 4 -> r3
	;;
.BB20_19:                               ; %bb15
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r2, r3 -> r4
	;;
#0:	       cmpule	r4, r1 -> c1    ; dtoa.c:136
	;;
#0:	if  c1 br	.BB20_21
	;;
	       nop	2
	;;
; BB#20:                                ; %bb16
                                        ;   in Loop: Header=BB20_19 Depth=1
#0:	       s2add	r2, r11 -> r4
	;;
#0:	       ldm.f	r4, 0           ; dtoa.c:136
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:136
	;;
#0:	       cmpeq	r4, 0 -> c1     ; dtoa.c:136
	;;
#0:	if  c1 br	.BB20_18        ; dtoa.c:136
	;;                              ; dtoa.c:136
	       nop	2               ; dtoa.c:136
	;;
.BB20_21:                               ; %bb17
#0:	       stm.a	r11, r10, 4     ; dtoa.c:138
#1:	       or	r14, 0 -> r15   ; dtoa.c:141
	;;
#0:	       ldm.s	r14, 24         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:141
#1:	       ldm.s	r14, 28         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:141
#1:	       ldm.s	r14, 32         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:141
#1:	       ldm.s	r14, 36         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:141
#1:	       ldm.s	r15, 8          ; dtoa.c:141
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:141
#0:	       ldm.s	r15, 4          ; dtoa.c:141
	;;
#3:	       stx	r3.31 -> $ro    ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:141
	;;
#0:	       stx	r0.31 -> $rb    ; dtoa.c:141
	;;
.BB20_22:                               ; %bb19
#0:	       ldm.s	r15, 0          ; dtoa.c:141
#1:	       s2add	r15, 10 -> r15  ; dtoa.c:141
	;;
#0:	       ret                      ; dtoa.c:141
#1:	       ldx	$mem, 0 -> r14  ; dtoa.c:141
	;;                              ; dtoa.c:141
	       nop	3               ; dtoa.c:141
	;;
	.align	4
_quorem_end:

	.align	4
___sflush_r:                            ; @__sflush_r
	.size	___sflush_r_end-___sflush_r
___sflush_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 9          ; fflush.c:80
#2:	       ldiu	36 -> r3        ; fflush.c:80
#0:	       ldx	$ro, 0 -> r0.31 ; fflush.c:80
#3:	       add	r1, 12 -> r2    ; fflush.c:80
	;;
#0:	       sub	r15, r3 -> r15  ; fflush.c:80
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; fflush.c:80
	;;
#0:	       stm.s	r14, r15, 0     ; fflush.c:80
#1:	       or	r15, 0 -> r14   ; fflush.c:80
	;;
#3:	       stm.s	r3.31, r15, 1   ; fflush.c:80
	;;
#0:	       stm.s	r0.31, r15, 2   ; fflush.c:80
	;;
#0:	       stm.s	r10, r14, 8     ; fflush.c:80
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 7     ; fflush.c:80
	;;
#0:	       stm.s	r12, r14, 6     ; fflush.c:80
	;;
#0:	       stm.s	r13, r14, 5     ; fflush.c:80
	;;
#0:	       ldm.f	r1, 12          ; fflush.c:80
	;;
#0:	       ldx	$memhs, r2 -> r2 ; fflush.c:80
#1:	       stm.s	r0, r14, 4
	;;
#0:	       btest	r2, 3 -> c1     ; fflush.c:81
	;;
#0:	if  c1 br	.BB21_31        ; fflush.c:81
	;;                              ; fflush.c:81
	       nop	2               ; fflush.c:81
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r10, 4          ; fflush.c:95
#1:	       ldi	0 -> r3
#2:	       ldga	2048 -> r1
	;;
#0:	       or	r2, r1 -> r2    ; fflush.c:86
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:95
#1:	       stmh.a	r2, r10, 6      ; fflush.c:86
	;;
#0:	       cmplt	r3, r0 -> c1    ; fflush.c:95
	;;
#0:	if  c1 br	.BB21_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       ldm.f	r10, 60         ; fflush.c:95
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:95
	;;
#0:	       cmplt	r2, 1 -> c1     ; fflush.c:95
	;;
#0:	if  c1 br	.BB21_40
	;;
	       nop	2
	;;
.BB21_3:                                ; %bb2
#0:	       ldm.f	r10, 40         ; fflush.c:95
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:95
	;;
#0:	       cmpeq	r2, 0 -> c1     ; fflush.c:95
	;;
#0:	if  c1 br	.BB21_40
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb3
#0:	       ldm.s	r14, 16         ; fflush.c:107
#1:	       add	r10, 12 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:107
	;;
#0:	       ldm.f	r0, 0           ; fflush.c:107
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:107
#1:	       stm.a	0, r0, 0        ; fflush.c:108
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r12 -> r2
	;;
#0:	       btest	r2, 12 -> c1    ; fflush.c:110
	;;
#0:	if !c1 br	.BB21_8         ; fflush.c:110
	;;                              ; fflush.c:110
	       nop	2               ; fflush.c:110
	;;
; BB#5:                                 ; %bb4
#0:	       ldm.f	r10, 80         ; fflush.c:111
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:111
	;;
.BB21_6:                                ; %bb12
#0:	       ldm.f	r10, 12         ; fflush.c:135
	;;
#0:	       ldx	$membu, r12 -> r2 ; fflush.c:135
	;;
#0:	       btest	r2, 2 -> c1     ; fflush.c:135
	;;
#0:	if  c1 br	.BB21_15
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb12.bb15_crit_edge
#0:	       or	r0, 0 -> r2
#1:	       br	.BB21_16
	;;
	       nop	2
	;;
.BB21_8:                                ; %bb5
#0:	       ldm.f	r10, 40         ; fflush.c:121
#1:	       ldi	0 -> r2
#2:	       ldi	1 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:121
#1:	       ldm.f	r10, 28         ; fflush.c:121
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:121
	;;
#0:	       call	r4              ; fflush.c:121
	;;                              ; fflush.c:121
	       nop	3               ; fflush.c:121
	;;
#0:	       cmpeq	r0, -1 -> c1    ; fflush.c:122
	;;
#0:	if !c1 br	.BB21_6
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb6
#0:	       ldm.s	r14, 16         ; fflush.c:122
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:122
	;;
#0:	       ldm.f	r2, 0           ; fflush.c:122
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:122
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB21_6
	;;
	       nop	2
	;;
; BB#10:                                ; %bb6
#0:	       ldi	22 -> r0
	;;
#0:	       cmpeq	r2, r0 -> c1
	;;
#0:	if  c1 br	.BB21_12
	;;
	       nop	2
	;;
; BB#11:                                ; %bb6
#0:	       ldi	29 -> r0
	;;
#0:	       cmpne	r2, r0 -> c1
	;;
#0:	if  c1 br	.BB21_13
	;;
	       nop	2
	;;
.BB21_12:                               ; %bb9
#0:	       ldm.s	r14, 16         ; fflush.c:128
#1:	       br	.BB21_27
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:128
	;;
#0:	       stm.a	r11, r0, 0      ; fflush.c:128
	;;
	       nop	0
	;;
.BB21_13:                               ; %bb10
#0:	       ldm.f	r10, 12         ; fflush.c:131
#1:	       ldi	64 -> r11
	;;
#0:	       ldx	$memhu, r12 -> r2 ; fflush.c:131
	;;
#0:	       or	r2, r11 -> r2   ; fflush.c:131
	;;
.BB21_14:                               ; %bb10
#0:	       stmh.a	r2, r10, 6      ; fflush.c:131
#1:	       br	.BB21_41
#2:	       ldi	-1 -> r0
	;;
	       nop	2
	;;
.BB21_15:                               ; %bb13
#0:	       ldm.f	r10, 4          ; fflush.c:139
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:139
#1:	       ldm.f	r10, 48         ; fflush.c:140
	;;
#0:	       sub	r0, r2 -> r2    ; fflush.c:139
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:140
	;;
#0:	       cmpne	r1, 0 -> c1     ; fflush.c:140
	;;
#0:	if  c1 ldm.f	r10, 60         ; fflush.c:141
	;;
#0:	if  c1 ldx	$mem, 0 -> r0   ; fflush.c:141
	;;
#0:	if  c1 sub	r2, r0 -> r2    ; fflush.c:141
	;;
.BB21_16:                               ; %bb15
#0:	       ldm.f	r10, 40         ; fflush.c:149
#1:	       ldi	0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:149
#1:	       ldm.f	r10, 28         ; fflush.c:149
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:149
#1:	       ldm.s	r14, 16         ; fflush.c:149
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:149
	;;
#0:	       call	r4              ; fflush.c:149
	;;                              ; fflush.c:149
	       nop	3               ; fflush.c:149
	;;
#0:	       cmpne	r0, -1 -> c1    ; fflush.c:150
	;;
#0:	if  c1 br	.BB21_19
	;;
	       nop	2
	;;
; BB#17:                                ; %bb16
#0:	       ldm.s	r14, 16         ; fflush.c:150
#1:	       ldi	29 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:150
	;;
#0:	       ldm.f	r2, 0           ; fflush.c:150
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:150
	;;
#0:	       cmpult	r1, r2 -> c1
	;;
#0:	if  c1 br	.BB21_30
	;;
	       nop	2
	;;
; BB#18:                                ; %bb16
#0:	       ldiu	1 -> r1
#1:	       ldi	1 -> r3
	;;
#0:	       ldim	0 -> r1
#1:	       sl	r3, r2 -> r2
	;;
#0:	       ldih	258 -> r1
	;;
#0:	       and	r2, r1 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if !c1 br	.BB21_30
	;;
	       nop	2
	;;
.BB21_19:                               ; %bb19
#0:	       ldm.f	r10, 12         ; fflush.c:155
#1:	       ldiu	2047 -> r2
	;;
#0:	       ldim	30 -> r2
	;;
#0:	       ldx	$memhu, r12 -> r12 ; fflush.c:155
#1:	       ldm.f	r10, 16         ; fflush.c:157
	;;
#0:	       and	r12, r2 -> r2   ; fflush.c:155
#1:	       btest	r12, 12 -> c1   ; fflush.c:158
	;;
#0:	if !c1 br	.BB21_23
#1:	       ldx	$mem, 0 -> r1   ; fflush.c:157
	;;
#0:	       stm.a	r1, r10, 0      ; fflush.c:157
	;;
#0:	       stmh.a	r2, r10, 6      ; fflush.c:155
	;;
#0:	       stm.a	0, r10, 1       ; fflush.c:156
	;;
; BB#20:                                ; %bb20
#0:	       cmpne	r0, -1 -> c1    ; fflush.c:158
	;;
#0:	if  c1 br	.BB21_22
	;;
	       nop	2
	;;
; BB#21:                                ; %bb21
#0:	       ldm.s	r14, 16         ; fflush.c:158
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:158
	;;
#0:	       br	.BB21_23
#1:	       ldm.f	r2, 0           ; fflush.c:158
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:158
	;;
#0:	       cmpne	r2, 0 -> c1     ; fflush.c:158
	;;
#0:	if !c1 stm.a	r0, r10, 20     ; fflush.c:159
	;;
.BB21_22:                               ; %bb22
#0:	       stm.a	r0, r10, 20     ; fflush.c:159
	;;
.BB21_23:                               ; %bb23
#0:	       ldm.s	r14, 16         ; fflush.c:160
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:160
	;;
#0:	       stm.a	r11, r0, 0      ; fflush.c:160
	;;
#0:	       ldm.f	r10, 48         ; fflush.c:161
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:161
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fflush.c:161
	;;
#0:	if  c1 br	.BB21_40
	;;
	       nop	2
	;;
; BB#24:                                ; %bb24
#0:	       s2add	r10, 16 -> r2
	;;
#0:	       cmpeq	r1, r2 -> c1    ; fflush.c:162
	;;
#0:	if  c1 br	.BB21_26
	;;
	       nop	2
	;;
; BB#25:                                ; %bb25
#0:	       callg	__free_r        ; fflush.c:162
	;;                              ; fflush.c:162
	       nop	3               ; fflush.c:162
	;;
.BB21_26:                               ; %bb26
#0:	       stm.a	0, r10, 12      ; fflush.c:162
	;;
.BB21_27:                               ; %bb26
#0:	       ldi	0 -> r0
	;;
.BB21_28:                               ; %bb26
#0:	       ldm.s	r14, 20         ; fflush.c:198
#1:	       or	r14, 0 -> r15   ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r13  ; fflush.c:198
#1:	       ldm.s	r14, 24         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r12  ; fflush.c:198
#1:	       ldm.s	r14, 28         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:198
#1:	       ldm.s	r14, 32         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:198
#1:	       ldm.s	r15, 8          ; fflush.c:198
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fflush.c:198
#0:	       ldm.s	r15, 4          ; fflush.c:198
	;;
#1:	       stx	r1.31 -> $ro    ; fflush.c:198
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fflush.c:198
	;;
#2:	       stx	r2.31 -> $rb    ; fflush.c:198
	;;
.BB21_29:                               ; %bb26
#0:	       ldm.s	r15, 0          ; fflush.c:198
#1:	       s2add	r15, 9 -> r15   ; fflush.c:198
	;;
#0:	       ret                      ; fflush.c:198
#1:	       ldx	$mem, 0 -> r14  ; fflush.c:198
	;;                              ; fflush.c:198
	       nop	3               ; fflush.c:198
	;;
.BB21_30:                               ; %bb27
#0:	       ldm.f	r10, 12         ; fflush.c:166
#1:	       br	.BB21_14
#2:	       ldi	64 -> r0
	;;
#0:	       ldx	$memhu, r12 -> r2 ; fflush.c:166
	;;
#0:	       or	r2, r0 -> r2    ; fflush.c:166
	;;
	       nop	0
	;;
.BB21_31:                               ; %bb29
#0:	       ldm.f	r10, 16         ; fflush.c:172
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:172
	;;
#0:	       cmpeq	r11, 0 -> c1    ; fflush.c:172
	;;
#0:	if  c1 br	.BB21_40
	;;
	       nop	2
	;;
; BB#32:                                ; %bb31
#0:	       and	r2, 3 -> r1     ; fflush.c:185
#1:	       ldm.f	r10, 0          ; fflush.c:177
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fflush.c:185
	;;
#0:	if  c1 br	.BB21_34        ; fflush.c:185
#1:	       ldx	$mem, 0 -> r0   ; fflush.c:177
#2:	       stm.a	r11, r10, 0     ; fflush.c:184
	;;
#0:	       sub	r0, r11 -> r12  ; fflush.c:177
	;;                              ; fflush.c:185
	       nop	1               ; fflush.c:185
	;;
; BB#33:                                ; %bb31.bb34_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB21_35
	;;
	       nop	2
	;;
.BB21_34:                               ; %bb32
#0:	       ldm.f	r10, 20         ; fflush.c:185
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:185
	;;
.BB21_35:                               ; %bb34
#0:	       stm.a	r0, r10, 2      ; fflush.c:185
#1:	       br	.BB21_39
#2:	       ldi	0 -> r13
	;;
	       nop	2
	;;
.BB21_36:                               ; %bb35
                                        ;   in Loop: Header=BB21_39 Depth=1
#0:	       ldm.f	r10, 36         ; fflush.c:189
#1:	       or	r11, 0 -> r2    ; fflush.c:189
#2:	       or	r12, 0 -> r3    ; fflush.c:189
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:189
#1:	       ldm.f	r10, 28         ; fflush.c:189
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:189
#1:	       ldm.s	r14, 16         ; fflush.c:189
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:189
	;;
#0:	       call	r4              ; fflush.c:189
	;;                              ; fflush.c:189
	       nop	3               ; fflush.c:189
	;;
#0:	       cmplt	r13, r0 -> c1   ; fflush.c:190
	;;
#0:	if  c1 br	.BB21_38        ; fflush.c:190
	;;                              ; fflush.c:190
	       nop	2               ; fflush.c:190
	;;
; BB#37:                                ; %bb36
#0:	       ldm.f	r10, 12         ; fflush.c:192
#1:	       add	r10, 12 -> r11
#2:	       ldi	64 -> r12
#3:	       ldi	-1 -> r0
	;;
#0:	       br	.BB21_28
#1:	       ldx	$memhu, r11 -> r11 ; fflush.c:192
	;;
#0:	       or	r11, r12 -> r11 ; fflush.c:192
	;;
#0:	       stmh.a	r11, r10, 6     ; fflush.c:192
	;;
	       nop	0
	;;
.BB21_38:                               ; %bb37
                                        ;   in Loop: Header=BB21_39 Depth=1
#0:	       sub	r12, r0 -> r12  ; fflush.c:196
#1:	       add	r11, r0 -> r11  ; fflush.c:195
	;;
.BB21_39:                               ; %bb38
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmplt	r13, r12 -> c1  ; fflush.c:187
	;;
#0:	if  c1 br	.BB21_36        ; fflush.c:187
	;;                              ; fflush.c:187
	       nop	2               ; fflush.c:187
	;;
.BB21_40:                               ; %bb40
#0:	       ldi	0 -> r0
	;;
.BB21_41:                               ; %bb40
#0:	       ldm.s	r14, 20         ; fflush.c:198
#1:	       or	r14, 0 -> r15   ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r13  ; fflush.c:198
#1:	       ldm.s	r14, 24         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r12  ; fflush.c:198
#1:	       ldm.s	r14, 28         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:198
#1:	       ldm.s	r14, 32         ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:198
#1:	       ldm.s	r15, 8          ; fflush.c:198
	;;
#0:	       br	.BB21_29
#3:	       ldx	$mem, 0 -> r3.31 ; fflush.c:198
#1:	       ldm.s	r15, 4          ; fflush.c:198
	;;
#3:	       stx	r3.31 -> $ro    ; fflush.c:198
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fflush.c:198
	;;
#0:	       stx	r0.31 -> $rb    ; fflush.c:198
	;;
	.align	4
___sflush_r_end:

	.align	4
__fflush_r:                             ; @_fflush_r
	.size	__fflush_r_end-__fflush_r
__fflush_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 6
#2:	       ldiu	24 -> r2
#1:	       ldx	$rb, 0 -> r1.31
#3:	       cmpeq	r0, 0 -> c1     ; fflush.c:224
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
#1:	       or	r0, 0 -> r11
	;;
#0:	if !c1 ldm.f	r11, 56         ; fflush.c:224
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; fflush.c:224
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; fflush.c:224
	;;
#0:	if  c1 br	.BB22_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       or	r11, 0 -> r0    ; fflush.c:224
#1:	       callg	___sinit        ; fflush.c:224
	;;                              ; fflush.c:224
	       nop	3               ; fflush.c:224
	;;
.BB22_2:                                ; %bb2
#0:	       ldm.f	r10, 12         ; fflush.c:226
#1:	       add	r10, 12 -> r0   ; fflush.c:226
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fflush.c:226
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fflush.c:226
	;;
#0:	if  c1 br	.BB22_4         ; fflush.c:226
	;;                              ; fflush.c:226
	       nop	2               ; fflush.c:226
	;;
; BB#3:                                 ; %bb4
#0:	       or	r11, 0 -> r0    ; fflush.c:230
#1:	       callg	___sflush_r     ; fflush.c:230
#2:	       or	r10, 0 -> r1    ; fflush.c:230
	;;                              ; fflush.c:230
	       nop	3               ; fflush.c:230
	;;
#0:	       ldm.s	r14, 16         ; fflush.c:232
#1:	       or	r14, 0 -> r15   ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:232
#1:	       ldm.s	r14, 20         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:232
#1:	       ldm.s	r15, 8          ; fflush.c:232
	;;
#0:	       br	.BB22_5
#3:	       ldx	$mem, 0 -> r3.31 ; fflush.c:232
#1:	       ldm.s	r15, 4          ; fflush.c:232
	;;
#3:	       stx	r3.31 -> $ro    ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fflush.c:232
	;;
#0:	       stx	r0.31 -> $rb    ; fflush.c:232
	;;
.BB22_4:                                ; %bb5
#0:	       ldm.s	r14, 16         ; fflush.c:232
#1:	       or	r14, 0 -> r15   ; fflush.c:232
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:232
#1:	       ldm.s	r14, 20         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:232
#1:	       ldm.s	r15, 8          ; fflush.c:232
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fflush.c:232
#0:	       ldm.s	r15, 4          ; fflush.c:232
	;;
#1:	       stx	r1.31 -> $ro    ; fflush.c:232
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fflush.c:232
	;;
#2:	       stx	r2.31 -> $rb    ; fflush.c:232
	;;
.BB22_5:                                ; %bb5
#0:	       ldm.s	r15, 0          ; fflush.c:232
#1:	       s2add	r15, 6 -> r15   ; fflush.c:232
	;;
#0:	       ret                      ; fflush.c:232
#1:	       ldx	$mem, 0 -> r14  ; fflush.c:232
	;;                              ; fflush.c:232
	       nop	3               ; fflush.c:232
	;;
	.align	4
__fflush_r_end:

	.align	4
__free_r:                               ; @_free_r
	.size	__free_r_end-__free_r
__free_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4          ; mallocr.c:2644
#2:	       ldiu	16 -> r2        ; mallocr.c:2644
#3:	       cmpeq	r1, 0 -> c1     ; mallocr.c:2644
#0:	       ldx	$ro, 0 -> r0.31 ; mallocr.c:2644
	;;
#0:	       sub	r15, r2 -> r15  ; mallocr.c:2644
	;;
#0:	if  c1 br	.BB23_6
#3:	       ldx	$rb, 0 -> r3.31 ; mallocr.c:2644
	;;
#0:	       stm.s	r14, r15, 0     ; mallocr.c:2644
#1:	       or	r15, 0 -> r14   ; mallocr.c:2644
	;;
#3:	       stm.s	r3.31, r15, 1   ; mallocr.c:2644
	;;
#0:	       stm.s	r0.31, r15, 2   ; mallocr.c:2644
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r1, -4          ; mallocr.c:2650
#1:	       ldi	-2 -> r3
#2:	       ldi	-4 -> r6
#3:	       sub	r1, 8 -> r8     ; mallocr.c:2649
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2650
	;;
#0:	       and	r2, r3 -> r3    ; mallocr.c:2663
	;;
#0:	       sub	r3, 4 -> r4
#1:	       sub	r3, 8 -> r7
	;;
#0:	       add	r1, r4 -> r4
#1:	       add	r1, r7 -> r9    ; mallocr.c:2664
	;;
#0:	       ldm.f	r4, 0           ; mallocr.c:2665
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2665
#1:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2667
	;;
#0:	       and	r5, r6 -> r5    ; mallocr.c:2665
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2667
	;;
#0:	       cmpne	r6, r9 -> c1    ; mallocr.c:2667
	;;
#0:	if  c1 br	.BB23_8         ; mallocr.c:2667
	;;                              ; mallocr.c:2667
	       nop	2               ; mallocr.c:2667
	;;
; BB#2:                                 ; %bb1
#0:	       btest	r2, 0 -> c1     ; mallocr.c:2671
#1:	       add	r5, r3 -> r3    ; mallocr.c:2669
	;;
#0:	if  c1 br	.BB23_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.f	r1, -8          ; mallocr.c:2673
#1:	       ldi	-8 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2673
	;;
#0:	       sub	r4, r2 -> r4
#1:	       add	r2, r3 -> r3    ; mallocr.c:2675
	;;
#0:	       add	r1, r4 -> r8    ; mallocr.c:2674
	;;
#0:	       ldm.f	r8, 8           ; mallocr.c:2676
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2676
#1:	       ldm.f	r8, 12          ; mallocr.c:2676
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2676
	;;
#0:	       stm.a	r5, r4, 3       ; mallocr.c:2676
	;;
#0:	       stm.a	r4, r5, 2       ; mallocr.c:2676
	;;
.BB23_4:                                ; %bb3
#0:	       ldga	131072 -> r1
#2:	       or	r3, 1 -> r2     ; mallocr.c:2679
#1:	       ldga	___malloc_av_ -> r1.16 ; mallocr.c:2680
	;;
#0:	       cmpult	r3, r1 -> c1    ; mallocr.c:2681
#1:	       stm.a	r2, r8, 1       ; mallocr.c:2679
	;;
#0:	if  c1 br	.BB23_6
#1:	       stm.a	r8, r1.16, 2    ; mallocr.c:2680
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       callg	__malloc_trim_r ; mallocr.c:2682
	;;                              ; mallocr.c:2682
	       nop	3               ; mallocr.c:2682
	;;
#0:	       br	.BB23_40
	;;
	       nop	2
	;;
.BB23_6:                                ; %bb5
#0:	       or	r14, 0 -> r15   ; mallocr.c:2722
	;;
#0:	       ldm.s	r15, 8          ; mallocr.c:2722
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:2722
#0:	       ldm.s	r15, 4          ; mallocr.c:2722
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:2722
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:2722
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:2722
	;;
.BB23_7:                                ; %bb5
#0:	       ldm.s	r15, 0          ; mallocr.c:2722
#1:	       s2add	r15, 4 -> r15   ; mallocr.c:2722
	;;
#0:	       ret                      ; mallocr.c:2722
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
.BB23_8:                                ; %bb6
#0:	       btest	r2, 0 -> c1     ; mallocr.c:2691
#1:	       stm.a	r5, r4, 0       ; mallocr.c:2687
	;;
#0:	if !c1 br	.BB23_10        ; mallocr.c:2691
	;;                              ; mallocr.c:2691
	       nop	2               ; mallocr.c:2691
	;;
; BB#9:                                 ; %bb6.bb10_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB23_13
#2:	       or	r3, 0 -> r2
	;;
	       nop	2
	;;
.BB23_10:                               ; %bb7
#0:	       ldm.f	r1, -8          ; mallocr.c:2693
#1:	       ldi	-8 -> r2
	;;
#2:	       ldga	___malloc_av_ -> r2.16 ; mallocr.c:2697
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2693
	;;
#0:	       sub	r2, r0 -> r4
#1:	       add	r0, r3 -> r2    ; mallocr.c:2695
	;;
#0:	       add	r1, r4 -> r8    ; mallocr.c:2694
#2:	       add	r2.16, 8 -> r0  ; mallocr.c:2697
	;;
#0:	       ldm.f	r8, 8           ; mallocr.c:2697
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2697
	;;
#0:	       cmpne	r6, r0 -> c1    ; mallocr.c:2697
	;;
#0:	if  c1 br	.BB23_12        ; mallocr.c:2697
	;;                              ; mallocr.c:2697
	       nop	2               ; mallocr.c:2697
	;;
; BB#11:                                ; %bb7.bb10_crit_edge
#0:	       ldi	1 -> r0
#1:	       br	.BB23_13
	;;
	       nop	2
	;;
.BB23_12:                               ; %bb9
#0:	       add	r4, r1 -> r0
	;;
#0:	       ldm.f	r0, 12          ; mallocr.c:2700
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2700
	;;
#0:	       stm.a	r4, r6, 3       ; mallocr.c:2700
	;;
#0:	       stm.a	r6, r4, 2       ; mallocr.c:2700
	;;
.BB23_13:                               ; %bb10
#0:	       add	r5, r7 -> r4
	;;
#0:	       add	r4, r1 -> r4
	;;
#0:	       ldm.f	r4, 4           ; mallocr.c:2703
#1:	       add	r4, 4 -> r6
	;;
#0:	       ldx	$membu, r6 -> r4 ; mallocr.c:2703
	;;
#0:	       btest	r4, 0 -> c1     ; mallocr.c:2703
	;;
#0:	if  c1 br	.BB23_18
	;;
	       nop	2
	;;
; BB#14:                                ; %bb11
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2707
#1:	       add	r1, r3 -> r4
#2:	       add	r2, r5 -> r2    ; mallocr.c:2705
	;;
#0:	if  c1 br	.BB23_17
#1:	       ldm.f	r4, 0           ; mallocr.c:2707
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2707
	;;
	       nop	1
	;;
; BB#15:                                ; %bb11
#3:	       ldga	___malloc_av_ -> r3.16
	;;
#3:	       add	r3.16, 8 -> r5
	;;
#0:	       cmpne	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB23_17
	;;
	       nop	2
	;;
; BB#16:                                ; %bb15.thread
#3:	       stm.a	r8, r3.16, 5    ; mallocr.c:2710
#0:	       or	r2, 1 -> r0     ; mallocr.c:2717
	;;
#3:	       stm.a	r8, r3.16, 4    ; mallocr.c:2710
	;;
#0:	       br	.BB23_40
#1:	       stm.a	r0, r8, 1       ; mallocr.c:2717
#2:	       add	r8, r2 -> r0    ; mallocr.c:2718
	;;
#0:	       stm.a	r5, r8, 3       ; mallocr.c:2710
	;;
#0:	       stm.a	r5, r8, 2       ; mallocr.c:2710
	;;
#0:	       stm.a	r2, r0, 0       ; mallocr.c:2718
	;;
.BB23_17:                               ; %bb14
#0:	       add	r3, r1 -> r1
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2713
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2713
	;;
#0:	       stm.a	r1, r4, 3       ; mallocr.c:2713
	;;
#0:	       stm.a	r4, r1, 2       ; mallocr.c:2713
	;;
.BB23_18:                               ; %bb15
#0:	       or	r2, 1 -> r1     ; mallocr.c:2717
#1:	       cmpne	r0, 0 -> c1     ; mallocr.c:2719
#2:	       add	r8, r2 -> r3    ; mallocr.c:2718
	;;
#0:	if  c1 br	.BB23_6
#1:	       stm.a	r1, r8, 1       ; mallocr.c:2717
	;;
#0:	       stm.a	r2, r3, 0       ; mallocr.c:2718
	;;
	       nop	1
	;;
; BB#19:                                ; %bb16
#0:	       ldi	511 -> r0
	;;
#0:	       cmpult	r0, r2 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_21        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#20:                                ; %bb17
#0:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2720
#1:	       ldi	1 -> r0
#2:	       sr	r2, 5 -> r1
	;;
#0:	       sl	r0, r1 -> r0    ; mallocr.c:2720
#1:	       ldi	-8 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2720
#1:	       and	r2, r1 -> r2
	;;
#0:	       or	r3, r0 -> r0    ; mallocr.c:2720
#1:	       ldga	___malloc_av_ -> r3 ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r3, 1
#1:	       add	r3, r2 -> r2
	;;
#0:	       ldm.f	r2, 8           ; mallocr.c:2720
	;;
#0:	       br	.BB23_6
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2720
#2:	       stm.a	r2, r8, 3       ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r8, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r8, r2, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r8, r0, 3       ; mallocr.c:2720
	;;
.BB23_21:                               ; %bb20
#0:	       sr	r2, 9 -> r0     ; mallocr.c:2720
#1:	       ldi	4 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_23        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#22:                                ; %bb21
#0:	       sr	r2, 6 -> r0     ; mallocr.c:2720
#1:	       br	.BB23_32
	;;
#0:	       s2add	r0, 14 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB23_23:                               ; %bb22
#0:	       ldi	20 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_25        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#24:                                ; %bb23
#0:	       ldi	91 -> r1
#1:	       br	.BB23_32
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB23_25:                               ; %bb24
#0:	       ldi	84 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_27        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#26:                                ; %bb25
#0:	       sr	r2, 12 -> r0    ; mallocr.c:2720
#1:	       br	.BB23_32
#2:	       ldi	110 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB23_27:                               ; %bb26
#0:	       ldi	340 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_29        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#28:                                ; %bb27
#0:	       sr	r2, 15 -> r0    ; mallocr.c:2720
#1:	       br	.BB23_32
#2:	       ldi	119 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB23_29:                               ; %bb28
#0:	       ldiu	1365 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB23_31        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#30:                                ; %bb28.bb36_crit_edge
#0:	       ldi	126 -> r0
#1:	       br	.BB23_32
	;;
	       nop	2
	;;
.BB23_31:                               ; %bb29
#0:	       sr	r2, 18 -> r0    ; mallocr.c:2720
	;;
#0:	       s2add	r0, 31 -> r0    ; mallocr.c:2720
	;;
.BB23_32:                               ; %bb36
#0:	       ldga	___malloc_av_ -> r1
#1:	       sl	r0, 3 -> r3
	;;
#0:	       add	r1, r3 -> r3
	;;
#0:	       ldm.f	r3, 8           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2720
	;;
#0:	       cmpeq	r4, r3 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_34        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#33:                                ; %bb36.bb39_crit_edge
#0:	       ldi	-4 -> r0
#1:	       br	.BB23_36
	;;
	       nop	2
	;;
.BB23_34:                               ; %bb37
#0:	       sra	r0, 31 -> r2    ; mallocr.c:2720
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2720
	;;
#0:	       sr	r2, 30 -> r2    ; mallocr.c:2720
	;;
#0:	       add	r0, r2 -> r0    ; mallocr.c:2720
#1:	       ldi	1 -> r2
#2:	       ldx	$mem, 0 -> r5   ; mallocr.c:2720
	;;
#0:	       br	.BB23_39
#1:	       sra	r0, 2 -> r0     ; mallocr.c:2720
	;;
#0:	       sl	r2, r0 -> r0    ; mallocr.c:2720
	;;
#0:	       or	r0, r5 -> r0    ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r1, 1
	;;
.BB23_35:                               ; %bb38
                                        ;   in Loop: Header=BB23_36 Depth=1
#0:	       ldm.f	r4, 8           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2720
	;;
.BB23_36:                               ; %bb39
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r4, r3 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_38
	;;
	       nop	2
	;;
; BB#37:                                ; %bb40
                                        ;   in Loop: Header=BB23_36 Depth=1
#0:	       ldm.f	r4, 4           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2720
	;;
#0:	       and	r1, r0 -> r1    ; mallocr.c:2720
	;;
#0:	       cmpult	r2, r1 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB23_35        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
.BB23_38:                               ; %bb41
#0:	       ldm.f	r4, 12          ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2720
	;;
.BB23_39:                               ; %bb42
#0:	       stm.a	r3, r8, 3       ; mallocr.c:2720
	;;
#0:	       stm.a	r4, r8, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r8, r3, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r8, r4, 3       ; mallocr.c:2720
	;;
.BB23_40:                               ; %bb42
#0:	       or	r14, 0 -> r15   ; mallocr.c:2722
	;;
#0:	       ldm.s	r15, 8          ; mallocr.c:2722
	;;
#0:	       br	.BB23_7
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:2722
#2:	       ldm.s	r15, 4          ; mallocr.c:2722
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:2722
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:2722
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:2722
	;;
	.align	4
__free_r_end:

	.align	4
__malloc_trim_r:                        ; @_malloc_trim_r
	.size	__malloc_trim_r_end-__malloc_trim_r
__malloc_trim_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 8          ; mallocr.c:3319
#2:	       ldiu	32 -> r4        ; mallocr.c:3319
#0:	       ldx	$ro, 0 -> r0.31 ; mallocr.c:3319
#3:	       ldi	-4 -> r2
	;;
#0:	       sub	r15, r4 -> r15  ; mallocr.c:3319
#1:	       ldiu	0 -> r3
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mallocr.c:3319
#0:	       ldim	2046 -> r3
	;;
#0:	       stm.s	r14, r15, 0     ; mallocr.c:3319
#1:	       or	r15, 0 -> r14   ; mallocr.c:3319
	;;
#3:	       stm.s	r3.31, r15, 1   ; mallocr.c:3319
	;;
#0:	       stm.s	r0.31, r15, 2   ; mallocr.c:3319
	;;
#0:	       stm.s	r10, r14, 7     ; mallocr.c:3319
	;;
#0:	       stm.s	r11, r14, 6     ; mallocr.c:3319
	;;
#0:	       stm.s	r12, r14, 5     ; mallocr.c:3319
	;;
#0:	       stm.s	r13, r14, 4     ; mallocr.c:3319
	;;
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:3319
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:3319
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:3319
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:3319
	;;
#0:	       and	r1, r2 -> r10   ; mallocr.c:3319
#1:	       ldiu	2047 -> r2
	;;
#0:	       sub	r10, 17 -> r1
#1:	       ldim	1 -> r2
	;;
#0:	       and	r1, r3 -> r11
	;;
#0:	       cmplt	r2, r11 -> c1   ; mallocr.c:3322
	;;
#0:	if  c1 br	.BB24_3         ; mallocr.c:3322
	;;                              ; mallocr.c:3322
	       nop	2               ; mallocr.c:3322
	;;
.BB24_1:                                ; %bb
#0:	       ldm.s	r14, 16
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB24_2:                                ; %bb
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 8 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB24_3:                                ; %bb1
#0:	       or	r0, 0 -> r12
#1:	       callg	__sbrk_r        ; mallocr.c:3331
#2:	       ldi	0 -> r13
#3:	       ldi	0 -> r1
	;;                              ; mallocr.c:3331
	       nop	3               ; mallocr.c:3331
	;;
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:3332
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:3332
	;;
#0:	       add	r1, r10 -> r1   ; mallocr.c:3332
	;;
#0:	       cmpne	r1, r0 -> c1    ; mallocr.c:3332
	;;
#0:	if  c1 br	.BB24_1
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb3
#0:	       sub	r13, r11 -> r1  ; mallocr.c:3340
#1:	       callg	__sbrk_r        ; mallocr.c:3340
#2:	       or	r12, 0 -> r0    ; mallocr.c:3340
	;;                              ; mallocr.c:3340
	       nop	3               ; mallocr.c:3340
	;;
#0:	       cmpne	r0, -1 -> c1    ; mallocr.c:3342
	;;
#0:	if  c1 br	.BB24_7         ; mallocr.c:3342
	;;                              ; mallocr.c:3342
	       nop	2               ; mallocr.c:3342
	;;
; BB#5:                                 ; %bb4
#0:	       ldi	0 -> r1
#1:	       callg	__sbrk_r        ; mallocr.c:3345
#2:	       or	r12, 0 -> r0    ; mallocr.c:3345
	;;                              ; mallocr.c:3345
	       nop	3               ; mallocr.c:3345
	;;
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:3346
#1:	       ldi	16 -> r11
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:3346
	;;
#0:	       sub	r0, r10 -> r1   ; mallocr.c:3346
	;;
#0:	       cmplt	r1, r11 -> c1   ; mallocr.c:3347
	;;
#0:	if  c1 br	.BB24_1
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb5
#0:	       ldmg.d	___malloc_sbrk_base ; mallocr.c:3349
#1:	       ldga	___malloc_current_mallinfo.0 -> r2 ; mallocr.c:3349
#2:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:3349
	;;
#0:	       sub	r0, r11 -> r11  ; mallocr.c:3349
	;;
#0:	       stm.a	r11, r2, 0      ; mallocr.c:3349
#1:	       or	r1, 1 -> r11    ; mallocr.c:3350
	;;
#0:	       stm.a	r11, r10, 1     ; mallocr.c:3350
	;;
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB24_2
#3:	       ldx	$mem, 0 -> r3.31
#1:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB24_7:                                ; %bb7
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:3360
#1:	       sub	r10, r11 -> r0  ; mallocr.c:3360
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:3360
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:3360
	;;
#0:	       stm.a	r0, r1, 1       ; mallocr.c:3360
#1:	       ldga	___malloc_current_mallinfo.0 -> r1 ; mallocr.c:3361
	;;
#0:	       br	.BB24_1
#1:	       ldmg.d	___malloc_current_mallinfo.0 ; mallocr.c:3361
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3361
	;;
#0:	       sub	r0, r11 -> r0   ; mallocr.c:3361
	;;
#0:	       stm.a	r0, r1, 0       ; mallocr.c:3361
	;;
	.align	4
__malloc_trim_r_end:

	.align	4
__malloc_r:                             ; @_malloc_r
	.size	__malloc_r_end-__malloc_r
__malloc_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 12
#2:	       ldiu	48 -> r4
#0:	       ldx	$ro, 0 -> r0.31
#3:	       ldi	22 -> r1
	;;
#0:	       sub	r15, r4 -> r15
#1:	       add	r0, 11 -> r2    ; mallocr.c:2348
#2:	       ldi	-8 -> r3
	;;
#3:	       ldx	$rb, 0 -> r3.31
#0:	       cmpult	r1, r2 -> c1    ; mallocr.c:2348
#1:	       and	r2, r3 -> r1    ; mallocr.c:2348
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 11
#1:	       ldi	16 -> r10
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       stm.s	r11, r14, 10
	;;
#0:	       cmplt	r10, 0 -> c1    ; mallocr.c:2351
#1:	       stm.s	r12, r14, 9
	;;
#0:	if  c1 br	.BB25_2
#1:	       stm.s	r13, r14, 8
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpule	r0, r10 -> c1
	;;
#0:	if  c1 br	.BB25_3
	;;
	       nop	2
	;;
.BB25_2:                                ; %bb4
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2353
#1:	       br	.BB25_33
	;;
#0:	       stm.a	12, r0, 0       ; mallocr.c:2353
#1:	       ldi	0 -> r0
	;;
	       nop	1
	;;
.BB25_3:                                ; %bb5
#0:	       ldi	503 -> r0
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2361
	;;
#0:	if  c1 br	.BB25_10        ; mallocr.c:2361
	;;                              ; mallocr.c:2361
	       nop	2               ; mallocr.c:2361
	;;
; BB#4:                                 ; %bb6
#0:	       ldi	-4 -> r0
#1:	       ldga	___malloc_av_ -> r1
#2:	       sr	r10, 3 -> r3    ; mallocr.c:2363
	;;
#0:	       and	r10, r0 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       ldm.f	r0, 12          ; mallocr.c:2368
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2368
	;;
#0:	       cmpeq	r2, r0 -> c1    ; mallocr.c:2372
	;;
#0:	if  c1 sr	r10, 2 -> r0
	;;
#0:	if  c1 s2add	r1, r0 -> r0
	;;
#0:	if  c1 ldm.f	r0, 20          ; mallocr.c:2375
#1:	if  c1 add	r0, 8 -> r0
	;;
#0:	if  c1 ldx	$mem, 0 -> r2   ; mallocr.c:2375
	;;
#0:	       cmpeq	r2, r0 -> c1    ; mallocr.c:2378
	;;
#0:	if  c1 br	.BB25_6         ; mallocr.c:2378
	;;                              ; mallocr.c:2378
	       nop	2               ; mallocr.c:2378
	;;
; BB#5:                                 ; %bb9
#0:	       ldm.f	r2, 4           ; mallocr.c:2380
#1:	       ldi	-4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2380
#1:	       ldm.f	r2, 8           ; mallocr.c:2381
	;;
#0:	       add	r3, 4 -> r3
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2381
#1:	       ldm.f	r2, 12          ; mallocr.c:2381
#2:	       and	r3, r1 -> r3
	;;
#0:	       add	r2, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2381
	;;
#0:	       stm.a	r0, r10, 3      ; mallocr.c:2381
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2381
#1:	       add	r2, 8 -> r0     ; mallocr.c:2381
	;;
#0:	       br	.BB25_104
#1:	       ldm.f	r3, 0           ; mallocr.c:2382
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2382
	;;
#0:	       or	r10, 1 -> r10   ; mallocr.c:2382
	;;
#0:	       stm.a	r10, r3, 0      ; mallocr.c:2382
	;;
.BB25_6:                                ; %bb10
#0:	       add	r3, 2 -> r0     ; mallocr.c:2388
	;;
.BB25_7:                                ; %bb37
#0:	       ldmg.d	___malloc_av_+16 ; mallocr.c:2423
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2423
	;;
#0:	       add	r1, 8 -> r1     ; mallocr.c:2423
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2423
	;;
#0:	       cmpeq	r2, r1 -> c1    ; mallocr.c:2423
	;;
#0:	if  c1 br	.BB25_58
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb38
#0:	       ldm.f	r2, 4           ; mallocr.c:2425
#1:	       ldi	-4 -> r3
#2:	       ldi	16 -> r5
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2425
	;;
#0:	       and	r1, r3 -> r3    ; mallocr.c:2425
	;;
#0:	       sub	r3, r10 -> r4   ; mallocr.c:2426
	;;
#0:	       cmplt	r4, r5 -> c1    ; mallocr.c:2428
	;;
#0:	if  c1 br	.BB25_30
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb39
#0:	       or	r10, 1 -> r0    ; mallocr.c:2431
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2432
#2:	       add	r2, r10 -> r5   ; mallocr.c:2430
	;;
#0:	       stm.a	r0, r2, 1       ; mallocr.c:2431
#1:	       or	r10, 4 -> r0
#2:	       or	r4, 1 -> r10    ; mallocr.c:2433
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       stm.a	r5, r1, 5       ; mallocr.c:2432
	;;
#0:	       stm.a	r5, r1, 4       ; mallocr.c:2432
#1:	       add	r1, 8 -> r1     ; mallocr.c:2432
	;;
#0:	       br	.BB25_104
#1:	       stm.a	r10, r0, 0      ; mallocr.c:2433
#2:	       add	r2, 8 -> r0
	;;
#0:	       stm.a	r1, r5, 3       ; mallocr.c:2432
	;;
#0:	       stm.a	r1, r5, 2       ; mallocr.c:2432
#1:	       add	r2, r3 -> r1    ; mallocr.c:2434
	;;
#0:	       stm.a	r4, r1, 0       ; mallocr.c:2434
	;;
.BB25_10:                               ; %bb11
#0:	       ldi	511 -> r0
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB25_12        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#11:                                ; %bb12
#0:	       sr	r10, 3 -> r0    ; mallocr.c:2393
#1:	       br	.BB25_23
	;;
	       nop	2
	;;
.BB25_12:                               ; %bb13
#0:	       sr	r10, 9 -> r0    ; mallocr.c:2393
#1:	       ldi	4 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB25_14        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#13:                                ; %bb14
#0:	       sr	r10, 6 -> r0    ; mallocr.c:2393
#1:	       br	.BB25_23
	;;
#0:	       s2add	r0, 14 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB25_14:                               ; %bb15
#0:	       ldi	20 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB25_16        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#15:                                ; %bb16
#0:	       ldi	91 -> r1
#1:	       br	.BB25_23
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB25_16:                               ; %bb17
#0:	       ldi	84 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB25_18        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#17:                                ; %bb18
#0:	       sr	r10, 12 -> r0   ; mallocr.c:2393
#1:	       br	.BB25_23
#2:	       ldi	110 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB25_18:                               ; %bb19
#0:	       ldi	340 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB25_20        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#19:                                ; %bb20
#0:	       sr	r10, 15 -> r0   ; mallocr.c:2393
#1:	       br	.BB25_23
#2:	       ldi	119 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB25_20:                               ; %bb21
#0:	       ldiu	1365 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB25_22        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#21:                                ; %bb21.bb29_crit_edge
#0:	       ldi	126 -> r0
#1:	       br	.BB25_23
	;;
	       nop	2
	;;
.BB25_22:                               ; %bb22
#0:	       sr	r10, 18 -> r0   ; mallocr.c:2393
	;;
#0:	       s2add	r0, 31 -> r0    ; mallocr.c:2393
	;;
.BB25_23:                               ; %bb29
#0:	       ldga	___malloc_av_ -> r1
#1:	       sl	r0, 3 -> r2
#2:	       ldi	-4 -> r3
#3:	       ldi	16 -> r4
	;;
#0:	       add	r1, r2 -> r1
	;;
#0:	       ldm.f	r1, 12          ; mallocr.c:2396
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2396
	;;
.BB25_24:                               ; %bb35
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r2, 0 -> r5
	;;
#0:	       cmpne	r5, r1 -> c1    ; mallocr.c:2396
	;;
#0:	if !c1 br	.BB25_27
	;;
	       nop	2
	;;
; BB#25:                                ; %bb30
                                        ;   in Loop: Header=BB25_24 Depth=1
#0:	       ldm.f	r5, 4           ; mallocr.c:2398
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2398
	;;
#0:	       and	r2, r3 -> r6    ; mallocr.c:2398
	;;
#0:	       sub	r6, r10 -> r7   ; mallocr.c:2399
	;;
#0:	       cmplt	r7, r4 -> c1    ; mallocr.c:2401
	;;
#0:	if  c1 br	.BB25_28        ; mallocr.c:2401
	;;                              ; mallocr.c:2401
	       nop	2               ; mallocr.c:2401
	;;
; BB#26:                                ; %bb31
#0:	       sub	r0, 1 -> r0
	;;
.BB25_27:                               ; %bb36
#0:	       add	r0, 1 -> r0     ; mallocr.c:2417
#1:	       br	.BB25_7
	;;
	       nop	2
	;;
.BB25_28:                               ; %bb32
                                        ;   in Loop: Header=BB25_24 Depth=1
#0:	       cmplt	r7, 0 -> c1     ; mallocr.c:2407
#1:	       ldm.f	r5, 12          ; mallocr.c:2409
	;;
#0:	if  c1 br	.BB25_24
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2409
	;;
	       nop	2
	;;
; BB#29:                                ; %bb33
#0:	       ldm.f	r5, 8           ; mallocr.c:2409
#1:	       add	r6, r5 -> r1    ; mallocr.c:2409
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2409
	;;
#0:	       stm.a	r2, r0, 3       ; mallocr.c:2409
	;;
#0:	       br	.BB25_32
#1:	       stm.a	r0, r2, 2       ; mallocr.c:2409
#2:	       add	r5, 8 -> r0     ; mallocr.c:2409
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2410
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2410
	;;
#0:	       or	r2, 1 -> r2     ; mallocr.c:2410
	;;
.BB25_30:                               ; %bb40
#1:	       ldga	___malloc_av_ -> r1.16 ; mallocr.c:2440
#0:	       cmplt	r4, 0 -> c1     ; mallocr.c:2442
	;;
#0:	if  c1 br	.BB25_35        ; mallocr.c:2442
#1:	       add	r1.16, 8 -> r5  ; mallocr.c:2440
	;;
#1:	       stm.a	r5, r1.16, 5    ; mallocr.c:2440
	;;
#1:	       stm.a	r5, r1.16, 4    ; mallocr.c:2440
	;;                              ; mallocr.c:2442
	       nop	0               ; mallocr.c:2442
	;;
; BB#31:                                ; %bb41
#0:	       add	r3, r2 -> r1    ; mallocr.c:2444
#1:	       add	r2, 8 -> r0
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2444
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2444
	;;
#0:	       or	r3, 1 -> r2     ; mallocr.c:2444
	;;
.BB25_32:                               ; %bb41
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2444
	;;
.BB25_33:                               ; %bb41
#0:	       ldm.s	r14, 32         ; mallocr.c:2590
#1:	       or	r14, 0 -> r15   ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2590
#1:	       ldm.s	r14, 36         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2590
#1:	       ldm.s	r14, 40         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2590
#1:	       ldm.s	r14, 44         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2590
#1:	       ldm.s	r15, 8          ; mallocr.c:2590
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:2590
#0:	       ldm.s	r15, 4          ; mallocr.c:2590
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:2590
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:2590
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:2590
	;;
.BB25_34:                               ; %bb41
#0:	       ldm.s	r15, 0          ; mallocr.c:2590
#1:	       s2add	r15, 12 -> r15  ; mallocr.c:2590
	;;
#0:	       ret                      ; mallocr.c:2590
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:2590
	;;                              ; mallocr.c:2590
	       nop	3               ; mallocr.c:2590
	;;
.BB25_35:                               ; %bb42
#0:	       ldi	511 -> r4
	;;
#0:	       cmpult	r4, r3 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_37        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#36:                                ; %bb43
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2452
#2:	       ldi	1 -> r3
#3:	       sr	r1, 5 -> r4
#0:	       ldga	___malloc_av_ -> r0.16 ; mallocr.c:2452
	;;
#0:	       sl	r3, r4 -> r3    ; mallocr.c:2452
#1:	       ldi	-8 -> r4
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
#1:	       and	r1, r4 -> r1
	;;
#1:	       or	r5, r3 -> r3    ; mallocr.c:2452
#0:	       add	r0.16, r1 -> r1
	;;
#0:	       stm.a	r3, r0.16, 1
	;;
#0:	       ldm.f	r1, 8           ; mallocr.c:2452
	;;
#0:	       br	.BB25_58
#1:	       ldx	$mem, 0 -> r3   ; mallocr.c:2452
#2:	       stm.a	r1, r2, 3       ; mallocr.c:2452
	;;
#0:	       stm.a	r3, r2, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r1, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r3, 3       ; mallocr.c:2452
	;;
.BB25_37:                               ; %bb44
#0:	       cmpult	r4, r1 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_39        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#38:                                ; %bb45
#0:	       sr	r1, 3 -> r1     ; mallocr.c:2452
#1:	       br	.BB25_50
	;;
	       nop	2
	;;
.BB25_39:                               ; %bb46
#0:	       sr	r1, 9 -> r4     ; mallocr.c:2452
#1:	       ldi	4 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_41        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#40:                                ; %bb47
#0:	       sr	r1, 6 -> r1     ; mallocr.c:2452
#1:	       br	.BB25_50
	;;
#0:	       s2add	r1, 14 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB25_41:                               ; %bb48
#0:	       ldi	20 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_43        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#42:                                ; %bb49
#0:	       ldi	91 -> r1
#1:	       br	.BB25_50
	;;
#0:	       add	r4, r1 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB25_43:                               ; %bb50
#0:	       ldi	84 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_45        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#44:                                ; %bb51
#0:	       sr	r1, 12 -> r1    ; mallocr.c:2452
#1:	       br	.BB25_50
#2:	       ldi	110 -> r4
	;;
#0:	       add	r1, r4 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB25_45:                               ; %bb52
#0:	       ldi	340 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_47        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#46:                                ; %bb53
#0:	       sr	r1, 15 -> r1    ; mallocr.c:2452
#1:	       br	.BB25_50
#2:	       ldi	119 -> r4
	;;
#0:	       add	r1, r4 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB25_47:                               ; %bb54
#0:	       ldiu	1365 -> r5
	;;
#0:	       cmpult	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB25_49        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#48:                                ; %bb54.bb62_crit_edge
#0:	       ldi	126 -> r1
#1:	       br	.BB25_50
	;;
	       nop	2
	;;
.BB25_49:                               ; %bb55
#0:	       sr	r1, 18 -> r1    ; mallocr.c:2452
	;;
#0:	       s2add	r1, 31 -> r1    ; mallocr.c:2452
	;;
.BB25_50:                               ; %bb62
#2:	       ldga	___malloc_av_ -> r2.16
#0:	       sl	r1, 3 -> r4
	;;
#2:	       add	r2.16, r4 -> r4
	;;
#0:	       ldm.f	r4, 8           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
	;;
#0:	       cmpeq	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_52        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#51:                                ; %bb62.bb65_crit_edge
#0:	       ldi	-4 -> r1
#1:	       br	.BB25_54
	;;
	       nop	2
	;;
.BB25_52:                               ; %bb63
#0:	       sra	r1, 31 -> r3    ; mallocr.c:2452
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2452
	;;
#0:	       sr	r3, 30 -> r3    ; mallocr.c:2452
	;;
#0:	       add	r1, r3 -> r1    ; mallocr.c:2452
#1:	       ldi	1 -> r3
#2:	       ldx	$mem, 0 -> r6   ; mallocr.c:2452
	;;
#0:	       br	.BB25_57
#1:	       sra	r1, 2 -> r1     ; mallocr.c:2452
	;;
#0:	       sl	r3, r1 -> r1    ; mallocr.c:2452
	;;
#0:	       or	r1, r6 -> r1    ; mallocr.c:2452
	;;
#2:	       stm.a	r1, r2.16, 1
	;;
.BB25_53:                               ; %bb64
                                        ;   in Loop: Header=BB25_54 Depth=1
#0:	       ldm.f	r5, 8           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
	;;
.BB25_54:                               ; %bb65
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_56
	;;
	       nop	2
	;;
; BB#55:                                ; %bb66
                                        ;   in Loop: Header=BB25_54 Depth=1
#0:	       ldm.f	r5, 4           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2452
	;;
#0:	       and	r6, r1 -> r6    ; mallocr.c:2452
	;;
#0:	       cmpult	r3, r6 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB25_53        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
.BB25_56:                               ; %bb67
#0:	       ldm.f	r5, 12          ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2452
	;;
.BB25_57:                               ; %bb68
#0:	       stm.a	r4, r2, 3       ; mallocr.c:2452
	;;
#0:	       stm.a	r5, r2, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r4, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r5, 3       ; mallocr.c:2452
	;;
.BB25_58:                               ; %bb69
#0:	       sra	r0, 31 -> r1    ; mallocr.c:2460
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2460
#2:	       ldi	1 -> r3
	;;
#0:	       sr	r1, 30 -> r1    ; mallocr.c:2460
	;;
#0:	       add	r0, r1 -> r1    ; mallocr.c:2460
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2460
	;;
#0:	       sra	r1, 2 -> r1     ; mallocr.c:2460
	;;
#0:	       sl	r3, r1 -> r1    ; mallocr.c:2460
	;;
#0:	       cmpult	r2, r1 -> c1    ; mallocr.c:2460
	;;
#0:	if  c1 br	.BB25_78
	;;
	       nop	2
	;;
; BB#59:                                ; %bb70
#0:	       and	r2, r1 -> r3    ; mallocr.c:2465
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2465
	;;
#0:	if  c1 add	r0, 4 -> r0
#1:	if  c1 ldi	-4 -> r3
#2:	if  c1 sl	r1, 1 -> r1
	;;
#0:	if  c1 and	r0, r3 -> r0
#1:	if  c1 and	r2, r1 -> r3    ; mallocr.c:2470
	;;
#0:	if  c1 cmpeq	r3, 0 -> c1     ; mallocr.c:2470
	;;
#0:	if !c1 br	.BB25_61
	;;
	       nop	2
	;;
.BB25_60:                               ; %bb72
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r1, 1 -> r1
#1:	       add	r0, 4 -> r0
	;;
#0:	       and	r2, r1 -> r3    ; mallocr.c:2470
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2470
	;;
#0:	if  c1 br	.BB25_60        ; mallocr.c:2470
	;;                              ; mallocr.c:2470
	       nop	2               ; mallocr.c:2470
	;;
.BB25_61:                               ; %bb72.bb74_crit_edge
#0:	       or	r2, 0 -> r3
	;;
.BB25_62:                               ; %bb74
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB25_76 Depth 2
                                        ;     Child Loop BB25_71 Depth 2
                                        ;     Child Loop BB25_63 Depth 2
                                        ;       Child Loop BB25_64 Depth 3
#2:	       ldga	___malloc_av_ -> r2.16
#0:	       sl	r0, 3 -> r4
#1:	       add	r0, 1 -> r5
#3:	       ldi	-4 -> r7
	;;
#2:	       add	r2.16, r4 -> r6
#0:	       ldi	16 -> r8
	;;
.BB25_63:                               ; %bb75
                                        ;   Parent Loop BB25_62 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB25_64 Depth 3
#0:	       or	r6, 0 -> r9
	;;
.BB25_64:                               ; %bb81
                                        ;   Parent Loop BB25_62 Depth=1
                                        ;     Parent Loop BB25_63 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
#0:	       ldm.f	r9, 12
	;;
#0:	       ldx	$mem, 0 -> r9
	;;
#0:	       cmpne	r6, r9 -> c1    ; mallocr.c:2488
	;;
#0:	if !c1 br	.BB25_69
	;;
	       nop	2
	;;
; BB#65:                                ; %bb76
                                        ;   in Loop: Header=BB25_64 Depth=3
#0:	       ldm.f	r9, 4           ; mallocr.c:2490
	;;
#3:	       ldx	$mem, 0 -> r3.16 ; mallocr.c:2490
	;;
#3:	       and	r3.16, r7 -> r11 ; mallocr.c:2490
	;;
#0:	       sub	r11, r10 -> r12 ; mallocr.c:2491
	;;
#0:	       cmplt	r12, r8 -> c1   ; mallocr.c:2493
	;;
#0:	if  c1 br	.BB25_67        ; mallocr.c:2493
	;;                              ; mallocr.c:2493
	       nop	2               ; mallocr.c:2493
	;;
; BB#66:                                ; %bb77
#0:	       ldm.f	r9, 8           ; mallocr.c:2497
#1:	       or	r10, 1 -> r0    ; mallocr.c:2496
#2:	       add	r9, r10 -> r3   ; mallocr.c:2495
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2497
#1:	       ldm.f	r9, 12          ; mallocr.c:2497
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2497
#1:	       stm.a	r0, r9, 1       ; mallocr.c:2496
#2:	       ldga	___malloc_av_ -> r0 ; mallocr.c:2498
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2497
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2497
#1:	       or	r10, 4 -> r1
#2:	       or	r12, 1 -> r2    ; mallocr.c:2499
	;;
#0:	       add	r9, r1 -> r1
	;;
#0:	       stm.a	r3, r0, 5       ; mallocr.c:2498
	;;
#0:	       stm.a	r3, r0, 4       ; mallocr.c:2498
#1:	       add	r0, 8 -> r0     ; mallocr.c:2498
	;;
#0:	       br	.BB25_104
#1:	       stm.a	r2, r1, 0       ; mallocr.c:2499
#2:	       add	r9, r11 -> r1   ; mallocr.c:2500
	;;
#0:	       stm.a	r0, r3, 3       ; mallocr.c:2498
	;;
#0:	       stm.a	r0, r3, 2       ; mallocr.c:2498
#1:	       add	r9, 8 -> r0     ; mallocr.c:2497
	;;
#0:	       stm.a	r12, r1, 0      ; mallocr.c:2500
	;;
.BB25_67:                               ; %bb78
                                        ;   in Loop: Header=BB25_64 Depth=3
#0:	       cmplt	r12, 0 -> c1    ; mallocr.c:2506
	;;
#0:	if  c1 br	.BB25_64
	;;
	       nop	2
	;;
; BB#68:                                ; %bb79
#0:	       add	r11, r9 -> r1   ; mallocr.c:2508
#1:	       add	r9, 8 -> r0     ; mallocr.c:2509
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2508
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2508
	;;
#0:	       or	r2, 1 -> r2     ; mallocr.c:2508
	;;
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2508
	;;
#0:	       ldm.f	r9, 8           ; mallocr.c:2509
	;;
#0:	       br	.BB25_33
#1:	       ldx	$mem, 0 -> r1   ; mallocr.c:2509
#2:	       ldm.f	r9, 12          ; mallocr.c:2509
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2509
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2509
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2509
	;;
.BB25_69:                               ; %bb82
                                        ;   in Loop: Header=BB25_63 Depth=2
#0:	       add	r5, 1 -> r9
#1:	       and	r5, 3 -> r5     ; mallocr.c:2526
#2:	       add	r6, 8 -> r6
	;;
#0:	       cmpne	r5, 0 -> c1     ; mallocr.c:2526
#1:	       or	r9, 0 -> r5
	;;
#0:	if  c1 br	.BB25_63
	;;
	       nop	2
	;;
; BB#70:                                ; %bb83.loopexit
                                        ;   in Loop: Header=BB25_62 Depth=1
#2:	       ldga	___malloc_av_ -> r2.16
#0:	       sub	r9, 1 -> r5
	;;
#2:	       add	r2.16, r4 -> r4
	;;
.BB25_71:                               ; %bb83
                                        ;   Parent Loop BB25_62 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       and	r0, 3 -> r6     ; mallocr.c:2532
	;;
#0:	       cmpne	r6, 0 -> c1     ; mallocr.c:2532
	;;
#0:	if  c1 br	.BB25_73        ; mallocr.c:2532
	;;                              ; mallocr.c:2532
	       nop	2               ; mallocr.c:2532
	;;
; BB#72:                                ; %bb84
                                        ;   in Loop: Header=BB25_62 Depth=1
#0:	       xor	r1, -1 -> r0    ; mallocr.c:2534
#1:	       br	.BB25_74
	;;
#0:	       and	r3, r0 -> r2    ; mallocr.c:2534
#1:	       ldga	___malloc_av_ -> r0
	;;
#0:	       stm.a	r2, r0, 1
#1:	       or	r2, 0 -> r3
	;;
	       nop	0
	;;
.BB25_73:                               ; %bb86
                                        ;   in Loop: Header=BB25_71 Depth=2
#0:	       ldm.f	r4, 0           ; mallocr.c:2539
#1:	       sub	r4, 8 -> r6
#2:	       sub	r0, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2539
	;;
#0:	       cmpeq	r6, r4 -> c1    ; mallocr.c:2539
#1:	       or	r6, 0 -> r4
	;;
#0:	if  c1 br	.BB25_71
	;;
	       nop	2
	;;
.BB25_74:                               ; %bb87
                                        ;   in Loop: Header=BB25_62 Depth=1
#0:	       sl	r1, 1 -> r1     ; mallocr.c:2543
	;;
#0:	       cmpult	r3, r1 -> c1    ; mallocr.c:2543
	;;
#0:	if !c1 cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB25_78
	;;
	       nop	2
	;;
; BB#75:                                ; %bb90.preheader
                                        ;   in Loop: Header=BB25_62 Depth=1
#0:	       and	r3, r1 -> r0    ; mallocr.c:2545
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2545
#1:	       or	r5, 0 -> r0
	;;
#0:	if  c1 br	.BB25_62
	;;
	       nop	2
	;;
.BB25_76:                               ; %bb89
                                        ;   Parent Loop BB25_62 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sl	r1, 1 -> r1     ; mallocr.c:2548
#1:	       add	r5, 4 -> r5
	;;
#0:	       and	r2, r1 -> r0    ; mallocr.c:2545
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:2545
	;;
#0:	if  c1 br	.BB25_76
	;;
	       nop	2
	;;
; BB#77:                                ;   in Loop: Header=BB25_62 Depth=1
#0:	       or	r2, 0 -> r3
#1:	       br	.BB25_62
#2:	       or	r5, 0 -> r0
	;;
	       nop	2
	;;
.BB25_78:                               ; %bb91
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2560
#1:	       ldi	-4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2560
	;;
#0:	       stm.s	r0, r14, 7
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2560
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2560
	;;
#0:	       and	r0, r1 -> r0    ; mallocr.c:2560
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2561
#1:	       stm.s	r0, r14, 6      ; mallocr.c:2561
	;;
#0:	if !c1 sub	r0, r10 -> r0   ; mallocr.c:2560
#1:	if !c1 ldi	16 -> r1
	;;
#0:	if !c1 cmplt	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB25_105
	;;
	       nop	2
	;;
; BB#79:                                ; %bb93
#0:	       ldmg.d	___malloc_sbrk_base ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2162[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 28         ; mallocr.c:2151[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r0, -1 -> c1    ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_81        ; mallocr.c:2162[ mallocr.c:2575 ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2151[ mallocr.c:2575 ]
#2:	       ldm.s	r14, 24         ; mallocr.c:2151[ mallocr.c:2575 ]
#3:	       ldx	$c1, 0 -> r0    ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2151[ mallocr.c:2575 ]
#1:	       stm.s	r0, r14, 4      ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	       add	r2, r1 -> r11   ; mallocr.c:2151[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2162[ mallocr.c:2575 ]
	       nop	0               ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
; BB#80:                                ; %bb93.bb1.i_crit_edge
#0:	       add	r10, 16 -> r0   ; mallocr.c:2155[ mallocr.c:2575 ]
#1:	       br	.BB25_82
	;;
	       nop	2
	;;
.BB25_81:                               ; %bb.i
#0:	       ldiu	15 -> r0
#1:	       ldiu	0 -> r1
	;;
#0:	       ldim	2 -> r0
#1:	       ldim	2046 -> r1
	;;
#0:	       add	r10, r0 -> r0
	;;
#0:	       and	r0, r1 -> r0    ; mallocr.c:2163[ mallocr.c:2575 ]
	;;
.BB25_82:                               ; %bb.i
#0:	       stm.s	r0, r14, 5
#1:	       ldga	_impure_data -> r0 ; mallocr.c:2165[ mallocr.c:2575 ]
	;;
#0:	       ldm.s	r14, 20         ; mallocr.c:2165[ mallocr.c:2575 ]
	;;
#0:	       callg	__sbrk_r        ; mallocr.c:2165[ mallocr.c:2575 ]
#1:	       ldx	$mem, 0 -> r1   ; mallocr.c:2165[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2165[ mallocr.c:2575 ]
	       nop	3               ; mallocr.c:2165[ mallocr.c:2575 ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; mallocr.c:2168[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_102
	;;
	       nop	2
	;;
; BB#83:                                ; %bb2.i
#0:	       cmpule	r11, r0 -> c1
	;;
#0:	if  c1 br	.BB25_85
	;;
	       nop	2
	;;
; BB#84:                                ; %bb2.i
#0:	       ldm.s	r14, 28
#1:	       ldga	___malloc_av_ -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       cmpne	r2, r1 -> c1
	;;
#0:	if  c1 br	.BB25_102
	;;
	       nop	2
	;;
.BB25_85:                               ; %bb4.i
#0:	       ldmg.d	___malloc_current_mallinfo.0 ; mallocr.c:2172[ mallocr.c:2575 ]
#1:	       cmpne	r0, r11 -> c1   ; mallocr.c:2174[ mallocr.c:2575 ]
#2:	       ldga	___malloc_current_mallinfo.0 -> r2 ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2172[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 20         ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       add	r1, r3 -> r12   ; mallocr.c:2172[ mallocr.c:2575 ]
#1:	if !c1 ldiu	2047 -> r1
	;;
#0:	if !c1 ldim	1 -> r1
#1:	       stm.a	r12, r2, 0      ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	if !c1 and	r11, r1 -> r1   ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_87
	;;
	       nop	2
	;;
; BB#86:                                ; %bb6.i
#0:	       ldm.s	r14, 24         ; mallocr.c:2178[ mallocr.c:2575 ]
#1:	       or	r3, 0 -> r11    ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       br	.BB25_98
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2178[ mallocr.c:2575 ]
#2:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2179[ mallocr.c:2575 ]
	;;
#0:	       add	r11, r0 -> r0   ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2179[ mallocr.c:2575 ]
#1:	       or	r0, 1 -> r0     ; mallocr.c:2179[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r0, r11, 1      ; mallocr.c:2179[ mallocr.c:2575 ]
	;;
.BB25_87:                               ; %bb7.i
#0:	       ldm.s	r14, 16         ; mallocr.c:2183[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2183[ mallocr.c:2575 ]
	;;
#0:	       stx	r1 -> $c1       ; mallocr.c:2183[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_89        ; mallocr.c:2183[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2183[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2183[ mallocr.c:2575 ]
	;;
; BB#88:                                ; %bb8.i
#0:	       ldga	___malloc_sbrk_base -> r1 ; mallocr.c:2184[ mallocr.c:2575 ]
#1:	       br	.BB25_90
	;;
#0:	       stm.a	r0, r1, 0       ; mallocr.c:2184[ mallocr.c:2575 ]
	;;
	       nop	1
	;;
.BB25_89:                               ; %bb9.i
#0:	       sub	r0, r11 -> r1
	;;
#0:	       add	r1, r12 -> r12  ; mallocr.c:2186[ mallocr.c:2575 ]
#1:	       ldga	___malloc_current_mallinfo.0 -> r1 ; mallocr.c:2186[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r12, r1, 0      ; mallocr.c:2186[ mallocr.c:2575 ]
	;;
.BB25_90:                               ; %bb10.i
#0:	       add	r0, 8 -> r1     ; mallocr.c:2189[ mallocr.c:2575 ]
	;;
#0:	       and	r1, 7 -> r1     ; mallocr.c:2189[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; mallocr.c:2190[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_92        ; mallocr.c:2190[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2190[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2190[ mallocr.c:2575 ]
	;;
; BB#91:                                ; %bb10.i.bb13.i_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB25_93
#2:	       or	r0, 0 -> r11
	;;
	       nop	2
	;;
.BB25_92:                               ; %bb11.i
#0:	       ldi	8 -> r11
	;;
#0:	       sub	r11, r1 -> r1   ; mallocr.c:2192[ mallocr.c:2575 ]
	;;
#0:	       add	r0, r1 -> r11   ; mallocr.c:2193[ mallocr.c:2575 ]
	;;
.BB25_93:                               ; %bb13.i
#0:	       ldm.s	r14, 20         ; mallocr.c:2199[ mallocr.c:2575 ]
#1:	       ldiu	2047 -> r0
#2:	       ldga	4096 -> r3
	;;
#0:	       ldim	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       callg	__sbrk_r        ; mallocr.c:2202[ mallocr.c:2575 ]
#1:	       add	r11, r2 -> r2   ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       and	r2, r0 -> r0    ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       sub	r3, r0 -> r2    ; mallocr.c:2199[ mallocr.c:2575 ]
#1:	       ldga	_impure_data -> r0 ; mallocr.c:2202[ mallocr.c:2575 ]
	;;
#0:	       add	r2, r1 -> r13   ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       or	r13, 0 -> r1    ; mallocr.c:2202[ mallocr.c:2575 ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; mallocr.c:2203[ mallocr.c:2575 ]
#1:	       ldi	0 -> r1
#2:	       ldga	___malloc_av_ -> r2
	;;
#0:	if  c1 or	r1, 0 -> r13
#1:	       ldga	___malloc_current_mallinfo.0 -> r1 ; mallocr.c:2210[ mallocr.c:2575 ]
#2:	if  c1 or	r11, 0 -> r0
	;;
#0:	       add	r13, r12 -> r12 ; mallocr.c:2210[ mallocr.c:2575 ]
#1:	       sub	r0, r11 -> r0
	;;
#0:	       stm.a	r12, r1, 0      ; mallocr.c:2210[ mallocr.c:2575 ]
#1:	       add	r0, r13 -> r0   ; mallocr.c:2213[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r11, r2, 2      ; mallocr.c:2212[ mallocr.c:2575 ]
#1:	       or	r0, 1 -> r0     ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
#0:	       ldm.s	r14, 28         ; mallocr.c:2216[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2216[ mallocr.c:2575 ]
#1:	       stm.a	r0, r11, 1      ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r1, r2 -> c1    ; mallocr.c:2216[ mallocr.c:2575 ]
	;;
#0:	if !c1 br	.BB25_98
	;;
	       nop	2
	;;
; BB#94:                                ; %bb16.i
#0:	       ldm.s	r14, 24         ; mallocr.c:2223[ mallocr.c:2575 ]
#1:	       ldi	15 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_96        ; mallocr.c:2223[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2223[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
; BB#95:                                ; %bb17.i
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2225[ mallocr.c:2575 ]
#1:	       br	.BB25_102
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2225[ mallocr.c:2575 ]
	;;
#0:	       stm.a	1, r0, 1        ; mallocr.c:2225[ mallocr.c:2575 ]
	;;
	       nop	0
	;;
.BB25_96:                               ; %bb18.i
#0:	       ldm.s	r14, 28         ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       ldi	-8 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 24
	;;
#0:	       and	r1, 1 -> r1     ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 12 -> r2
	;;
#0:	       and	r2, r3 -> r3    ; mallocr.c:2230[ mallocr.c:2575 ]
#1:	       or	r2, 4 -> r2
	;;
#0:	       or	r1, r3 -> r1    ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       add	r0, r2 -> r2
#2:	       cmpult	r3, 16 -> c1    ; mallocr.c:2237[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_98
#1:	       stm.a	r1, r0, 1       ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       stm.a	5, r2, 0        ; mallocr.c:2232[ mallocr.c:2575 ]
	;;
#0:	       stm.a	5, r2, 1        ; mallocr.c:2234[ mallocr.c:2575 ]
	;;
	       nop	0
	;;
; BB#97:                                ; %bb19.i
#0:	       ldm.s	r14, 28
#1:	       ldga	_impure_data -> r0 ; mallocr.c:2238[ mallocr.c:2575 ]
	;;
#0:	       callg	__free_r        ; mallocr.c:2238[ mallocr.c:2575 ]
#1:	       ldx	$mem, 0 -> r12
	;;
#0:	       add	r12, 8 -> r1
	;;                              ; mallocr.c:2238[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2238[ mallocr.c:2575 ]
	;;
#0:	       ldmg.d	___malloc_current_mallinfo.0
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
.BB25_98:                               ; %bb20.i
#0:	       ldmg.d	___malloc_max_sbrked_mem ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	       cmpule	r12, r0 -> c1   ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_100
	;;
	       nop	2
	;;
; BB#99:                                ; %bb21.i
#0:	       ldga	___malloc_max_sbrked_mem -> r0 ; mallocr.c:2243[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r12, r0, 0      ; mallocr.c:2243[ mallocr.c:2575 ]
	;;
.BB25_100:                              ; %bb22.i
#0:	       ldmg.d	___malloc_max_total_mem ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	       cmpule	r12, r0 -> c1   ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB25_102
	;;
	       nop	2
	;;
; BB#101:                               ; %bb23.i
#0:	       ldga	___malloc_max_total_mem -> r0 ; mallocr.c:2249[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r12, r0, 0      ; mallocr.c:2249[ mallocr.c:2575 ]
	;;
.BB25_102:                              ; %malloc_extend_top.exit
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2576
#1:	       ldi	-4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2576
	;;
#0:	       stm.s	r0, r14, 7
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2576
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2576
	;;
#0:	       and	r0, r1 -> r0    ; mallocr.c:2576
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2577
	;;
#0:	if !c1 sub	r0, r10 -> r0   ; mallocr.c:2576
#1:	if !c1 ldi	16 -> r1
	;;
#0:	if !c1 cmplt	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB25_105
	;;
	       nop	2
	;;
; BB#103:                               ; %bb95
#0:	       ldi	0 -> r0
	;;
.BB25_104:                              ; %bb95
#0:	       ldm.s	r14, 32         ; mallocr.c:2590
#1:	       or	r14, 0 -> r15   ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2590
#1:	       ldm.s	r14, 36         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2590
#1:	       ldm.s	r14, 40         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2590
#1:	       ldm.s	r14, 44         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2590
#1:	       ldm.s	r15, 8          ; mallocr.c:2590
	;;
#0:	       br	.BB25_34
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:2590
#1:	       ldm.s	r15, 4          ; mallocr.c:2590
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:2590
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:2590
	;;
.BB25_105:                              ; %bb96
#1:	       ldm.s	r14, 28         ; mallocr.c:2586
#2:	       or	r10, 1 -> r1    ; mallocr.c:2585
#0:	       ldga	___malloc_av_ -> r0.16 ; mallocr.c:2586
#3:	       or	r10, 4 -> r2
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2587
	;;
#0:	       br	.BB25_33
#1:	       ldx	$mem, 0 -> r3   ; mallocr.c:2586
	;;
#0:	       stm.a	r1, r3, 1       ; mallocr.c:2585
#1:	       add	r3, r10 -> r4   ; mallocr.c:2586
#2:	       add	r3, r2 -> r1
	;;
#0:	       stm.a	r4, r0.16, 2    ; mallocr.c:2586
	;;
#0:	       stm.a	r0, r1, 0       ; mallocr.c:2587
#1:	       add	r3, 8 -> r0
	;;
	.align	4
__malloc_r_end:

	.align	4
__realloc_r:                            ; @_realloc_r
	.size	__realloc_r_end-__realloc_r
__realloc_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 16         ; mallocr.c:2806
#2:	       ldiu	64 -> r2        ; mallocr.c:2806
#0:	       ldx	$ro, 0 -> r0.31 ; mallocr.c:2806
#3:	       cmpne	r0, 0 -> c1     ; mallocr.c:2806
	;;
#0:	       sub	r15, r2 -> r15  ; mallocr.c:2806
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mallocr.c:2806
	;;
#0:	       stm.s	r14, r15, 0     ; mallocr.c:2806
#1:	       or	r15, 0 -> r14   ; mallocr.c:2806
	;;
#3:	       stm.s	r3.31, r15, 1   ; mallocr.c:2806
	;;
#0:	       stm.s	r0.31, r15, 2   ; mallocr.c:2806
	;;
#0:	       stm.s	r10, r14, 15    ; mallocr.c:2806
	;;
#0:	if  c1 br	.BB26_2         ; mallocr.c:2806
#1:	       stm.s	r11, r14, 14    ; mallocr.c:2806
	;;
#0:	       stm.s	r12, r14, 13    ; mallocr.c:2806
	;;
#0:	       stm.s	r13, r14, 12    ; mallocr.c:2806
	;;
#1:	       stm.s	r1.23, r14, 11  ; mallocr.c:2806
	;;
; BB#1:                                 ; %bb
#0:	       or	r1, 0 -> r0     ; mallocr.c:2806
#1:	       callg	__malloc_r      ; mallocr.c:2806
	;;                              ; mallocr.c:2806
	       nop	3               ; mallocr.c:2806
	;;
#0:	       br	.BB26_56
	;;
	       nop	2
	;;
.BB26_2:                                ; %bb1
#0:	       ldi	22 -> r2
#1:	       add	r1, 11 -> r3    ; mallocr.c:2814
#2:	       ldi	-8 -> r4
#3:	       or	r0, 0 -> r10
	;;
#0:	       cmpult	r2, r3 -> c1    ; mallocr.c:2814
#1:	       and	r3, r4 -> r2    ; mallocr.c:2814
#2:	       ldi	16 -> r3
#3:	       ldm.f	r10, -4         ; mallocr.c:2811
	;;
#0:	if  c1 or	r2, 0 -> r3
	;;
#0:	       cmplt	r3, 0 -> c1     ; mallocr.c:2817
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2811
#2:	       stm.s	r3, r14, 10     ; mallocr.c:2817
	;;
#0:	if  c1 br	.BB26_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb1
#0:	       or	r3, 0 -> r2
	;;
#0:	       cmpule	r1, r2 -> c1
	;;
#0:	if  c1 br	.BB26_7
	;;
	       nop	2
	;;
.BB26_4:                                ; %bb6
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2819
	;;
#0:	       stm.a	12, r0, 0       ; mallocr.c:2819
#1:	       ldi	0 -> r0
	;;
.BB26_5:                                ; %bb6
#0:	       ldm.s	r14, 44         ; mallocr.c:2996
#1:	       or	r14, 0 -> r15   ; mallocr.c:2996
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; mallocr.c:2996
#0:	       ldm.s	r14, 48         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2996
#1:	       ldm.s	r14, 52         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2996
#1:	       ldm.s	r14, 56         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2996
#1:	       ldm.s	r14, 60         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2996
#1:	       ldm.s	r15, 8          ; mallocr.c:2996
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:2996
#0:	       ldm.s	r15, 4          ; mallocr.c:2996
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:2996
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:2996
	;;
.BB26_6:                                ; %bb6
#0:	       ldm.s	r15, 0          ; mallocr.c:2996
#1:	       s2add	r15, 16 -> r15  ; mallocr.c:2996
	;;
#0:	       ret                      ; mallocr.c:2996
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:2996
	;;                              ; mallocr.c:2996
	       nop	3               ; mallocr.c:2996
	;;
.BB26_7:                                ; %bb7
#0:	       sub	r10, 8 -> r3    ; mallocr.c:2810
#1:	       ldi	-4 -> r2
	;;
#0:	       stm.s	r3, r14, 9      ; mallocr.c:2811
#1:	       and	r0, r2 -> r11   ; mallocr.c:2811
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2856
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2856
	;;
#0:	       cmplt	r11, r2 -> c1   ; mallocr.c:2856
	;;
#0:	if !c1 br	.BB26_22
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb8
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2862
#1:	       add	r11, r10 -> r3  ; mallocr.c:2861
#2:	       sub	r11, 4 -> r12
	;;
#0:	       sub	r3, 8 -> r3     ; mallocr.c:2861
#1:	       add	r10, r12 -> r2
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2862
#1:	       ldm.f	r2, 0           ; mallocr.c:2864
	;;
#0:	       cmpeq	r4, r3 -> c1    ; mallocr.c:2862
	;;
#0:	if  c1 br	.BB26_18        ; mallocr.c:2862
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2864
	;;                              ; mallocr.c:2862
	       nop	2               ; mallocr.c:2862
	;;
; BB#9:                                 ; %bb9
#0:	       ldi	-2 -> r5
	;;
#0:	       and	r2, r5 -> r5    ; mallocr.c:2862
	;;
#0:	       add	r12, r5 -> r5
	;;
#0:	       add	r10, r5 -> r5
	;;
#0:	       ldm.f	r5, 0           ; mallocr.c:2862
	;;
#0:	       ldx	$membu, r5 -> r5 ; mallocr.c:2862
	;;
#0:	       btest	r5, 0 -> c1     ; mallocr.c:2862
	;;
#0:	if !c1 br	.BB26_20        ; mallocr.c:2862
	;;                              ; mallocr.c:2862
	       nop	2               ; mallocr.c:2862
	;;
; BB#10:                                ; %bb9.bb16_crit_edge
#0:	       ldi	0 -> r2
	;;
#0:	       stm.s	r2, r14, 8
#1:	       or	r2, 0 -> r3
	;;
.BB26_11:                               ; %bb16
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2896
	;;
#0:	if  c1 br	.BB26_54
	;;
	       nop	2
	;;
; BB#12:                                ; %bb17
#0:	       ldm.f	r10, -8         ; mallocr.c:2898
#1:	       ldi	-4 -> r2
#2:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2903
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2898
	;;
#0:	       sub	r2, r0 -> r5
	;;
#0:	       add	r10, r5 -> r13
#1:	       ldi	-8 -> r5
	;;
#0:	if  c1 br	.BB26_53
#1:	       ldm.f	r13, 0          ; mallocr.c:2899
#2:	       sub	r5, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2899
#1:	       stm.s	r0, r14, 6      ; mallocr.c:2898
#2:	       add	r10, r0 -> r0   ; mallocr.c:2898
	;;
#0:	       stm.s	r0, r14, 7      ; mallocr.c:2899
#1:	       and	r6, r2 -> r0    ; mallocr.c:2899
	;;
#0:	       stm.s	r0, r14, 5      ; mallocr.c:2903
	;;
; BB#13:                                ; %bb18
#0:	       ldm.s	r14, 32         ; mallocr.c:2908
#1:	       cmpne	r4, r3 -> c1    ; mallocr.c:2906
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2908
#1:	       ldm.s	r14, 20         ; mallocr.c:2908
	;;
#0:	if  c1 br	.BB26_32
#1:	       add	r0, r11 -> r0   ; mallocr.c:2908
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2908
	;;
#0:	       add	r0, r2 -> r0    ; mallocr.c:2908
	;;
#0:	       stm.s	r0, r14, 4      ; mallocr.c:2906
	;;
; BB#14:                                ; %bb19
#0:	       ldm.s	r14, 40         ; mallocr.c:2908
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2908
	;;
#0:	       add	r3, 16 -> r3    ; mallocr.c:2908
	;;
#0:	       cmplt	r0, r3 -> c1    ; mallocr.c:2908
	;;
#0:	if  c1 br	.BB26_53
	;;
	       nop	2
	;;
; BB#15:                                ; %bb20
#0:	       ldm.s	r14, 24
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, 12 -> r0
#1:	       add	r3, r10 -> r3
	;;
#0:	       ldm.f	r3, 8           ; mallocr.c:2910
#2:	       add	r10, r0 -> r0
#1:	       add	r3, 8 -> r1.23
	;;
#0:	if  c1 br	.BB26_30
#1:	       ldx	$mem, 0 -> r1   ; mallocr.c:2910
#2:	       ldm.f	r0, 0           ; mallocr.c:2910
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2910
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2910
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2910
	;;
; BB#16:                                ; %bb21
#0:	       ldi	19 -> r1
	;;
#0:	       cmpult	r1, r12 -> c1   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB26_24
	;;
	       nop	2
	;;
; BB#17:                                ; %bb21.bb25_crit_edge
#0:	       or	r10, 0 -> r0
#2:	       br	.BB26_29
#1:	       or	r1.23, 0 -> r1
	;;
	       nop	2
	;;
.BB26_18:                               ; %bb11
#0:	       ldi	-4 -> r5
	;;
#0:	       and	r2, r5 -> r2    ; mallocr.c:2864
	;;
#0:	       stm.s	r2, r14, 8      ; mallocr.c:2869
#1:	       add	r2, r11 -> r2   ; mallocr.c:2869
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2869
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2869
	;;
#0:	       add	r5, 16 -> r5    ; mallocr.c:2869
	;;
#0:	       cmple	r5, r2 -> c1    ; mallocr.c:2869
	;;
#0:	if !c1 br	.BB26_11
	;;
	       nop	2
	;;
; BB#19:                                ; %bb12
#0:	       ldm.s	r14, 40         ; mallocr.c:2872
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2872
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2872
#1:	       ldm.s	r14, 32
	;;
#0:	       add	r0, r10 -> r2   ; mallocr.c:2872
#1:	       sub	r11, r0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       sub	r2, 8 -> r4     ; mallocr.c:2872
#2:	       sub	r2, 4 -> r2
	;;
#0:	       stm.a	r4, r1, 2       ; mallocr.c:2872
#1:	       or	r3, 1 -> r3     ; mallocr.c:2873
	;;
#0:	       stm.a	r3, r2, 0       ; mallocr.c:2873
#1:	       sub	r10, 4 -> r3
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:2874
	;;
#0:	       br	.BB26_56
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2874
	;;
#0:	       and	r2, 1 -> r2     ; mallocr.c:2874
	;;
#0:	       or	r2, r0 -> r0    ; mallocr.c:2874
	;;
#0:	       stm.a	r0, r3, 0       ; mallocr.c:2874
#1:	       or	r10, 0 -> r0    ; mallocr.c:2996
	;;
.BB26_20:                               ; %bb13
#0:	       ldi	-4 -> r5
	;;
#0:	       and	r2, r5 -> r2    ; mallocr.c:2864
	;;
#0:	       stm.s	r2, r14, 8      ; mallocr.c:2869
#1:	       add	r2, r11 -> r2   ; mallocr.c:2869
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2881
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2881
	;;
#0:	       cmple	r5, r2 -> c1    ; mallocr.c:2881
	;;
#0:	if !c1 br	.BB26_11
	;;
	       nop	2
	;;
; BB#21:                                ; %bb14
#0:	       add	r10, r11 -> r0
#1:	       or	r2, 0 -> r11
	;;
#0:	       ldm.f	r0, 0           ; mallocr.c:2883
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2883
#1:	       ldm.f	r0, 4           ; mallocr.c:2883
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2883
	;;
#0:	       stm.a	r0, r3, 3       ; mallocr.c:2883
	;;
#0:	       stm.a	r3, r0, 2       ; mallocr.c:2883
	;;
.BB26_22:                               ; %split
#0:	       ldm.s	r14, 40         ; mallocr.c:2978
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2978
	;;
#0:	       sub	r11, r0 -> r0   ; mallocr.c:2978
	;;
#0:	       cmpult	r0, 16 -> c1    ; mallocr.c:2980
	;;
#0:	if  c1 br	.BB26_70
	;;
	       nop	2
	;;
; BB#23:                                ; %bb66
#0:	       ldm.s	r14, 36         ; mallocr.c:2983
#1:	       or	r0, 1 -> r0     ; mallocr.c:2984
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2983
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2983
#1:	       add	r11, r1 -> r11  ; mallocr.c:2982
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2983
#1:	       ldm.s	r14, 40
	;;
#0:	       and	r2, 1 -> r2     ; mallocr.c:2983
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       or	r2, r3 -> r2    ; mallocr.c:2983
#1:	       or	r3, 4 -> r4
	;;
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2983
#1:	       add	r1, r4 -> r4
#2:	       add	r3, r1 -> r1    ; mallocr.c:2982
	;;
#0:	       add	r1, 8 -> r1     ; mallocr.c:2986
	;;
#0:	       stm.a	r0, r4, 0       ; mallocr.c:2984
	;;
#0:	       ldm.f	r11, 4          ; mallocr.c:2985
	;;
#0:	       callg	__free_r        ; mallocr.c:2986
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2985
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2985
	;;
#0:	       stm.a	r0, r11, 1      ; mallocr.c:2985
#1:	       ldga	_impure_data -> r0 ; mallocr.c:2986
	;;                              ; mallocr.c:2986
	       nop	1               ; mallocr.c:2986
	;;
#0:	       br	.BB26_71
	;;
	       nop	2
	;;
.BB26_24:                               ; %bb22
#0:	       ldm.f	r10, 0          ; mallocr.c:2914
#1:	       ldi	27 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB26_26        ; mallocr.c:2914
#1:	       stm.a	r1, r1.23, 0    ; mallocr.c:2914
#2:	       add	r3, 16 -> r1
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2914
	;;
#0:	       stm.a	r2, r0, 0       ; mallocr.c:2914
	;;
; BB#25:                                ; %bb22.bb25_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB26_29
	;;
	       nop	2
	;;
.BB26_26:                               ; %bb23
#0:	       ldm.f	r10, 8          ; mallocr.c:2914
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB26_28        ; mallocr.c:2914
#1:	       stm.a	r0, r1, 0       ; mallocr.c:2914
#2:	       add	r3, 24 -> r1
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	       stm.a	r0, r3, 5       ; mallocr.c:2914
	;;
; BB#27:                                ; %bb23.bb25_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB26_29
	;;
	       nop	2
	;;
.BB26_28:                               ; %bb24
#0:	       ldm.f	r10, 16         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	       stm.a	r0, r1, 0       ; mallocr.c:2914
#1:	       s2add	r3, 8 -> r1
#2:	       add	r10, 24 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2914
	;;
#0:	       stm.a	r12, r3, 7      ; mallocr.c:2914
	;;
.BB26_29:                               ; %bb25
#0:	       ldm.f	r0, 0           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       stm.a	r3, r1, 0       ; mallocr.c:2914
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       br	.BB26_31
#1:	       stm.a	r3, r1, 1       ; mallocr.c:2914
	;;
#0:	       ldm.f	r0, 8           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       stm.a	r3, r1, 2       ; mallocr.c:2914
	;;
.BB26_30:                               ; %bb26
#1:	       or	r1.23, 0 -> r0  ; mallocr.c:2914
#0:	       callg	_memmove        ; mallocr.c:2914
#2:	       or	r10, 0 -> r1    ; mallocr.c:2914
#3:	       or	r12, 0 -> r2    ; mallocr.c:2914
	;;                              ; mallocr.c:2914
	       nop	3               ; mallocr.c:2914
	;;
.BB26_31:                               ; %bb27
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 32         ; mallocr.c:2912
	;;
#0:	       sub	r11, r3 -> r11
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2912
#1:	       ldm.s	r14, 24
	;;
#0:	       add	r11, r12 -> r11 ; mallocr.c:2912
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 20
	;;
#0:	       add	r12, r3 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       add	r10, r12 -> r10 ; mallocr.c:2915
	;;
#0:	       add	r11, r0 -> r11
#1:	       ldga	___malloc_av_ -> r0 ; mallocr.c:2915
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2915
#2:	       or	r11, 1 -> r11   ; mallocr.c:2916
#1:	       or	r1.23, 0 -> r0  ; mallocr.c:2996
	;;
#0:	       stm.a	r11, r10, 1     ; mallocr.c:2916
	;;
#0:	       ldm.f	r13, 0          ; mallocr.c:2917
	;;
#0:	       br	.BB26_5
#1:	       ldx	$mem, 0 -> r10  ; mallocr.c:2917
	;;
#0:	       and	r10, 1 -> r10   ; mallocr.c:2917
	;;
#0:	       or	r10, r3 -> r3   ; mallocr.c:2917
	;;
#0:	       stm.a	r3, r13, 0      ; mallocr.c:2917
	;;
.BB26_32:                               ; %bb28
#0:	       ldm.s	r14, 16         ; mallocr.c:2924
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2924
#1:	       ldm.s	r14, 40         ; mallocr.c:2924
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2924
	;;
#0:	       cmplt	r2, r0 -> c1    ; mallocr.c:2924
	;;
#0:	if  c1 br	.BB26_53
	;;
	       nop	2
	;;
; BB#33:                                ; %bb29
#0:	       ldm.f	r3, 8           ; mallocr.c:2926
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2926
#1:	       ldm.f	r3, 12          ; mallocr.c:2926
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2926
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       stm.a	r0, r11, 3      ; mallocr.c:2926
	;;
#0:	       add	r1, 12 -> r2
#1:	       add	r1, r10 -> r1
	;;
#0:	       stm.a	r11, r0, 2      ; mallocr.c:2926
#1:	       add	r10, r2 -> r11
#2:	       add	r1, 8 -> r0
	;;
#0:	       ldm.f	r1, 8           ; mallocr.c:2927
	;;
#0:	if  c1 br	.BB26_41        ; mallocr.c:2931
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2927
#2:	       ldm.f	r11, 0          ; mallocr.c:2927
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2927
	;;
#0:	       stm.a	r3, r2, 3       ; mallocr.c:2927
	;;
#0:	       stm.a	r2, r3, 2       ; mallocr.c:2927
	;;
; BB#34:                                ; %bb31
#0:	       ldi	19 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2931
	;;
#0:	if !c1 br	.BB26_40
	;;
	       nop	2
	;;
; BB#35:                                ; %bb34
#0:	       ldm.f	r10, 0          ; mallocr.c:2931
#1:	       ldi	27 -> r3
	;;
#0:	       cmpult	r3, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2931
	;;
#0:	if  c1 br	.BB26_37        ; mallocr.c:2931
#1:	       stm.a	r2, r0, 0       ; mallocr.c:2931
#2:	       add	r1, 16 -> r0
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2931
	;;
#0:	       stm.a	r2, r11, 0      ; mallocr.c:2931
	;;
; BB#36:                                ; %bb34.bb37_crit_edge
#0:	       add	r10, 8 -> r10
#1:	       br	.BB26_40
	;;
	       nop	2
	;;
.BB26_37:                               ; %bb35
#0:	       ldm.f	r10, 8          ; mallocr.c:2931
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	if  c1 br	.BB26_39        ; mallocr.c:2931
#1:	       stm.a	r11, r0, 0      ; mallocr.c:2931
#2:	       add	r1, 24 -> r0
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r1, 5      ; mallocr.c:2931
	;;
; BB#38:                                ; %bb35.bb37_crit_edge
#0:	       add	r10, 16 -> r10
#1:	       br	.BB26_40
	;;
	       nop	2
	;;
.BB26_39:                               ; %bb36
#0:	       ldm.f	r10, 16         ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2931
#1:	       s2add	r1, 8 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2931
#1:	       add	r10, 24 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r1, 7      ; mallocr.c:2931
	;;
.BB26_40:                               ; %bb37
#0:	       ldm.f	r10, 0          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2931
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       br	.BB26_42
#1:	       stm.a	r11, r0, 1      ; mallocr.c:2931
	;;
#0:	       ldm.f	r10, 8          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2931
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2931
	;;
.BB26_41:                               ; %bb38
#0:	       or	r10, 0 -> r1    ; mallocr.c:2931
#1:	       callg	_memmove        ; mallocr.c:2931
#2:	       or	r12, 0 -> r2    ; mallocr.c:2931
	;;                              ; mallocr.c:2931
	       nop	3               ; mallocr.c:2931
	;;
.BB26_42:                               ; %bb38
#0:	       ldm.s	r14, 16
	;;
.BB26_43:                               ; %bb38
#0:	       ldx	$mem, 0 -> r11
#1:	       br	.BB26_22
#2:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 9     ; mallocr.c:2931
	;;
	       nop	0
	;;
.BB26_44:                               ; %bb41
#0:	       ldm.s	r14, 24
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r11, 12 -> r0
#1:	       add	r11, r10 -> r11
	;;
#0:	       ldm.f	r11, 8          ; mallocr.c:2939
#1:	       add	r10, r0 -> r1
#2:	       add	r11, 8 -> r0
	;;
#0:	if  c1 br	.BB26_52        ; mallocr.c:2943
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2939
#2:	       ldm.f	r1, 0           ; mallocr.c:2939
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2939
	;;
#0:	       stm.a	r3, r2, 3       ; mallocr.c:2939
	;;
#0:	       stm.a	r2, r3, 2       ; mallocr.c:2939
	;;
; BB#45:                                ; %bb43
#0:	       ldi	19 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2943
	;;
#0:	if !c1 br	.BB26_51
	;;
	       nop	2
	;;
; BB#46:                                ; %bb46
#0:	       ldm.f	r10, 0          ; mallocr.c:2943
#1:	       ldi	27 -> r3
	;;
#0:	       cmpult	r3, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2943
	;;
#0:	if  c1 br	.BB26_48        ; mallocr.c:2943
#1:	       stm.a	r2, r0, 0       ; mallocr.c:2943
#2:	       add	r11, 16 -> r0
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2943
	;;
#0:	       stm.a	r2, r1, 0       ; mallocr.c:2943
	;;
; BB#47:                                ; %bb46.bb49_crit_edge
#0:	       add	r10, 8 -> r10
#1:	       br	.BB26_51
	;;
	       nop	2
	;;
.BB26_48:                               ; %bb47
#0:	       ldm.f	r10, 8          ; mallocr.c:2943
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2943
	;;
#0:	if  c1 br	.BB26_50        ; mallocr.c:2943
#1:	       stm.a	r1, r0, 0       ; mallocr.c:2943
#2:	       add	r11, 24 -> r0
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2943
	;;
#0:	       stm.a	r1, r11, 5      ; mallocr.c:2943
	;;
; BB#49:                                ; %bb47.bb49_crit_edge
#0:	       add	r10, 16 -> r10
#1:	       br	.BB26_51
	;;
	       nop	2
	;;
.BB26_50:                               ; %bb48
#0:	       ldm.f	r10, 16         ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2943
	;;
#0:	       stm.a	r12, r0, 0      ; mallocr.c:2943
#1:	       s2add	r11, 8 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2943
#1:	       add	r10, 24 -> r10
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2943
	;;
#0:	       stm.a	r12, r11, 7     ; mallocr.c:2943
	;;
.BB26_51:                               ; %bb49
#0:	       ldm.f	r10, 0          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2943
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2943
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2943
	;;
#0:	       stm.a	r11, r0, 1      ; mallocr.c:2943
	;;
#0:	       br	.BB26_43
#1:	       ldm.f	r10, 8          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2943
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2943
	;;
#0:	       ldm.s	r14, 32
	;;
.BB26_52:                               ; %bb50
#0:	       or	r10, 0 -> r1    ; mallocr.c:2943
#1:	       callg	_memmove        ; mallocr.c:2943
#2:	       or	r12, 0 -> r2    ; mallocr.c:2943
	;;                              ; mallocr.c:2943
	       nop	3               ; mallocr.c:2943
	;;
#0:	       br	.BB26_43
#1:	       ldm.s	r14, 32
	;;
	       nop	2
	;;
.BB26_53:                               ; %bb39
#0:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 20         ; mallocr.c:2937
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; mallocr.c:2937
	;;
#0:	if !c1 add	r0, r11 -> r0   ; mallocr.c:2937
	;;
#0:	if !c1 stm.s	r0, r14, 8      ; mallocr.c:2937
	;;
#0:	if !c1 ldm.s	r14, 40         ; mallocr.c:2937
	;;
#0:	if !c1 ldx	$mem, 0 -> r2   ; mallocr.c:2937
	;;
#0:	if !c1 cmplt	r0, r2 -> c1    ; mallocr.c:2937
	;;
#0:	if !c1 br	.BB26_44
	;;
	       nop	2
	;;
.BB26_54:                               ; %bb51
#0:	       or	r1, 0 -> r0     ; mallocr.c:2950
#1:	       callg	__malloc_r      ; mallocr.c:2950
	;;                              ; mallocr.c:2950
	       nop	3               ; mallocr.c:2950
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2952
	;;
#0:	if  c1 br	.BB26_57        ; mallocr.c:2952
	;;                              ; mallocr.c:2952
	       nop	2               ; mallocr.c:2952
	;;
; BB#55:                                ; %bb52
#0:	       ldi	0 -> r0
	;;
.BB26_56:                               ; %bb52
#0:	       ldm.s	r14, 44         ; mallocr.c:2996
#1:	       or	r14, 0 -> r15   ; mallocr.c:2996
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; mallocr.c:2996
#0:	       ldm.s	r14, 48         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2996
#1:	       ldm.s	r14, 52         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2996
#1:	       ldm.s	r14, 56         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2996
#1:	       ldm.s	r14, 60         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2996
#1:	       ldm.s	r15, 8          ; mallocr.c:2996
	;;
#0:	       br	.BB26_6
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:2996
#2:	       ldm.s	r15, 4          ; mallocr.c:2996
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:2996
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:2996
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:2996
	;;
.BB26_57:                               ; %bb53
#0:	       ldm.f	r10, -4         ; mallocr.c:2961
#1:	       or	r0, 0 -> r13    ; mallocr.c:2950
#2:	       ldi	-2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2961
	;;
#0:	       sub	r0, 8 -> r0
	;;
#0:	       and	r0, r1 -> r0
#1:	       sub	r13, 8 -> r1    ; mallocr.c:2961
	;;
#0:	       add	r10, r0 -> r0   ; mallocr.c:2961
	;;
#0:	       cmpne	r1, r0 -> c1    ; mallocr.c:2961
	;;
#0:	if  c1 br	.BB26_59        ; mallocr.c:2961
	;;                              ; mallocr.c:2961
	       nop	2               ; mallocr.c:2961
	;;
; BB#58:                                ; %bb54
#0:	       ldm.f	r13, -4         ; mallocr.c:2963
#1:	       br	.BB26_22
#2:	       ldi	-4 -> r12
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2963
	;;
#0:	       and	r10, r12 -> r10 ; mallocr.c:2963
	;;
#0:	       add	r10, r11 -> r11 ; mallocr.c:2963
	;;
.BB26_59:                               ; %bb55
#0:	       ldi	36 -> r11
	;;
#0:	       cmpult	r11, r12 -> c1  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB26_68        ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	2               ; mallocr.c:2969
	;;
; BB#60:                                ; %bb57
#0:	       ldi	19 -> r11
	;;
#0:	       cmpult	r11, r12 -> c1  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB26_62        ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	2               ; mallocr.c:2969
	;;
; BB#61:                                ; %bb57.bb63_crit_edge
#0:	       or	r10, 0 -> r11
#1:	       br	.BB26_67
#2:	       or	r13, 0 -> r12
	;;
	       nop	2
	;;
.BB26_62:                               ; %bb60
#0:	       ldm.f	r10, 0          ; mallocr.c:2969
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r12 -> c1   ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB26_64        ; mallocr.c:2969
#1:	       stm.a	r11, r13, 0     ; mallocr.c:2969
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 1     ; mallocr.c:2969
	;;
; BB#63:                                ; %bb60.bb63_crit_edge
#0:	       add	r13, 8 -> r12
#1:	       br	.BB26_67
#2:	       add	r10, 8 -> r11
	;;
	       nop	2
	;;
.BB26_64:                               ; %bb61
#0:	       ldm.f	r10, 8          ; mallocr.c:2969
#1:	       ldi	35 -> r0
	;;
#0:	       cmpult	r0, r12 -> c1   ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB26_66        ; mallocr.c:2969
#1:	       stm.a	r11, r13, 2     ; mallocr.c:2969
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 3     ; mallocr.c:2969
	;;
; BB#65:                                ; %bb61.bb63_crit_edge
#0:	       add	r13, 16 -> r12
#1:	       br	.BB26_67
#2:	       add	r10, 16 -> r11
	;;
	       nop	2
	;;
.BB26_66:                               ; %bb62
#0:	       ldm.f	r10, 16         ; mallocr.c:2969
#1:	       add	r13, 24 -> r12
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 4     ; mallocr.c:2969
#1:	       add	r10, 24 -> r11
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       stm.a	r0, r13, 5      ; mallocr.c:2969
	;;
.BB26_67:                               ; %bb63
#0:	       ldm.f	r11, 0          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       stm.a	r0, r12, 0      ; mallocr.c:2969
	;;
#0:	       ldm.f	r11, 4          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       br	.BB26_69
#1:	       stm.a	r0, r12, 1      ; mallocr.c:2969
	;;
#0:	       ldm.f	r11, 8          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r12, 2     ; mallocr.c:2969
	;;
.BB26_68:                               ; %bb64
#0:	       or	r13, 0 -> r0    ; mallocr.c:2969
#1:	       callg	_memmove        ; mallocr.c:2969
#2:	       or	r10, 0 -> r1    ; mallocr.c:2969
#3:	       or	r12, 0 -> r2    ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	3               ; mallocr.c:2969
	;;
.BB26_69:                               ; %bb65
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2970
#1:	       callg	__free_r        ; mallocr.c:2970
#2:	       or	r10, 0 -> r1    ; mallocr.c:2970
	;;                              ; mallocr.c:2970
	       nop	3               ; mallocr.c:2970
	;;
#0:	       br	.BB26_5
#1:	       or	r13, 0 -> r0    ; mallocr.c:2996
	;;
	       nop	2
	;;
.BB26_70:                               ; %bb67
#0:	       ldm.s	r14, 36         ; mallocr.c:2990
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2990
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2990
#1:	       add	r11, r0 -> r2   ; mallocr.c:2990
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2990
	;;
#0:	       and	r1, 1 -> r1     ; mallocr.c:2990
	;;
#0:	       or	r1, r11 -> r1   ; mallocr.c:2990
	;;
#0:	       stm.a	r1, r0, 1       ; mallocr.c:2990
	;;
#0:	       ldm.f	r2, 4           ; mallocr.c:2991
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2991
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2991
	;;
#0:	       stm.a	r0, r2, 1       ; mallocr.c:2991
	;;
.BB26_71:                               ; %bb68
#0:	       ldm.s	r14, 36
#1:	       br	.BB26_56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
	.align	4
__realloc_r_end:

	.align	4
_memchr:                                ; @memchr
	.size	_memchr_end-_memchr
_memchr_start:
; BB#0:                                 ; %entry
#0:	       ldiu	4 -> r3         ; memchr.c:78
#1:	       br	.BB27_6
#2:	       wb.s	r15, 1          ; memchr.c:78
	;;
#0:	       sub	r15, r3 -> r15  ; memchr.c:78
	;;
	       nop	1
	;;
.BB27_1:                                ; %bb
                                        ;   in Loop: Header=BB27_6 Depth=1
#0:	       cmpne	r2, 0 -> c1     ; memchr.c:87
	;;
#0:	if  c1 br	.BB27_4         ; memchr.c:87
	;;                              ; memchr.c:87
	       nop	2               ; memchr.c:87
	;;
.BB27_2:                                ; %bb.bb20_crit_edge
#0:	       ldi	0 -> r0
	;;
.BB27_3:                                ; %bb20
#0:	       s2add	r15, 1 -> r15   ; memchr.c:133
#1:	       ret                      ; memchr.c:133
	;;                              ; memchr.c:133
	       nop	3               ; memchr.c:133
	;;
.BB27_4:                                ; %bb2
                                        ;   in Loop: Header=BB27_6 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:89
#1:	       mask	r1, 0 -> r4
	;;
#0:	       ldx	$membu, r0 -> r3 ; memchr.c:89
	;;
#0:	       cmpne	r3, r4 -> c1    ; memchr.c:89
	;;
#0:	if !c1 br	.BB27_3
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
                                        ;   in Loop: Header=BB27_6 Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       add	r0, 1 -> r0
	;;
.BB27_6:                                ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r0, 3 -> r3     ; memchr.c:85
	;;
#0:	       cmpne	r3, 0 -> c1     ; memchr.c:85
	;;
#0:	if  c1 br	.BB27_1         ; memchr.c:85
	;;                              ; memchr.c:85
	       nop	2               ; memchr.c:85
	;;
; BB#7:                                 ; %bb6
#0:	       ldi	3 -> r3
	;;
#0:	       cmpult	r3, r2 -> c1    ; memchr.c:94
	;;
#0:	if !c1 br	.BB27_14
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb7
#1:	       sl	r1, 8 -> r4
#2:	       mask	r1, 0 -> r5
#0:	       ldga	32896 -> r0.16
	;;
#1:	       mask	r4, 25 -> r4
#0:	       ldih	1028 -> r0.16
	;;
#0:	       br	.BB27_11
#1:	       or	r4, r5 -> r4    ; memchr.c:105
	;;
#0:	       sl	r4, 16 -> r5    ; memchr.c:106
	;;
#0:	       or	r5, r4 -> r4    ; memchr.c:106
	;;
#0:	       xor	r4, r0.16 -> r5 ; memchr.c:112
	;;
.BB27_9:                                ; %bb10
                                        ;   in Loop: Header=BB27_11 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:112
#1:	       ldiu	1791 -> r7
	;;
#0:	       ldim	991 -> r7
	;;
#0:	       ldx	$mem, 0 -> r6   ; memchr.c:112
#1:	       ldih	2039 -> r7
	;;
#0:	       xor	r6, r4 -> r8    ; memchr.c:112
#1:	       xor	r5, r6 -> r6    ; memchr.c:112
	;;
#0:	       add	r8, r7 -> r7
	;;
#0:	       and	r6, r7 -> r6    ; memchr.c:112
	;;
#0:	       and	r6, r0.16 -> r6 ; memchr.c:112
	;;
#0:	       cmpeq	r6, 0 -> c1     ; memchr.c:112
	;;
#0:	if !c1 br	.BB27_14
	;;
	       nop	2
	;;
; BB#10:                                ; %bb12
                                        ;   in Loop: Header=BB27_11 Depth=1
#0:	       sub	r2, 4 -> r2
#1:	       add	r0, 4 -> r0
	;;
.BB27_11:                               ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpult	r3, r2 -> c1    ; memchr.c:110
	;;
#0:	if  c1 br	.BB27_9
	;;
	       nop	2
	;;
#0:	       br	.BB27_14
	;;
	       nop	2
	;;
.BB27_12:                               ; %bb15
                                        ;   in Loop: Header=BB27_14 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:128
#1:	       mask	r1, 0 -> r4
	;;
#0:	       ldx	$membu, r0 -> r3 ; memchr.c:128
	;;
#0:	       cmpne	r3, r4 -> c1    ; memchr.c:128
	;;
#0:	if !c1 ret                      ; memchr.c:133
#1:	if !c1 s2add	r15, 1 -> r15   ; memchr.c:133
	;;                              ; memchr.c:133
	       nop	3               ; memchr.c:133
	;;
; BB#13:                                ; %bb17
                                        ;   in Loop: Header=BB27_14 Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       add	r0, 1 -> r0
	;;
.BB27_14:                               ; %bb18
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r2, 0 -> c1     ; memchr.c:126
	;;
#0:	if !c1 br	.BB27_12
	;;
	       nop	2
	;;
#0:	       br	.BB27_2
	;;
	       nop	2
	;;
	.align	4
_memchr_end:

	.align	4
_memcpy:                                ; @memcpy
	.size	_memcpy_end-_memcpy
_memcpy_start:
; BB#0:                                 ; %entry
#0:	       ldi	15 -> r3
#1:	       wb.s	r15, 2
#2:	       ldiu	8 -> r4
	;;
#0:	       cmpult	r3, r2 -> c1    ; memcpy.c:78
#1:	       sub	r15, r4 -> r15
	;;
#0:	if !c1 br	.BB28_9
#1:	       stm.s	r10, r15, 1
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       or	r1, r0 -> r3    ; memcpy.c:78
	;;
#0:	       and	r3, 3 -> r3     ; memcpy.c:78
	;;
#0:	       cmpeq	r3, 0 -> c1     ; memcpy.c:78
	;;
#0:	if !c1 br	.BB28_10
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.bb2_crit_edge
#0:	       ldi	0 -> r3
#1:	       ldi	15 -> r4
	;;
.BB28_3:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r3, 0 -> r5
	;;
#0:	       sub	r1, r5 -> r6
#1:	       sub	r0, r5 -> r7
	;;
#0:	       ldm.f	r6, 0           ; memcpy.c:86
	;;
#0:	       ldx	$mem, 0 -> r3   ; memcpy.c:86
	;;
#0:	       stm.a	r3, r7, 0       ; memcpy.c:86
#1:	       sub	r5, 16 -> r3
	;;
#0:	       ldm.f	r6, 4           ; memcpy.c:87
	;;
#0:	       ldx	$mem, 0 -> r8   ; memcpy.c:87
	;;
#0:	       stm.a	r8, r7, 1       ; memcpy.c:87
	;;
#0:	       ldm.f	r6, 8           ; memcpy.c:88
	;;
#0:	       ldx	$mem, 0 -> r8   ; memcpy.c:88
	;;
#0:	       stm.a	r8, r7, 2       ; memcpy.c:88
#1:	       add	r2, r3 -> r8
	;;
#0:	       cmpult	r4, r8 -> c1    ; memcpy.c:84
	;;
#0:	if  c1 br	.BB28_3         ; memcpy.c:84
#1:	       ldm.f	r6, 12          ; memcpy.c:89
	;;
#0:	       ldx	$mem, 0 -> r6   ; memcpy.c:89
	;;
#0:	       stm.a	r6, r7, 3       ; memcpy.c:89
	;;                              ; memcpy.c:84
	       nop	0               ; memcpy.c:84
	;;
; BB#4:                                 ; %bb5.preheader
#0:	       ldi	3 -> r4
	;;
#0:	       cmpult	r4, r8 -> c1    ; memcpy.c:94
	;;
#0:	if  c1 br	.BB28_6         ; memcpy.c:94
	;;                              ; memcpy.c:94
	       nop	2               ; memcpy.c:94
	;;
; BB#5:                                 ; %bb5.preheader.bb6_crit_edge
#0:	       sub	r0, r3 -> r0
#1:	       br	.BB28_9
#2:	       sub	r1, r3 -> r1
#3:	       or	r8, 0 -> r2
	;;
	       nop	2
	;;
.BB28_6:                                ; %bb.nph16
#0:	       ldi	0 -> r6
#1:	       add	r2, r3 -> r2
	;;
#0:	       or	r6, 0 -> r7
	;;
.BB28_7:                                ; %bb4
                                        ; =>This Inner Loop Header: Depth=1
#1:	       sub	r2, r6 -> r1.16
#0:	       add	r1, r6 -> r8
#2:	       add	r0, r6 -> r9
#3:	       sub	r7, 4 -> r7
	;;
#1:	       sub	r1.16, 4 -> r10
#0:	       sub	r8, r5 -> r8
#2:	       sub	r9, r5 -> r9
#3:	       add	r6, 4 -> r6
	;;
#0:	       cmpult	r4, r10 -> c1   ; memcpy.c:94
#1:	       ldm.f	r8, 16          ; memcpy.c:96
	;;
#0:	if  c1 br	.BB28_7         ; memcpy.c:94
#1:	       ldx	$mem, 0 -> r8   ; memcpy.c:96
	;;
#0:	       stm.a	r8, r9, 4       ; memcpy.c:96
	;;                              ; memcpy.c:94
	       nop	1               ; memcpy.c:94
	;;
; BB#8:                                 ; %bb5.bb6_crit_edge
#0:	       add	r1, r6 -> r1
#1:	       add	r0, r6 -> r0
#2:	       sub	r2, r6 -> r2
	;;
#0:	       sub	r1, r3 -> r1
#1:	       sub	r0, r3 -> r0
	;;
.BB28_9:                                ; %bb8.preheader
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB28_11
	;;
	       nop	2
	;;
.BB28_10:                               ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       ldm.f	r1, 0           ; memcpy.c:106
#2:	       add	r0, 1 -> r4
	;;
#0:	       cmpne	r2, 0 -> c1     ; memcpy.c:105
	;;
#0:	if  c1 br	.BB28_10        ; memcpy.c:105
#1:	       ldx	$membu, r1 -> r3 ; memcpy.c:106
#2:	       add	r1, 1 -> r1
	;;
#0:	       stmb.a	r3, r0, 0       ; memcpy.c:106
#1:	       or	r4, 0 -> r0
	;;                              ; memcpy.c:105
	       nop	1               ; memcpy.c:105
	;;
.BB28_11:                               ; %bb9
#0:	       ldm.s	r15, 4
#1:	       s2add	r15, 2 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r10
	;;
	       nop	3
	;;
	.align	4
_memcpy_end:

	.align	4
_memmove:                               ; @memmove
	.size	_memmove_end-_memmove
_memmove_start:
; BB#0:                                 ; %entry
#0:	       ldiu	8 -> r3         ; memmove.c:92
#1:	       cmpule	r0, r1 -> c1    ; memmove.c:92
#2:	       wb.s	r15, 2          ; memmove.c:92
	;;
#0:	       sub	r15, r3 -> r15  ; memmove.c:92
#1:	if !c1 add	r1, r2 -> r3    ; memmove.c:92
	;;
#0:	if !c1 cmpule	r3, r0 -> c1    ; memmove.c:92
	;;
#0:	if  c1 br	.BB29_4
#1:	       stm.s	r10, r15, 1     ; memmove.c:92
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB29_15
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.nph34
#0:	       ldi	0 -> r3
	;;
#0:	       sub	r3, r2 -> r2
	;;
.BB29_3:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, r2 -> r3
#1:	       sub	r0, r2 -> r5
#2:	       add	r2, 1 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
#1:	       ldm.f	r3, -1          ; memmove.c:99
#2:	       sub	r3, 1 -> r4
	;;
#0:	if !c1 br	.BB29_3
#1:	       ldx	$membu, r4 -> r3 ; memmove.c:99
#2:	       sub	r5, 1 -> r4
	;;
#0:	       stmb.a	r3, r4, 0       ; memmove.c:99
	;;
	       nop	1
	;;
#0:	       br	.BB29_15
	;;
	       nop	2
	;;
.BB29_4:                                ; %bb4
#0:	       ldi	15 -> r3
	;;
#0:	       cmpult	r3, r2 -> c1    ; memmove.c:107
	;;
#0:	if !c1 br	.BB29_13
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       or	r1, r0 -> r3    ; memmove.c:107
	;;
#0:	       and	r3, 3 -> r3     ; memmove.c:107
	;;
#0:	       cmpeq	r3, 0 -> c1     ; memmove.c:107
	;;
#0:	if !c1 br	.BB29_14
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb5.bb7_crit_edge
#0:	       ldi	0 -> r3
#1:	       ldi	15 -> r4
	;;
.BB29_7:                                ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r3, 0 -> r5
	;;
#0:	       sub	r1, r5 -> r6
#1:	       sub	r0, r5 -> r7
	;;
#0:	       ldm.f	r6, 0           ; memmove.c:115
	;;
#0:	       ldx	$mem, 0 -> r3   ; memmove.c:115
	;;
#0:	       stm.a	r3, r7, 0       ; memmove.c:115
#1:	       sub	r5, 16 -> r3
	;;
#0:	       ldm.f	r6, 4           ; memmove.c:116
	;;
#0:	       ldx	$mem, 0 -> r8   ; memmove.c:116
	;;
#0:	       stm.a	r8, r7, 1       ; memmove.c:116
	;;
#0:	       ldm.f	r6, 8           ; memmove.c:117
	;;
#0:	       ldx	$mem, 0 -> r8   ; memmove.c:117
	;;
#0:	       stm.a	r8, r7, 2       ; memmove.c:117
#1:	       add	r2, r3 -> r8
	;;
#0:	       cmpult	r4, r8 -> c1    ; memmove.c:113
	;;
#0:	if  c1 br	.BB29_7         ; memmove.c:113
#1:	       ldm.f	r6, 12          ; memmove.c:118
	;;
#0:	       ldx	$mem, 0 -> r6   ; memmove.c:118
	;;
#0:	       stm.a	r6, r7, 3       ; memmove.c:118
	;;                              ; memmove.c:113
	       nop	0               ; memmove.c:113
	;;
; BB#8:                                 ; %bb10.preheader
#0:	       ldi	3 -> r4
	;;
#0:	       cmpult	r4, r8 -> c1    ; memmove.c:123
	;;
#0:	if  c1 br	.BB29_10        ; memmove.c:123
	;;                              ; memmove.c:123
	       nop	2               ; memmove.c:123
	;;
; BB#9:                                 ; %bb10.preheader.bb11_crit_edge
#0:	       sub	r0, r3 -> r0
#1:	       br	.BB29_13
#2:	       sub	r1, r3 -> r1
#3:	       or	r8, 0 -> r2
	;;
	       nop	2
	;;
.BB29_10:                               ; %bb.nph22
#0:	       ldi	0 -> r6
#1:	       add	r2, r3 -> r2
	;;
#0:	       or	r6, 0 -> r7
	;;
.BB29_11:                               ; %bb9
                                        ; =>This Inner Loop Header: Depth=1
#3:	       sub	r2, r6 -> r3.16
#0:	       add	r1, r6 -> r8
#1:	       add	r0, r6 -> r9
#2:	       sub	r7, 4 -> r7
	;;
#3:	       sub	r3.16, 4 -> r10
#0:	       sub	r8, r5 -> r8
#1:	       sub	r9, r5 -> r9
#2:	       add	r6, 4 -> r6
	;;
#0:	       cmpult	r4, r10 -> c1   ; memmove.c:123
#1:	       ldm.f	r8, 16          ; memmove.c:125
	;;
#0:	if  c1 br	.BB29_11        ; memmove.c:123
#1:	       ldx	$mem, 0 -> r8   ; memmove.c:125
	;;
#0:	       stm.a	r8, r9, 4       ; memmove.c:125
	;;                              ; memmove.c:123
	       nop	1               ; memmove.c:123
	;;
; BB#12:                                ; %bb10.bb11_crit_edge
#0:	       add	r1, r6 -> r1
#1:	       add	r0, r6 -> r0
#2:	       sub	r2, r6 -> r2
	;;
#0:	       sub	r1, r3 -> r1
#1:	       sub	r0, r3 -> r0
	;;
.BB29_13:                               ; %bb13.preheader
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB29_15
	;;
	       nop	2
	;;
.BB29_14:                               ; %bb12
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       ldm.f	r1, 0           ; memmove.c:136
#2:	       add	r0, 1 -> r4
	;;
#0:	       cmpne	r2, 0 -> c1     ; memmove.c:134
	;;
#0:	if  c1 br	.BB29_14        ; memmove.c:134
#1:	       ldx	$membu, r1 -> r3 ; memmove.c:136
#2:	       add	r1, 1 -> r1
	;;
#0:	       stmb.a	r3, r0, 0       ; memmove.c:136
#1:	       or	r4, 0 -> r0
	;;                              ; memmove.c:134
	       nop	1               ; memmove.c:134
	;;
.BB29_15:                               ; %bb14
#0:	       ldm.s	r15, 4
#1:	       s2add	r15, 2 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r10
	;;
	       nop	3
	;;
	.align	4
_memmove_end:

	.align	4
__Balloc:                               ; @_Balloc
	.size	__Balloc_end-__Balloc
__Balloc_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 6          ; mprec.c:103
#2:	       ldiu	24 -> r2        ; mprec.c:103
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:103
	;;
#0:	       sub	r15, r2 -> r15  ; mprec.c:103
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:103
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:103
#1:	       or	r15, 0 -> r14   ; mprec.c:103
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:103
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:103
	;;
#0:	       stm.s	r10, r14, 5     ; mprec.c:103
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4     ; mprec.c:103
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:103
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:103
	;;
#0:	if !c1 br	.BB30_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106
	       nop	3               ; mprec.c:106
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106
	;;
#0:	if  c1 br	.BB30_8
#1:	       stm.a	r0, r1, 19      ; mprec.c:106
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.bb2_crit_edge
#0:	       or	r0, 0 -> r1
	;;
.BB30_3:                                ; %bb2
#0:	       s2add	r1, r10 -> r1   ; mprec.c:115
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:115
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115
	;;
#0:	if  c1 br	.BB30_5         ; mprec.c:115
	;;                              ; mprec.c:115
	       nop	2               ; mprec.c:115
	;;
; BB#4:                                 ; %bb3
#0:	       ldm.f	r0, 0           ; mprec.c:117
#1:	       br	.BB30_7
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:117
	;;
#0:	       stm.a	r10, r1, 0      ; mprec.c:117
	;;
	       nop	0
	;;
.BB30_5:                                ; %bb4
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123
#2:	       ldi	20 -> r1
	;;
#0:	       sl	r0, r10 -> r11  ; mprec.c:121
	;;
#0:	       s2add	r1, r11 -> r1   ; mprec.c:123
	;;                              ; mprec.c:123
	       nop	1               ; mprec.c:123
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB30_8
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb6
#0:	       stm.a	r10, r0, 1      ; mprec.c:128
	;;
#0:	       stm.a	r11, r0, 2      ; mprec.c:129
	;;
.BB30_7:                                ; %bb7
#0:	       stm.a	0, r0, 4        ; mprec.c:131
#1:	       or	r14, 0 -> r15   ; mprec.c:132
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:132
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:132
#1:	       ldm.s	r14, 20         ; mprec.c:132
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:132
#1:	       ldm.s	r15, 8          ; mprec.c:132
	;;
#0:	       br	.BB30_9
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:132
#2:	       ldm.s	r15, 4          ; mprec.c:132
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:132
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:132
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:132
	;;
.BB30_8:                                ; %bb8
#0:	       ldm.s	r14, 16         ; mprec.c:132
#1:	       or	r14, 0 -> r15   ; mprec.c:132
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:132
#1:	       ldm.s	r14, 20         ; mprec.c:132
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:132
#1:	       ldm.s	r15, 8          ; mprec.c:132
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:132
#0:	       ldm.s	r15, 4          ; mprec.c:132
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:132
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:132
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:132
	;;
.BB30_9:                                ; %bb8
#0:	       ldm.s	r15, 0          ; mprec.c:132
#1:	       s2add	r15, 6 -> r15   ; mprec.c:132
	;;
#0:	       ret                      ; mprec.c:132
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:132
	;;                              ; mprec.c:132
	       nop	3               ; mprec.c:132
	;;
	.align	4
__Balloc_end:

	.align	4
__Bfree:                                ; @_Bfree
	.size	__Bfree_end-__Bfree
__Bfree_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:139
#1:	       ldiu	4 -> r1         ; mprec.c:139
#2:	       wb.s	r15, 1          ; mprec.c:139
	;;
#0:	if  c1 ret                      ; mprec.c:144
#1:	       sub	r15, r1 -> r15  ; mprec.c:139
	;;
#0:	if  c1 s2add	r15, 1 -> r15   ; mprec.c:144
	;;                              ; mprec.c:144
	       nop	2               ; mprec.c:144
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141
#1:	       ldm.f	r0, 4           ; mprec.c:141
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:141
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:141
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:141
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:142
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:142
	;;
#0:	       stm.a	r0, r1, 0       ; mprec.c:142
	;;
.BB31_2:                                ; %return
#0:	       s2add	r15, 1 -> r15   ; mprec.c:144
#1:	       ret                      ; mprec.c:144
	;;                              ; mprec.c:144
	       nop	3               ; mprec.c:144
	;;
	.align	4
__Bfree_end:

	.align	4
___hi0bits:                             ; @__hi0bits
	.size	___hi0bits_end-___hi0bits
___hi0bits_start:
; BB#0:                                 ; %entry
#0:	       ldga	65536 -> r1
#1:	       sl	r0, 16 -> r2    ; mprec.c:242
#2:	       ldiu	4 -> r4
#3:	       wb.s	r15, 1
	;;
#0:	       cmpult	r0, r1 -> c1
#1:	       sub	r15, r4 -> r15
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	       ldx	$c1 -> r1
	;;
#0:	       ldih	8 -> r2
#1:	       sl	r1, 4 -> r1
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 8 -> r2     ; mprec.c:247
#2:	       or	r1, 8 -> r3
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r3, 0 -> r1
	;;
#0:	       ldih	128 -> r2
#1:	       or	r1, 4 -> r3
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 4 -> r2     ; mprec.c:252
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r3, 0 -> r1
	;;
#0:	       ldih	512 -> r2
#1:	       or	r1, 2 -> r3
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 2 -> r2     ; mprec.c:257
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	if  c1 or	r3, 0 -> r1
	;;
#0:	       cmplt	r0, 0 -> c1     ; mprec.c:259
	;;
#0:	if  c1 ret                      ; mprec.c:265
#1:	if  c1 or	r1, 0 -> r0     ; mprec.c:265
#2:	if  c1 s2add	r15, 1 -> r15   ; mprec.c:265
	;;                              ; mprec.c:265
	       nop	3               ; mprec.c:265
	;;
; BB#1:                                 ; %bb8
#0:	       btest	r0, 30 -> c1
#1:	       ldi	32 -> r2
#2:	       add	r1, 1 -> r0     ; mprec.c:261
#3:	       s2add	r15, 1 -> r15
	;;
#0:	       ret
#1:	if !c1 or	r2, 0 -> r0
	;;
	       nop	3
	;;
.BB32_2:                                ; %bb10
	.align	4
___hi0bits_end:

	.align	4
___mcmp:                                ; @__mcmp
	.size	___mcmp_end-___mcmp
___mcmp_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1          ; mprec.c:527
#1:	       ldiu	4 -> r4         ; mprec.c:527
	;;
#0:	       sub	r15, r4 -> r15  ; mprec.c:527
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:527
#1:	       ldm.f	r1, 16          ; mprec.c:528
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:528
	;;
#0:	       cmpeq	r2, r3 -> c1
	;;
#0:	if !c1 ret                      ; mprec.c:548
#1:	if !c1 sub	r2, r3 -> r0    ; mprec.c:535
#2:	if !c1 s2add	r15, 1 -> r15   ; mprec.c:548
	;;                              ; mprec.c:548
	       nop	3               ; mprec.c:548
	;;
; BB#1:                                 ; %bb1
#0:	       s2add	r0, r3 -> r2
#1:	       s2add	r1, r3 -> r1
#2:	       add	r0, 20 -> r0
	;;
#0:	       add	r1, 16 -> r1
#1:	       add	r2, 20 -> r2
	;;
.BB33_2:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, -4          ; mprec.c:543
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543
#1:	       ldm.f	r1, 0           ; mprec.c:543
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:543
	;;
#0:	       cmpeq	r3, r4 -> c1    ; mprec.c:543
	;;
#0:	if !c1 br	.BB33_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb7
                                        ;   in Loop: Header=BB33_2 Depth=1
#0:	       sub	r2, 4 -> r2
#1:	       sub	r1, 4 -> r1
	;;
#0:	       cmpult	r0, r2 -> c1    ; mprec.c:545
	;;
#0:	if !c1 ret                      ; mprec.c:548
#1:	if !c1 ldi	0 -> r0
#2:	if !c1 s2add	r15, 1 -> r15   ; mprec.c:548
	;;                              ; mprec.c:548
	       nop	3               ; mprec.c:548
	;;
#0:	       br	.BB33_2
	;;
	       nop	2
	;;
.BB33_4:                                ; %bb3
#0:	       cmpult	r3, r4 -> c1    ; mprec.c:544
#1:	       ldi	-1 -> r1
#2:	       ldi	1 -> r0
#3:	       s2add	r15, 1 -> r15   ; mprec.c:548
	;;
#0:	       ret                      ; mprec.c:548
#1:	if  c1 or	r1, 0 -> r0
	;;                              ; mprec.c:548
	       nop	3               ; mprec.c:548
	;;
	.align	4
___mcmp_end:

	.align	4
___d2b:                                 ; @__d2b
	.size	___d2b_end-___d2b
___d2b_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 10
#2:	       ldiu	40 -> r5
#1:	       ldx	$rb, 0 -> r1.31
#3:	       stx	r0 -> $f0
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       fop	fmov	f0 -> f2
	;;
#0:	       fop	fmov	f2 -> f0
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       ldx	$f0 -> r0
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, 16 -> r4
#2:	       stx	r1 -> $f1
	;;
#2:	       stm.s	r2.31, r15, 2
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       stm.s	r10, r14, 9
	;;
#0:	       stm.s	r11, r14, 8
	;;
#0:	       stm.s	r12, r14, 7
#1:	       or	r2, 0 -> r12
	;;
#0:	       stm.s	r13, r14, 6
#1:	       or	r3, 0 -> r13
	;;
#0:	       stm.a	r0, r4, 0
#1:	       ldx	$f3 -> r0
	;;
#0:	       stm.a	r0, r4, 1
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:785 ]
#1:	       ldm.f	r4, 0
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:785 ]
	;;
#0:	if !c1 br	.BB34_3
#1:	       ldx	$mem, 0 -> r10
#2:	       ldm.f	r4, 4
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:785 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:785 ]
	       nop	3               ; mprec.c:106[ mprec.c:785 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:785 ]
	;;
#0:	if !c1 br	.BB34_3
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:785 ]
	;;
	       nop	2
	;;
.BB34_2:                                ; %bb.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB34_8
	;;
	       nop	2
	;;
.BB34_3:                                ; %bb2.i
#0:	       ldm.f	r0, 4           ; mprec.c:115[ mprec.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:115[ mprec.c:785 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:115[ mprec.c:785 ]
	;;
#0:	if  c1 br	.BB34_5         ; mprec.c:115[ mprec.c:785 ]
	;;                              ; mprec.c:115[ mprec.c:785 ]
	       nop	2               ; mprec.c:115[ mprec.c:785 ]
	;;
; BB#4:                                 ; %bb3.i
#0:	       ldm.f	r1, 0           ; mprec.c:117[ mprec.c:785 ]
#1:	       br	.BB34_7
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:117[ mprec.c:785 ]
	;;
#0:	       stm.a	r2, r0, 1       ; mprec.c:117[ mprec.c:785 ]
	;;
	       nop	0
	;;
.BB34_5:                                ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:785 ]
#2:	       ldi	28 -> r1
	;;                              ; mprec.c:123[ mprec.c:785 ]
	       nop	3               ; mprec.c:123[ mprec.c:785 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB34_2
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb6.i
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:785 ]
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:785 ]
	;;
.BB34_7:                                ; %bb7.i
#0:	       stm.a	0, r1, 4        ; mprec.c:131[ mprec.c:785 ]
	;;
#0:	       stm.a	0, r1, 3        ; mprec.c:131[ mprec.c:785 ]
	;;
.BB34_8:                                ; %_Balloc.exit
#0:	       ldiu	2047 -> r0
#1:	       sr	r11, 20 -> r2
#2:	       ldiu	2047 -> r3
#3:	       cmpeq	r10, 0 -> c2    ; mprec.c:804
	;;
#0:	if  c2 br	.BB34_23        ; mprec.c:804
#1:	       and	r2, r0 -> r0
#2:	       ldiu	0 -> r4
#3:	       ldim	511 -> r3
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:799
#1:	       and	r11, r3 -> r2   ; mprec.c:791
#2:	       ldim	512 -> r4
	;;
#0:	       or	r2, r4 -> r3    ; mprec.c:800
	;;
#0:	if  c1 or	r2, 0 -> r3
	;;
; BB#9:                                 ; %bb2
#0:	       and	r10, 7 -> r2    ; mprec.c:274[ mprec.c:807 ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:274[ mprec.c:807 ]
	;;
#0:	if  c2 br	.BB34_15        ; mprec.c:274[ mprec.c:807 ]
	;;                              ; mprec.c:274[ mprec.c:807 ]
	       nop	2               ; mprec.c:274[ mprec.c:807 ]
	;;
; BB#10:                                ; %bb.i45
#0:	       btest	r10, 0 -> c2    ; mprec.c:276[ mprec.c:807 ]
	;;
#0:	if !c2 br	.BB34_12        ; mprec.c:276[ mprec.c:807 ]
	;;                              ; mprec.c:276[ mprec.c:807 ]
	       nop	2               ; mprec.c:276[ mprec.c:807 ]
	;;
; BB#11:                                ; %bb.i45.bb17.i63_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB34_19
	;;
	       nop	2
	;;
.BB34_12:                               ; %bb2.i46
#0:	       btest	r10, 1 -> c2    ; mprec.c:278[ mprec.c:807 ]
	;;
#0:	if !c2 br	.BB34_14        ; mprec.c:278[ mprec.c:807 ]
	;;                              ; mprec.c:278[ mprec.c:807 ]
	       nop	2               ; mprec.c:278[ mprec.c:807 ]
	;;
; BB#13:                                ; %bb3.i47
#0:	       sr	r10, 1 -> r4    ; mprec.c:280[ mprec.c:807 ]
#1:	       br	.BB34_21
#2:	       ldi	1 -> r2
	;;
	       nop	2
	;;
.BB34_14:                               ; %bb4.i48
#0:	       sr	r10, 2 -> r4    ; mprec.c:283[ mprec.c:807 ]
#1:	       br	.BB34_21
#2:	       ldi	2 -> r2
	;;
	       nop	2
	;;
.BB34_15:                               ; %bb5.i57
#0:	       mask	r10, 4 -> r2    ; mprec.c:287[ mprec.c:807 ]
#1:	       or	r10, 0 -> r4
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:287[ mprec.c:807 ]
#1:	       sr	r10, 16 -> r2   ; mprec.c:290[ mprec.c:807 ]
	;;
#0:	if  c2 or	r2, 0 -> r4
#1:	       ldx	$c2 -> r5
	;;
#0:	       mask	r4, 0 -> r2     ; mprec.c:292[ mprec.c:807 ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:292[ mprec.c:807 ]
#1:	       sr	r4, 8 -> r2     ; mprec.c:295[ mprec.c:807 ]
	;;
#0:	if  c2 or	r2, 0 -> r4
#1:	       sl	r5, 4 -> r2
	;;
#0:	       or	r2, 8 -> r5
#1:	       and	r4, 15 -> r6    ; mprec.c:297[ mprec.c:807 ]
	;;
#0:	if  c2 or	r5, 0 -> r2
#1:	       cmpeq	r6, 0 -> c2     ; mprec.c:297[ mprec.c:807 ]
#2:	       sr	r4, 4 -> r5     ; mprec.c:300[ mprec.c:807 ]
	;;
#0:	if  c2 or	r5, 0 -> r4
#1:	       or	r2, 4 -> r5
	;;
#0:	if  c2 or	r5, 0 -> r2
#1:	       and	r4, 3 -> r5     ; mprec.c:302[ mprec.c:807 ]
	;;
#0:	       cmpeq	r5, 0 -> c2     ; mprec.c:302[ mprec.c:807 ]
#1:	       sr	r4, 2 -> r5     ; mprec.c:305[ mprec.c:807 ]
#2:	       or	r2, 2 -> r6
	;;
#0:	if  c2 or	r5, 0 -> r4
#1:	if  c2 or	r6, 0 -> r2
	;;
#0:	       btest	r4, 0 -> c2     ; mprec.c:307[ mprec.c:807 ]
	;;
#0:	if  c2 br	.BB34_20
	;;
	       nop	2
	;;
; BB#16:                                ; %bb14.i58
#0:	       sr	r4, 1 -> r4     ; mprec.c:310[ mprec.c:807 ]
	;;
#0:	       cmpeq	r4, 0 -> c2     ; mprec.c:311[ mprec.c:807 ]
	;;
#0:	if  c2 br	.BB34_18        ; mprec.c:311[ mprec.c:807 ]
	;;                              ; mprec.c:311[ mprec.c:807 ]
	       nop	2               ; mprec.c:311[ mprec.c:807 ]
	;;
; BB#17:                                ; %bb14.i58.__lo0bits.exit64_crit_edge
#0:	       add	r2, 1 -> r2     ; mprec.c:309[ mprec.c:807 ]
#1:	       br	.BB34_20
	;;
	       nop	2
	;;
.BB34_18:                               ; %bb14.i58.bb17.i63_crit_edge
#0:	       ldi	32 -> r2
	;;
.BB34_19:                               ; %bb17.i63
#0:	       or	r10, 0 -> r4
	;;
.BB34_20:                               ; %__lo0bits.exit64
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:808
	;;
#0:	if  c2 br	.BB34_22
	;;
	       nop	2
	;;
.BB34_21:                               ; %bb3
#0:	       ldi	32 -> r5
	;;
#0:	       sub	r5, r2 -> r5    ; mprec.c:810
	;;
#0:	       sl	r3, r5 -> r5    ; mprec.c:810
#1:	       sr	r3, r2 -> r3    ; mprec.c:811
	;;
#0:	       or	r5, r4 -> r4    ; mprec.c:810
	;;
.BB34_22:                               ; %bb4
#0:	       stm.a	r4, r1, 5       ; mprec.c:814
#1:	       cmpeq	r3, 0 -> c2     ; mprec.c:815
#2:	       ldi	1 -> r4
#3:	       ldi	2 -> r5
	;;
#0:	       br	.BB34_35
#1:	if  c2 or	r4, 0 -> r5
	;;
#0:	       stm.a	r3, r1, 6       ; mprec.c:815
	;;
#0:	       stm.a	r5, r1, 4       ; mprec.c:815
	;;
	       nop	0
	;;
.BB34_23:                               ; %bb9
#0:	       and	r3, 7 -> r2     ; mprec.c:274[ mprec.c:824 ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:274[ mprec.c:824 ]
	;;
#0:	if  c2 br	.BB34_29        ; mprec.c:274[ mprec.c:824 ]
	;;                              ; mprec.c:274[ mprec.c:824 ]
	       nop	2               ; mprec.c:274[ mprec.c:824 ]
	;;
; BB#24:                                ; %bb.i36
#0:	       btest	r3, 0 -> c2     ; mprec.c:276[ mprec.c:824 ]
	;;
#0:	if !c2 br	.BB34_26        ; mprec.c:276[ mprec.c:824 ]
	;;                              ; mprec.c:276[ mprec.c:824 ]
	       nop	2               ; mprec.c:276[ mprec.c:824 ]
	;;
; BB#25:                                ; %bb.i36.bb17.i_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB34_33
	;;
	       nop	2
	;;
.BB34_26:                               ; %bb2.i37
#0:	       btest	r3, 1 -> c2     ; mprec.c:278[ mprec.c:824 ]
	;;
#0:	if !c2 br	.BB34_28        ; mprec.c:278[ mprec.c:824 ]
	;;                              ; mprec.c:278[ mprec.c:824 ]
	       nop	2               ; mprec.c:278[ mprec.c:824 ]
	;;
; BB#27:                                ; %bb3.i38
#0:	       sr	r3, 1 -> r4     ; mprec.c:280[ mprec.c:824 ]
#1:	       br	.BB34_34
#2:	       ldi	1 -> r2
	;;
	       nop	2
	;;
.BB34_28:                               ; %bb4.i39
#0:	       sr	r3, 2 -> r4     ; mprec.c:283[ mprec.c:824 ]
#1:	       br	.BB34_34
#2:	       ldi	2 -> r2
	;;
	       nop	2
	;;
.BB34_29:                               ; %bb5.i
#0:	       mask	r3, 4 -> r2     ; mprec.c:287[ mprec.c:824 ]
#1:	       or	r3, 0 -> r4
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:287[ mprec.c:824 ]
#1:	       sr	r3, 16 -> r2    ; mprec.c:290[ mprec.c:824 ]
	;;
#0:	if  c2 or	r2, 0 -> r4
#1:	       ldx	$c2 -> r5
	;;
#0:	       mask	r4, 0 -> r2     ; mprec.c:292[ mprec.c:824 ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:292[ mprec.c:824 ]
#1:	       sr	r4, 8 -> r2     ; mprec.c:295[ mprec.c:824 ]
	;;
#0:	if  c2 or	r2, 0 -> r4
#1:	       sl	r5, 4 -> r2
	;;
#0:	       or	r2, 8 -> r5
#1:	       and	r4, 15 -> r6    ; mprec.c:297[ mprec.c:824 ]
	;;
#0:	if  c2 or	r5, 0 -> r2
#1:	       cmpeq	r6, 0 -> c2     ; mprec.c:297[ mprec.c:824 ]
#2:	       sr	r4, 4 -> r5     ; mprec.c:300[ mprec.c:824 ]
	;;
#0:	if  c2 or	r5, 0 -> r4
#1:	       or	r2, 4 -> r5
	;;
#0:	if  c2 or	r5, 0 -> r2
#1:	       and	r4, 3 -> r5     ; mprec.c:302[ mprec.c:824 ]
	;;
#0:	       cmpeq	r5, 0 -> c2     ; mprec.c:302[ mprec.c:824 ]
#1:	       sr	r4, 2 -> r5     ; mprec.c:305[ mprec.c:824 ]
#2:	       or	r2, 2 -> r6
	;;
#0:	if  c2 or	r5, 0 -> r4
#1:	if  c2 or	r6, 0 -> r2
	;;
#0:	       btest	r4, 0 -> c2     ; mprec.c:307[ mprec.c:824 ]
	;;
#0:	if  c2 br	.BB34_34
	;;
	       nop	2
	;;
; BB#30:                                ; %bb14.i
#0:	       sr	r4, 1 -> r4     ; mprec.c:310[ mprec.c:824 ]
	;;
#0:	       cmpeq	r4, 0 -> c2     ; mprec.c:311[ mprec.c:824 ]
	;;
#0:	if  c2 br	.BB34_32        ; mprec.c:311[ mprec.c:824 ]
	;;                              ; mprec.c:311[ mprec.c:824 ]
	       nop	2               ; mprec.c:311[ mprec.c:824 ]
	;;
; BB#31:                                ; %bb14.i.__lo0bits.exit_crit_edge
#0:	       add	r2, 1 -> r2     ; mprec.c:309[ mprec.c:824 ]
#1:	       br	.BB34_34
	;;
	       nop	2
	;;
.BB34_32:                               ; %bb14.i.bb17.i_crit_edge
#0:	       ldi	32 -> r2
	;;
.BB34_33:                               ; %bb17.i
#0:	       or	r3, 0 -> r4
	;;
.BB34_34:                               ; %__lo0bits.exit
#0:	       stm.a	r4, r1, 5       ; mprec.c:825
#1:	       s2add	r2, 8 -> r2     ; mprec.c:828
#2:	       ldi	1 -> r5
	;;
#0:	       stm.a	1, r1, 4        ; mprec.c:826
	;;
.BB34_35:                               ; %bb10
#0:	if  c1 br	.BB34_37        ; mprec.c:886
	;;                              ; mprec.c:886
	       nop	2               ; mprec.c:886
	;;
; BB#36:                                ; %bb11
#0:	       ldiu	973 -> r5
#1:	       br	.BB34_40
#2:	       add	r0, r2 -> r0
#3:	       ldi	53 -> r3
	;;
#0:	       ldim	2047 -> r5
#1:	       sub	r3, r2 -> r2    ; mprec.c:894
	;;
#0:	       add	r0, r5 -> r0    ; mprec.c:893
	;;
#0:	       stm.a	r0, r12, 0      ; mprec.c:893
	;;
.BB34_37:                               ; %bb12
#0:	       ldiu	974 -> r3
#1:	       add	r0, r2 -> r2
#2:	       s2add	r1, r5 -> r0
#3:	       sl	r5, 5 -> r5
	;;
#0:	       ldim	2047 -> r3
	;;
#0:	       add	r2, r3 -> r2    ; mprec.c:900
	;;
#0:	       stm.a	r2, r12, 0      ; mprec.c:900
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:902
#1:	       ldga	65536 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:902
	;;
#0:	       cmpult	r2, r0 -> c1
#1:	       sl	r2, 16 -> r3    ; mprec.c:242[ mprec.c:902 ]
	;;
#0:	if  c1 or	r3, 0 -> r2
#1:	       ldga	0 -> r3
#2:	       ldx	$c1 -> r0
	;;
#0:	       ldih	8 -> r3
#1:	       sl	r0, 4 -> r0
	;;
#0:	       cmpult	r2, r3 -> c1
#1:	       sl	r2, 8 -> r3     ; mprec.c:247[ mprec.c:902 ]
#2:	       or	r0, 8 -> r4
	;;
#0:	if  c1 or	r3, 0 -> r2
#1:	       ldga	0 -> r3
#2:	if  c1 or	r4, 0 -> r0
	;;
#0:	       ldih	128 -> r3
#1:	       or	r0, 4 -> r4
	;;
#0:	       cmpult	r2, r3 -> c1
#1:	       sl	r2, 4 -> r3     ; mprec.c:252[ mprec.c:902 ]
	;;
#0:	if  c1 or	r3, 0 -> r2
#1:	       ldga	0 -> r3
#2:	if  c1 or	r4, 0 -> r0
	;;
#0:	       ldih	512 -> r3
#1:	       or	r0, 2 -> r4
	;;
#0:	       cmpult	r2, r3 -> c1
#1:	       sl	r2, 2 -> r3     ; mprec.c:257[ mprec.c:902 ]
	;;
#0:	if  c1 or	r3, 0 -> r2
#1:	       ldi	-1 -> r3
#2:	if  c1 or	r4, 0 -> r0
	;;
#0:	       cmplt	r3, r2 -> c1
	;;
#0:	if !c1 br	.BB34_39
	;;
	       nop	2
	;;
; BB#38:                                ; %bb8.i35
#0:	       btest	r2, 30 -> c1
#1:	       ldi	32 -> r2
#2:	       add	r0, 1 -> r0     ; mprec.c:261[ mprec.c:902 ]
	;;
#0:	if !c1 or	r2, 0 -> r0
	;;
.BB34_39:                               ; %__hi0bits.exit
#0:	       sub	r5, r0 -> r2    ; mprec.c:902
	;;
.BB34_40:                               ; %bb13
#0:	       stm.a	r2, r13, 0
#1:	       or	r14, 0 -> r15   ; mprec.c:908
#2:	       or	r1, 0 -> r0     ; mprec.c:908
	;;
#0:	       ldm.s	r14, 24         ; mprec.c:908
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:908
#1:	       ldm.s	r14, 28         ; mprec.c:908
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:908
#1:	       ldm.s	r14, 32         ; mprec.c:908
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:908
#1:	       ldm.s	r14, 36         ; mprec.c:908
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:908
#1:	       ldm.s	r15, 8          ; mprec.c:908
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:908
#0:	       ldm.s	r15, 4          ; mprec.c:908
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:908
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:908
#1:	       ldm.s	r15, 0          ; mprec.c:908
#2:	       s2add	r15, 10 -> r15  ; mprec.c:908
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:908
	;;
#0:	       ret                      ; mprec.c:908
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:908
	;;                              ; mprec.c:908
	       nop	3               ; mprec.c:908
	;;
	.align	4
___d2b_end:

	.align	4
___mdiff:                               ; @__mdiff
	.size	___mdiff_end-___mdiff
___mdiff_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 9          ; mprec.c:527[ mprec.c:563 ]
#2:	       ldiu	36 -> r4        ; mprec.c:527[ mprec.c:563 ]
#1:	       ldx	$rb, 0 -> r1.31 ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       sub	r15, r4 -> r15  ; mprec.c:527[ mprec.c:563 ]
#2:	       ldx	$ro, 0 -> r2.31 ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:527[ mprec.c:563 ]
#1:	       or	r15, 0 -> r14   ; mprec.c:527[ mprec.c:563 ]
	;;
#1:	       stm.s	r1.31, r15, 1   ; mprec.c:527[ mprec.c:563 ]
	;;
#2:	       stm.s	r2.31, r15, 2   ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       stm.s	r10, r14, 8     ; mprec.c:527[ mprec.c:563 ]
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 7     ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       stm.s	r12, r14, 6     ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       stm.s	r13, r14, 5     ; mprec.c:527[ mprec.c:563 ]
	;;
#2:	       stm.s	r2.23, r14, 4   ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527[ mprec.c:563 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:527[ mprec.c:563 ]
#1:	       ldm.f	r1, 16          ; mprec.c:528[ mprec.c:563 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:528[ mprec.c:563 ]
	;;
#0:	       cmpeq	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB35_2         ; mprec.c:535[ mprec.c:563 ]
	;;                              ; mprec.c:535[ mprec.c:563 ]
	       nop	2               ; mprec.c:535[ mprec.c:563 ]
	;;
; BB#1:                                 ; %bb.i
#0:	       sub	r2, r3 -> r3    ; mprec.c:535[ mprec.c:563 ]
#1:	       br	.BB35_5
	;;
	       nop	2
	;;
.BB35_2:                                ; %bb1.i
#0:	       s2add	r0, r3 -> r1
#1:	       s2add	r10, r3 -> r3
#2:	       add	r0, 20 -> r2
	;;
#0:	       add	r1, 20 -> r1
#1:	       add	r3, 16 -> r3
	;;
.BB35_3:                                ; %bb2.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, -4          ; mprec.c:543[ mprec.c:563 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:543[ mprec.c:563 ]
#1:	       ldm.f	r3, 0           ; mprec.c:543[ mprec.c:563 ]
	;;
#0:	       ldx	$mem, 0 -> r5   ; mprec.c:543[ mprec.c:563 ]
	;;
#0:	       cmpeq	r4, r5 -> c1    ; mprec.c:543[ mprec.c:563 ]
	;;
#0:	if  c1 br	.BB35_33        ; mprec.c:543[ mprec.c:563 ]
	;;                              ; mprec.c:543[ mprec.c:563 ]
	       nop	2               ; mprec.c:543[ mprec.c:563 ]
	;;
; BB#4:                                 ; %bb3.i
#0:	       cmpult	r4, r5 -> c1    ; mprec.c:544[ mprec.c:563 ]
#1:	       ldi	-1 -> r1
#2:	       ldi	1 -> r3
	;;
#0:	if  c1 or	r1, 0 -> r3
	;;
.BB35_5:                                ; %__mcmp.exit
#0:	       cmpne	r3, 0 -> c1     ; mprec.c:564
	;;
#0:	if  c1 br	.BB35_15        ; mprec.c:564
	;;                              ; mprec.c:564
	       nop	2               ; mprec.c:564
	;;
.BB35_6:                                ; %bb
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:566 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:566 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:566 ]
	;;
#0:	if !c1 br	.BB35_9
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb.i17
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:566 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:566 ]
	       nop	3               ; mprec.c:106[ mprec.c:566 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r3 ; mprec.c:106[ mprec.c:566 ]
	;;
#0:	if !c1 br	.BB35_9
#1:	       stm.a	r0, r3, 19      ; mprec.c:106[ mprec.c:566 ]
	;;
	       nop	2
	;;
.BB35_8:                                ; %bb.i17._Balloc.exit25_crit_edge
#0:	       ldi	0 -> r3
#1:	       br	.BB35_14
	;;
	       nop	2
	;;
.BB35_9:                                ; %bb2.i18
#0:	       ldm.f	r0, 0           ; mprec.c:115[ mprec.c:566 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:115[ mprec.c:566 ]
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mprec.c:115[ mprec.c:566 ]
	;;
#0:	if  c1 br	.BB35_11        ; mprec.c:115[ mprec.c:566 ]
	;;                              ; mprec.c:115[ mprec.c:566 ]
	       nop	2               ; mprec.c:115[ mprec.c:566 ]
	;;
; BB#10:                                ; %bb3.i19
#0:	       ldm.f	r3, 0           ; mprec.c:117[ mprec.c:566 ]
#1:	       br	.BB35_13
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:117[ mprec.c:566 ]
	;;
#0:	       stm.a	r10, r0, 0      ; mprec.c:117[ mprec.c:566 ]
	;;
	       nop	0
	;;
.BB35_11:                               ; %bb4.i20
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:566 ]
#2:	       ldi	24 -> r1
	;;                              ; mprec.c:123[ mprec.c:566 ]
	       nop	3               ; mprec.c:123[ mprec.c:566 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB35_8
	;;
	       nop	2
	;;
; BB#12:                                ; %bb6.i21
#0:	       stm.a	0, r0, 1        ; mprec.c:128[ mprec.c:566 ]
#1:	       or	r0, 0 -> r3
	;;
#0:	       stm.a	1, r0, 2        ; mprec.c:129[ mprec.c:566 ]
	;;
.BB35_13:                               ; %bb7.i23
#0:	       stm.a	0, r3, 4        ; mprec.c:131[ mprec.c:566 ]
	;;
#0:	       stm.a	0, r3, 3        ; mprec.c:131[ mprec.c:566 ]
	;;
.BB35_14:                               ; %_Balloc.exit25
#0:	       or	r3, 0 -> r0
#1:	       or	r14, 0 -> r15   ; mprec.c:632
	;;
#0:	       stm.a	1, r0, 4        ; mprec.c:567
	;;
#0:	       stm.a	0, r0, 5        ; mprec.c:568
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:632
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; mprec.c:632
#0:	       ldm.s	r14, 20         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:632
#1:	       ldm.s	r14, 24         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:632
#1:	       ldm.s	r14, 28         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:632
#1:	       ldm.s	r14, 32         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:632
#1:	       ldm.s	r15, 8          ; mprec.c:632
	;;
#0:	       br	.BB35_32
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:632
#1:	       ldm.s	r15, 4          ; mprec.c:632
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:632
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:632
	;;
.BB35_15:                               ; %bb1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:580 ]
#1:	       cmplt	r3, 0 -> c1     ; mprec.c:571
#2:	       or	r0, 0 -> r11
#3:	       sr	r3, 31 -> r13
	;;
#0:	if  c1 or	r10, 0 -> r11
#1:	if  c1 or	r0, 0 -> r10
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:103[ mprec.c:580 ]
#1:	       ldm.f	r11, 4          ; mprec.c:580
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:103[ mprec.c:580 ]
	;;
#0:	if !c1 br	.BB35_18
#1:	       ldx	$mem, 0 -> r12  ; mprec.c:580
	;;
	       nop	2
	;;
; BB#16:                                ; %bb.i13
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:580 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:580 ]
	       nop	3               ; mprec.c:106[ mprec.c:580 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:580 ]
	;;
#0:	if  c1 br	.BB35_34
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:580 ]
	;;
	       nop	2
	;;
; BB#17:                                ; %bb.i13.bb2.i14_crit_edge
#0:	       or	r0, 0 -> r1
	;;
.BB35_18:                               ; %bb2.i14
#0:	       s2add	r1, r12 -> r1   ; mprec.c:115[ mprec.c:580 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:115[ mprec.c:580 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:580 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:580 ]
	;;
#0:	if  c1 br	.BB35_20        ; mprec.c:115[ mprec.c:580 ]
	;;                              ; mprec.c:115[ mprec.c:580 ]
	       nop	2               ; mprec.c:115[ mprec.c:580 ]
	;;
; BB#19:                                ; %bb3.i15
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:580 ]
#1:	       br	.BB35_22
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:117[ mprec.c:580 ]
	;;
#0:	       stm.a	r12, r1, 0      ; mprec.c:117[ mprec.c:580 ]
	;;
	       nop	0
	;;
.BB35_20:                               ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:580 ]
#2:	       ldi	20 -> r1
	;;
#2:	       sl	r0, r12 -> r2.23 ; mprec.c:121[ mprec.c:580 ]
	;;
#2:	       s2add	r1, r2.23 -> r1 ; mprec.c:123[ mprec.c:580 ]
	;;                              ; mprec.c:123[ mprec.c:580 ]
	       nop	1               ; mprec.c:123[ mprec.c:580 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB35_34
	;;
	       nop	2
	;;
; BB#21:                                ; %bb6.i
#0:	       stm.a	r12, r0, 1      ; mprec.c:128[ mprec.c:580 ]
	;;
#2:	       stm.a	r2.23, r0, 2    ; mprec.c:129[ mprec.c:580 ]
	;;
.BB35_22:                               ; %bb7.i16
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:580 ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:580 ]
	;;
.BB35_23:                               ; %_Balloc.exit
#0:	       stm.a	r13, r0, 3      ; mprec.c:581
#1:	       ldi	20 -> r3
#2:	       ldi	0 -> r4
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:585
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:585
#1:	       ldm.f	r11, 16         ; mprec.c:582
	;;
#0:	       s2add	r10, r1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:582
#1:	       add	r1, 20 -> r1
	;;
.BB35_24:                               ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r11, r3 -> r5
#1:	       add	r10, r3 -> r6
	;;
#0:	       ldm.f	r5, 0           ; mprec.c:593
	;;
#0:	       ldx	$mem, 0 -> r5   ; mprec.c:593
#1:	       ldm.f	r6, 0           ; mprec.c:593
	;;
#0:	       mask	r5, 4 -> r7     ; mprec.c:593
#1:	       sr	r5, 16 -> r5    ; mprec.c:596
	;;
#0:	       ldx	$mem, 0 -> r6   ; mprec.c:593
	;;
#0:	       mask	r6, 4 -> r8     ; mprec.c:593
#1:	       sr	r6, 16 -> r6    ; mprec.c:596
	;;
#0:	       sub	r7, r8 -> r7    ; mprec.c:593
#1:	       sub	r5, r6 -> r5    ; mprec.c:596
#2:	       add	r3, 4 -> r8
#3:	       add	r0, r3 -> r3
	;;
#0:	       add	r7, r4 -> r4    ; mprec.c:593
	;;
#0:	       sra	r4, 16 -> r6    ; mprec.c:594
#1:	       mask	r4, 4 -> r7     ; mprec.c:599
	;;
#0:	       add	r5, r6 -> r5    ; mprec.c:596
	;;
#0:	       sl	r5, 16 -> r6    ; mprec.c:599
#1:	       sra	r5, 16 -> r4    ; mprec.c:597
	;;
#0:	       or	r6, r7 -> r5    ; mprec.c:599
#1:	       add	r10, r8 -> r6
	;;
#0:	       cmpult	r6, r1 -> c1    ; mprec.c:601
#1:	       stm.a	r5, r3, 0       ; mprec.c:599
#2:	       or	r8, 0 -> r3
	;;
#0:	if  c1 br	.BB35_24        ; mprec.c:601
	;;                              ; mprec.c:601
	       nop	2               ; mprec.c:601
	;;
; BB#25:                                ; %bb7.preheader
#0:	       s2add	r11, r2 -> r1
#1:	       add	r11, r8 -> r3
#2:	       add	r0, r8 -> r5
	;;
#0:	       add	r1, 20 -> r1
	;;
#0:	       cmpult	r3, r1 -> c1    ; mprec.c:602
	;;
#0:	if !c1 br	.BB35_28
	;;
	       nop	2
	;;
.BB35_26:                               ; %bb6
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r3, 0           ; mprec.c:604
#1:	       add	r3, 4 -> r3
	;;
#0:	       cmpult	r3, r1 -> c1    ; mprec.c:602
	;;
#0:	       ldx	$mem, 0 -> r6   ; mprec.c:604
	;;
#0:	       mask	r6, 4 -> r7     ; mprec.c:604
#1:	       sr	r6, 16 -> r8    ; mprec.c:607
	;;
#0:	       add	r7, r4 -> r7    ; mprec.c:604
#1:	       add	r6, r4 -> r4
	;;
#0:	       sra	r7, 16 -> r7    ; mprec.c:605
	;;
#0:	if  c1 br	.BB35_26        ; mprec.c:602
#1:	       add	r7, r8 -> r7    ; mprec.c:607
#2:	       mask	r4, 4 -> r8
	;;
#0:	       sl	r7, 16 -> r6    ; mprec.c:610
#1:	       sra	r7, 16 -> r4    ; mprec.c:608
#2:	       add	r5, 4 -> r7
	;;
#0:	       or	r6, r8 -> r6    ; mprec.c:610
	;;
#0:	       stm.a	r6, r5, 0
#1:	       or	r7, 0 -> r5
	;;
; BB#27:                                ; %bb6.bb9.preheader_crit_edge
#0:	       or	r7, 0 -> r5
	;;
.BB35_28:                               ; %bb9.preheader
#0:	       ldm.f	r5, -4          ; mprec.c:629
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:629
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:629
	;;
#0:	if !c1 br	.BB35_31
	;;
	       nop	2
	;;
; BB#29:                                ; %bb.nph
#0:	       sub	r5, 8 -> r1
	;;
.BB35_30:                               ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, 0           ; mprec.c:629
#1:	       sub	r2, 1 -> r2
#2:	       sub	r1, 4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:629
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mprec.c:629
	;;
#0:	if  c1 br	.BB35_30        ; mprec.c:629
	;;                              ; mprec.c:629
	       nop	2               ; mprec.c:629
	;;
.BB35_31:                               ; %bb10
#0:	       stm.a	r2, r0, 4       ; mprec.c:631
#1:	       or	r14, 0 -> r15   ; mprec.c:632
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:632
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; mprec.c:632
#0:	       ldm.s	r14, 20         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:632
#1:	       ldm.s	r14, 24         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:632
#1:	       ldm.s	r14, 28         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:632
#1:	       ldm.s	r14, 32         ; mprec.c:632
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:632
#1:	       ldm.s	r15, 8          ; mprec.c:632
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:632
#0:	       ldm.s	r15, 4          ; mprec.c:632
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:632
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:632
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:632
	;;
.BB35_32:                               ; %bb10
#0:	       ldm.s	r15, 0          ; mprec.c:632
#1:	       s2add	r15, 9 -> r15   ; mprec.c:632
	;;
#0:	       ret                      ; mprec.c:632
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:632
	;;                              ; mprec.c:632
	       nop	3               ; mprec.c:632
	;;
.BB35_33:                               ; %bb7.i
                                        ;   in Loop: Header=BB35_3 Depth=1
#0:	       sub	r1, 4 -> r1
#1:	       sub	r3, 4 -> r3
	;;
#0:	       cmpult	r2, r1 -> c1    ; mprec.c:545[ mprec.c:563 ]
	;;
#0:	if  c1 br	.BB35_3
	;;
	       nop	2
	;;
#0:	       br	.BB35_6
	;;
	       nop	2
	;;
.BB35_34:                               ; %bb.i13._Balloc.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB35_23
	;;
	       nop	2
	;;
	.align	4
___mdiff_end:

	.align	4
___lshift:                              ; @__lshift
	.size	___lshift_end-___lshift
___lshift_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 11         ; mprec.c:474
#2:	       ldiu	44 -> r4        ; mprec.c:474
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:474
	;;
#0:	       sub	r15, r4 -> r15  ; mprec.c:474
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:474
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:474
#1:	       or	r15, 0 -> r14   ; mprec.c:474
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:474
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:474
	;;
#0:	       stm.s	r10, r14, 10    ; mprec.c:474
#1:	       sra	r1, 5 -> r10    ; mprec.c:469
	;;
#0:	       stm.s	r11, r14, 9     ; mprec.c:474
	;;
#0:	       stm.s	r12, r14, 8     ; mprec.c:474
	;;
#0:	       stm.s	r13, r14, 7     ; mprec.c:474
#1:	       or	r0, 0 -> r13
	;;
#0:	       stm.s	r0.23, r14, 6   ; mprec.c:474
	;;
#2:	       stm.s	r2.23, r14, 5   ; mprec.c:474
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:474
#2:	       or	r1, 0 -> r2.23
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:474
	;;
#0:	       add	r2, r10 -> r2   ; mprec.c:474
	;;
#0:	       stm.s	r2, r14, 4      ; mprec.c:473
#1:	       add	r2, 1 -> r12    ; mprec.c:474
	;;
#0:	       ldm.f	r0, 4           ; mprec.c:473
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:473
#1:	       ldm.f	r0, 8           ; mprec.c:475
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:475
	;;
#0:	       cmplt	r3, r12 -> c1   ; mprec.c:475
	;;
#0:	if !c1 br	.BB36_2
	;;
	       nop	2
	;;
.BB36_1:                                ; %bb
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r3, 1 -> r3     ; mprec.c:475
#1:	       add	r11, 1 -> r11
	;;
#0:	       cmplt	r3, r12 -> c1   ; mprec.c:475
	;;
#0:	if  c1 br	.BB36_1         ; mprec.c:475
	;;                              ; mprec.c:475
	       nop	2               ; mprec.c:475
	;;
.BB36_2:                                ; %bb2
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	if !c1 br	.BB36_5
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:477 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:477 ]
	       nop	3               ; mprec.c:106[ mprec.c:477 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:477 ]
	;;
#0:	if !c1 br	.BB36_5
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:477 ]
	;;
	       nop	2
	;;
.BB36_4:                                ; %bb.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB36_10
	;;
	       nop	2
	;;
.BB36_5:                                ; %bb2.i
#0:	       s2add	r0, r11 -> r1   ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	if  c1 br	.BB36_7         ; mprec.c:115[ mprec.c:477 ]
	;;                              ; mprec.c:115[ mprec.c:477 ]
	       nop	2               ; mprec.c:115[ mprec.c:477 ]
	;;
; BB#6:                                 ; %bb3.i
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:477 ]
#1:	       br	.BB36_9
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:117[ mprec.c:477 ]
	;;
#0:	       stm.a	r11, r1, 0      ; mprec.c:117[ mprec.c:477 ]
	;;
	       nop	0
	;;
.BB36_7:                                ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:477 ]
#2:	       ldi	20 -> r1
	;;
#0:	       sl	r0, r11 -> r0.23 ; mprec.c:121[ mprec.c:477 ]
	;;
#0:	       s2add	r1, r0.23 -> r1 ; mprec.c:123[ mprec.c:477 ]
	;;                              ; mprec.c:123[ mprec.c:477 ]
	       nop	1               ; mprec.c:123[ mprec.c:477 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB36_4
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb6.i
#0:	       stm.a	r11, r0, 1      ; mprec.c:128[ mprec.c:477 ]
	;;
#0:	       stm.a	r0.23, r0, 2    ; mprec.c:129[ mprec.c:477 ]
	;;
.BB36_9:                                ; %bb7.i
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:477 ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:477 ]
	;;
.BB36_10:                               ; %_Balloc.exit
#0:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; mprec.c:479
	;;
#0:	if  c1 br	.BB36_12        ; mprec.c:479
	;;                              ; mprec.c:479
	       nop	2               ; mprec.c:479
	;;
; BB#11:                                ; %_Balloc.exit.bb5_crit_edge
#0:	       add	r0, 20 -> r1
#1:	       br	.BB36_14
	;;
	       nop	2
	;;
.BB36_12:                               ; %bb.nph
#2:	       sra	r2.23, 3 -> r1
#0:	       ldi	-4 -> r2
	;;
#0:	       add	r1, 20 -> r1
	;;
#0:	       and	r1, r2 -> r1
#1:	       add	r0, 20 -> r2
	;;
#0:	       add	r0, r1 -> r1
	;;
.BB36_13:                               ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r10, 1 -> r10
#1:	       add	r2, 4 -> r3
#2:	       stm.a	0, r2, 0        ; mprec.c:480
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:479
#1:	       or	r3, 0 -> r2
	;;
#0:	if  c1 br	.BB36_13        ; mprec.c:479
	;;                              ; mprec.c:479
	       nop	2               ; mprec.c:479
	;;
.BB36_14:                               ; %bb5
#2:	       and	r2.23, 31 -> r3 ; mprec.c:484
#0:	       ldm.f	r13, 16         ; mprec.c:482
	;;
#0:	       cmpne	r3, 0 -> c1     ; mprec.c:484
	;;
#0:	if  c1 br	.BB36_18        ; mprec.c:484
#1:	       ldx	$mem, 0 -> r2   ; mprec.c:482
	;;
#0:	       s2add	r13, r2 -> r2
	;;
#0:	       add	r2, 20 -> r2
	;;                              ; mprec.c:484
	       nop	0               ; mprec.c:484
	;;
; BB#15:                                ; %bb10.preheader
#0:	       add	r13, 20 -> r3
	;;
.BB36_16:                               ; %bb10
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r3, 0           ; mprec.c:514
#1:	       add	r3, 4 -> r3
#2:	       add	r1, 4 -> r5
	;;
#0:	       cmpult	r3, r2 -> c1    ; mprec.c:515
	;;
#0:	if  c1 br	.BB36_16
#1:	       ldx	$mem, 0 -> r4   ; mprec.c:514
	;;
#0:	       stm.a	r4, r1, 0       ; mprec.c:514
#1:	       or	r5, 0 -> r1
	;;
	       nop	1
	;;
; BB#17:                                ; %bb10.bb.i13_crit_edge
#0:	       or	r12, 0 -> r1
#1:	       br	.BB36_21
	;;
	       nop	2
	;;
.BB36_18:                               ; %bb6
#0:	       ldi	32 -> r4
#1:	       add	r13, 20 -> r5
#2:	       ldi	0 -> r6
	;;
#0:	       sub	r4, r3 -> r4    ; mprec.c:486
	;;
.BB36_19:                               ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r5, 0           ; mprec.c:490
#1:	       add	r1, 4 -> r8
	;;
#0:	       ldx	$mem, 0 -> r7   ; mprec.c:490
	;;
#0:	       sl	r7, r3 -> r7    ; mprec.c:490
	;;
#0:	       or	r7, r6 -> r6    ; mprec.c:490
	;;
#0:	       stm.a	r6, r1, 0       ; mprec.c:490
	;;
#0:	       ldm.f	r5, 0           ; mprec.c:491
#1:	       add	r5, 4 -> r5
	;;
#0:	       cmpult	r5, r2 -> c1    ; mprec.c:493
	;;
#0:	if  c1 br	.BB36_19        ; mprec.c:493
#1:	       ldx	$mem, 0 -> r1   ; mprec.c:491
	;;
#0:	       sr	r1, r4 -> r6    ; mprec.c:491
#1:	       or	r8, 0 -> r1
	;;                              ; mprec.c:493
	       nop	1               ; mprec.c:493
	;;
; BB#20:                                ; %bb8
#0:	       ldm.s	r14, 16         ; mprec.c:495
#1:	       cmpeq	r6, 0 -> c1     ; mprec.c:494
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:495
#1:	       stm.a	r6, r8, 0       ; mprec.c:494
	;;
#0:	       add	r1, 2 -> r1     ; mprec.c:495
	;;
#0:	if  c1 or	r12, 0 -> r1
	;;
.BB36_21:                               ; %bb.i13
#0:	       sub	r1, 1 -> r1
#1:	       or	r14, 0 -> r15   ; mprec.c:518
	;;
#0:	       stm.a	r1, r0, 4       ; mprec.c:516
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:517 ]
#1:	       ldm.f	r13, 4          ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       stm.a	r1, r13, 0      ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       stm.a	r13, r1, 0      ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       ldm.s	r14, 20         ; mprec.c:518
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; mprec.c:518
#0:	       ldm.s	r14, 24         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; mprec.c:518
#1:	       ldm.s	r14, 28         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:518
#1:	       ldm.s	r14, 32         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:518
#1:	       ldm.s	r14, 36         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:518
#1:	       ldm.s	r14, 40         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:518
#1:	       ldm.s	r15, 8          ; mprec.c:518
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:518
#0:	       ldm.s	r15, 4          ; mprec.c:518
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:518
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:518
#0:	       ldm.s	r15, 0          ; mprec.c:518
#1:	       s2add	r15, 11 -> r15  ; mprec.c:518
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:518
	;;
#0:	       ret                      ; mprec.c:518
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:518
	;;                              ; mprec.c:518
	       nop	3               ; mprec.c:518
	;;
	.align	4
___lshift_end:

	.align	4
___multiply:                            ; @__multiply
	.size	___multiply_end-___multiply
___multiply_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 11         ; mprec.c:340
#2:	       ldiu	44 -> r5        ; mprec.c:340
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:340
	;;
#0:	       sub	r15, r5 -> r15  ; mprec.c:340
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:340
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:340
#1:	       or	r15, 0 -> r14   ; mprec.c:340
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:340
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:340
	;;
#0:	       stm.s	r10, r14, 10    ; mprec.c:340
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 9     ; mprec.c:340
#1:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 8     ; mprec.c:340
	;;
#0:	       stm.s	r13, r14, 7     ; mprec.c:340
	;;
#2:	       stm.s	r2.23, r14, 6   ; mprec.c:340
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:340
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:340
#1:	       ldm.f	r1, 16          ; mprec.c:340
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:340
#1:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:352 ]
	;;
#0:	       cmplt	r2, r3 -> c1    ; mprec.c:340
	;;
#0:	if  c1 or	r0, 0 -> r11
#1:	       ldx	$mem, 0 -> r4   ; mprec.c:103[ mprec.c:352 ]
#2:	if  c1 or	r1, 0 -> r10
	;;
#0:	       ldm.f	r11, 16         ; mprec.c:348
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:348
	;;
#0:	       stm.s	r0, r14, 4      ; mprec.c:347
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:347
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:347
	;;
#0:	       stm.s	r1, r14, 5      ; mprec.c:350
#1:	       add	r0, r1 -> r12   ; mprec.c:349
	;;
#0:	       ldm.f	r10, 8          ; mprec.c:350
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:350
#1:	       ldm.f	r10, 4          ; mprec.c:346
	;;
#0:	       cmplt	r2, r12 -> c1   ; mprec.c:350
	;;
#0:	       ldx	$c1 -> r1
#1:	       cmpeq	r4, 0 -> c1     ; mprec.c:103[ mprec.c:352 ]
#2:	       ldx	$mem, 0 -> r0   ; mprec.c:346
	;;
#0:	if !c1 br	.BB37_3
#1:	       add	r1, r0 -> r13
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:352 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:352 ]
	       nop	3               ; mprec.c:106[ mprec.c:352 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:352 ]
	;;
#0:	if  c1 br	.BB37_27
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:352 ]
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.i.bb2.i_crit_edge
#0:	       or	r0, 0 -> r4
	;;
.BB37_3:                                ; %bb2.i
#0:	       s2add	r4, r13 -> r1   ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	if  c1 br	.BB37_5         ; mprec.c:115[ mprec.c:352 ]
	;;                              ; mprec.c:115[ mprec.c:352 ]
	       nop	2               ; mprec.c:115[ mprec.c:352 ]
	;;
; BB#4:                                 ; %bb3.i
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:352 ]
#1:	       br	.BB37_7
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:117[ mprec.c:352 ]
	;;
#0:	       stm.a	r13, r1, 0      ; mprec.c:117[ mprec.c:352 ]
	;;
	       nop	0
	;;
.BB37_5:                                ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:352 ]
#2:	       ldi	20 -> r1
	;;
#2:	       sl	r0, r13 -> r2.23 ; mprec.c:121[ mprec.c:352 ]
	;;
#2:	       s2add	r1, r2.23 -> r1 ; mprec.c:123[ mprec.c:352 ]
	;;                              ; mprec.c:123[ mprec.c:352 ]
	       nop	1               ; mprec.c:123[ mprec.c:352 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB37_27
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb6.i
#0:	       stm.a	r13, r0, 1      ; mprec.c:128[ mprec.c:352 ]
	;;
#2:	       stm.a	r2.23, r0, 2    ; mprec.c:129[ mprec.c:352 ]
	;;
.BB37_7:                                ; %bb7.i
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:352 ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:352 ]
	;;
.BB37_8:                                ; %_Balloc.exit
#0:	       cmplt	r12, 1 -> c1    ; mprec.c:353
	;;
#0:	if  c1 br	.BB37_11
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb.nph33
#0:	       s2add	r0, r12 -> r1
#1:	       add	r0, 20 -> r2
	;;
#0:	       add	r1, 20 -> r1
	;;
.BB37_10:                               ; %bb4
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r2, 4 -> r3
#1:	       stm.a	0, r2, 0        ; mprec.c:354
	;;
#0:	       cmpult	r3, r1 -> c1    ; mprec.c:353
#1:	       or	r3, 0 -> r2
	;;
#0:	if  c1 br	.BB37_10        ; mprec.c:353
	;;                              ; mprec.c:353
	       nop	2               ; mprec.c:353
	;;
.BB37_11:                               ; %bb6
#0:	       ldm.s	r14, 16         ; mprec.c:361
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:361
	;;
#0:	       cmplt	r1, 1 -> c1     ; mprec.c:361
	;;
#0:	if  c1 br	.BB37_22
	;;
	       nop	2
	;;
; BB#12:                                ; %bb.nph
#0:	       ldm.s	r14, 20
#1:	       s2add	r11, r1 -> r1
#2:	       add	r0, 24 -> r3
#3:	       add	r10, 20 -> r4
	;;
#0:	       add	r1, 20 -> r1
#1:	       add	r0, 20 -> r5
#2:	       add	r11, 20 -> r6
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       s2add	r10, r2 -> r2
	;;
#0:	       add	r2, 20 -> r2
	;;
.BB37_13:                               ; %bb7
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB37_19 Depth 2
                                        ;     Child Loop BB37_15 Depth 2
#0:	       ldm.f	r6, 0           ; mprec.c:363
	;;
#0:	       ldx	$mem, 0 -> r7   ; mprec.c:363
	;;
#0:	       mask	r7, 4 -> r8     ; mprec.c:363
	;;
#0:	       cmpeq	r8, 0 -> c1     ; mprec.c:363
	;;
#0:	if  c1 br	.BB37_17
	;;
	       nop	2
	;;
; BB#14:                                ; %bb7.bb9_crit_edge
                                        ;   in Loop: Header=BB37_13 Depth=1
#0:	       ldi	0 -> r7
#1:	       or	r5, 0 -> r9
#2:	       or	r4, 0 -> r10
	;;
.BB37_15:                               ; %bb9
                                        ;   Parent Loop BB37_13 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r10, 0          ; mprec.c:370
#1:	       add	r10, 4 -> r10
	;;
#0:	       cmpult	r10, r2 -> c1   ; mprec.c:376
	;;
#2:	       ldx	$mem, 0 -> r2.16 ; mprec.c:370
#0:	       ldm.f	r9, 0           ; mprec.c:370
	;;
#2:	       mask	r2.16, 4 -> r11 ; mprec.c:370
	;;
#3:	       ldx	$mem, 0 -> r3.16 ; mprec.c:370
#2:	       sr	r2.16, 16 -> r12 ; mprec.c:372
#0:	       mul	r11, r8 -> $mul0 ; mprec.c:370
	;;
#3:	       mask	r3.16, 4 -> r3.17 ; mprec.c:370
#1:	       mul	r12, r8 -> $mul1 ; mprec.c:372
#0:	       ldx	$mul0, 0 -> r0.16 ; mprec.c:370
	;;
#3:	       add	r3.17, r7 -> r7 ; mprec.c:370
#1:	       ldx	$mul1, 0 -> r11 ; mprec.c:372
	;;
#0:	       add	r7, r0.16 -> r7 ; mprec.c:370
#3:	       sr	r3.16, 16 -> r3.16 ; mprec.c:372
	;;
#3:	       add	r11, r3.16 -> r11 ; mprec.c:372
#0:	       sr	r7, 16 -> r0.16 ; mprec.c:371
#1:	       mask	r7, 4 -> r1.17  ; mprec.c:374
	;;
#1:	if  c1 br	.BB37_15        ; mprec.c:376
#0:	       add	r11, r0.16 -> r11 ; mprec.c:372
#3:	       add	r9, 4 -> r3.16
	;;
#1:	       sl	r11, 16 -> r1.16 ; mprec.c:374
#0:	       sr	r11, 16 -> r7   ; mprec.c:373
	;;
#1:	       or	r1.16, r1.17 -> r1.16 ; mprec.c:374
	;;
#1:	       stm.a	r1.16, r9, 0    ; mprec.c:374
#3:	       or	r3.16, 0 -> r9
	;;
; BB#16:                                ; %bb10
                                        ;   in Loop: Header=BB37_13 Depth=1
#3:	       stm.a	r7, r3.16, 0
	;;
#0:	       ldm.f	r6, 0
	;;
#0:	       ldx	$mem, 0 -> r7
	;;
.BB37_17:                               ; %bb11
                                        ;   in Loop: Header=BB37_13 Depth=1
#0:	       sr	r7, 16 -> r7    ; mprec.c:379
	;;
#0:	       cmpeq	r7, 0 -> c1     ; mprec.c:379
	;;
#0:	if  c1 br	.BB37_21
	;;
	       nop	2
	;;
; BB#18:                                ; %bb12
                                        ;   in Loop: Header=BB37_13 Depth=1
#0:	       ldm.f	r5, 0           ; mprec.c:384
#1:	       ldi	0 -> r9
#2:	       or	r3, 0 -> r10
#3:	       or	r4, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r8   ; mprec.c:384
	;;
.BB37_19:                               ; %bb13
                                        ;   Parent Loop BB37_13 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#2:	       ldm.f	r11, 0          ; mprec.c:387
#0:	       sub	r10, 2 -> r0.16 ; mprec.c:387
#3:	       mask	r8, 4 -> r8     ; mprec.c:389
#1:	       sub	r10, 4 -> r1.16
	;;
#3:	       ldx	$mem, 0 -> r3.16 ; mprec.c:387
#0:	       ldm.f	r10, -2         ; mprec.c:387
	;;
#3:	       mask	r3.16, 4 -> r12 ; mprec.c:387
	;;
#0:	       ldx	$memhu, r0.16 -> r0.16 ; mprec.c:387
#2:	       mul	r12, r7 -> $mul2 ; mprec.c:387
	;;
#0:	       add	r0.16, r9 -> r9 ; mprec.c:387
#2:	       ldx	$mul2, 0 -> r2.16 ; mprec.c:387
	;;
#2:	       add	r9, r2.16 -> r9 ; mprec.c:387
	;;
#3:	       sl	r9, 16 -> r3.16 ; mprec.c:389
#2:	       add	r11, 2 -> r2.16 ; mprec.c:390
#0:	       sr	r9, 16 -> r9    ; mprec.c:388
	;;
#3:	       or	r3.16, r8 -> r8 ; mprec.c:389
	;;
#1:	       stm.a	r8, r1.16, 0    ; mprec.c:389
	;;
#0:	       ldm.f	r11, 2          ; mprec.c:390
#1:	       add	r11, 4 -> r11
	;;
#0:	       cmpult	r11, r2 -> c1   ; mprec.c:393
	;;
#2:	       ldx	$memhu, r2.16 -> r8 ; mprec.c:390
#0:	       ldm.f	r10, 0          ; mprec.c:390
	;;
#3:	       mul	r8, r7 -> $mul3 ; mprec.c:390
	;;
#1:	if  c1 br	.BB37_19        ; mprec.c:393
#0:	       ldx	$memhu, r10 -> r0.16 ; mprec.c:390
#3:	       ldx	$mul3, 0 -> r8  ; mprec.c:390
#2:	       add	r10, 4 -> r10
	;;
#0:	       add	r8, r0.16 -> r8 ; mprec.c:390
	;;
#0:	       add	r8, r9 -> r8    ; mprec.c:390
	;;
#0:	       sr	r8, 16 -> r9    ; mprec.c:391
	;;
; BB#20:                                ; %bb14
                                        ;   in Loop: Header=BB37_13 Depth=1
#0:	       sub	r10, 4 -> r7
	;;
#0:	       stm.a	r8, r7, 0
	;;
.BB37_21:                               ; %bb15
                                        ;   in Loop: Header=BB37_13 Depth=1
#0:	       add	r6, 4 -> r6
#1:	       add	r5, 4 -> r5
#2:	       add	r3, 4 -> r3
	;;
#0:	       cmpult	r6, r1 -> c1    ; mprec.c:361
	;;
#0:	if  c1 br	.BB37_13
	;;
	       nop	2
	;;
.BB37_22:                               ; %bb17
#0:	       ldm.s	r14, 16
#1:	       br	.BB37_24
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, r2 -> r1
	;;
.BB37_23:                               ; %bb18
                                        ;   in Loop: Header=BB37_24 Depth=1
#0:	       sub	r1, 1 -> r1
	;;
.BB37_24:                               ; %bb19
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmplt	r1, 1 -> c1
	;;
#0:	if  c1 br	.BB37_26
	;;
	       nop	2
	;;
; BB#25:                                ; %bb20
                                        ;   in Loop: Header=BB37_24 Depth=1
#0:	       s2add	r0, r1 -> r2
	;;
#0:	       ldm.f	r2, 16          ; mprec.c:416
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:416
	;;
#0:	       cmpeq	r2, 0 -> c1     ; mprec.c:416
	;;
#0:	if  c1 br	.BB37_23        ; mprec.c:416
	;;                              ; mprec.c:416
	       nop	2               ; mprec.c:416
	;;
.BB37_26:                               ; %bb21
#0:	       stm.a	r1, r0, 4       ; mprec.c:417
#1:	       or	r14, 0 -> r15   ; mprec.c:418
	;;
#0:	       ldm.s	r14, 24         ; mprec.c:418
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; mprec.c:418
#0:	       ldm.s	r14, 28         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:418
#1:	       ldm.s	r14, 32         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:418
#1:	       ldm.s	r14, 36         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:418
#1:	       ldm.s	r14, 40         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:418
#1:	       ldm.s	r15, 8          ; mprec.c:418
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:418
#0:	       ldm.s	r15, 4          ; mprec.c:418
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:418
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:418
#0:	       ldm.s	r15, 0          ; mprec.c:418
#1:	       s2add	r15, 11 -> r15  ; mprec.c:418
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:418
	;;
#0:	       ret                      ; mprec.c:418
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:418
	;;                              ; mprec.c:418
	       nop	3               ; mprec.c:418
	;;
.BB37_27:                               ; %bb.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB37_8
	;;
	       nop	2
	;;
	.align	4
___multiply_end:

	.align	4
___i2b:                                 ; @__i2b
	.size	___i2b_end-___i2b
___i2b_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4          ; mprec.c:103[ mprec.c:323 ]
#2:	       ldiu	16 -> r1        ; mprec.c:103[ mprec.c:323 ]
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       sub	r15, r1 -> r15  ; mprec.c:103[ mprec.c:323 ]
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:103[ mprec.c:323 ]
#1:	       or	r15, 0 -> r14   ; mprec.c:103[ mprec.c:323 ]
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:323 ]
	;;
#0:	if !c1 br	.BB38_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:323 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:323 ]
	       nop	3               ; mprec.c:106[ mprec.c:323 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:323 ]
	;;
#0:	if !c1 br	.BB38_3
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:323 ]
	;;
	       nop	2
	;;
.BB38_2:                                ; %bb.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB38_8
	;;
	       nop	2
	;;
.BB38_3:                                ; %bb2.i
#0:	       ldm.f	r0, 4           ; mprec.c:115[ mprec.c:323 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:115[ mprec.c:323 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:115[ mprec.c:323 ]
	;;
#0:	if  c1 br	.BB38_5         ; mprec.c:115[ mprec.c:323 ]
	;;                              ; mprec.c:115[ mprec.c:323 ]
	       nop	2               ; mprec.c:115[ mprec.c:323 ]
	;;
; BB#4:                                 ; %bb3.i
#0:	       ldm.f	r1, 0           ; mprec.c:117[ mprec.c:323 ]
#1:	       br	.BB38_7
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:117[ mprec.c:323 ]
	;;
#0:	       stm.a	r2, r0, 1       ; mprec.c:117[ mprec.c:323 ]
	;;
	       nop	0
	;;
.BB38_5:                                ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:323 ]
#2:	       ldi	28 -> r1
	;;                              ; mprec.c:123[ mprec.c:323 ]
	       nop	3               ; mprec.c:123[ mprec.c:323 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB38_2
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb6.i
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:323 ]
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:323 ]
	;;
.BB38_7:                                ; %bb7.i
#0:	       stm.a	0, r1, 4        ; mprec.c:131[ mprec.c:323 ]
	;;
#0:	       stm.a	0, r1, 3        ; mprec.c:131[ mprec.c:323 ]
	;;
.BB38_8:                                ; %_Balloc.exit
#0:	       or	r1, 0 -> r0
#1:	       or	r14, 0 -> r15   ; mprec.c:326
	;;
#0:	       stm.a	1, r0, 5        ; mprec.c:324
	;;
#0:	       stm.a	1, r0, 4        ; mprec.c:325
	;;
#0:	       ldm.s	r15, 8          ; mprec.c:326
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:326
#0:	       ldm.s	r15, 4          ; mprec.c:326
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:326
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:326
#0:	       ldm.s	r15, 0          ; mprec.c:326
#1:	       s2add	r15, 4 -> r15   ; mprec.c:326
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:326
	;;
#0:	       ret                      ; mprec.c:326
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:326
	;;                              ; mprec.c:326
	       nop	3               ; mprec.c:326
	;;
	.align	4
___i2b_end:

	.align	4
___multadd:                             ; @__multadd
	.size	___multadd_end-___multadd
___multadd_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 9          ; mprec.c:160
#2:	       ldiu	36 -> r3        ; mprec.c:160
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:160
#3:	       ldi	0 -> r2
	;;
#0:	       sub	r15, r3 -> r15  ; mprec.c:160
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:160
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:160
#1:	       or	r15, 0 -> r14   ; mprec.c:160
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:160
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:160
	;;
#0:	       stm.s	r10, r14, 8     ; mprec.c:160
	;;
#0:	       stm.s	r11, r14, 7     ; mprec.c:160
#1:	       or	r0, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 6     ; mprec.c:160
#1:	       or	r2, 0 -> r12
	;;
#0:	       stm.s	r13, r14, 5     ; mprec.c:160
	;;
#0:	       stm.s	r0.23, r14, 4   ; mprec.c:160
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:160
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:160
	;;
.BB39_1:                                ; %bb
                                        ; =>This Inner Loop Header: Depth=1
#0:	       s2add	r11, r2 -> r0
#1:	       add	r2, 1 -> r2     ; mprec.c:177
	;;
#0:	       ldm.f	r0, 20          ; mprec.c:166
#1:	       cmplt	r2, r10 -> c1   ; mprec.c:177
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:166
	;;
#0:	       mask	r3, 4 -> r4     ; mprec.c:167
#1:	       sr	r3, 16 -> r3    ; mprec.c:168
	;;
#0:	       mul	r4, r1 -> $mul0 ; mprec.c:167
#1:	       mul	r3, r1 -> $mul1 ; mprec.c:168
	;;
#0:	       ldx	$mul0, 0 -> r4  ; mprec.c:167
	;;
#0:	       add	r4, r12 -> r12  ; mprec.c:167
#1:	       ldx	$mul1, 0 -> r4  ; mprec.c:168
	;;
#0:	       sr	r12, 16 -> r3   ; mprec.c:168
#1:	       mask	r12, 4 -> r5    ; mprec.c:170
	;;
#0:	if  c1 br	.BB39_1         ; mprec.c:177
#1:	       add	r3, r4 -> r3    ; mprec.c:168
	;;
#0:	       sl	r3, 16 -> r4    ; mprec.c:170
#1:	       sr	r3, 16 -> r12   ; mprec.c:169
	;;
#0:	       or	r4, r5 -> r3
	;;
#0:	       stm.a	r3, r0, 5       ; mprec.c:170
	;;
; BB#2:                                 ; %bb1
#0:	       cmpeq	r12, 0 -> c1    ; mprec.c:178
	;;
#0:	if  c1 br	.BB39_15        ; mprec.c:178
	;;                              ; mprec.c:178
	       nop	2               ; mprec.c:178
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.f	r11, 8          ; mprec.c:180
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:180
	;;
#0:	       cmple	r0, r10 -> c1   ; mprec.c:180
	;;
#0:	if  c1 br	.BB39_5         ; mprec.c:180
	;;                              ; mprec.c:180
	       nop	2               ; mprec.c:180
	;;
; BB#4:                                 ; %bb2.bb4_crit_edge
#0:	       or	r11, 0 -> r13
#1:	       br	.BB39_14
	;;
	       nop	2
	;;
.BB39_5:                                ; %bb3
#0:	       ldm.f	r11, 4          ; mprec.c:182
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:182
#1:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	       add	r13, 1 -> r0.23 ; mprec.c:182
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	if !c1 br	.BB39_8
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:182 ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:182 ]
	       nop	3               ; mprec.c:106[ mprec.c:182 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:182 ]
	;;
#0:	if !c1 br	.BB39_8
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:182 ]
	;;
	       nop	2
	;;
.BB39_7:                                ; %bb.i.bb.i7_crit_edge
#0:	       ldi	0 -> r13
#1:	       br	.BB39_13
	;;
	       nop	2
	;;
.BB39_8:                                ; %bb2.i
#0:	       s2add	r0, r13 -> r0
	;;
#0:	       ldm.f	r0, 4           ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	       cmpeq	r13, 0 -> c1    ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	if  c1 br	.BB39_10        ; mprec.c:115[ mprec.c:182 ]
	;;                              ; mprec.c:115[ mprec.c:182 ]
	       nop	2               ; mprec.c:115[ mprec.c:182 ]
	;;
; BB#9:                                 ; %bb3.i
#0:	       ldm.f	r13, 0          ; mprec.c:117[ mprec.c:182 ]
#1:	       br	.BB39_12
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:117[ mprec.c:182 ]
	;;
#0:	       stm.a	r1, r0, 1       ; mprec.c:117[ mprec.c:182 ]
	;;
	       nop	0
	;;
.BB39_10:                               ; %bb4.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:182 ]
#2:	       ldi	20 -> r1
	;;
#0:	       sl	r0, r0.23 -> r13 ; mprec.c:121[ mprec.c:182 ]
	;;
#0:	       s2add	r1, r13 -> r1   ; mprec.c:123[ mprec.c:182 ]
	;;                              ; mprec.c:123[ mprec.c:182 ]
	       nop	1               ; mprec.c:123[ mprec.c:182 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB39_7
	;;
	       nop	2
	;;
; BB#11:                                ; %bb6.i
#0:	       stm.a	r0.23, r0, 1    ; mprec.c:128[ mprec.c:182 ]
	;;
#0:	       stm.a	r13, r0, 2      ; mprec.c:129[ mprec.c:182 ]
#1:	       or	r0, 0 -> r13
	;;
.BB39_12:                               ; %bb7.i
#0:	       stm.a	0, r13, 4       ; mprec.c:131[ mprec.c:182 ]
	;;
#0:	       stm.a	0, r13, 3       ; mprec.c:131[ mprec.c:182 ]
	;;
.BB39_13:                               ; %bb.i7
#0:	       ldm.f	r11, 16         ; mprec.c:183
#1:	       ldi	8 -> r3
#2:	       add	r13, 12 -> r0   ; mprec.c:183
#3:	       add	r11, 12 -> r1   ; mprec.c:183
	;;
#0:	       callg	_memcpy         ; mprec.c:183
#1:	       ldx	$mem, 0 -> r2   ; mprec.c:183
	;;
#0:	       s2add	r3, r2 -> r2    ; mprec.c:183
	;;                              ; mprec.c:183
	       nop	2               ; mprec.c:183
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:184 ]
#1:	       ldm.f	r11, 4          ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       stm.a	r0, r11, 0      ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       stm.a	r11, r0, 0      ; mprec.c:142[ mprec.c:184 ]
	;;
.BB39_14:                               ; %bb4
#0:	       or	r13, 0 -> r0
#1:	       add	r10, 1 -> r1    ; mprec.c:187
#2:	       or	r14, 0 -> r15   ; mprec.c:190
	;;
#0:	       s2add	r0, r10 -> r11
	;;
#0:	       stm.a	r12, r11, 5     ; mprec.c:187
	;;
#0:	       stm.a	r1, r0, 4       ; mprec.c:188
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; mprec.c:190
#1:	       ldm.s	r14, 20         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:190
#1:	       ldm.s	r14, 24         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:190
#1:	       ldm.s	r14, 28         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:190
#1:	       ldm.s	r14, 32         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:190
#1:	       ldm.s	r15, 8          ; mprec.c:190
	;;
#0:	       br	.BB39_16
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:190
#2:	       ldm.s	r15, 4          ; mprec.c:190
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:190
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:190
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:190
	;;
.BB39_15:                               ; %bb5
#0:	       ldm.s	r14, 16         ; mprec.c:190
#1:	       or	r11, 0 -> r0    ; mprec.c:190
#2:	       or	r14, 0 -> r15   ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; mprec.c:190
#1:	       ldm.s	r14, 20         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:190
#1:	       ldm.s	r14, 24         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:190
#1:	       ldm.s	r14, 28         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:190
#1:	       ldm.s	r14, 32         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:190
#1:	       ldm.s	r15, 8          ; mprec.c:190
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:190
#0:	       ldm.s	r15, 4          ; mprec.c:190
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:190
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:190
	;;
.BB39_16:                               ; %bb5
#0:	       ldm.s	r15, 0          ; mprec.c:190
#1:	       s2add	r15, 9 -> r15   ; mprec.c:190
	;;
#0:	       ret                      ; mprec.c:190
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:190
	;;                              ; mprec.c:190
	       nop	3               ; mprec.c:190
	;;
	.align	4
___multadd_end:

	.align	4
___pow5mult:                            ; @__pow5mult
	.size	___pow5mult_end-___pow5mult
___pow5mult_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 8          ; mprec.c:429
#1:	       ldiu	32 -> r3        ; mprec.c:429
#2:	       and	r1, 3 -> r2     ; mprec.c:429
	;;
#0:	       sub	r15, r3 -> r15  ; mprec.c:429
#1:	       ldx	$rb, 0 -> r1.31 ; mprec.c:429
#2:	       ldx	$ro, 0 -> r2.31 ; mprec.c:429
#3:	       cmpne	r2, 0 -> c1     ; mprec.c:429
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:429
#1:	       or	r15, 0 -> r14   ; mprec.c:429
	;;
#1:	       stm.s	r1.31, r15, 1   ; mprec.c:429
	;;
#0:	if !c1 br	.BB40_2
#2:	       stm.s	r2.31, r15, 2   ; mprec.c:429
	;;
#0:	       stm.s	r10, r14, 7     ; mprec.c:429
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 6     ; mprec.c:429
	;;
#0:	       stm.s	r12, r14, 5     ; mprec.c:429
	;;
; BB#1:                                 ; %bb
#0:	       ldga	_p05.2269 -> r1 ; mprec.c:430
	;;
#0:	       s2add	r1, r2 -> r11   ; mprec.c:430
	;;
#0:	       ldm.f	r11, -4         ; mprec.c:430
	;;
#0:	       callg	___multadd      ; mprec.c:430
#1:	       ldx	$mem, 0 -> r1   ; mprec.c:430
	;;                              ; mprec.c:430
	       nop	3               ; mprec.c:430
	;;
.BB40_2:                                ; %bb
#0:	       sra	r10, 2 -> r10   ; mprec.c:432
#1:	       or	r0, 0 -> r11
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:432
	;;
#0:	if !c1 br	.BB40_21
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb3
#0:	       ldmg.d	_impure_data+72 ; mprec.c:435
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:435
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:435
	;;
#0:	if !c1 br	.BB40_14
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb4
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	if !c1 br	.BB40_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb.i.i
#0:	       ldi	4 -> r0
#1:	       callg	__calloc_r      ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
#2:	       ldi	33 -> r1
	;;                              ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	       nop	3               ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	if !c1 br	.BB40_7
#1:	       stm.a	r0, r1, 19      ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
	       nop	2
	;;
.BB40_6:                                ; %bb.i.i.__i2b.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB40_12
	;;
	       nop	2
	;;
.BB40_7:                                ; %bb2.i.i
#0:	       ldm.f	r0, 4           ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	if  c1 br	.BB40_9         ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;                              ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
; BB#8:                                 ; %bb3.i.i
#0:	       ldm.f	r1, 0           ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
#1:	       br	.BB40_11
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	r2, r0, 1       ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
#1:	       or	r1, 0 -> r0
	;;
	       nop	0
	;;
.BB40_9:                                ; %bb4.i.i
#0:	       ldi	1 -> r0
#1:	       callg	__calloc_r      ; mprec.c:123[ mprec.c:323[ mprec.c:438 ] ]
#2:	       ldi	28 -> r1
	;;                              ; mprec.c:123[ mprec.c:323[ mprec.c:438 ] ]
	       nop	3               ; mprec.c:123[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB40_6
	;;
	       nop	2
	;;
; BB#10:                                ; %bb6.i.i
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:323[ mprec.c:438 ] ]
	;;
.BB40_11:                               ; %bb7.i.i
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:323[ mprec.c:438 ] ]
	;;
.BB40_12:                               ; %__i2b.exit
#0:	       ldi	625 -> r1
	;;
#0:	       stm.a	r1, r0, 5       ; mprec.c:324[ mprec.c:438 ]
#1:	       ldga	_impure_data -> r1 ; mprec.c:438
	;;
#0:	       stm.a	1, r0, 4        ; mprec.c:325[ mprec.c:438 ]
	;;
#0:	       stm.a	r0, r1, 18      ; mprec.c:438
	;;
.BB40_13:                               ; %__i2b.exit
#0:	       stm.a	0, r0, 0        ; mprec.c:439
	;;
.BB40_14:                               ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:443
#1:	       or	r0, 0 -> r12
	;;
#0:	if !c1 br	.BB40_18
	;;
	       nop	2
	;;
; BB#15:                                ; %bb6
                                        ;   in Loop: Header=BB40_14 Depth=1
#0:	       cmpne	r11, 0 -> c1    ; mprec.c:139[ mprec.c:446 ]
#1:	       callg	___multiply     ; mprec.c:445
#2:	       or	r11, 0 -> r0    ; mprec.c:445
#3:	       or	r12, 0 -> r1    ; mprec.c:445
	;;
#0:	       ldx	$c1, 0 -> r2    ; mprec.c:445
	;;
#0:	       stm.s	r2, r14, 4      ; mprec.c:445
	;;                              ; mprec.c:445
	       nop	1               ; mprec.c:445
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	       stx	r1 -> $c1       ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	if !c1 br	.BB40_17
	;;
	       nop	2
	;;
; BB#16:                                ; %bb.i
                                        ;   in Loop: Header=BB40_14 Depth=1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:446 ]
#1:	       ldm.f	r11, 4          ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       stm.a	r1, r11, 0      ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       stm.a	r11, r1, 0      ; mprec.c:142[ mprec.c:446 ]
	;;
.BB40_17:                               ; %bb.i
                                        ;   in Loop: Header=BB40_14 Depth=1
#0:	       or	r0, 0 -> r11
	;;
.BB40_18:                               ; %bb7
                                        ;   in Loop: Header=BB40_14 Depth=1
#0:	       sra	r10, 1 -> r10   ; mprec.c:449
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:449
	;;
#0:	if !c1 br	.BB40_21
	;;
	       nop	2
	;;
; BB#19:                                ; %bb8
                                        ;   in Loop: Header=BB40_14 Depth=1
#0:	       ldm.f	r12, 0          ; mprec.c:451
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:451
	;;
#0:	       cmpne	r0, 0 -> c1     ; mprec.c:451
	;;
#0:	if  c1 br	.BB40_14
	;;
	       nop	2
	;;
; BB#20:                                ; %bb9
#0:	       or	r12, 0 -> r0    ; mprec.c:453
#1:	       callg	___multiply     ; mprec.c:453
#2:	       or	r12, 0 -> r1    ; mprec.c:453
	;;                              ; mprec.c:453
	       nop	3               ; mprec.c:453
	;;
#0:	       br	.BB40_13
#1:	       stm.a	r0, r12, 0      ; mprec.c:453
	;;
	       nop	2
	;;
.BB40_21:                               ; %bb12
#0:	       ldm.s	r14, 20         ; mprec.c:458
#1:	       or	r11, 0 -> r0
#2:	       or	r14, 0 -> r15   ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:458
#1:	       ldm.s	r14, 24         ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:458
#1:	       ldm.s	r14, 28         ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:458
#1:	       ldm.s	r15, 8          ; mprec.c:458
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:458
#0:	       ldm.s	r15, 4          ; mprec.c:458
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:458
#1:	       ldm.s	r15, 0          ; mprec.c:458
#2:	       s2add	r15, 8 -> r15   ; mprec.c:458
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:458
	;;
#0:	       ret                      ; mprec.c:458
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:458
	;;                              ; mprec.c:458
	       nop	3               ; mprec.c:458
	;;
	.align	4
___pow5mult_end:

	.align	4
___sread:                               ; @__sread
	.size	___sread_end-___sread
___sread_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 5
#2:	       ldiu	20 -> r5
#1:	       ldx	$rb, 0 -> r1.31
#3:	       add	r1, 14 -> r4
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       or	r1, 0 -> r10
	;;
#0:	       ldm.f	r1, 14          ; stdio.c:48
	;;
#0:	       callg	__read_r        ; stdio.c:48
#1:	       ldx	$memhs, r4 -> r4 ; stdio.c:48
	;;
#0:	       or	r4, 0 -> r1     ; stdio.c:48
	;;                              ; stdio.c:48
	       nop	2               ; stdio.c:48
	;;
#0:	       cmplt	r0, 0 -> c1     ; stdio.c:57
	;;
#0:	if  c1 br	.BB41_3         ; stdio.c:57
	;;                              ; stdio.c:57
	       nop	2               ; stdio.c:57
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r10, 80         ; stdio.c:58
#1:	       or	r14, 0 -> r15   ; stdio.c:61
	;;
#0:	       ldx	$mem, 0 -> r1   ; stdio.c:58
	;;
#0:	       add	r1, r0 -> r1    ; stdio.c:58
	;;
#0:	       stm.a	r1, r10, 20     ; stdio.c:58
	;;
#0:	       ldm.s	r14, 16         ; stdio.c:61
	;;
#0:	       ldx	$mem, 0 -> r10  ; stdio.c:61
#1:	       ldm.s	r15, 8          ; stdio.c:61
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; stdio.c:61
#0:	       ldm.s	r15, 4          ; stdio.c:61
	;;
#3:	       stx	r3.31 -> $ro    ; stdio.c:61
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; stdio.c:61
	;;
#0:	       stx	r0.31 -> $rb    ; stdio.c:61
	;;
.BB41_2:                                ; %bb
#0:	       ldm.s	r15, 0          ; stdio.c:61
#1:	       s2add	r15, 5 -> r15   ; stdio.c:61
	;;
#0:	       ret                      ; stdio.c:61
#1:	       ldx	$mem, 0 -> r14  ; stdio.c:61
	;;                              ; stdio.c:61
	       nop	3               ; stdio.c:61
	;;
.BB41_3:                                ; %bb1
#0:	       ldm.f	r10, 12         ; stdio.c:60
#1:	       add	r10, 12 -> r1
#2:	       ldiu	2047 -> r2
#3:	       or	r14, 0 -> r15   ; stdio.c:61
	;;
#0:	       ldim	29 -> r2
	;;
#0:	       ldx	$memhu, r1 -> r1 ; stdio.c:60
	;;
#0:	       and	r1, r2 -> r1    ; stdio.c:60
	;;
#0:	       stmh.a	r1, r10, 6      ; stdio.c:60
	;;
#0:	       ldm.s	r14, 16         ; stdio.c:61
	;;
#0:	       ldx	$mem, 0 -> r10  ; stdio.c:61
#1:	       ldm.s	r15, 8          ; stdio.c:61
	;;
#0:	       br	.BB41_2
#1:	       ldx	$mem, 0 -> r1.31 ; stdio.c:61
#2:	       ldm.s	r15, 4          ; stdio.c:61
	;;
#1:	       stx	r1.31 -> $ro    ; stdio.c:61
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; stdio.c:61
	;;
#2:	       stx	r2.31 -> $rb    ; stdio.c:61
	;;
	.align	4
___sread_end:

	.align	4
___sclose:                              ; @__sclose
	.size	___sclose_end-___sclose
___sclose_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4
#2:	       ldiu	16 -> r3
#0:	       ldx	$ro, 0 -> r0.31
#3:	       add	r1, 14 -> r2
	;;
#0:	       sub	r15, r3 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       ldm.f	r1, 14          ; stdio.c:135
	;;
#0:	       callg	__close_r       ; stdio.c:135
#1:	       ldx	$memhs, r2 -> r1 ; stdio.c:135
	;;                              ; stdio.c:135
	       nop	3               ; stdio.c:135
	;;
#0:	       or	r14, 0 -> r15   ; stdio.c:135
	;;
#0:	       ldm.s	r15, 8          ; stdio.c:135
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; stdio.c:135
#0:	       ldm.s	r15, 4          ; stdio.c:135
	;;
#1:	       stx	r1.31 -> $ro    ; stdio.c:135
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; stdio.c:135
#0:	       ldm.s	r15, 0          ; stdio.c:135
#1:	       s2add	r15, 4 -> r15   ; stdio.c:135
	;;
#2:	       stx	r2.31 -> $rb    ; stdio.c:135
	;;
#0:	       ret                      ; stdio.c:135
#1:	       ldx	$mem, 0 -> r14  ; stdio.c:135
	;;                              ; stdio.c:135
	       nop	3               ; stdio.c:135
	;;
	.align	4
___sclose_end:

	.align	4
___sseek:                               ; @__sseek
	.size	___sseek_end-___sseek
___sseek_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 6
#2:	       ldiu	24 -> r4
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
#1:	       add	r10, 14 -> r1
#2:	       add	r10, 12 -> r11
	;;
#0:	       ldm.f	r10, 14         ; stdio.c:117
	;;
#0:	       callg	__lseek_r       ; stdio.c:117
#1:	       ldx	$memhs, r1 -> r1 ; stdio.c:117
	;;                              ; stdio.c:117
	       nop	3               ; stdio.c:117
	;;
#0:	       cmpne	r0, -1 -> c1    ; stdio.c:118
#1:	       ldm.f	r10, 12         ; stdio.c:119
	;;
#0:	if  c1 br	.BB43_3         ; stdio.c:118
#1:	       ldx	$memhu, r11 -> r1 ; stdio.c:119
	;;                              ; stdio.c:118
	       nop	2               ; stdio.c:118
	;;
; BB#1:                                 ; %bb
#0:	       ldiu	2047 -> r2
#1:	       or	r14, 0 -> r15   ; stdio.c:125
	;;
#0:	       ldim	29 -> r2
	;;
#0:	       and	r1, r2 -> r1    ; stdio.c:119
	;;
#0:	       stmh.a	r1, r10, 6      ; stdio.c:119
	;;
#0:	       ldm.s	r14, 16         ; stdio.c:125
	;;
#0:	       ldx	$mem, 0 -> r11  ; stdio.c:125
#1:	       ldm.s	r14, 20         ; stdio.c:125
	;;
#0:	       ldx	$mem, 0 -> r10  ; stdio.c:125
#1:	       ldm.s	r15, 8          ; stdio.c:125
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; stdio.c:125
#0:	       ldm.s	r15, 4          ; stdio.c:125
	;;
#1:	       stx	r1.31 -> $ro    ; stdio.c:125
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; stdio.c:125
	;;
#2:	       stx	r2.31 -> $rb    ; stdio.c:125
	;;
.BB43_2:                                ; %bb
#0:	       ldm.s	r15, 0          ; stdio.c:125
#1:	       s2add	r15, 6 -> r15   ; stdio.c:125
	;;
#0:	       ret                      ; stdio.c:125
#1:	       ldx	$mem, 0 -> r14  ; stdio.c:125
	;;                              ; stdio.c:125
	       nop	3               ; stdio.c:125
	;;
.BB43_3:                                ; %bb1
#0:	       ldga	4096 -> r2
#1:	       or	r14, 0 -> r15   ; stdio.c:125
	;;
#0:	       or	r1, r2 -> r1    ; stdio.c:122
	;;
#0:	       stmh.a	r1, r10, 6      ; stdio.c:122
	;;
#0:	       stm.a	r0, r10, 20     ; stdio.c:123
	;;
#0:	       ldm.s	r14, 16         ; stdio.c:125
	;;
#0:	       ldx	$mem, 0 -> r11  ; stdio.c:125
#1:	       ldm.s	r14, 20         ; stdio.c:125
	;;
#0:	       ldx	$mem, 0 -> r10  ; stdio.c:125
#1:	       ldm.s	r15, 8          ; stdio.c:125
	;;
#0:	       br	.BB43_2
#3:	       ldx	$mem, 0 -> r3.31 ; stdio.c:125
#1:	       ldm.s	r15, 4          ; stdio.c:125
	;;
#3:	       stx	r3.31 -> $ro    ; stdio.c:125
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; stdio.c:125
	;;
#0:	       stx	r0.31 -> $rb    ; stdio.c:125
	;;
	.align	4
___sseek_end:

	.align	4
___swrite:                              ; @__swrite
	.size	___swrite_end-___swrite
___swrite_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 9
#2:	       ldiu	36 -> r5
#1:	       ldx	$rb, 0 -> r1.31
#3:	       add	r1, 12 -> r4
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 8
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 7
#1:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 6
#1:	       or	r2, 0 -> r12
	;;
#0:	       stm.s	r13, r14, 5
#1:	       or	r3, 0 -> r13
	;;
#2:	       stm.s	r2.23, r14, 4
	;;
#0:	       ldm.f	r1, 12          ; stdio.c:88
	;;
#0:	       ldx	$memhu, r4 -> r4 ; stdio.c:88
	;;
#0:	       btest	r4, 8 -> c1     ; stdio.c:88
	;;
#0:	if !c1 br	.BB44_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r11, 14         ; stdio.c:89
#1:	       add	r11, 14 -> r4
#2:	       ldi	0 -> r2
#3:	       ldi	2 -> r3
	;;
#2:	       add	r11, 12 -> r2.23
#0:	       or	r10, 0 -> r0    ; stdio.c:89
	;;
#0:	       callg	__lseek_r       ; stdio.c:89
#1:	       ldx	$memhs, r4 -> r1 ; stdio.c:89
	;;                              ; stdio.c:89
	       nop	3               ; stdio.c:89
	;;
#0:	       ldm.f	r11, 12
	;;
#2:	       ldx	$memhu, r2.23 -> r4
	;;
.BB44_2:                                ; %bb1
#0:	       ldiu	2047 -> r0
#1:	       add	r11, 14 -> r1
#2:	       or	r12, 0 -> r2    ; stdio.c:97
#3:	       or	r13, 0 -> r3    ; stdio.c:97
	;;
#0:	       ldim	29 -> r0
	;;
#0:	       and	r4, r0 -> r0    ; stdio.c:90
	;;
#0:	       stmh.a	r0, r11, 6      ; stdio.c:90
#1:	       or	r10, 0 -> r0    ; stdio.c:97
	;;
#0:	       ldm.f	r11, 14         ; stdio.c:97
	;;
#0:	       callg	__write_r       ; stdio.c:97
#1:	       ldx	$memhs, r1 -> r1 ; stdio.c:97
	;;                              ; stdio.c:97
	       nop	3               ; stdio.c:97
	;;
#0:	       ldm.s	r14, 16         ; stdio.c:104
#1:	       or	r14, 0 -> r15   ; stdio.c:104
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; stdio.c:104
#0:	       ldm.s	r14, 20         ; stdio.c:104
	;;
#0:	       ldx	$mem, 0 -> r13  ; stdio.c:104
#1:	       ldm.s	r14, 24         ; stdio.c:104
	;;
#0:	       ldx	$mem, 0 -> r12  ; stdio.c:104
#1:	       ldm.s	r14, 28         ; stdio.c:104
	;;
#0:	       ldx	$mem, 0 -> r11  ; stdio.c:104
#1:	       ldm.s	r14, 32         ; stdio.c:104
	;;
#0:	       ldx	$mem, 0 -> r10  ; stdio.c:104
#1:	       ldm.s	r15, 8          ; stdio.c:104
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; stdio.c:104
#0:	       ldm.s	r15, 4          ; stdio.c:104
	;;
#3:	       stx	r3.31 -> $ro    ; stdio.c:104
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; stdio.c:104
#1:	       ldm.s	r15, 0          ; stdio.c:104
#2:	       s2add	r15, 9 -> r15   ; stdio.c:104
	;;
#0:	       stx	r0.31 -> $rb    ; stdio.c:104
	;;
#0:	       ret                      ; stdio.c:104
#1:	       ldx	$mem, 0 -> r14  ; stdio.c:104
	;;                              ; stdio.c:104
	       nop	3               ; stdio.c:104
	;;
	.align	4
___swrite_end:

	.align	4
___smakebuf_r:                          ; @__smakebuf_r
	.size	___smakebuf_r_end-___smakebuf_r
___smakebuf_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 6          ; makebuf.c:50
#2:	       ldiu	24 -> r2        ; makebuf.c:50
#1:	       ldx	$rb, 0 -> r1.31 ; makebuf.c:50
#3:	       add	r0, 12 -> r1    ; makebuf.c:50
	;;
#0:	       sub	r15, r2 -> r15  ; makebuf.c:50
#2:	       ldx	$ro, 0 -> r2.31 ; makebuf.c:50
	;;
#0:	       stm.s	r14, r15, 0     ; makebuf.c:50
#1:	       or	r15, 0 -> r14   ; makebuf.c:50
	;;
#1:	       stm.s	r1.31, r15, 1   ; makebuf.c:50
	;;
#2:	       stm.s	r2.31, r15, 2   ; makebuf.c:50
	;;
#0:	       stm.s	r10, r14, 5     ; makebuf.c:50
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4     ; makebuf.c:50
	;;
#0:	       ldm.f	r0, 12          ; makebuf.c:50
	;;
#0:	       ldx	$memhu, r1 -> r1 ; makebuf.c:50
	;;
#0:	       btest	r1, 1 -> c1     ; makebuf.c:50
	;;
#0:	if !c1 br	.BB45_4         ; makebuf.c:50
	;;                              ; makebuf.c:50
	       nop	2               ; makebuf.c:50
	;;
; BB#1:                                 ; %bb
#0:	       stm.a	1, r10, 5       ; makebuf.c:53
#1:	       ldi	67 -> r1
	;;
#0:	       add	r10, r1 -> r1
	;;
#0:	       stm.a	r1, r10, 0      ; makebuf.c:52
	;;
#0:	       stm.a	r1, r10, 4      ; makebuf.c:52
	;;
.BB45_2:                                ; %bb
#0:	       ldm.s	r14, 16         ; makebuf.c:111
#1:	       or	r14, 0 -> r15   ; makebuf.c:111
	;;
#0:	       ldx	$mem, 0 -> r11  ; makebuf.c:111
#1:	       ldm.s	r14, 20         ; makebuf.c:111
	;;
#0:	       ldx	$mem, 0 -> r10  ; makebuf.c:111
#1:	       ldm.s	r15, 8          ; makebuf.c:111
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; makebuf.c:111
#0:	       ldm.s	r15, 4          ; makebuf.c:111
	;;
#3:	       stx	r3.31 -> $ro    ; makebuf.c:111
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; makebuf.c:111
	;;
#0:	       stx	r0.31 -> $rb    ; makebuf.c:111
	;;
.BB45_3:                                ; %bb
#0:	       ldm.s	r15, 0          ; makebuf.c:111
#1:	       s2add	r15, 6 -> r15   ; makebuf.c:111
	;;
#0:	       ret                      ; makebuf.c:111
#1:	       ldx	$mem, 0 -> r14  ; makebuf.c:111
	;;                              ; makebuf.c:111
	       nop	3               ; makebuf.c:111
	;;
.BB45_4:                                ; %bb1
#0:	       ldm.f	r10, 14         ; makebuf.c:59
#1:	       add	r10, 14 -> r0   ; makebuf.c:59
#2:	       ldi	-1 -> r2
	;;
#0:	       ldx	$memhs, r0 -> r0 ; makebuf.c:59
	;;
#0:	       cmplt	r2, r0 -> c1    ; makebuf.c:59
	;;
#0:	if !c1 br	.BB45_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb2
#0:	       mask	r0, 12 -> r0    ; makebuf.c:59
#1:	       callg	__fstat_r
	;;
	       nop	3
	;;
#0:	       cmplt	r0, 0 -> c1     ; makebuf.c:59
#1:	       ldm.f	r10, 12
#2:	       add	r10, 12 -> r1
	;;
#0:	if  c1 br	.BB45_7
#1:	       ldx	$memhu, r1 -> r1
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb2.bb11_crit_edge
#0:	       ldiu	1024 -> r11
#1:	       br	.BB45_8
	;;
	       nop	2
	;;
.BB45_7:                                ; %bb3
#0:	       btest	r1, 7 -> c1
#1:	       ldiu	1024 -> r0
#2:	       ldi	64 -> r11
	;;
#0:	if !c1 or	r0, 0 -> r11
	;;
.BB45_8:                                ; %bb11
#0:	       ldga	2048 -> r0
#1:	       callg	__malloc_r      ; makebuf.c:95
	;;
#0:	       or	r1, r0 -> r0
	;;
#0:	       stmh.a	r0, r10, 6
#1:	       or	r11, 0 -> r0    ; makebuf.c:95
	;;                              ; makebuf.c:95
	       nop	1               ; makebuf.c:95
	;;
#0:	       cmpne	r0, 0 -> c1     ; makebuf.c:95
	;;
#0:	if  c1 br	.BB45_10        ; makebuf.c:95
	;;                              ; makebuf.c:95
	       nop	2               ; makebuf.c:95
	;;
; BB#9:                                 ; %bb12
#0:	       ldm.f	r10, 12         ; makebuf.c:97
#1:	       add	r10, 12 -> r11
#2:	       or	r14, 0 -> r15   ; makebuf.c:111
	;;
#0:	       ldx	$memhu, r11 -> r11 ; makebuf.c:97
	;;
#0:	       btest	r11, 9 -> c1    ; makebuf.c:97
	;;
#0:	if !c1 ldi	67 -> r0
#1:	if !c1 or	r11, 2 -> r11   ; makebuf.c:99
	;;
#0:	if !c1 add	r10, r0 -> r0
	;;
#0:	if !c1 stm.a	r0, r10, 4      ; makebuf.c:100
	;;
#0:	if !c1 stmh.a	r11, r10, 6     ; makebuf.c:99
	;;
#0:	if !c1 stm.a	r0, r10, 0      ; makebuf.c:100
	;;
#0:	if !c1 stm.a	1, r10, 5       ; makebuf.c:101
	;;
#0:	       ldm.s	r14, 16         ; makebuf.c:111
	;;
#0:	       ldx	$mem, 0 -> r11  ; makebuf.c:111
#1:	       ldm.s	r14, 20         ; makebuf.c:111
	;;
#0:	       ldx	$mem, 0 -> r10  ; makebuf.c:111
#1:	       ldm.s	r15, 8          ; makebuf.c:111
	;;
#0:	       br	.BB45_3
#1:	       ldx	$mem, 0 -> r1.31 ; makebuf.c:111
#2:	       ldm.s	r15, 4          ; makebuf.c:111
	;;
#1:	       stx	r1.31 -> $ro    ; makebuf.c:111
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; makebuf.c:111
	;;
#2:	       stx	r2.31 -> $rb    ; makebuf.c:111
	;;
.BB45_10:                               ; %bb14
#0:	       ldga	__cleanup_r -> r1 ; makebuf.c:106
#1:	       ldga	_impure_data -> r2 ; makebuf.c:106
#2:	       add	r10, 12 -> r3
	;;
#0:	       stm.a	r1, r2, 15      ; makebuf.c:106
#1:	       ldi	128 -> r2
	;;
#0:	       ldm.f	r10, 12         ; makebuf.c:107
	;;
#0:	       ldx	$memhu, r3 -> r1 ; makebuf.c:107
#1:	       stm.a	r0, r10, 4      ; makebuf.c:108
	;;
#0:	       br	.BB45_2
#1:	       or	r1, r2 -> r1    ; makebuf.c:107
	;;
#0:	       stmh.a	r1, r10, 6      ; makebuf.c:107
	;;
#0:	       stm.a	r0, r10, 0      ; makebuf.c:108
	;;
#0:	       stm.a	r11, r10, 5     ; makebuf.c:109
	;;
	.align	4
___smakebuf_r_end:

	.align	4
__fputwc_r:                             ; @_fputwc_r
	.size	__fputwc_r_end-__fputwc_r
__fputwc_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 10
#2:	       ldiu	40 -> r2
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
	;;
#0:	       stm.s	r12, r14, 7
	;;
#0:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r0, r14, 4
#1:	       add	r1, 12 -> r0    ; fputwc.c:164
	;;
#0:	       ldm.f	r1, 12          ; fputwc.c:164
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fputwc.c:164
	;;
#0:	       btest	r0, 13 -> c1    ; fputwc.c:164
	;;
#0:	if  c1 br	.BB46_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r10, 100        ; fputwc.c:164
#1:	       ldga	8192 -> r2
	;;
#0:	       or	r0, r2 -> r0    ; fputwc.c:164
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:164
	;;
#0:	       or	r1, r2 -> r1    ; fputwc.c:164
	;;
#0:	       stm.a	r1, r10, 25     ; fputwc.c:164
	;;
#0:	       stmh.a	r0, r10, 6      ; fputwc.c:164
	;;
.BB46_2:                                ; %bb1
#0:	       ldm.s	r14, 16
#1:	       ldi	254 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB46_4         ; fputwc.c:129[ fputwc.c:165 ]
	;;                              ; fputwc.c:129[ fputwc.c:165 ]
	       nop	2               ; fputwc.c:129[ fputwc.c:165 ]
	;;
; BB#3:                                 ; %bb2.i
#0:	       ldm.s	r14, 16         ; fputwc.c:136[ fputwc.c:165 ]
#1:	       br	.BB46_6
#2:	       add	r14, 20 -> r0
#3:	       ldi	1 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:136[ fputwc.c:165 ]
	;;
#0:	       stmb.a	r1, r0, 0       ; fputwc.c:136[ fputwc.c:165 ]
	;;
	       nop	0
	;;
.BB46_4:                                ; %bb3.i
#0:	       ldm.s	r14, 16         ; fputwc.c:141[ fputwc.c:165 ]
#1:	       add	r14, 20 -> r0
#2:	       s2add	r10, 23 -> r2   ; fputwc.c:141[ fputwc.c:165 ]
	;;
#0:	       callg	__wcrtomb_r     ; fputwc.c:141[ fputwc.c:165 ]
#1:	       ldx	$mem, 0 -> r1   ; fputwc.c:141[ fputwc.c:165 ]
	;;                              ; fputwc.c:141[ fputwc.c:165 ]
	       nop	3               ; fputwc.c:141[ fputwc.c:165 ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; fputwc.c:141[ fputwc.c:165 ]
	;;
#0:	if  c1 br	.BB46_20        ; fputwc.c:141[ fputwc.c:165 ]
	;;                              ; fputwc.c:141[ fputwc.c:165 ]
	       nop	2               ; fputwc.c:141[ fputwc.c:165 ]
	;;
; BB#5:                                 ; %bb3.i.bb6.i_crit_edge
#0:	       or	r0, 0 -> r11
	;;
.BB46_6:                                ; %bb6.i
#0:	       ldi	0 -> r12
#1:	       ldi	-1 -> r13
	;;
.BB46_7:                                ; %bb19.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpult	r12, r11 -> c1  ; fputwc.c:148[ fputwc.c:165 ]
	;;
#0:	if !c1 br	.BB46_16
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb7.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       ldm.f	r10, 8          ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       cmplt	r13, r0 -> c1   ; fputwc.c:149[ fputwc.c:165 ]
#1:	       stm.a	r0, r10, 2      ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	if  c1 br	.BB46_19        ; fputwc.c:149[ fputwc.c:165 ]
	;;                              ; fputwc.c:149[ fputwc.c:165 ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165 ]
	;;
; BB#9:                                 ; %bb8.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       ldm.f	r10, 24         ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       cmplt	r0, r1 -> c1    ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	if  c1 br	.BB46_18        ; fputwc.c:149[ fputwc.c:165 ]
	;;                              ; fputwc.c:149[ fputwc.c:165 ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165 ]
	;;
; BB#10:                                ; %bb9.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       add	r14, 20 -> r0
	;;
#0:	       add	r0, r12 -> r0
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165 ]
#1:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       stmb.a	r0, r1, 0       ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$membu, r0 -> r1 ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       cmpeq	r1, 10 -> c1    ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	if  c1 br	.BB46_13        ; fputwc.c:149[ fputwc.c:165 ]
	;;                              ; fputwc.c:149[ fputwc.c:165 ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165 ]
	;;
.BB46_11:                               ; %bb10.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       add	r0, 1 -> r0     ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       stm.a	r0, r10, 0      ; fputwc.c:149[ fputwc.c:165 ]
	;;
.BB46_12:                               ; %bb18.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       add	r12, 1 -> r12   ; fputwc.c:148[ fputwc.c:165 ]
#1:	       br	.BB46_7
	;;
	       nop	2
	;;
.BB46_13:                               ; %bb11.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       ldi	10 -> r0
	;;
.BB46_14:                               ; %bb11.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       or	r10, 0 -> r1    ; fputwc.c:149[ fputwc.c:165 ]
#1:	       callg	___swbuf_r      ; fputwc.c:149[ fputwc.c:165 ]
	;;                              ; fputwc.c:149[ fputwc.c:165 ]
	       nop	3               ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$c1 -> r0       ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       mask	r0, 0 -> r0     ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	if  c1 br	.BB46_12
	;;
	       nop	2
	;;
; BB#15:                                ; %bb16.i.__fputwc.exit_crit_edge
#0:	       ldi	-1 -> r0
	;;
#0:	       stm.s	r0, r14, 4
	;;
.BB46_16:                               ; %__fputwc.exit
#0:	       ldm.s	r14, 16
#1:	       or	r14, 0 -> r15   ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 24         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r13  ; fputwc.c:167
#1:	       ldm.s	r14, 28         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r12  ; fputwc.c:167
#1:	       ldm.s	r14, 32         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r11  ; fputwc.c:167
#1:	       ldm.s	r14, 36         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r10  ; fputwc.c:167
#1:	       ldm.s	r15, 8          ; fputwc.c:167
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; fputwc.c:167
#0:	       ldm.s	r15, 4          ; fputwc.c:167
	;;
#3:	       stx	r3.31 -> $ro    ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fputwc.c:167
	;;
#0:	       stx	r0.31 -> $rb    ; fputwc.c:167
	;;
.BB46_17:                               ; %__fputwc.exit
#0:	       ldm.s	r15, 0          ; fputwc.c:167
#1:	       s2add	r15, 10 -> r15  ; fputwc.c:167
	;;
#0:	       ret                      ; fputwc.c:167
#1:	       ldx	$mem, 0 -> r14  ; fputwc.c:167
	;;                              ; fputwc.c:167
	       nop	3               ; fputwc.c:167
	;;
.BB46_18:                               ; %bb13.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       add	r14, 20 -> r0
#1:	       br	.BB46_14
	;;
#0:	       add	r0, r12 -> r0
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165 ]
	;;
.BB46_19:                               ; %bb15.i
                                        ;   in Loop: Header=BB46_7 Depth=1
#0:	       add	r14, 20 -> r0
	;;
#0:	       add	r0, r12 -> r0
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165 ]
#1:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       br	.BB46_11
#1:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       stmb.a	r0, r1, 0       ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165 ]
	;;
.BB46_20:                               ; %bb5.i
#0:	       ldm.f	r10, 12         ; fputwc.c:143[ fputwc.c:165 ]
#1:	       add	r10, 12 -> r11
#2:	       ldi	64 -> r0
#3:	       or	r14, 0 -> r15   ; fputwc.c:167
	;;
#0:	       ldx	$memhu, r11 -> r11 ; fputwc.c:143[ fputwc.c:165 ]
	;;
#0:	       or	r11, r0 -> r11  ; fputwc.c:143[ fputwc.c:165 ]
#1:	       ldi	-1 -> r0
	;;
#0:	       stmh.a	r11, r10, 6     ; fputwc.c:143[ fputwc.c:165 ]
	;;
#0:	       ldm.s	r14, 24         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r13  ; fputwc.c:167
#1:	       ldm.s	r14, 28         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r12  ; fputwc.c:167
#1:	       ldm.s	r14, 32         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r11  ; fputwc.c:167
#1:	       ldm.s	r14, 36         ; fputwc.c:167
	;;
#0:	       ldx	$mem, 0 -> r10  ; fputwc.c:167
#1:	       ldm.s	r15, 8          ; fputwc.c:167
	;;
#0:	       br	.BB46_17
#1:	       ldx	$mem, 0 -> r1.31 ; fputwc.c:167
#2:	       ldm.s	r15, 4          ; fputwc.c:167
	;;
#1:	       stx	r1.31 -> $ro    ; fputwc.c:167
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fputwc.c:167
	;;
#2:	       stx	r2.31 -> $rb    ; fputwc.c:167
	;;
	.align	4
__fputwc_r_end:

	.align	4
__fwalk:                                ; @_fwalk
	.size	__fwalk_end-__fwalk
__fwalk_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 7
#2:	       ldiu	28 -> r2
#1:	       ldx	$rb, 0 -> r1.31
#3:	       ldi	736 -> r1
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 6
#1:	       add	r0, r1 -> r10   ; fwalk.c:47
	;;
#0:	       cmpeq	r10, 0 -> c1    ; fwalk.c:47
#1:	       stm.s	r11, r14, 5
	;;
#0:	if  c1 br	.BB47_7
#1:	       stm.s	r12, r14, 4
	;;
	       nop	2
	;;
.BB47_1:                                ; %bb
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB47_3 Depth 2
#0:	       ldm.f	r10, 4          ; fwalk.c:48
	;;
#0:	       ldx	$mem, 0 -> r11  ; fwalk.c:48
	;;
#0:	       sub	r11, 1 -> r0
	;;
#0:	       cmplt	r0, 0 -> c1     ; fwalk.c:48
	;;
#0:	if  c1 br	.BB47_6
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.nph
                                        ;   in Loop: Header=BB47_1 Depth=1
#0:	       ldm.f	r10, 8          ; fwalk.c:48
	;;
#0:	       ldx	$mem, 0 -> r12  ; fwalk.c:48
	;;
.BB47_3:                                ; %bb1
                                        ;   Parent Loop BB47_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r12, 12         ; fwalk.c:49
#1:	       add	r12, 12 -> r0
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fwalk.c:49
	;;
#0:	       cmpult	r0, 2 -> c1     ; fwalk.c:49
	;;
#0:	if !c1 ldm.f	r12, 14         ; fwalk.c:51
#1:	if !c1 add	r12, 14 -> r0
#2:	if !c1 ldiu	2047 -> r1
	;;
#0:	if !c1 ldim	31 -> r1
	;;
#0:	if !c1 ldx	$memhu, r0 -> r0 ; fwalk.c:51
	;;
#0:	if !c1 cmpeq	r0, r1 -> c1    ; fwalk.c:51
	;;
#0:	if  c1 br	.BB47_5
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb4
                                        ;   in Loop: Header=BB47_3 Depth=2
#0:	       or	r12, 0 -> r0    ; fwalk.c:52
#1:	       callg	_fclose         ; fwalk.c:52
	;;                              ; fwalk.c:52
	       nop	3               ; fwalk.c:52
	;;
.BB47_5:                                ; %bb5
                                        ;   in Loop: Header=BB47_3 Depth=2
#0:	       sub	r11, 1 -> r11
#1:	       s2add	r12, 26 -> r12
	;;
#0:	       cmpne	r11, 0 -> c1    ; fwalk.c:48
	;;
#0:	if  c1 br	.BB47_3
	;;
	       nop	2
	;;
.BB47_6:                                ; %bb7
                                        ;   in Loop: Header=BB47_1 Depth=1
#0:	       ldm.f	r10, 0          ; fwalk.c:47
	;;
#0:	       ldx	$mem, 0 -> r10  ; fwalk.c:47
	;;
#0:	       cmpne	r10, 0 -> c1    ; fwalk.c:47
	;;
#0:	if  c1 br	.BB47_1
	;;
	       nop	2
	;;
.BB47_7:                                ; %bb9
#0:	       ldm.s	r14, 16
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 0
#2:	       s2add	r15, 7 -> r15
	;;
#0:	       stx	r0.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
__fwalk_end:

	.align	4
__sbrk_r:                               ; @_sbrk_r
	.size	__sbrk_r_end-__sbrk_r
__sbrk_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 4
#2:	       ldiu	16 -> r2
#1:	       ldx	$rb, 0 -> r1.31
#3:	       ldga	_errno.b -> r0
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stmb.a	0, r0, 0
#1:	       or	r1, 0 -> r0     ; sbrkr.c:60
	;;
#0:	       callg	__sbrk          ; sbrkr.c:60
	;;                              ; sbrkr.c:60
	       nop	3               ; sbrkr.c:60
	;;
#0:	       or	r14, 0 -> r15   ; sbrkr.c:62
	;;
#0:	       ldm.s	r15, 8          ; sbrkr.c:62
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; sbrkr.c:62
#0:	       ldm.s	r15, 4          ; sbrkr.c:62
	;;
#3:	       stx	r3.31 -> $ro    ; sbrkr.c:62
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; sbrkr.c:62
#1:	       ldm.s	r15, 0          ; sbrkr.c:62
#2:	       s2add	r15, 4 -> r15   ; sbrkr.c:62
	;;
#0:	       stx	r0.31 -> $rb    ; sbrkr.c:62
	;;
#0:	       ret                      ; sbrkr.c:62
#1:	       ldx	$mem, 0 -> r14  ; sbrkr.c:62
	;;                              ; sbrkr.c:62
	       nop	3               ; sbrkr.c:62
	;;
	.align	4
__sbrk_r_end:

	.align	4
__fclose_r:                             ; @_fclose_r
	.size	__fclose_r_end-__fclose_r
__fclose_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 8
#2:	       ldiu	32 -> r1
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r1 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 7
#1:	       or	r0, 0 -> r10
	;;
#0:	       cmpeq	r10, 0 -> c1    ; fclose.c:74
#1:	       stm.s	r11, r14, 6
	;;
#0:	if  c1 br	.BB49_15
#1:	       stm.s	r12, r14, 5
	;;
#0:	       stm.s	r13, r14, 4
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb2
#0:	       ldmg.d	_impure_data+56 ; fclose.c:77
	;;
#0:	       ldx	$mem, 0 -> r0   ; fclose.c:77
	;;
#0:	       cmpne	r0, 0 -> c1     ; fclose.c:77
	;;
#0:	if  c1 br	.BB49_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb3
#0:	       ldga	_impure_data -> r0 ; fclose.c:77
#1:	       callg	___sinit        ; fclose.c:77
	;;                              ; fclose.c:77
	       nop	3               ; fclose.c:77
	;;
.BB49_3:                                ; %bb4
#0:	       ldm.f	r10, 12         ; fclose.c:81
#1:	       add	r10, 12 -> r11  ; fclose.c:81
	;;
#0:	       ldx	$memhu, r11 -> r0 ; fclose.c:81
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fclose.c:81
	;;
#0:	if  c1 br	.BB49_15
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb6
#0:	       ldga	_impure_data -> r0 ; fclose.c:89
#1:	       callg	__fflush_r      ; fclose.c:89
#2:	       or	r10, 0 -> r1    ; fclose.c:89
	;;                              ; fclose.c:89
	       nop	3               ; fclose.c:89
	;;
#0:	       ldm.f	r10, 44         ; fclose.c:90
#1:	       or	r0, 0 -> r12    ; fclose.c:89
	;;
#0:	       ldx	$mem, 0 -> r2   ; fclose.c:90
	;;
#0:	       cmpne	r2, 0 -> c1     ; fclose.c:90
	;;
#0:	if !c1 br	.BB49_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb7
#0:	       ldm.f	r10, 28         ; fclose.c:90
#1:	       ldga	_impure_data -> r0 ; fclose.c:90
#2:	       ldi	-1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:90
	;;
#0:	       call	r2              ; fclose.c:90
	;;                              ; fclose.c:90
	       nop	3               ; fclose.c:90
	;;
#0:	       cmplt	r13, r0 -> c1   ; fclose.c:90
	;;
#0:	if !c1 ldi	-1 -> r12
	;;
.BB49_6:                                ; %bb9
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r11 -> r0
	;;
#0:	       btest	r0, 7 -> c1     ; fclose.c:92
	;;
#0:	if !c1 br	.BB49_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb10
#0:	       ldm.f	r10, 16         ; fclose.c:93
#1:	       ldga	_impure_data -> r0 ; fclose.c:93
	;;
#0:	       callg	__free_r        ; fclose.c:93
#1:	       ldx	$mem, 0 -> r1   ; fclose.c:93
	;;                              ; fclose.c:93
	       nop	3               ; fclose.c:93
	;;
.BB49_8:                                ; %bb11
#0:	       ldm.f	r10, 48         ; fclose.c:94
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:94
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fclose.c:94
	;;
#0:	if  c1 br	.BB49_12
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb12
#0:	       s2add	r10, 16 -> r0
	;;
#0:	       cmpeq	r1, r0 -> c1    ; fclose.c:95
	;;
#0:	if  c1 br	.BB49_11
	;;
	       nop	2
	;;
; BB#10:                                ; %bb13
#0:	       ldga	_impure_data -> r0 ; fclose.c:95
#1:	       callg	__free_r        ; fclose.c:95
	;;                              ; fclose.c:95
	       nop	3               ; fclose.c:95
	;;
.BB49_11:                               ; %bb14
#0:	       stm.a	0, r10, 12      ; fclose.c:95
	;;
.BB49_12:                               ; %bb15
#0:	       ldm.f	r10, 68         ; fclose.c:96
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:96
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fclose.c:96
	;;
#0:	if  c1 br	.BB49_14
	;;
	       nop	2
	;;
; BB#13:                                ; %bb16
#0:	       ldga	_impure_data -> r0 ; fclose.c:97
#1:	       callg	__free_r        ; fclose.c:97
	;;                              ; fclose.c:97
	       nop	3               ; fclose.c:97
	;;
#0:	       stm.a	0, r10, 17      ; fclose.c:97
	;;
.BB49_14:                               ; %bb17
#0:	       stmh.a	0, r10, 6       ; fclose.c:99
#1:	       or	r12, 0 -> r0    ; fclose.c:107
#2:	       or	r14, 0 -> r15   ; fclose.c:107
	;;
#0:	       ldm.s	r14, 16         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r13  ; fclose.c:107
#1:	       ldm.s	r14, 20         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r12  ; fclose.c:107
#1:	       ldm.s	r14, 24         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r11  ; fclose.c:107
#1:	       ldm.s	r14, 28         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r10  ; fclose.c:107
#1:	       ldm.s	r15, 8          ; fclose.c:107
	;;
#0:	       br	.BB49_16
#3:	       ldx	$mem, 0 -> r3.31 ; fclose.c:107
#1:	       ldm.s	r15, 4          ; fclose.c:107
	;;
#3:	       stx	r3.31 -> $ro    ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fclose.c:107
	;;
#0:	       stx	r0.31 -> $rb    ; fclose.c:107
	;;
.BB49_15:                               ; %bb18
#0:	       ldm.s	r14, 16         ; fclose.c:107
#1:	       or	r14, 0 -> r15   ; fclose.c:107
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13  ; fclose.c:107
#1:	       ldm.s	r14, 20         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r12  ; fclose.c:107
#1:	       ldm.s	r14, 24         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r11  ; fclose.c:107
#1:	       ldm.s	r14, 28         ; fclose.c:107
	;;
#0:	       ldx	$mem, 0 -> r10  ; fclose.c:107
#1:	       ldm.s	r15, 8          ; fclose.c:107
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fclose.c:107
#0:	       ldm.s	r15, 4          ; fclose.c:107
	;;
#1:	       stx	r1.31 -> $ro    ; fclose.c:107
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fclose.c:107
	;;
#2:	       stx	r2.31 -> $rb    ; fclose.c:107
	;;
.BB49_16:                               ; %bb18
#0:	       ldm.s	r15, 0          ; fclose.c:107
#1:	       s2add	r15, 8 -> r15   ; fclose.c:107
	;;
#0:	       ret                      ; fclose.c:107
#1:	       ldx	$mem, 0 -> r14  ; fclose.c:107
	;;                              ; fclose.c:107
	       nop	3               ; fclose.c:107
	;;
	.align	4
__fclose_r_end:

	.align	4
_fclose:                                ; @fclose
	.size	_fclose_end-_fclose
_fclose_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4          ; fclose.c:116
#2:	       ldiu	16 -> r1        ; fclose.c:116
#0:	       ldx	$ro, 0 -> r0.31 ; fclose.c:116
	;;
#0:	       sub	r15, r1 -> r15  ; fclose.c:116
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; fclose.c:116
	;;
#0:	       stm.s	r14, r15, 0     ; fclose.c:116
#1:	       or	r15, 0 -> r14   ; fclose.c:116
	;;
#3:	       stm.s	r3.31, r15, 1   ; fclose.c:116
	;;
#0:	       stm.s	r0.31, r15, 2   ; fclose.c:116
	;;
#0:	       callg	__fclose_r      ; fclose.c:116
	;;                              ; fclose.c:116
	       nop	3               ; fclose.c:116
	;;
#0:	       or	r14, 0 -> r15   ; fclose.c:116
	;;
#0:	       ldm.s	r15, 8          ; fclose.c:116
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fclose.c:116
#0:	       ldm.s	r15, 4          ; fclose.c:116
	;;
#1:	       stx	r1.31 -> $ro    ; fclose.c:116
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fclose.c:116
#0:	       ldm.s	r15, 0          ; fclose.c:116
#1:	       s2add	r15, 4 -> r15   ; fclose.c:116
	;;
#2:	       stx	r2.31 -> $rb    ; fclose.c:116
	;;
#0:	       ret                      ; fclose.c:116
#1:	       ldx	$mem, 0 -> r14  ; fclose.c:116
	;;                              ; fclose.c:116
	       nop	3               ; fclose.c:116
	;;
	.align	4
_fclose_end:

	.align	4
_memset:                                ; @memset
	.size	_memset_end-_memset
_memset_start:
; BB#0:                                 ; %entry
#0:	       ldiu	4 -> r2         ; memset.c:54
#1:	       br	.BB51_3
#2:	       wb.s	r15, 1          ; memset.c:54
	;;
#0:	       sub	r15, r2 -> r15  ; memset.c:54
	;;
	       nop	1
	;;
.BB51_1:                                ; %bb
                                        ;   in Loop: Header=BB51_3 Depth=1
#0:	       cmpeq	r1, 0 -> c1     ; memset.c:59
	;;
#0:	if  c1 br	.BB51_14
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
                                        ;   in Loop: Header=BB51_3 Depth=1
#0:	       add	r0, 1 -> r2
#1:	       stmb.a	0, r0, 0        ; memset.c:60
#2:	       sub	r1, 1 -> r1
	;;
#0:	       or	r2, 0 -> r0
	;;
.BB51_3:                                ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r0, 3 -> r2     ; memset.c:57
	;;
#0:	       cmpne	r2, 0 -> c1     ; memset.c:57
	;;
#0:	if  c1 br	.BB51_1         ; memset.c:57
	;;                              ; memset.c:57
	       nop	2               ; memset.c:57
	;;
; BB#4:                                 ; %bb4
#0:	       ldi	3 -> r2
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:65
	;;
#0:	if !c1 br	.BB51_12
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       ldi	15 -> r2
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:78
	;;
#0:	if !c1 br	.BB51_10
	;;
	       nop	2
	;;
.BB51_6:                                ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       stm.a	0, r0, 3        ; memset.c:83
#1:	       sub	r1, 16 -> r1
#2:	       add	r0, 16 -> r3
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:78
	;;
#0:	if  c1 br	.BB51_6         ; memset.c:78
#1:	       stm.a	0, r0, 2        ; memset.c:82
	;;
#0:	       stm.a	0, r0, 0        ; memset.c:80
	;;
#0:	       stm.a	0, r0, 1        ; memset.c:81
#1:	       or	r3, 0 -> r0
	;;                              ; memset.c:78
	       nop	0               ; memset.c:78
	;;
; BB#7:                                 ; %bb11.preheader
#0:	       ldi	3 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; memset.c:87
	;;
#0:	if  c1 br	.BB51_9         ; memset.c:87
	;;                              ; memset.c:87
	       nop	2               ; memset.c:87
	;;
; BB#8:                                 ; %bb11.preheader.bb12_crit_edge
#0:	       or	r3, 0 -> r0
#1:	       br	.BB51_12
	;;
	       nop	2
	;;
.BB51_9:                                ; %bb11.preheader.bb10_crit_edge
#0:	       or	r3, 0 -> r0
	;;
.BB51_10:                               ; %bb10
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, 4 -> r1
#1:	       ldi	3 -> r3
#2:	       add	r0, 4 -> r2
#3:	       stm.a	0, r0, 0        ; memset.c:89
	;;
#0:	       cmpult	r3, r1 -> c1    ; memset.c:87
#1:	       or	r2, 0 -> r0
	;;
#0:	if  c1 br	.BB51_10        ; memset.c:87
	;;                              ; memset.c:87
	       nop	2               ; memset.c:87
	;;
; BB#11:                                ; %bb10.bb12_crit_edge
#0:	       or	r2, 0 -> r0
	;;
.BB51_12:                               ; %bb14.preheader
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 ret
#1:	if  c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
.BB51_13:                               ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, 1 -> r1
#1:	       add	r0, 1 -> r2
#2:	       stmb.a	0, r0, 0        ; memset.c:99
	;;
#0:	       cmpne	r1, 0 -> c1     ; memset.c:98
#1:	       or	r2, 0 -> r0
	;;
#0:	if  c1 br	.BB51_13        ; memset.c:98
	;;                              ; memset.c:98
	       nop	2               ; memset.c:98
	;;
.BB51_14:                               ; %bb16
#0:	       s2add	r15, 1 -> r15
#1:	       ret
	;;
	       nop	3
	;;
	.align	4
_memset_end:

	.align	4
__read_r:                               ; @_read_r
	.size	__read_r_end-__read_r
__read_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5
#2:	       ldiu	20 -> r4
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       or	r0, 0 -> r10
#2:	       ldga	_errno.b -> r0
	;;
#0:	       stmb.a	0, r0, 0
#1:	       or	r1, 0 -> r0
#2:	       or	r2, 0 -> r1
#3:	       or	r3, 0 -> r2
	;;
#0:	       callg	__read
	;;
	       nop	3
	;;
#0:	       cmpne	r0, -1 -> c1    ; readr.c:58
	;;
#0:	if  c1 br	.BB52_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_errno.b
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, -1 -> c1    ; readr.c:58
	;;
#0:	if  c1 br	.BB52_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       stx	r1 -> $c1
#1:	       ldi	88 -> r1
#2:	       ldi	0 -> r2
#3:	       or	r14, 0 -> r15   ; readr.c:60
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       stm.a	r2, r10, 0      ; readr.c:59
	;;
#0:	       ldm.s	r14, 16         ; readr.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; readr.c:60
#1:	       ldm.s	r15, 8          ; readr.c:60
	;;
#0:	       br	.BB52_4
#1:	       ldx	$mem, 0 -> r1.31 ; readr.c:60
#2:	       ldm.s	r15, 4          ; readr.c:60
	;;
#1:	       stx	r1.31 -> $ro    ; readr.c:60
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; readr.c:60
	;;
#2:	       stx	r2.31 -> $rb    ; readr.c:60
	;;
.BB52_3:                                ; %bb2
#0:	       ldm.s	r14, 16         ; readr.c:60
#1:	       or	r14, 0 -> r15   ; readr.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; readr.c:60
#1:	       ldm.s	r15, 8          ; readr.c:60
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; readr.c:60
#0:	       ldm.s	r15, 4          ; readr.c:60
	;;
#3:	       stx	r3.31 -> $ro    ; readr.c:60
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; readr.c:60
	;;
#0:	       stx	r0.31 -> $rb    ; readr.c:60
	;;
.BB52_4:                                ; %bb2
#0:	       ldm.s	r15, 0          ; readr.c:60
#1:	       s2add	r15, 5 -> r15   ; readr.c:60
	;;
#0:	       ret                      ; readr.c:60
#1:	       ldx	$mem, 0 -> r14  ; readr.c:60
	;;                              ; readr.c:60
	       nop	3               ; readr.c:60
	;;
	.align	4
__read_r_end:

	.align	4
___swbuf_r:                             ; @__swbuf_r
	.size	___swbuf_r_end-___swbuf_r
___swbuf_r_start:
; BB#0:                                 ; %bb
#0:	       wb.s	r15, 8
#2:	       ldiu	32 -> r2
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 7
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 6
#1:	       or	r0, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 5
	;;
#0:	       stm.s	r13, r14, 4
	;;
#0:	       ldmg.d	_impure_data+56 ; wbuf.c:45
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:45
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:45
	;;
#0:	if  c1 br	.BB53_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_impure_data -> r0 ; wbuf.c:45
#1:	       callg	___sinit        ; wbuf.c:45
	;;                              ; wbuf.c:45
	       nop	3               ; wbuf.c:45
	;;
.BB53_2:                                ; %bb2
#0:	       ldm.f	r10, 12         ; wbuf.c:56
#1:	       add	r10, 12 -> r12  ; wbuf.c:56
	;;
#0:	       ldx	$memhu, r12 -> r1 ; wbuf.c:56
#1:	       ldm.f	r10, 24         ; wbuf.c:55
	;;
#0:	       btest	r1, 3 -> c1     ; wbuf.c:56
	;;
#0:	if !c1 br	.BB53_4
#1:	       ldx	$mem, 0 -> r0   ; wbuf.c:55
	;;
#0:	       stm.a	r0, r10, 2      ; wbuf.c:55
	;;
	       nop	1
	;;
; BB#3:                                 ; %bb3
#0:	       ldm.f	r10, 16         ; wbuf.c:56
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:56
	;;
#0:	       cmpeq	r0, 0 -> c1     ; wbuf.c:56
	;;
#0:	if !c1 br	.BB53_6
	;;
	       nop	2
	;;
.BB53_4:                                ; %bb4
#0:	       or	r10, 0 -> r0    ; wbuf.c:56
#1:	       callg	___swsetup_r    ; wbuf.c:56
	;;                              ; wbuf.c:56
	       nop	3               ; wbuf.c:56
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:56
#1:	       ldm.f	r10, 12
	;;
#0:	if !c1 br	.BB53_6
#1:	       ldx	$memhu, r12 -> r1
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       ldi	64 -> r11
#1:	       br	.BB53_17
#2:	       ldga	_impure_data -> r0 ; wbuf.c:59
	;;
#0:	       or	r1, r11 -> r1   ; wbuf.c:58
	;;
#0:	       stmh.a	r1, r10, 6      ; wbuf.c:58
	;;
#0:	       stm.a	9, r0, 0        ; wbuf.c:59
#1:	       ldi	-1 -> r0
	;;
.BB53_6:                                ; %bb6
#0:	       btest	r1, 13 -> c1    ; wbuf.c:64
	;;
#0:	if  c1 br	.BB53_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb7
#0:	       ldm.f	r10, 100        ; wbuf.c:64
#1:	       ldiu	2047 -> r0
#2:	       ldga	8192 -> r3
	;;
#0:	       ldim	2043 -> r0
#1:	       or	r1, r3 -> r1    ; wbuf.c:64
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:64
	;;
#0:	       and	r2, r0 -> r0    ; wbuf.c:64
	;;
#0:	       stm.a	r0, r10, 25     ; wbuf.c:64
	;;
#0:	       stmh.a	r1, r10, 6      ; wbuf.c:64
	;;
.BB53_8:                                ; %bb8
#0:	       ldm.f	r10, 0          ; wbuf.c:76
#1:	       mask	r11, 0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:76
#1:	       ldm.f	r10, 16         ; wbuf.c:76
	;;
#0:	       ldx	$mem, 0 -> r1   ; wbuf.c:76
#1:	       ldm.f	r10, 20         ; wbuf.c:77
	;;
#0:	       sub	r0, r1 -> r1    ; wbuf.c:76
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:77
	;;
#0:	       cmple	r2, r1 -> c1    ; wbuf.c:77
	;;
#0:	if  c1 br	.BB53_10        ; wbuf.c:77
	;;                              ; wbuf.c:77
	       nop	2               ; wbuf.c:77
	;;
; BB#9:                                 ; %bb8.bb12_crit_edge
#0:	       add	r1, 1 -> r1
#1:	       br	.BB53_12
	;;
	       nop	2
	;;
.BB53_10:                               ; %bb9
#0:	       ldga	_impure_data -> r0 ; wbuf.c:79
#1:	       callg	__fflush_r      ; wbuf.c:79
#2:	       or	r10, 0 -> r1    ; wbuf.c:79
	;;                              ; wbuf.c:79
	       nop	3               ; wbuf.c:79
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:79
	;;
#0:	if  c1 br	.BB53_19        ; wbuf.c:79
	;;                              ; wbuf.c:79
	       nop	2               ; wbuf.c:79
	;;
; BB#11:                                ; %bb9.bb12_crit_edge
#0:	       ldm.f	r10, 0
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB53_12:                               ; %bb12
#0:	       ldm.f	r10, 8          ; wbuf.c:83
#1:	       add	r0, 1 -> r3     ; wbuf.c:84
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:83
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.a	r2, r10, 2      ; wbuf.c:83
	;;
#0:	       stmb.a	r11, r0, 0      ; wbuf.c:84
	;;
#0:	       ldm.f	r10, 20         ; wbuf.c:85
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:85
#1:	       stm.a	r3, r10, 0      ; wbuf.c:84
	;;
#0:	       cmpeq	r1, r0 -> c1    ; wbuf.c:85
	;;
#0:	if  c1 br	.BB53_15
	;;
	       nop	2
	;;
; BB#13:                                ; %bb13
#0:	       ldm.f	r10, 12         ; wbuf.c:85
	;;
#0:	       ldx	$membu, r12 -> r0 ; wbuf.c:85
	;;
#0:	       btest	r0, 0 -> c1     ; wbuf.c:85
	;;
#0:	if !c1 br	.BB53_16
	;;
	       nop	2
	;;
; BB#14:                                ; %bb13
#0:	       cmpne	r13, 10 -> c1
	;;
#0:	if  c1 br	.BB53_16
	;;
	       nop	2
	;;
.BB53_15:                               ; %bb18
#0:	       ldga	_impure_data -> r0 ; wbuf.c:86
#1:	       callg	__fflush_r      ; wbuf.c:86
#2:	       or	r10, 0 -> r1    ; wbuf.c:86
	;;                              ; wbuf.c:86
	       nop	3               ; wbuf.c:86
	;;
#0:	       br	.BB53_20
#1:	       cmpeq	r0, 0 -> c1     ; wbuf.c:86
#2:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r13, 0 -> r0
	;;
	       nop	1
	;;
.BB53_16:                               ; %bb20
#0:	       or	r13, 0 -> r0    ; wbuf.c:88
	;;
.BB53_17:                               ; %bb20
#0:	       ldm.s	r14, 16         ; wbuf.c:88
#1:	       or	r14, 0 -> r15   ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r13  ; wbuf.c:88
#1:	       ldm.s	r14, 20         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r12  ; wbuf.c:88
#1:	       ldm.s	r14, 24         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r11  ; wbuf.c:88
#1:	       ldm.s	r14, 28         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r10  ; wbuf.c:88
#1:	       ldm.s	r15, 8          ; wbuf.c:88
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; wbuf.c:88
#0:	       ldm.s	r15, 4          ; wbuf.c:88
	;;
#3:	       stx	r3.31 -> $ro    ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; wbuf.c:88
	;;
#0:	       stx	r0.31 -> $rb    ; wbuf.c:88
	;;
.BB53_18:                               ; %bb20
#0:	       ldm.s	r15, 0          ; wbuf.c:88
#1:	       s2add	r15, 8 -> r15   ; wbuf.c:88
	;;
#0:	       ret                      ; wbuf.c:88
#1:	       ldx	$mem, 0 -> r14  ; wbuf.c:88
	;;                              ; wbuf.c:88
	       nop	3               ; wbuf.c:88
	;;
.BB53_19:                               ; %bb21
#0:	       ldi	-1 -> r0
	;;
.BB53_20:                               ; %bb21
#0:	       ldm.s	r14, 16         ; wbuf.c:88
#1:	       or	r14, 0 -> r15   ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r13  ; wbuf.c:88
#1:	       ldm.s	r14, 20         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r12  ; wbuf.c:88
#1:	       ldm.s	r14, 24         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r11  ; wbuf.c:88
#1:	       ldm.s	r14, 28         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r10  ; wbuf.c:88
#1:	       ldm.s	r15, 8          ; wbuf.c:88
	;;
#0:	       br	.BB53_18
#1:	       ldx	$mem, 0 -> r1.31 ; wbuf.c:88
#2:	       ldm.s	r15, 4          ; wbuf.c:88
	;;
#1:	       stx	r1.31 -> $ro    ; wbuf.c:88
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; wbuf.c:88
	;;
#2:	       stx	r2.31 -> $rb    ; wbuf.c:88
	;;
	.align	4
___swbuf_r_end:

	.align	4
__calloc_r:                             ; @_calloc_r
	.size	__calloc_r_end-__calloc_r
__calloc_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5          ; mallocr.c:3192
#2:	       ldiu	20 -> r2        ; mallocr.c:3192
#0:	       ldx	$ro, 0 -> r0.31 ; mallocr.c:3192
	;;
#1:	       sub	r15, r2 -> r15  ; mallocr.c:3192
#0:	       mul	r1, r0 -> $mul0 ; mallocr.c:3192
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mallocr.c:3192
#0:	       ldx	$mul0, 0 -> r0  ; mallocr.c:3192
	;;
#0:	       stm.s	r14, r15, 0     ; mallocr.c:3192
#1:	       or	r15, 0 -> r14   ; mallocr.c:3192
	;;
#3:	       stm.s	r3.31, r15, 1   ; mallocr.c:3192
	;;
#0:	       stm.s	r0.31, r15, 2   ; mallocr.c:3192
	;;
#0:	       stm.s	r10, r14, 4     ; mallocr.c:3192
	;;
#0:	       callg	__malloc_r      ; mallocr.c:3207
	;;                              ; mallocr.c:3207
	       nop	3               ; mallocr.c:3207
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209
	;;
#0:	if  c1 br	.BB54_11        ; mallocr.c:3209
	;;                              ; mallocr.c:3209
	       nop	2               ; mallocr.c:3209
	;;
; BB#1:                                 ; %bb1
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244
	;;
#0:	if  c1 br	.BB54_10        ; mallocr.c:3244
	;;                              ; mallocr.c:3244
	       nop	2               ; mallocr.c:3244
	;;
; BB#2:                                 ; %bb2
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244
	;;
#0:	if  c1 br	.BB54_4         ; mallocr.c:3244
	;;                              ; mallocr.c:3244
	       nop	2               ; mallocr.c:3244
	;;
; BB#3:                                 ; %bb2.bb6_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB54_9
	;;
	       nop	2
	;;
.BB54_4:                                ; %bb3
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244
	;;
#0:	if  c1 br	.BB54_6         ; mallocr.c:3244
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244
	;;                              ; mallocr.c:3244
	       nop	2               ; mallocr.c:3244
	;;
; BB#5:                                 ; %bb3.bb6_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB54_9
	;;
	       nop	2
	;;
.BB54_6:                                ; %bb4
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244
	;;
#0:	if  c1 br	.BB54_8         ; mallocr.c:3244
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244
	;;                              ; mallocr.c:3244
	       nop	2               ; mallocr.c:3244
	;;
; BB#7:                                 ; %bb4.bb6_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB54_9
	;;
	       nop	2
	;;
.BB54_8:                                ; %bb5
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244
	;;
.BB54_9:                                ; %bb6
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244
#1:	       br	.BB54_12
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244
#1:	       or	r10, 0 -> r0    ; mallocr.c:3245
	;;
	       nop	0
	;;
.BB54_10:                               ; %bb7
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244
#1:	       callg	_memset         ; mallocr.c:3244
	;;                              ; mallocr.c:3244
	       nop	3               ; mallocr.c:3244
	;;
#0:	       ldm.s	r14, 16         ; mallocr.c:3245
#1:	       or	r14, 0 -> r15   ; mallocr.c:3245
#2:	       or	r10, 0 -> r0    ; mallocr.c:3245
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:3245
#1:	       ldm.s	r15, 8          ; mallocr.c:3245
	;;
#0:	       br	.BB54_13
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:3245
#1:	       ldm.s	r15, 4          ; mallocr.c:3245
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:3245
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:3245
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:3245
	;;
.BB54_11:                               ; %bb9
#0:	       ldi	0 -> r0
	;;
.BB54_12:                               ; %bb9
#0:	       ldm.s	r14, 16         ; mallocr.c:3245
#1:	       or	r14, 0 -> r15   ; mallocr.c:3245
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:3245
#1:	       ldm.s	r15, 8          ; mallocr.c:3245
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:3245
#0:	       ldm.s	r15, 4          ; mallocr.c:3245
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:3245
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:3245
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:3245
	;;
.BB54_13:                               ; %bb9
#0:	       ldm.s	r15, 0          ; mallocr.c:3245
#1:	       s2add	r15, 5 -> r15   ; mallocr.c:3245
	;;
#0:	       ret                      ; mallocr.c:3245
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:3245
	;;                              ; mallocr.c:3245
	       nop	3               ; mallocr.c:3245
	;;
	.align	4
__calloc_r_end:

	.align	4
__close_r:                              ; @_close_r
	.size	__close_r_end-__close_r
__close_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5
#2:	       ldiu	20 -> r2
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       or	r0, 0 -> r10
#2:	       ldga	_errno.b -> r0
	;;
#0:	       stmb.a	0, r0, 0
#1:	       or	r1, 0 -> r0
	;;
#0:	       callg	__close
	;;
	       nop	3
	;;
#0:	       cmpne	r0, -1 -> c1    ; closer.c:53
	;;
#0:	if  c1 br	.BB55_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_errno.b
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, -1 -> c1    ; closer.c:53
	;;
#0:	if  c1 br	.BB55_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       stx	r1 -> $c1
#1:	       ldi	88 -> r1
#2:	       ldi	0 -> r2
#3:	       or	r14, 0 -> r15   ; closer.c:55
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       stm.a	r2, r10, 0      ; closer.c:54
	;;
#0:	       ldm.s	r14, 16         ; closer.c:55
	;;
#0:	       ldx	$mem, 0 -> r10  ; closer.c:55
#1:	       ldm.s	r15, 8          ; closer.c:55
	;;
#0:	       br	.BB55_4
#1:	       ldx	$mem, 0 -> r1.31 ; closer.c:55
#2:	       ldm.s	r15, 4          ; closer.c:55
	;;
#1:	       stx	r1.31 -> $ro    ; closer.c:55
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; closer.c:55
	;;
#2:	       stx	r2.31 -> $rb    ; closer.c:55
	;;
.BB55_3:                                ; %bb2
#0:	       ldm.s	r14, 16         ; closer.c:55
#1:	       or	r14, 0 -> r15   ; closer.c:55
	;;
#0:	       ldx	$mem, 0 -> r10  ; closer.c:55
#1:	       ldm.s	r15, 8          ; closer.c:55
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; closer.c:55
#0:	       ldm.s	r15, 4          ; closer.c:55
	;;
#3:	       stx	r3.31 -> $ro    ; closer.c:55
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; closer.c:55
	;;
#0:	       stx	r0.31 -> $rb    ; closer.c:55
	;;
.BB55_4:                                ; %bb2
#0:	       ldm.s	r15, 0          ; closer.c:55
#1:	       s2add	r15, 5 -> r15   ; closer.c:55
	;;
#0:	       ret                      ; closer.c:55
#1:	       ldx	$mem, 0 -> r14  ; closer.c:55
	;;                              ; closer.c:55
	       nop	3               ; closer.c:55
	;;
	.align	4
__close_r_end:

	.align	4
__fstat_r:                              ; @_fstat_r
	.size	__fstat_r_end-__fstat_r
__fstat_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 4
#2:	       ldiu	16 -> r2
#1:	       ldx	$rb, 0 -> r1.31
#3:	       ldga	_errno.b -> r1
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stmb.a	0, r1, 0
	;;
#0:	       callg	__fstat
	;;
	       nop	3
	;;
#0:	       cmpne	r0, -1 -> c1    ; fstatr.c:62
	;;
#0:	if  c1 br	.BB56_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_errno.b
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, -1 -> c1    ; fstatr.c:62
	;;
#0:	if  c1 br	.BB56_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       stx	r1 -> $c1
#1:	       ldi	88 -> r1
#2:	       ldi	0 -> r2
#3:	       or	r14, 0 -> r15   ; fstatr.c:64
	;;
#0:	if  c1 or	r1, 0 -> r2
#1:	       ldga	_impure_data -> r1 ; fstatr.c:63
	;;
#0:	       stm.a	r2, r1, 0       ; fstatr.c:63
	;;
#0:	       ldm.s	r15, 8          ; fstatr.c:64
	;;
#0:	       br	.BB56_4
#3:	       ldx	$mem, 0 -> r3.31 ; fstatr.c:64
#1:	       ldm.s	r15, 4          ; fstatr.c:64
	;;
#3:	       stx	r3.31 -> $ro    ; fstatr.c:64
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fstatr.c:64
	;;
#0:	       stx	r0.31 -> $rb    ; fstatr.c:64
	;;
.BB56_3:                                ; %bb2
#0:	       or	r14, 0 -> r15   ; fstatr.c:64
	;;
#0:	       ldm.s	r15, 8          ; fstatr.c:64
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fstatr.c:64
#0:	       ldm.s	r15, 4          ; fstatr.c:64
	;;
#1:	       stx	r1.31 -> $ro    ; fstatr.c:64
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fstatr.c:64
	;;
#2:	       stx	r2.31 -> $rb    ; fstatr.c:64
	;;
.BB56_4:                                ; %bb2
#0:	       ldm.s	r15, 0          ; fstatr.c:64
#1:	       s2add	r15, 4 -> r15   ; fstatr.c:64
	;;
#0:	       ret                      ; fstatr.c:64
#1:	       ldx	$mem, 0 -> r14  ; fstatr.c:64
	;;                              ; fstatr.c:64
	       nop	3               ; fstatr.c:64
	;;
	.align	4
__fstat_r_end:

	.align	4
__lseek_r:                              ; @_lseek_r
	.size	__lseek_r_end-__lseek_r
__lseek_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5
#2:	       ldiu	20 -> r4
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       or	r0, 0 -> r10
#2:	       ldga	_errno.b -> r0
	;;
#0:	       stmb.a	0, r0, 0
#1:	       or	r1, 0 -> r0
#2:	       or	r2, 0 -> r1
#3:	       or	r3, 0 -> r2
	;;
#0:	       callg	__lseek
	;;
	       nop	3
	;;
#0:	       cmpne	r0, -1 -> c1    ; lseekr.c:58
	;;
#0:	if  c1 br	.BB57_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_errno.b
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, -1 -> c1    ; lseekr.c:58
	;;
#0:	if  c1 br	.BB57_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       stx	r1 -> $c1
#1:	       ldi	88 -> r1
#2:	       ldi	0 -> r2
#3:	       or	r14, 0 -> r15   ; lseekr.c:60
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       stm.a	r2, r10, 0      ; lseekr.c:59
	;;
#0:	       ldm.s	r14, 16         ; lseekr.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; lseekr.c:60
#1:	       ldm.s	r15, 8          ; lseekr.c:60
	;;
#0:	       br	.BB57_4
#1:	       ldx	$mem, 0 -> r1.31 ; lseekr.c:60
#2:	       ldm.s	r15, 4          ; lseekr.c:60
	;;
#1:	       stx	r1.31 -> $ro    ; lseekr.c:60
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; lseekr.c:60
	;;
#2:	       stx	r2.31 -> $rb    ; lseekr.c:60
	;;
.BB57_3:                                ; %bb2
#0:	       ldm.s	r14, 16         ; lseekr.c:60
#1:	       or	r14, 0 -> r15   ; lseekr.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; lseekr.c:60
#1:	       ldm.s	r15, 8          ; lseekr.c:60
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; lseekr.c:60
#0:	       ldm.s	r15, 4          ; lseekr.c:60
	;;
#3:	       stx	r3.31 -> $ro    ; lseekr.c:60
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; lseekr.c:60
	;;
#0:	       stx	r0.31 -> $rb    ; lseekr.c:60
	;;
.BB57_4:                                ; %bb2
#0:	       ldm.s	r15, 0          ; lseekr.c:60
#1:	       s2add	r15, 5 -> r15   ; lseekr.c:60
	;;
#0:	       ret                      ; lseekr.c:60
#1:	       ldx	$mem, 0 -> r14  ; lseekr.c:60
	;;                              ; lseekr.c:60
	       nop	3               ; lseekr.c:60
	;;
	.align	4
__lseek_r_end:

	.align	4
__wcrtomb_r:                            ; @_wcrtomb_r
	.size	__wcrtomb_r_end-__wcrtomb_r
__wcrtomb_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 8
#1:	       ldiu	32 -> r3
#2:	       cmpne	r0, 0 -> c1     ; wcrtomb.c:27
	;;
#0:	       sub	r15, r3 -> r15
#1:	       ldx	$rb, 0 -> r1.31
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	if  c1 br	.BB58_2         ; wcrtomb.c:27
#1:	       stm.s	r14, r15, 0
#2:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 7
#1:	       or	r2, 0 -> r10
	;;
; BB#1:                                 ; %bb
#0:	       ldga	_impure_data -> r0 ; wcrtomb.c:28
#1:	       br	.BB58_3
#2:	       add	r14, 16 -> r1
#3:	       ldi	0 -> r2
	;;
	       nop	2
	;;
.BB58_2:                                ; %bb3
#0:	       or	r0, 0 -> r3
#1:	       or	r1, 0 -> r2
#2:	       ldga	_impure_data -> r0 ; wcrtomb.c:30
	;;
#0:	       or	r3, 0 -> r1     ; wcrtomb.c:30
	;;
.BB58_3:                                ; %bb3
#0:	       callg	___ascii_wctomb ; wcrtomb.c:30
	;;                              ; wcrtomb.c:30
	       nop	3               ; wcrtomb.c:30
	;;
#0:	       cmpne	r0, -1 -> c1    ; wcrtomb.c:32
	;;
#0:	if  c1 br	.BB58_5         ; wcrtomb.c:32
	;;                              ; wcrtomb.c:32
	       nop	2               ; wcrtomb.c:32
	;;
; BB#4:                                 ; %bb5
#0:	       stm.a	0, r10, 0       ; wcrtomb.c:34
#1:	       ldi	138 -> r0
#2:	       ldga	_impure_data -> r1 ; wcrtomb.c:35
#3:	       or	r14, 0 -> r15   ; wcrtomb.c:39
	;;
#0:	       stm.a	r0, r1, 0       ; wcrtomb.c:35
#1:	       ldi	-1 -> r0
	;;
#0:	       ldm.s	r14, 28         ; wcrtomb.c:39
	;;
#0:	       ldx	$mem, 0 -> r10  ; wcrtomb.c:39
#1:	       ldm.s	r15, 8          ; wcrtomb.c:39
	;;
#0:	       br	.BB58_6
#3:	       ldx	$mem, 0 -> r3.31 ; wcrtomb.c:39
#1:	       ldm.s	r15, 4          ; wcrtomb.c:39
	;;
#3:	       stx	r3.31 -> $ro    ; wcrtomb.c:39
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; wcrtomb.c:39
	;;
#0:	       stx	r0.31 -> $rb    ; wcrtomb.c:39
	;;
.BB58_5:                                ; %bb7
#0:	       ldm.s	r14, 28         ; wcrtomb.c:39
#1:	       or	r14, 0 -> r15   ; wcrtomb.c:39
	;;
#0:	       ldx	$mem, 0 -> r10  ; wcrtomb.c:39
#1:	       ldm.s	r15, 8          ; wcrtomb.c:39
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; wcrtomb.c:39
#0:	       ldm.s	r15, 4          ; wcrtomb.c:39
	;;
#1:	       stx	r1.31 -> $ro    ; wcrtomb.c:39
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; wcrtomb.c:39
	;;
#2:	       stx	r2.31 -> $rb    ; wcrtomb.c:39
	;;
.BB58_6:                                ; %bb7
#0:	       ldm.s	r15, 0          ; wcrtomb.c:39
#1:	       s2add	r15, 8 -> r15   ; wcrtomb.c:39
	;;
#0:	       ret                      ; wcrtomb.c:39
#1:	       ldx	$mem, 0 -> r14  ; wcrtomb.c:39
	;;                              ; wcrtomb.c:39
	       nop	3               ; wcrtomb.c:39
	;;
	.align	4
__wcrtomb_r_end:

	.align	4
__write_r:                              ; @_write_r
	.size	__write_r_end-__write_r
__write_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5
#2:	       ldiu	20 -> r4
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       or	r0, 0 -> r10
#2:	       ldga	_errno.b -> r0
	;;
#0:	       stmb.a	0, r0, 0
#1:	       or	r1, 0 -> r0
#2:	       or	r2, 0 -> r1
#3:	       or	r3, 0 -> r2
	;;
#0:	       callg	__write
	;;
	       nop	3
	;;
#0:	       cmpne	r0, -1 -> c1    ; writer.c:58
	;;
#0:	if  c1 br	.BB59_3
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_errno.b
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, -1 -> c1    ; writer.c:58
	;;
#0:	if  c1 br	.BB59_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       stx	r1 -> $c1
#1:	       ldi	88 -> r1
#2:	       ldi	0 -> r2
#3:	       or	r14, 0 -> r15   ; writer.c:60
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       stm.a	r2, r10, 0      ; writer.c:59
	;;
#0:	       ldm.s	r14, 16         ; writer.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; writer.c:60
#1:	       ldm.s	r15, 8          ; writer.c:60
	;;
#0:	       br	.BB59_4
#1:	       ldx	$mem, 0 -> r1.31 ; writer.c:60
#2:	       ldm.s	r15, 4          ; writer.c:60
	;;
#1:	       stx	r1.31 -> $ro    ; writer.c:60
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; writer.c:60
	;;
#2:	       stx	r2.31 -> $rb    ; writer.c:60
	;;
.BB59_3:                                ; %bb2
#0:	       ldm.s	r14, 16         ; writer.c:60
#1:	       or	r14, 0 -> r15   ; writer.c:60
	;;
#0:	       ldx	$mem, 0 -> r10  ; writer.c:60
#1:	       ldm.s	r15, 8          ; writer.c:60
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; writer.c:60
#0:	       ldm.s	r15, 4          ; writer.c:60
	;;
#3:	       stx	r3.31 -> $ro    ; writer.c:60
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; writer.c:60
	;;
#0:	       stx	r0.31 -> $rb    ; writer.c:60
	;;
.BB59_4:                                ; %bb2
#0:	       ldm.s	r15, 0          ; writer.c:60
#1:	       s2add	r15, 5 -> r15   ; writer.c:60
	;;
#0:	       ret                      ; writer.c:60
#1:	       ldx	$mem, 0 -> r14  ; writer.c:60
	;;                              ; writer.c:60
	       nop	3               ; writer.c:60
	;;
	.align	4
__write_r_end:

	.align	4
___ascii_wctomb:                        ; @__ascii_wctomb
	.size	___ascii_wctomb_end-___ascii_wctomb
___ascii_wctomb_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1     ; wctomb_r.c:41
#1:	       ldiu	4 -> r3         ; wctomb_r.c:41
#2:	       wb.s	r15, 1          ; wctomb_r.c:41
	;;
#0:	if  c1 ret                      ; wctomb_r.c:55
#1:	       sub	r15, r3 -> r15  ; wctomb_r.c:41
#2:	if  c1 ldi	0 -> r0
	;;
#0:	if  c1 s2add	r15, 1 -> r15   ; wctomb_r.c:55
	;;                              ; wctomb_r.c:55
	       nop	2               ; wctomb_r.c:55
	;;
; BB#1:                                 ; %bb1
#0:	       ldi	256 -> r3
#1:	       ret                      ; wctomb_r.c:55
#2:	       s2add	r15, 1 -> r15   ; wctomb_r.c:55
	;;
#0:	       cmpult	r2, r3 -> c1    ; wctomb_r.c:47
	;;
#0:	if  c1 stmb.a	r2, r1, 0       ; wctomb_r.c:54
#1:	if  c1 ldi	1 -> r0
#2:	if !c1 ldi	138 -> r1
	;;
#0:	if !c1 stm.a	r1, r0, 0       ; wctomb_r.c:50
#1:	if !c1 ldi	-1 -> r0
	;;                              ; wctomb_r.c:55
	       nop	0               ; wctomb_r.c:55
	;;
.BB60_2:                                ; %bb4
#0:	       ldi	0 -> r0
#1:	       ret                      ; wctomb_r.c:55
#2:	       s2add	r15, 1 -> r15   ; wctomb_r.c:55
	;;                              ; wctomb_r.c:55
	       nop	3               ; wctomb_r.c:55
	;;
	.align	4
___ascii_wctomb_end:

	.align	4
__close:                                ; @_close
	.size	__close_end-__close
__close_start:
; BB#0:                                 ; %entry
#0:	       cmpult	r0, 3 -> c1
#1:	       ldiu	4 -> r1
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 ret                      ; close.c:22
#1:	       sub	r15, r1 -> r15
#2:	if  c1 ldi	0 -> r0
	;;
#0:	if  c1 s2add	r15, 1 -> r15   ; close.c:22
	;;                              ; close.c:22
	       nop	2               ; close.c:22
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_errno.b -> r0
#1:	       ret                      ; close.c:22
#2:	       s2add	r15, 1 -> r15   ; close.c:22
	;;
#0:	       stmb.a	1, r0, 0
#1:	       ldi	-1 -> r0
	;;                              ; close.c:22
	       nop	2               ; close.c:22
	;;
.BB61_2:                                ; %bb2
	.align	4
__close_end:

	.align	4
__write:                                ; @_write
	.size	__write_end-__write
__write_start:
; BB#0:                                 ; %entry
#0:	       ldi	1 -> r3
#1:	       sub	r0, 1 -> r0
#2:	       ldiu	4 -> r4
#3:	       wb.s	r15, 1
	;;
#0:	       cmpult	r3, r0 -> c1    ; write.c:17
#1:	       sub	r15, r4 -> r15
	;;
#0:	if  c1 br	.BB62_6         ; write.c:17
	;;                              ; write.c:17
	       nop	2               ; write.c:17
	;;
; BB#1:                                 ; %bb3.preheader
#0:	       cmplt	r2, 1 -> c1     ; write.c:20
	;;
#0:	if  c1 ret                      ; write.c:33
#1:	if  c1 or	r2, 0 -> r0     ; write.c:33
#2:	if  c1 s2add	r15, 1 -> r15   ; write.c:33
	;;                              ; write.c:33
	       nop	3               ; write.c:33
	;;
; BB#2:                                 ; %bb3.preheader.bb1.preheader_crit_edge
#0:	       ldi	-8 -> r0
#1:	       ldi	-4 -> r3
#2:	       or	r2, 0 -> r4
	;;
.BB62_3:                                ; %bb1
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.b	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r5
	;;
#0:	       btest	r5, 0 -> c1     ; write.c:22
	;;
#0:	if !c1 br	.BB62_3         ; write.c:22
	;;                              ; write.c:22
	       nop	2               ; write.c:22
	;;
; BB#4:                                 ; %bb2
                                        ;   in Loop: Header=BB62_3 Depth=1
#0:	       sub	r4, 1 -> r4
#1:	       ldm.f	r1, 0           ; write.c:26
	;;
#0:	       cmpeq	r4, 0 -> c1
	;;
#0:	if !c1 br	.BB62_3
#1:	       ldx	$membu, r1 -> r5 ; write.c:26
#2:	       add	r1, 1 -> r1
	;;
#0:	       stmb.a	r5, r3, 0       ; write.c:26
	;;
	       nop	1
	;;
.BB62_5:                                ; %bb6
#0:	       or	r2, 0 -> r0     ; write.c:33
#1:	       ret                      ; write.c:33
#2:	       s2add	r15, 1 -> r15   ; write.c:33
	;;                              ; write.c:33
	       nop	3               ; write.c:33
	;;
.BB62_6:                                ; %bb5
#0:	       ldga	_errno.b -> r0
#1:	       ret                      ; write.c:33
#2:	       s2add	r15, 1 -> r15   ; write.c:33
	;;
#0:	       stmb.a	1, r0, 0
#1:	       ldi	-1 -> r0
	;;                              ; write.c:33
	       nop	2               ; write.c:33
	;;
	.align	4
__write_end:

	.align	4
__read:                                 ; @_read
	.size	__read_end-__read
__read_start:
; BB#0:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1     ; read.c:17
#1:	       ldiu	4 -> r3         ; read.c:17
#2:	       wb.s	r15, 1          ; read.c:17
	;;
#0:	if  c1 br	.BB63_7         ; read.c:17
#1:	       sub	r15, r3 -> r15  ; read.c:17
	;;                              ; read.c:17
	       nop	2               ; read.c:17
	;;
; BB#1:                                 ; %bb3.preheader
#0:	       cmplt	r2, 1 -> c1     ; read.c:20
	;;
#0:	if  c1 ret                      ; read.c:33
#1:	if  c1 or	r2, 0 -> r0     ; read.c:33
#2:	if  c1 s2add	r15, 1 -> r15   ; read.c:33
	;;                              ; read.c:33
	       nop	3               ; read.c:33
	;;
; BB#2:                                 ; %bb3.preheader.bb1.preheader_crit_edge
#0:	       ldi	-8 -> r0
#1:	       ldi	-4 -> r3
#2:	       or	r2, 0 -> r4
	;;
.BB63_3:                                ; %bb3.preheader.bb1.preheader_crit_edge
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB63_4 Depth 2
#0:	       or	r1, 0 -> r5
	;;
.BB63_4:                                ; %bb1
                                        ;   Parent Loop BB63_3 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.b	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r1
	;;
#0:	       btest	r1, 1 -> c1     ; read.c:22
	;;
#0:	if !c1 br	.BB63_4         ; read.c:22
	;;                              ; read.c:22
	       nop	2               ; read.c:22
	;;
; BB#5:                                 ; %bb2
                                        ;   in Loop: Header=BB63_3 Depth=1
#0:	       sub	r4, 1 -> r4
#1:	       ldm.b	r3, 0           ; read.c:26
#2:	       add	r5, 1 -> r1
	;;
#0:	       cmpeq	r4, 0 -> c1
	;;
#0:	if !c1 br	.BB63_3
#1:	       ldx	$membu, r3 -> r6 ; read.c:26
	;;
#0:	       stmb.a	r6, r5, 0       ; read.c:26
	;;
	       nop	1
	;;
.BB63_6:                                ; %bb6
#0:	       or	r2, 0 -> r0     ; read.c:33
#1:	       ret                      ; read.c:33
#2:	       s2add	r15, 1 -> r15   ; read.c:33
	;;                              ; read.c:33
	       nop	3               ; read.c:33
	;;
.BB63_7:                                ; %bb5
#0:	       ldga	_errno.b -> r0
#1:	       ret                      ; read.c:33
#2:	       s2add	r15, 1 -> r15   ; read.c:33
	;;
#0:	       stmb.a	1, r0, 0
#1:	       ldi	-1 -> r0
	;;                              ; read.c:33
	       nop	2               ; read.c:33
	;;
	.align	4
__read_end:

	.align	4
__lseek:                                ; @_lseek
	.size	__lseek_end-__lseek
__lseek_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1
#1:	       ldiu	4 -> r1
#2:	       ldga	_errno.b -> r0
	;;
#0:	       ret                      ; lseek.c:20
#1:	       sub	r15, r1 -> r15
	;;
#0:	       s2add	r15, 1 -> r15   ; lseek.c:20
	;;
#0:	       stmb.a	1, r0, 0
#1:	       ldi	-1 -> r0
	;;                              ; lseek.c:20
	       nop	1               ; lseek.c:20
	;;
	.align	4
__lseek_end:

	.align	4
__sbrk:                                 ; @_sbrk
	.size	__sbrk_end-__sbrk
__sbrk_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1          ; sbrk.c:14
#1:	       ldiu	4 -> r2         ; sbrk.c:14
	;;
#0:	       sub	r15, r2 -> r15  ; sbrk.c:14
	;;
#0:	       ldmg.d	_heap_end.1081  ; sbrk.c:14
	;;
#0:	       ldx	$mem, 0 -> r1   ; sbrk.c:14
	;;
#0:	       cmpeq	r1, 0 -> c1     ; sbrk.c:14
	;;
#0:	if !c1 br	.BB65_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldga	_end -> r1      ; sbrk.c:15
#1:	       ldga	_heap_end.1081 -> r2 ; sbrk.c:15
	;;
#0:	       stm.a	r1, r2, 0       ; sbrk.c:15
	;;
.BB65_2:                                ; %bb1
#0:	       add	r1, r0 -> r0    ; sbrk.c:18
#1:	       ret                      ; sbrk.c:20
#2:	       ldga	_heap_end.1081 -> r2 ; sbrk.c:18
#3:	       s2add	r15, 1 -> r15   ; sbrk.c:20
	;;
#0:	       stm.a	r0, r2, 0       ; sbrk.c:18
#1:	       or	r1, 0 -> r0     ; sbrk.c:20
	;;                              ; sbrk.c:20
	       nop	2               ; sbrk.c:20
	;;
	.align	4
__sbrk_end:

	.align	4
__fstat:                                ; @_fstat
	.size	__fstat_end-__fstat
__fstat_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1
#1:	       ldiu	4 -> r1
#2:	       ldga	_errno.b -> r0
	;;
#0:	       ret                      ; fstat.c:21
#1:	       sub	r15, r1 -> r15
	;;
#0:	       s2add	r15, 1 -> r15   ; fstat.c:21
	;;
#0:	       stmb.a	1, r0, 0
#1:	       ldi	-1 -> r0
	;;                              ; fstat.c:21
	       nop	1               ; fstat.c:21
	;;
	.align	4
__fstat_end:

	.globl	___ashldi3
	.align	4
___ashldi3:                             ; @__ashldi3
	.size	___ashldi3_end-___ashldi3
___ashldi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r4
#2:	       wb.s	r15, 1
#3:	       or	r0, 0 -> r3
	;;
#0:	if  c1 br	.BB67_2
#1:	       sub	r15, r4 -> r15
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       ret
#1:	if  c1 or	r3, 0 -> r0
#2:	if !c1 sl	r1, r2 -> r1
	;;
#0:	if !c1 ldi	32 -> r0
	;;
#0:	if !c1 sub	r0, r2 -> r4
#1:	if !c1 sl	r3, r2 -> r0
	;;
#0:	if !c1 sr	r3, r4 -> r3
	;;
#0:	if !c1 or	r1, r3 -> r1
	;;
.BB67_2:                                ; %bb
#0:	       ldi	-32 -> r1
#1:	       ret
#2:	       ldi	0 -> r0
#3:	       s2add	r15, 1 -> r15
	;;
#0:	       add	r2, r1 -> r1
	;;
#0:	       sl	r3, r1 -> r1
	;;
	       nop	1
	;;
	.align	4
___ashldi3_end:

	.globl	___ashrdi3
	.align	4
___ashrdi3:                             ; @__ashrdi3
	.size	___ashrdi3_end-___ashrdi3
___ashrdi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r3
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 ret
#1:	if  c1 ldi	-32 -> r0
#2:	       sub	r15, r3 -> r15
	;;
#0:	if  c1 add	r2, r0 -> r0
#1:	if  c1 s2add	r15, 1 -> r15
	;;
#0:	if  c1 sra	r1, r0 -> r0
#1:	if  c1 sra	r1, 31 -> r1
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	if !c1 ldi	32 -> r3
#1:	if !c1 sr	r0, r2 -> r0
	;;
#0:	if !c1 sub	r3, r2 -> r3
	;;
#0:	if !c1 sl	r1, r3 -> r3
#1:	if !c1 sra	r1, r2 -> r1
	;;
#0:	if !c1 or	r3, r0 -> r0
	;;
.BB68_2:                                ; %bb
	.align	4
___ashrdi3_end:

	.globl	___divdf3
	.align	4
___divdf3:                              ; @__divdf3
	.size	___divdf3_end-___divdf3
___divdf3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 44
#2:	       ldiu	176 -> r5
#1:	       ldx	$rb, 0 -> r1.31
#3:	       stx	r0 -> $f0
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       ldiu	128 -> r5
#3:	       fop	fmov	f0 -> f4
	;;
#0:	       fop	fmov	f4 -> f0
#1:	       ldga	0 -> r1.16
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       stx	r2 -> $f2
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, r5 -> r5
#2:	       ldx	$f0 -> r0
	;;
#2:	       stm.s	r2.31, r15, 2
#0:	       stx	r1 -> $f1
#1:	       ldih	1024 -> r1.16
	;;
#0:	       stm.s	r10, r5, 11
#1:	       fop	fmov	f2 -> f6
	;;
#0:	       stm.s	r11, r5, 10
#1:	       fop	fmov	f1 -> f5
	;;
#0:	       stm.s	r12, r5, 9
#1:	       fop	fmov	f6 -> f1
	;;
#0:	       stm.s	r13, r5, 8
#1:	       stx	r3 -> $f3
	;;
#0:	       stm.s	r0.23, r5, 7
#1:	       fop	fmov	f3 -> f7
	;;
#1:	       stm.s	r1.23, r5, 6
	;;
#2:	       stm.s	r2.23, r5, 5
	;;
#3:	       stm.s	r3.23, r5, 4
	;;
#1:	       stm.s	r1.24, r5, 3
	;;
#1:	       stm.s	r1.25, r5, 2
	;;
#1:	       stm.s	r1.26, r5, 1
#0:	       s2add	r14, 24 -> r5
	;;
#0:	       add	r5, 28 -> r4
#1:	       add	r5, 20 -> r1
#2:	       ldiu	2047 -> r5
	;;
#0:	       stm.a	r0, r4, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       stm.a	r0, r1, 0
#1:	       ldx	$f5 -> r0
	;;
#0:	       stm.a	r0, r4, 1
#1:	       ldx	$f7 -> r0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       ldm.f	r4, 4
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 9
	;;
#0:	       ldm.f	r1, 4
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stm.s	r3, r14, 8
#1:	       sr	r3, 20 -> r6
#2:	       xor	r3, r2 -> r7
	;;
#0:	       ldm.f	r4, 0
#1:	       ldiu	2047 -> r4
	;;
#0:	       ldim	511 -> r4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r1, 0
#2:	       sr	r2, 20 -> r1
#3:	       and	r3, r4 -> r11
	;;
#0:	       and	r1, r5 -> r8
#1:	       and	r6, r5 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       stm.s	r8, r14, 5
#2:	       sub	r8, 1 -> r3
	;;
#0:	       stm.s	r1, r14, 6
#1:	       and	r7, r1.16 -> r1
	;;
#0:	       stm.s	r1, r14, 10
#1:	       and	r2, r4 -> r1
#2:	       ldiu	2045 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if !c1 ldm.s	r14, 24
	;;
#0:	if !c1 ldx	$mem, 0 -> r3
	;;
#0:	if !c1 sub	r3, 1 -> r3
	;;
#0:	if !c1 cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB69_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.bb21_crit_edge
#0:	       ldi	0 -> r5
#1:	       br	.BB69_32
	;;
#0:	       stm.s	r5, r14, 9
	;;
	       nop	1
	;;
.BB69_2:                                ; %bb1
#0:	       ldm.s	r14, 36
#1:	       ldim	1023 -> r5
#2:	       ldga	1048576 -> r3
#3:	       cmpeq	r0, 0 -> c2
	;;
#0:	       ldih	1023 -> r5
#1:	       ldih	1023 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       cmpeq	r2, r3 -> c1
#1:	       cmpult	r2, r3 -> c3
	;;
#0:	if  c1 comb	and c2, c2 -> c3
	;;
#0:	if  c3 br	.BB69_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.s	r14, 36
#1:	       s2add	r14, 24 -> r1
#2:	       ldga	524288 -> r2
	;;
#0:	       add	r1, 12 -> r3
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       stm.a	r0, r3, 0
	;;
#0:	       or	r5, r2 -> r2
	;;
#0:	       stm.a	r2, r3, 1
	;;
#0:	       ldm.f	r3, 0
	;;
#0:	       br	.BB69_12
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r3, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stx	r3 -> $f2
	;;
.BB69_4:                                ; %bb3
#0:	       ldm.s	r14, 32
#1:	       cmpeq	r10, 0 -> c2
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       and	r4, r5 -> r12
	;;
#0:	       cmpeq	r12, r3 -> c1
#1:	       cmpult	r12, r3 -> c3
	;;
#0:	if  c1 comb	and c2, c2 -> c3
	;;
#0:	if  c3 br	.BB69_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       s2add	r14, 24 -> r0
#1:	       ldga	524288 -> r2
#2:	       or	r4, 0 -> r12
	;;
#0:	       add	r0, 4 -> r11
#1:	       or	r12, r2 -> r2
	;;
#0:	       stm.a	r10, r11, 0
	;;
#0:	       stm.a	r2, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       br	.BB69_38
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r11, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stx	r10 -> $f2
	;;
.BB69_6:                                ; %bb5
#0:	       ldga	1048576 -> r3
	;;
#0:	       ldih	1023 -> r3
	;;
#0:	       xor	r2, r3 -> r4
	;;
#0:	       or	r0, r4 -> r4
	;;
#0:	       cmpne	r4, 0 -> c1
	;;
#0:	if  c1 br	.BB69_10
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb6
#0:	       xor	r12, r3 -> r3
	;;
#0:	       or	r10, r3 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB69_9
	;;
	       nop	2
	;;
.BB69_8:                                ; %bb7
#0:	       ldiu	0 -> r2
#1:	       ldiu	0 -> r3
	;;
#0:	       br	.BB69_13
#1:	       ldim	0 -> r3
#2:	       ldim	768 -> r2
	;;
#0:	       ldih	0 -> r3
#1:	       ldih	1023 -> r2
	;;
#0:	       stx	r3 -> $f0
	;;
#0:	       stx	r2 -> $f2
	;;
.BB69_9:                                ; %bb8
#0:	       ldi	0 -> r10
#1:	       ldm.s	r14, 40
#2:	       s2add	r14, 16 -> r1
	;;
#0:	       add	r1, 28 -> r3
#1:	       or	r10, r0 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       stm.a	r10, r3, 0
	;;
#0:	       or	r11, r2 -> r2
	;;
#0:	       stm.a	r2, r3, 1
	;;
#0:	       ldm.f	r3, 0
	;;
#0:	       br	.BB69_38
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r3, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stx	r3 -> $f2
	;;
.BB69_10:                               ; %bb9
#0:	       xor	r12, r3 -> r3
	;;
#0:	       or	r10, r3 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB69_15
	;;
	       nop	2
	;;
; BB#11:                                ; %bb10
#0:	       s2add	r14, 16 -> r0
#1:	       ldi	0 -> r10
	;;
#0:	       add	r0, 20 -> r2
	;;
#0:	       stm.a	r10, r2, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r2, 4
	;;
#0:	       stx	r10 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stx	r2 -> $f2
	;;
.BB69_12:                               ; %bb10
.BB69_13:                               ; %bb10
#0:	       ldm.s	r14, 132
#1:	       or	r14, 0 -> r15
#2:	       fop	fmov	f2 -> f1
	;;
#1:	       ldx	$mem, 0 -> r1.26
#0:	       ldm.s	r14, 136
	;;
#1:	       ldx	$mem, 0 -> r1.25
#0:	       ldm.s	r14, 140
	;;
#1:	       ldx	$mem, 0 -> r1.24
#0:	       ldm.s	r14, 144
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 148
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 152
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 156
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 160
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 164
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 168
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 172
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB69_14:                               ; %bb10
#0:	       ldm.s	r15, 0
#1:	       ldiu	176 -> r0
	;;
#0:	       add	r15, r0 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB69_15:                               ; %bb11
#0:	       or	r0, r2 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB69_18
	;;
	       nop	2
	;;
; BB#16:                                ; %bb12
#0:	       or	r10, r12 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB69_8
	;;
	       nop	2
	;;
; BB#17:                                ; %bb14
#0:	       s2add	r14, 16 -> r0
#1:	       ldi	0 -> r10
	;;
#0:	       add	r0, 12 -> r2
	;;
#0:	       stm.a	r10, r2, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       br	.BB69_38
#1:	       ldx	$mem, 0 -> r10
#2:	       ldm.f	r2, 4
	;;
#0:	       stx	r10 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stx	r2 -> $f2
	;;
.BB69_18:                               ; %bb15
#0:	       or	r10, r12 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB69_20
	;;
	       nop	2
	;;
; BB#19:                                ; %bb16
#0:	       ldm.s	r14, 40
#1:	       ldga	1048576 -> r2
#2:	       s2add	r14, 16 -> r0
	;;
#0:	       ldih	1023 -> r2
#1:	       add	r0, 4 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r11, r2 -> r2
#1:	       ldi	0 -> r11
	;;
#0:	       stm.a	r11, r10, 0
	;;
#0:	       stm.a	r2, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       br	.BB69_12
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r10, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stx	r10 -> $f2
	;;
.BB69_20:                               ; %bb17
#0:	       ldiu	0 -> r3
	;;
#0:	       ldim	512 -> r3
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB69_22
	;;
	       nop	2
	;;
; BB#21:                                ; %bb17.bb19_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB69_26
	;;
#0:	       stm.s	r2, r14, 9
	;;
	       nop	1
	;;
.BB69_22:                               ; %bb18
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB69_24
	;;
	       nop	2
	;;
; BB#23:                                ; %bb.i.i31
#0:	       sr	r1, 1 -> r3
#1:	       ldiu	1365 -> r2
#2:	       ldiu	819 -> r5
	;;
#0:	       or	r1, r3 -> r3
#1:	       ldim	682 -> r2
#2:	       ldim	614 -> r5
	;;
#0:	       sr	r3, 2 -> r4
#1:	       ldih	682 -> r2
#2:	       ldih	409 -> r5
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 4 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 8 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 16 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       xor	r3, -1 -> r3
	;;
#0:	       sr	r3, 1 -> r4
#1:	       and	r3, r2 -> r3
	;;
#0:	       and	r4, r2 -> r2
#1:	       ldiu	1807 -> r4
	;;
#0:	       add	r3, r2 -> r2
#1:	       ldim	481 -> r4
	;;
#0:	       sr	r2, 2 -> r3
#1:	       and	r2, r5 -> r2
#2:	       ldih	120 -> r4
	;;
#0:	       and	r3, r5 -> r3
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r2, 4 -> r3
#1:	       and	r2, r4 -> r2
#2:	       ldih	7 -> r5
	;;
#0:	       and	r3, r4 -> r3
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       sr	r2, 8 -> r3
#1:	       and	r2, r5 -> r2
	;;
#0:	       br	.BB69_25
#1:	       and	r3, r5 -> r3
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       mask	r2, 4 -> r3
#1:	       sr	r2, 16 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
.BB69_24:                               ; %bb1.i.i32
#0:	       sr	r0, 1 -> r3
#1:	       ldiu	819 -> r5
	;;
#0:	       or	r0, r3 -> r3
#1:	       ldim	614 -> r5
	;;
#0:	       sr	r3, 2 -> r2
#1:	       ldih	409 -> r5
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 4 -> r2
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 8 -> r2
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 16 -> r2
	;;
#0:	       or	r3, r2 -> r3
#1:	       ldiu	1365 -> r2
	;;
#0:	       ldim	682 -> r2
#1:	       xor	r3, -1 -> r3
	;;
#0:	       ldih	682 -> r2
#1:	       sr	r3, 1 -> r4
	;;
#0:	       and	r3, r2 -> r3
#1:	       and	r4, r2 -> r2
#2:	       ldiu	1807 -> r4
	;;
#0:	       add	r3, r2 -> r3
#1:	       ldim	481 -> r4
	;;
#0:	       sr	r3, 2 -> r2
#1:	       and	r3, r5 -> r3
#2:	       ldih	120 -> r4
	;;
#0:	       and	r2, r5 -> r2
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r3, r2 -> r3
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r3, 4 -> r2
#1:	       and	r3, r4 -> r3
#2:	       ldih	7 -> r5
	;;
#0:	       and	r2, r4 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       sr	r3, 8 -> r2
#1:	       and	r3, r5 -> r3
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       mask	r3, 4 -> r2
#1:	       sr	r3, 16 -> r3
	;;
#0:	       add	r2, r3 -> r3
	;;
#0:	       s2add	r3, 8 -> r3
	;;
.BB69_25:                               ; %normalize.exit34
#0:	       ldi	12 -> r4
#1:	       callg	___ashldi3
#2:	       sub	r3, 11 -> r2
	;;
#0:	       sub	r4, r3 -> r3
	;;
#0:	       stm.s	r3, r14, 9
	;;
	       nop	1
	;;
.BB69_26:                               ; %bb19
#0:	       or	r0, 0 -> r13
#2:	       ldiu	0 -> r0
#1:	       or	r1, 0 -> r1.23
	;;
#0:	       ldim	512 -> r0
	;;
#0:	       cmpult	r12, r0 -> c1
	;;
#0:	if !c1 br	.BB69_31
	;;
	       nop	2
	;;
; BB#27:                                ; %bb20
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB69_29
	;;
	       nop	2
	;;
; BB#28:                                ; %bb.i.i
#0:	       sr	r11, 1 -> r1
#1:	       ldiu	1365 -> r0
#2:	       ldiu	819 -> r3
	;;
#0:	       or	r11, r1 -> r1
#1:	       ldim	682 -> r0
#2:	       ldim	614 -> r3
	;;
#0:	       sr	r1, 2 -> r2
#1:	       ldih	682 -> r0
#2:	       ldih	409 -> r3
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 4 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 8 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 16 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       xor	r1, -1 -> r1
	;;
#0:	       sr	r1, 1 -> r2
#1:	       and	r1, r0 -> r1
	;;
#0:	       and	r2, r0 -> r0
#1:	       ldiu	1807 -> r2
	;;
#0:	       add	r1, r0 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r3 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r3 -> r1
#1:	       ldiu	255 -> r3
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r3
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r3
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r3 -> r0
	;;
#0:	       br	.BB69_30
#1:	       and	r1, r3 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
.BB69_29:                               ; %bb1.i.i
#0:	       sr	r10, 1 -> r0
#1:	       ldiu	819 -> r3
	;;
#0:	       or	r10, r0 -> r0
#1:	       ldim	614 -> r3
	;;
#0:	       sr	r0, 2 -> r1
#1:	       ldih	409 -> r3
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 4 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 16 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r0, -1 -> r0
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r0, 1 -> r2
	;;
#0:	       and	r0, r1 -> r0
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r3 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r3 -> r1
#1:	       ldiu	255 -> r3
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r3
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r3
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r3 -> r0
	;;
#0:	       and	r1, r3 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       s2add	r0, 8 -> r0
	;;
.BB69_30:                               ; %normalize.exit
#0:	       ldm.s	r14, 36
#1:	       sub	r0, 11 -> r2
	;;
#0:	       callg	___ashldi3
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, r0 -> r1
	;;
#0:	       sub	r1, 12 -> r0
#1:	       or	r11, 0 -> r1
	;;
#0:	       stm.s	r0, r14, 9
#1:	       or	r10, 0 -> r0
	;;
	       nop	0
	;;
#0:	       or	r0, 0 -> r10
#1:	       or	r1, 0 -> r11
	;;
.BB69_31:                               ; %normalize.exit
#0:	       or	r13, 0 -> r0
#1:	       or	r1.23, 0 -> r1
	;;
.BB69_32:                               ; %bb21
#0:	       stm.s	r0, r14, 8
#1:	       ldiu	0 -> r0
#2:	       sr	r10, 21 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       ldim	512 -> r0
#1:	       stm.s	r1, r14, 4
#2:	       ldiu	819 -> r1
	;;
#0:	       callg	___muldi3
#1:	       or	r11, r0 -> r0
#2:	       ldim	158 -> r1
	;;
#0:	       stm.s	r0, r14, 7
#1:	       sl	r0, 11 -> r0
#2:	       ldih	936 -> r1
	;;
#0:	       or	r2, r0 -> r11
	;;
#0:	       sub	r1, r11 -> r12
#1:	       ldi	0 -> r1
#2:	       or	r11, 0 -> r2
	;;
#0:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldi	0 -> r13
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
	;;
	       nop	2
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r12
#2:	       ldi	0 -> r1
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r12
#2:	       ldi	0 -> r1
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r0
#2:	       ldi	0 -> r1
	;;
#0:	       sub	r0, 1 -> r12
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	1
	;;
#1:	       or	r0, 0 -> r11
#0:	       or	r1, 0 -> r0.23
#2:	       sl	r10, 11 -> r2
#3:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldi	0 -> r1
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       carr	r11, r1 -> r0
#1:	       add	r11, r1 -> r11
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#1:	       callg	___muldi3
#0:	       add	r0.23, r0 -> r0
#2:	       borr	r13, r11 -> r1
	;;
#0:	       sub	r13, r0 -> r0
	;;
#0:	       sub	r0, r1 -> r0
#1:	       ldi	0 -> r1
	;;
	       nop	1
	;;
#1:	       or	r0, 0 -> r1.23
#2:	       or	r1, 0 -> r2.23
#0:	       sub	r13, r11 -> r0
#3:	       ldi	0 -> r1
	;;
#0:	       callg	___muldi3
#1:	       or	r12, 0 -> r2
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 32
#1:	       carr	r1.23, r1 -> r0
	;;
#1:	       add	r1.23, r1 -> r11
#0:	       ldi	-2 -> r1
#2:	       add	r2.23, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 16
#2:	       carr	r11, r1 -> r1
	;;
#0:	       sr	r2, 30 -> r3
#1:	       add	r0, r1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       sub	r0, 1 -> r13
	;;
#0:	       callg	___muldi3
#1:	       sl	r4, 2 -> r4
#2:	       or	r13, 0 -> r0
	;;
#0:	       or	r3, r4 -> r1
#1:	       ldga	0 -> r3
	;;
#0:	       ldih	2 -> r3
	;;
#0:	       or	r1, r3 -> r12
#1:	       ldi	0 -> r1
#2:	       ldi	0 -> r3
	;;
#0:	       or	r12, 0 -> r2
	;;
#0:	       sub	r11, 2 -> r11
#1:	       or	r0, 0 -> r1.23
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r1, 0 -> r1.24
#2:	       or	r11, 0 -> r0
#3:	       ldi	0 -> r1
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 32
#2:	       or	r0, 0 -> r12
#1:	       or	r1, 0 -> r1.25
#3:	       or	r13, 0 -> r0
	;;
#0:	       ldi	0 -> r1
#1:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r2
	;;
#1:	       sl	r2, 2 -> r1.26
	;;
#1:	       or	r1.26, 0 -> r2
	;;
	       nop	1
	;;
#0:	       or	r0, 0 -> r13
#2:	       or	r1, 0 -> r2.23
#1:	       or	r11, 0 -> r0
#3:	       ldi	0 -> r1
	;;
#0:	       callg	___muldi3
#3:	       ldi	-4 -> r3.23
#1:	       or	r1.26, 0 -> r2
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 24
#2:	       add	r12, r1 -> r0
#1:	       add	r1.25, r1.23 -> r3
#3:	       carr	r12, r1 -> r1
	;;
#3:	       and	r13, r3.23 -> r2
#1:	       carr	r1.25, r1.23 -> r4
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       ldm.s	r14, 20
#2:	       carr	r0, r2 -> r0
	;;
#1:	       add	r1.24, r4 -> r2
#2:	       carr	r3, r2.23 -> r4
#0:	       add	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#2:	       add	r3, r2.23 -> r3
#1:	       add	r2, r4 -> r2
#3:	       ldm.s	r14, 36
	;;
#0:	       sub	r1, r5 -> r1
#1:	       ldiu	2047 -> r5
#2:	       carr	r3, r0 -> r4
#3:	       add	r3, r0 -> r12
	;;
#0:	       add	r2, r4 -> r13
#1:	       ldim	1023 -> r5
#2:	       ldx	$mem, 0 -> r6
	;;
#0:	       cmpult	r5, r13 -> c1
#1:	       add	r6, r1 -> r11
	;;
#0:	if  c1 br	.BB69_34
	;;
	       nop	2
	;;
; BB#33:                                ; %bb22
#0:	       ldm.s	r14, 32
#1:	       or	r13, 0 -> r1
#2:	       or	r10, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 28
	;;
#0:	       sl	r0, 21 -> r0.23
#1:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#1:	       br	.BB69_35
#2:	       ldi	0 -> r2
#0:	       sub	r0.23, r1 -> r1
#3:	       sub	r11, 1 -> r11
	;;
#0:	       borr	r2, r0 -> r3
	;;
	       nop	1
	;;
.BB69_34:                               ; %bb23
#0:	       ldm.s	r14, 32
#1:	       sl	r13, 31 -> r1
#2:	       sr	r12, 1 -> r0
#3:	       sr	r13, 1 -> r13
	;;
#0:	       or	r0, r1 -> r12
#1:	       or	r13, 0 -> r1
#2:	       or	r10, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 28
	;;
#2:	       sl	r0, 20 -> r2.23
#0:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#0:	       ldi	0 -> r2
#2:	       sub	r2.23, r1 -> r1
	;;
#0:	       borr	r2, r0 -> r3
	;;
.BB69_35:                               ; %bb23
#0:	       sub	r2, r0 -> r0
#1:	       ldi	1023 -> r2
#2:	       sub	r1, r3 -> r1
#3:	       ldiu	2047 -> r3
	;;
#0:	       add	r11, r2 -> r2
	;;
#0:	       cmplt	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB69_39
	;;
	       nop	2
	;;
; BB#36:                                ; %bb25
#0:	       ldm.s	r14, 40
#1:	       ldga	1048576 -> r0
#2:	       s2add	r14, 8 -> r3
	;;
#0:	       ldih	1023 -> r0
#1:	       add	r3, 28 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       or	r2, r0 -> r0
#1:	       ldi	0 -> r2
	;;
#0:	       stm.a	r2, r1, 0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r1, 4
	;;
.BB69_37:                               ; %bb25
#0:	       ldx	$mem, 0 -> r1
#1:	       stx	r0 -> $f0
	;;
#0:	       stx	r1 -> $f2
	;;
.BB69_38:                               ; %bb25
#0:	       ldm.s	r14, 132
#1:	       or	r14, 0 -> r15
#2:	       fop	fmov	f2 -> f1
	;;
#1:	       ldx	$mem, 0 -> r1.26
#0:	       ldm.s	r14, 136
	;;
#1:	       ldx	$mem, 0 -> r1.25
#0:	       ldm.s	r14, 140
	;;
#1:	       ldx	$mem, 0 -> r1.24
#0:	       ldm.s	r14, 144
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 148
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 152
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 156
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 160
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 164
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 168
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 172
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB69_14
#1:	       ldx	$mem, 0 -> r1.31
#2:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB69_39:                               ; %bb26
#0:	       ldi	0 -> r3
	;;
#0:	       cmplt	r3, r2 -> c1
	;;
#0:	if  c1 br	.BB69_41
	;;
	       nop	2
	;;
; BB#40:                                ; %bb27
#0:	       s2add	r14, 8 -> r2
#1:	       ldi	0 -> r1
	;;
#0:	       add	r2, 20 -> r0
	;;
#0:	       stm.a	r1, r0, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       br	.BB69_12
#1:	       ldx	$mem, 0 -> r1
#2:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stx	r0 -> $f2
	;;
.BB69_41:                               ; %bb28
#0:	       ldm.s	r14, 28
#1:	       carr	r0, r0 -> r3
#2:	       add	r1, r1 -> r1
#3:	       add	r0, r0 -> r0
	;;
#0:	       add	r1, r3 -> r1
#1:	       ldiu	2047 -> r3
#2:	       cmpult	r10, r0 -> c2
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       ldim	511 -> r3
#2:	       ldm.s	r14, 40
	;;
#0:	       cmpeq	r1, r4 -> c1
#1:	       cmpult	r4, r1 -> c3
#2:	       sl	r2, 20 -> r1
#3:	       and	r13, r3 -> r2
	;;
#0:	if  c1 comb	and c2, c2 -> c3
#1:	       or	r1, r2 -> r1
#2:	       s2add	r14, 8 -> r4
#3:	       ldi	0 -> r3
	;;
#0:	       ldx	$c3 -> r0
	;;
#0:	       carr	r0, r12 -> r2
#1:	       add	r0, r12 -> r0
	;;
#0:	       add	r1, r2 -> r1
#1:	       or	r0, r3 -> r0
#2:	       add	r4, 12 -> r2
#3:	       ldx	$mem, 0 -> r3
	;;
#0:	       br	.BB69_37
#1:	       stm.a	r0, r2, 0
#2:	       or	r1, r3 -> r1
	;;
#0:	       stm.a	r1, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r2, 4
	;;
	.align	4
___divdf3_end:

	.globl	___divdi3
	.align	4
___divdi3:                              ; @__divdi3
	.size	___divdi3_end-___divdi3
___divdi3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 5
#1:	       ldiu	20 -> r9
#2:	       sra	r1, 31 -> r4
#3:	       sra	r3, 31 -> r5
	;;
#0:	       sub	r15, r9 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       xor	r4, r1 -> r6
#3:	       xor	r5, r3 -> r7
	;;
#3:	       ldx	$ro, 0 -> r3.31
#0:	       xor	r4, r0 -> r0
#1:	       xor	r5, r2 -> r2
#2:	       sub	r6, r4 -> r6
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       borr	r0, r4 -> r8
#3:	       borr	r2, r5 -> r9
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       sub	r7, r5 -> r7
#1:	       sub	r0, r4 -> r0
#3:	       sub	r2, r5 -> r2
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       ldiu	4 -> r10
	;;
#0:	       sub	r15, r10 -> r15
#1:	       xor	r3, r1 -> r10
#2:	       sub	r6, r8 -> r1
#3:	       sub	r7, r9 -> r3
	;;
#0:	       stm.a	0, r15, 0
	;;
#0:	       callg	___udivmoddi4
	;;
	       nop	3
	;;
#0:	       s2add	r15, 1 -> r15
#1:	       ldm.s	r14, 16
#2:	       sra	r10, 31 -> r2
	;;
#0:	       or	r14, 0 -> r15
#1:	       xor	r0, r2 -> r3
#2:	       xor	r1, r2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
#2:	       sub	r3, r2 -> r0
#3:	       sub	r1, r2 -> r1
	;;
#0:	       borr	r3, r2 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
#2:	       sub	r1, r2 -> r1
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 5 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___divdi3_end:

	.globl	___divsf3
	.align	4
___divsf3:                              ; @__divsf3
	.size	___divsf3_end-___divsf3
___divsf3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 15
#1:	       ldiu	60 -> r7
#2:	       sr	r0, 23 -> r4
#3:	       sr	r1, 23 -> r5
	;;
#1:	       sub	r15, r7 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#0:	       ldga	0 -> r0.16
#3:	       mask	r4, 0 -> r4
	;;
#3:	       ldx	$ro, 0 -> r3.31
#1:	       xor	r1, r0 -> r6
#0:	       ldih	1024 -> r0.16
#2:	       mask	r5, 0 -> r5
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       ldiu	2047 -> r2
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       ldim	1023 -> r2
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       or	r2, 0 -> r3
	;;
#0:	       stm.s	r10, r14, 14
#1:	       ldih	3 -> r3
	;;
#0:	       stm.s	r11, r14, 13
#1:	       and	r0, r3 -> r10
#2:	       and	r1, r3 -> r3
	;;
#0:	       stm.s	r12, r14, 12
	;;
#0:	       stm.s	r13, r14, 11
	;;
#0:	       stm.s	r0.23, r14, 10
	;;
#1:	       stm.s	r1.23, r14, 9
	;;
#2:	       stm.s	r2.23, r14, 8
	;;
#3:	       stm.s	r3.23, r14, 7
	;;
#0:	       stm.s	r4, r14, 4
#1:	       sub	r4, 1 -> r4
	;;
#1:	       stm.s	r5, r14, 5
#0:	       and	r6, r0.16 -> r5
	;;
#0:	       stm.s	r5, r14, 6
#1:	       ldi	253 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1
	;;
#0:	if !c1 ldm.s	r14, 20
	;;
#0:	if !c1 ldx	$mem, 0 -> r4
	;;
#0:	if !c1 sub	r4, 1 -> r4
	;;
#0:	if !c1 cmpult	r5, r4 -> c1
	;;
#0:	if  c1 br	.BB71_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.bb21_crit_edge
#0:	       ldi	0 -> r11
#1:	       br	.BB71_26
	;;
	       nop	2
	;;
.BB71_2:                                ; %bb1
#0:	       ldiu	1 -> r11
#1:	       ldih	1023 -> r2
	;;
#0:	       ldim	0 -> r11
#1:	       and	r0, r2 -> r4
	;;
#0:	       ldih	1020 -> r11
	;;
#0:	       cmpult	r4, r11 -> c1
	;;
#0:	if  c1 br	.BB71_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldga	0 -> r2
#1:	       br	.BB71_11
	;;
#0:	       ldih	2 -> r2
	;;
#0:	       or	r0, r2 -> r11
	;;
#0:	       stx	r11 -> $f0
	;;
.BB71_4:                                ; %bb3
#0:	       and	r1, r2 -> r0
	;;
#0:	       cmpult	r0, r11 -> c1
	;;
#0:	if  c1 br	.BB71_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       ldga	0 -> r0
	;;
#0:	       ldih	2 -> r0
	;;
#0:	       or	r1, r0 -> r0
	;;
.BB71_6:                                ; %bb4
#0:	       ldm.s	r14, 28
#1:	       or	r14, 0 -> r15
#2:	       stx	r0 -> $f0
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 32
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 36
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 44
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 48
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB71_12
#2:	       ldx	$mem, 0 -> r2.31
#1:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $rb
	;;
.BB71_7:                                ; %bb5
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	1020 -> r1
	;;
#0:	       cmpne	r4, r1 -> c1
	;;
#0:	if  c1 br	.BB71_14
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb6
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB71_13
	;;
	       nop	2
	;;
.BB71_9:                                ; %bb7
#0:	       ldiu	0 -> r0
	;;
#0:	       ldim	0 -> r0
	;;
#0:	       ldih	1022 -> r0
	;;
.BB71_10:                               ; %bb7
#0:	       stx	r0 -> $f0
	;;
.BB71_11:                               ; %bb7
#0:	       ldm.s	r14, 28
#1:	       or	r14, 0 -> r15
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 32
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 36
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 44
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 48
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stx	r1.31 -> $rb
	;;
.BB71_12:                               ; %bb7
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 15 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB71_13:                               ; %bb8
#0:	       ldm.s	r14, 24
#1:	       br	.BB71_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r0, r4 -> r0
	;;
	       nop	0
	;;
.BB71_14:                               ; %bb9
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB71_16
	;;
	       nop	2
	;;
.BB71_15:                               ; %bb10
#0:	       ldm.s	r14, 24
#1:	       br	.BB71_10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB71_16:                               ; %bb11
#0:	       cmpne	r4, 0 -> c1
	;;
#0:	if  c1 br	.BB71_19
	;;
	       nop	2
	;;
; BB#17:                                ; %bb12
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB71_9
	;;
	       nop	2
	;;
; BB#18:                                ; %bb14
#0:	       ldm.s	r14, 24
#1:	       br	.BB71_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB71_19:                               ; %bb15
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB71_21
	;;
	       nop	2
	;;
; BB#20:                                ; %bb16
#0:	       ldm.s	r14, 24
#1:	       br	.BB71_10
#2:	       ldga	0 -> r0
	;;
#0:	       ldih	1020 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       or	r3, r0 -> r0
	;;
.BB71_21:                               ; %bb17
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	4 -> r1
	;;
#0:	       cmpult	r4, r1 -> c1
	;;
#0:	if  c1 br	.BB71_23
	;;
	       nop	2
	;;
; BB#22:                                ; %bb17.bb19_crit_edge
#0:	       ldi	0 -> r11
#1:	       br	.BB71_24
	;;
	       nop	2
	;;
.BB71_23:                               ; %bb18
#0:	       sr	r10, 1 -> r11
#1:	       ldiu	819 -> r4
	;;
#0:	       or	r10, r11 -> r11
#1:	       ldim	614 -> r4
	;;
#0:	       sr	r11, 2 -> r1
#1:	       ldih	409 -> r4
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 4 -> r1
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 8 -> r1
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 16 -> r1
	;;
#0:	       or	r11, r1 -> r11
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r11, -1 -> r11
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r11, 1 -> r2
	;;
#0:	       and	r11, r1 -> r11
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r11, r1 -> r11
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r11, 2 -> r1
#1:	       and	r11, r4 -> r11
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r4 -> r1
#1:	       ldiu	255 -> r4
	;;
#0:	       add	r11, r1 -> r11
#1:	       ldim	992 -> r4
	;;
#0:	       sr	r11, 4 -> r1
#1:	       and	r11, r2 -> r11
#2:	       ldih	7 -> r4
	;;
#0:	       and	r1, r2 -> r1
#1:	       ldi	9 -> r2
	;;
#0:	       add	r11, r1 -> r11
	;;
#0:	       sr	r11, 8 -> r1
#1:	       and	r11, r4 -> r11
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       add	r11, r1 -> r11
	;;
#0:	       mask	r11, 4 -> r1
#1:	       sr	r11, 16 -> r11
	;;
#0:	       add	r1, r11 -> r11
	;;
#0:	       sub	r11, 8 -> r1
#1:	       sub	r2, r11 -> r11
	;;
#0:	       sl	r10, r1 -> r10
	;;
.BB71_24:                               ; %bb19
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	4 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB71_26
	;;
	       nop	2
	;;
; BB#25:                                ; %bb20
#0:	       sr	r3, 1 -> r0
#1:	       ldiu	819 -> r4
	;;
#0:	       or	r3, r0 -> r0
#1:	       ldim	614 -> r4
	;;
#0:	       sr	r0, 2 -> r1
#1:	       ldih	409 -> r4
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 4 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 16 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r0, -1 -> r0
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r0, 1 -> r2
	;;
#0:	       and	r0, r1 -> r0
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r4 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r4 -> r1
#1:	       ldiu	255 -> r4
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r4
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r4
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r4 -> r0
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       add	r11, r0 -> r11
#1:	       sub	r0, 8 -> r1
	;;
#0:	       sl	r3, r1 -> r3
#1:	       sub	r11, 9 -> r11
	;;
.BB71_26:                               ; %bb21
#0:	       ldga	0 -> r1
#1:	       ldiu	819 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldih	4 -> r1
#2:	       ldim	158 -> r0
	;;
#0:	       or	r3, r1 -> r12
#1:	       ldih	936 -> r0
#2:	       ldi	0 -> r1
#3:	       ldi	0 -> r3
	;;
#0:	       sl	r12, 8 -> r13
#2:	       ldi	0 -> r2.23
	;;
#3:	       sub	r0, r13 -> r3.23
#0:	       or	r13, 0 -> r2
	;;
#3:	       or	r3.23, 0 -> r0
	;;
#0:	       callg	___muldi3
#2:	       sub	r2.23, r1 -> r0
#1:	       ldi	0 -> r1
#3:	       ldi	0 -> r3
	;;
#3:	       or	r3.23, 0 -> r2
	;;
	       nop	2
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r13, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#1:	       callg	___muldi3
#0:	       or	r0, r1 -> r0.23
#2:	       ldi	0 -> r1
	;;
#0:	       or	r0.23, 0 -> r0
	;;
	       nop	2
	;;
#2:	       sub	r2.23, r1 -> r0
#1:	       ldi	0 -> r1
#0:	       or	r0.23, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r13, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r1.23
#2:	       ldi	0 -> r1
	;;
#1:	       or	r1.23, 0 -> r0
	;;
	       nop	2
	;;
#2:	       sub	r2.23, r1 -> r0
#0:	       ldi	0 -> r1
#1:	       or	r1.23, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       ldga	0 -> r2
#2:	       sr	r0, 31 -> r0
#3:	       sl	r1, 1 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       sl	r10, 1 -> r1
#2:	       ldih	8 -> r2
#3:	       ldiu	2047 -> r13
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 16
#2:	       or	r1, r2 -> r2
#3:	       sub	r0, 2 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r1
	;;
#3:	       sub	r1, r3 -> r3.23
#0:	       ldi	0 -> r1
#1:	       ldi	0 -> r3
	;;
	       nop	2
	;;
#0:	       ldim	1023 -> r13
	;;
#0:	       ldih	7 -> r13
	;;
#0:	       cmpult	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB71_28
#3:	       add	r11, r3.23 -> r0
	;;
	       nop	2
	;;
; BB#27:                                ; %bb22
#0:	       mul	r1, r12 -> $mul0
#1:	       br	.BB71_29
#2:	       sl	r10, 24 -> r10
#3:	       sub	r0, 1 -> r0
	;;
#0:	       ldx	$mul0, 0 -> r2
	;;
#0:	       sub	r10, r2 -> r10
	;;
	       nop	0
	;;
.BB71_28:                               ; %bb23
#0:	       sr	r1, 1 -> r1
#1:	       sl	r10, 23 -> r10
	;;
#1:	       mul	r1, r12 -> $mul1
	;;
#1:	       ldx	$mul1, 0 -> r2
	;;
#0:	       sub	r10, r2 -> r10
	;;
.BB71_29:                               ; %bb24
#0:	       ldi	127 -> r2
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldi	255 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB71_31
	;;
	       nop	2
	;;
; BB#30:                                ; %bb25
#0:	       ldm.s	r14, 24
#1:	       br	.BB71_6
#2:	       ldga	0 -> r0
	;;
#0:	       ldih	1020 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       or	r10, r0 -> r0
	;;
.BB71_31:                               ; %bb26
#0:	       ldi	0 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if !c1 br	.BB71_15
	;;
	       nop	2
	;;
; BB#32:                                ; %bb28
#0:	       ldiu	2047 -> r2
#1:	       sl	r10, 1 -> r3
#2:	       sl	r0, 23 -> r0
#3:	       ldm.s	r14, 24
	;;
#0:	       ldim	1023 -> r2
#1:	       cmpult	r12, r3 -> c1
	;;
#0:	       ldih	3 -> r2
	;;
#0:	       br	.BB71_6
#1:	       and	r1, r2 -> r1
#2:	       ldx	$c1 -> r2
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       or	r0, r1 -> r0
	;;
	.align	4
___divsf3_end:

	.globl	___divsi3
	.align	4
___divsi3:                              ; @__divsi3
	.size	___divsi3_end-___divsi3
___divsi3_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 5
#2:	       ldiu	20 -> r6
#0:	       ldx	$rb, 0 -> r0.31
#3:	       sra	r0, 31 -> r2
	;;
#0:	       sub	r15, r6 -> r15
#2:	       sra	r1, 31 -> r3
#1:	       ldx	$ro, 0 -> r1.31
#3:	       xor	r2, r0 -> r4
	;;
#0:	       callg	___udivsi3
#1:	       xor	r3, r1 -> r5
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       xor	r1, r0 -> r10
#2:	       sub	r4, r2 -> r0
#3:	       sub	r5, r3 -> r1
	;;
#0:	       ldm.s	r14, 16
#1:	       or	r14, 0 -> r15
#2:	       sra	r10, 31 -> r1
	;;
#0:	       xor	r0, r1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
#2:	       sub	r0, r1 -> r0
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 5 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___divsi3_end:

	.globl	___lshrdi3
	.align	4
___lshrdi3:                             ; @__lshrdi3
	.size	___lshrdi3_end-___lshrdi3
___lshrdi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r3
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 ret
#1:	if  c1 ldi	-32 -> r0
#2:	       sub	r15, r3 -> r15
	;;
#0:	if  c1 add	r2, r0 -> r0
#1:	if  c1 s2add	r15, 1 -> r15
	;;
#0:	if  c1 sr	r1, r0 -> r0
#1:	if  c1 ldi	0 -> r1
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	if !c1 ldi	32 -> r3
#1:	if !c1 sr	r0, r2 -> r0
	;;
#0:	if !c1 sub	r3, r2 -> r3
	;;
#0:	if !c1 sl	r1, r3 -> r3
#1:	if !c1 sr	r1, r2 -> r1
	;;
#0:	if !c1 or	r3, r0 -> r0
	;;
.BB73_2:                                ; %bb
	.align	4
___lshrdi3_end:

	.globl	___moddi3
	.align	4
___moddi3:                              ; @__moddi3
	.size	___moddi3_end-___moddi3
___moddi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 9
#3:	       ldiu	36 -> r8
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r8 -> r15
#1:	       sra	r3, 31 -> r4
#2:	       ldiu	4 -> r8
	;;
#0:	       xor	r4, r3 -> r3
#1:	       xor	r4, r2 -> r2
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       borr	r2, r4 -> r7
#3:	       sub	r3, r4 -> r3
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       add	r14, 20 -> r5
#2:	       sub	r2, r4 -> r2
#3:	       sub	r3, r7 -> r3
	;;
#1:	       stm.s	r1.31, r15, 2
#0:	       sub	r15, r8 -> r15
	;;
#0:	       stm.s	r10, r14, 8
#1:	       sra	r1, 31 -> r10
	;;
#0:	       xor	r10, r1 -> r1
#1:	       xor	r10, r0 -> r0
#2:	       stm.a	r5, r15, 0
	;;
#0:	       callg	___udivmoddi4
#1:	       borr	r0, r10 -> r6
#2:	       sub	r1, r10 -> r1
#3:	       sub	r0, r10 -> r0
	;;
#0:	       sub	r1, r6 -> r1
	;;
	       nop	2
	;;
#0:	       ldm.s	r14, 24
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 20
	;;
#0:	       xor	r0, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 32
#2:	       sub	r2, r10 -> r2
	;;
#0:	       xor	r1, r10 -> r1
	;;
#0:	       sub	r1, r10 -> r0
#1:	       borr	r1, r10 -> r1
#2:	       ldx	$mem, 0 -> r10
#3:	       ldm.s	r15, 8
	;;
#0:	       sub	r2, r1 -> r1
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 9 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___moddi3_end:

	.globl	___modsi3
	.align	4
___modsi3:                              ; @__modsi3
	.size	___modsi3_end-___modsi3
___modsi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 6
#3:	       ldiu	24 -> r2
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
#1:	       or	r0, 0 -> r11
	;;
#0:	       callg	___divsi3
	;;
	       nop	3
	;;
#0:	       mul	r0, r10 -> $mul0
#1:	       ldm.s	r14, 16
#2:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mul0, 0 -> r0
	;;
#0:	       sub	r11, r0 -> r0
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 6 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___modsi3_end:

	.globl	___muldi3
	.align	4
___muldi3:                              ; @__muldi3
	.size	___muldi3_end-___muldi3
___muldi3_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4
#2:	       ldiu	16 -> r9
#0:	       mul	r3, r0 -> $mul0
#3:	       sr	r0, 16 -> r6
	;;
#2:	       sub	r15, r9 -> r15
#0:	       ldx	$mul0, 0 -> r9
#3:	       sr	r2, 16 -> r8
#1:	       mul	r1, r2 -> $mul1
	;;
#0:	       mask	r2, 4 -> r4
#1:	       mask	r0, 4 -> r5
	;;
#3:	       stm.s	r9, r15, 3
#1:	       ldx	$mul1, 0 -> r9
#0:	       mul	r8, r5 -> $mul0
#2:	       mul	r4, r5 -> $mul2
	;;
#1:	       mul	r8, r6 -> $mul1
#3:	       mul	r4, r6 -> $mul3
#2:	       stm.s	r9, r15, 2
#0:	       ldx	$mul0, 0 -> r1
	;;
#1:	       ldx	$mul1, 0 -> r6
#2:	       ldx	$mul2, 0 -> r7
#3:	       ldx	$mul3, 0 -> r0
	;;
#0:	       stm.s	r6, r15, 1
#1:	       sr	r7, 16 -> r4
	;;
#0:	       ldm.s	r15, 12
#1:	       add	r4, r0 -> r0
	;;
#0:	       add	r0, r1 -> r2
#1:	       mask	r0, 4 -> r3
	;;
#0:	       ldx	$mem, 0 -> r6
#1:	       ldm.s	r15, 8
#2:	       add	r3, r1 -> r1
#3:	       sl	r2, 16 -> r2
	;;
#0:	       stx	r6 -> $mul0
#1:	       mask	r7, 4 -> r3
#2:	       sr	r1, 16 -> r1
	;;
#1:	       ldx	$mem, 0 -> r6
#2:	       ldm.s	r15, 4
#0:	       ldx	$mul0, 0 -> r4
#3:	       s2add	r15, 4 -> r15
	;;
#1:	       stx	r6 -> $mul1
	;;
#0:	       ldx	$mem, 0 -> r6
#1:	       ldx	$mul1, 0 -> r5
	;;
#0:	       ret
#1:	       stx	r6 -> $mul1
#2:	       add	r4, r5 -> r4
	;;
#1:	       ldx	$mul1, 0 -> r5
	;;
#0:	       add	r4, r5 -> r4
#1:	       sr	r0, 16 -> r5
#2:	       or	r2, r3 -> r0
	;;
#0:	       add	r4, r5 -> r2
	;;
#0:	       add	r2, r1 -> r1
	;;
	.align	4
___muldi3_end:

	.globl	___udivdi3
	.align	4
___udivdi3:                             ; @__udivdi3
	.size	___udivdi3_end-___udivdi3
___udivdi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 4
#3:	       ldiu	16 -> r4
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       callg	___udivmoddi4
#1:	       sub	r15, r4 -> r15
#2:	       ldiu	4 -> r4
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
#0:	       sub	r15, r4 -> r15
	;;
#0:	       stm.a	0, r15, 0
	;;
#0:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 4 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___udivdi3_end:

	.align	4
___udivmoddi4:                          ; @__udivmoddi4
	.size	___udivmoddi4_end-___udivmoddi4
___udivmoddi4_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 10
#3:	       ldiu	40 -> r4
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       s2add	r14, 8 -> r4
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r1, 0 -> r10
#2:	       add	r4, 8 -> r1
	;;
#0:	       stm.s	r11, r14, 8
#1:	       cmpne	r10, 0 -> c1
	;;
#0:	       stm.s	r12, r14, 7
#1:	       or	r3, 0 -> r12
	;;
#0:	if  c1 br	.BB78_9
#1:	       stm.s	r13, r14, 6
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       stm.s	r0, r14, 4
	;;
#0:	       stm.s	r2, r14, 5
	;;
; BB#1:                                 ; %bb
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB78_5
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB78_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       stm.a	0, r11, 1
#1:	       or	r2, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 0
	;;
.BB78_4:                                ; %bb3
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 20
	;;
#0:	       callg	___udivsi3
#1:	       ldx	$mem, 0 -> r1
	;;
	       nop	3
	;;
#0:	       br	.BB78_14
	;;
	       nop	2
	;;
.BB78_5:                                ; %bb4
#0:	       cmpne	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB78_8
	;;
	       nop	2
	;;
.BB78_6:                                ; %bb4.bb45_crit_edge
#0:	       ldi	0 -> r0
	;;
#0:	       or	r0, 0 -> r1
	;;
.BB78_7:                                ; %bb45
#0:	       ldm.s	r14, 24
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       br	.BB78_16
#0:	       ldx	$mem, 0 -> r0.31
#2:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stx	r1.31 -> $rb
	;;
.BB78_8:                                ; %bb5
#0:	       ldm.s	r14, 16
#1:	       br	.BB78_6
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r11, 0
	;;
#0:	       stm.a	0, r11, 1
	;;
.BB78_9:                                ; %bb7
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB78_26
	;;
	       nop	2
	;;
; BB#10:                                ; %bb8
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB78_17
	;;
	       nop	2
	;;
; BB#11:                                ; %bb9
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB78_13
	;;
	       nop	2
	;;
; BB#12:                                ; %bb10
#0:	       stm.a	0, r11, 1
#1:	       or	r10, 0 -> r0
#2:	       or	r2, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 0
	;;
.BB78_13:                               ; %bb11
#0:	       ldm.s	r14, 20
#1:	       or	r10, 0 -> r0
	;;
#0:	       callg	___udivsi3
#1:	       ldx	$mem, 0 -> r1
	;;
	       nop	3
	;;
.BB78_14:                               ; %bb11
#0:	       ldi	0 -> r1
	;;
.BB78_15:                               ; %bb11
#0:	       ldm.s	r14, 24
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $rb
	;;
.BB78_16:                               ; %bb11
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 10 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB78_17:                               ; %bb12
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB78_21
	;;
	       nop	2
	;;
; BB#18:                                ; %bb13
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB78_20
	;;
	       nop	2
	;;
; BB#19:                                ; %bb14
#0:	       stm.a	0, r11, 0
#1:	       or	r10, 0 -> r0
#2:	       or	r12, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 1
	;;
.BB78_20:                               ; %bb15
#0:	       or	r10, 0 -> r0
#1:	       callg	___udivsi3
#2:	       or	r12, 0 -> r1
	;;
	       nop	3
	;;
#0:	       br	.BB78_7
#1:	       ldi	0 -> r1
	;;
	       nop	2
	;;
.BB78_21:                               ; %bb16
#0:	       sub	r12, 1 -> r0
	;;
#0:	       and	r0, r12 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB78_23
	;;
	       nop	2
	;;
; BB#22:                                ; %bb17
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 16
#1:	if !c1 and	r0, r10 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r1
	;;
#0:	if !c1 stm.a	r1, r11, 0
#1:	       ldiu	819 -> r1
	;;
#0:	       ldim	614 -> r1
	;;
#0:	       ldih	409 -> r1
	;;
#0:	if !c1 stm.a	r0, r11, 1
#1:	       ldiu	1365 -> r11
#2:	       xor	r12, -1 -> r0
#3:	       sub	r12, 1 -> r12
	;;
#0:	       and	r0, r12 -> r12
#1:	       ldim	682 -> r11
	;;
#0:	       ldih	682 -> r11
#1:	       sr	r12, 1 -> r0
	;;
#0:	       and	r12, r11 -> r12
#1:	       and	r0, r11 -> r11
#2:	       ldiu	1807 -> r0
	;;
#0:	       add	r12, r11 -> r11
#1:	       ldim	481 -> r0
	;;
#0:	       sr	r11, 2 -> r12
#1:	       and	r11, r1 -> r11
#2:	       ldih	120 -> r0
	;;
#0:	       and	r12, r1 -> r12
#1:	       ldiu	255 -> r1
	;;
#0:	       add	r11, r12 -> r11
#1:	       ldim	992 -> r1
	;;
#0:	       sr	r11, 4 -> r12
#1:	       and	r11, r0 -> r11
#2:	       ldih	7 -> r1
	;;
#0:	       and	r12, r0 -> r12
	;;
#0:	       add	r11, r12 -> r11
	;;
#0:	       sr	r11, 8 -> r12
#1:	       and	r11, r1 -> r11
	;;
#0:	       and	r12, r1 -> r12
	;;
#0:	       br	.BB78_14
#1:	       add	r11, r12 -> r11
	;;
#0:	       mask	r11, 4 -> r12
#1:	       sr	r11, 16 -> r11
	;;
#0:	       add	r12, r11 -> r11
	;;
#0:	       sr	r10, r11 -> r0
	;;
.BB78_23:                               ; %bb20
#0:	       sr	r12, 1 -> r0
#1:	       sr	r10, 1 -> r1
#2:	       ldiu	819 -> r5
	;;
#0:	       or	r12, r0 -> r0
#1:	       or	r10, r1 -> r1
#2:	       ldim	614 -> r5
	;;
#0:	       sr	r0, 2 -> r2
#1:	       sr	r1, 2 -> r3
#2:	       ldih	409 -> r5
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 4 -> r2
#1:	       sr	r1, 4 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 8 -> r2
#1:	       sr	r1, 8 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 16 -> r2
#1:	       sr	r1, 16 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
#2:	       ldiu	1365 -> r2
	;;
#0:	       ldim	682 -> r2
#1:	       xor	r0, -1 -> r0
#2:	       xor	r1, -1 -> r1
	;;
#0:	       ldih	682 -> r2
#1:	       sr	r0, 1 -> r3
#2:	       sr	r1, 1 -> r4
	;;
#0:	       and	r0, r2 -> r0
#1:	       and	r3, r2 -> r3
#2:	       and	r1, r2 -> r1
#3:	       and	r4, r2 -> r2
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r1, r2 -> r1
#2:	       ldiu	1807 -> r4
	;;
#0:	       sr	r0, 2 -> r2
#1:	       sr	r1, 2 -> r3
#2:	       and	r0, r5 -> r0
#3:	       and	r1, r5 -> r1
	;;
#0:	       and	r2, r5 -> r2
#1:	       and	r3, r5 -> r3
#2:	       ldim	481 -> r4
#3:	       ldiu	255 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
#2:	       ldih	120 -> r4
#3:	       ldim	992 -> r5
	;;
#0:	       sr	r0, 4 -> r2
#1:	       sr	r1, 4 -> r3
#2:	       and	r0, r4 -> r0
#3:	       and	r1, r4 -> r1
	;;
#0:	       and	r2, r4 -> r2
#1:	       and	r3, r4 -> r3
#2:	       ldih	7 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
	;;
#0:	       sr	r0, 8 -> r2
#1:	       sr	r1, 8 -> r3
#2:	       and	r0, r5 -> r0
#3:	       and	r1, r5 -> r1
	;;
#0:	       and	r2, r5 -> r2
#1:	       and	r3, r5 -> r3
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
	;;
#0:	       mask	r0, 4 -> r2
#1:	       sr	r0, 16 -> r0
#2:	       mask	r1, 4 -> r3
#3:	       sr	r1, 16 -> r1
	;;
#0:	       add	r2, r0 -> r0
#1:	       add	r3, r1 -> r1
	;;
#0:	       sub	r0, r1 -> r0
	;;
#0:	       cmpult	r0, 31 -> c1
	;;
#0:	if  c1 br	.BB78_35
	;;
	       nop	2
	;;
.BB78_24:                               ; %bb21
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB78_6
	;;
	       nop	2
	;;
; BB#25:                                ; %bb22
#0:	       ldm.s	r14, 16
#1:	       br	.BB78_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.a	r0, r11, 0
	;;
#0:	       stm.a	r10, r11, 1
	;;
.BB78_26:                               ; %bb25
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB78_31
	;;
	       nop	2
	;;
; BB#27:                                ; %bb26
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r0
	;;
#0:	       and	r0, r2 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB78_33
	;;
	       nop	2
	;;
; BB#28:                                ; %bb27
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 16
	;;
#0:	if !c1 ldx	$mem, 0 -> r2
	;;
#0:	if !c1 and	r0, r2 -> r2
	;;
#0:	if !c1 stm.a	r2, r11, 0
	;;
#0:	if !c1 stm.a	0, r11, 1
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       cmpne	r2, 1 -> c1
	;;
#0:	if  c1 br	.BB78_30
	;;
	       nop	2
	;;
; BB#29:                                ; %bb30.bb45_crit_edge
#0:	       ldm.s	r14, 16
#1:	       br	.BB78_7
#2:	       or	r10, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB78_30:                               ; %bb32
#0:	       ldm.s	r14, 20
#1:	       ldiu	1365 -> r2
#2:	       ldiu	819 -> r5
	;;
#0:	       ldim	682 -> r2
#1:	       ldim	614 -> r5
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldih	682 -> r2
#2:	       ldih	409 -> r5
#3:	       ldm.s	r14, 16
	;;
#0:	       xor	r3, -1 -> r3
	;;
#0:	       and	r3, r0 -> r0
	;;
#0:	       sr	r0, 1 -> r3
#1:	       and	r0, r2 -> r0
	;;
#0:	       and	r3, r2 -> r2
#1:	       ldiu	1807 -> r3
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldim	481 -> r3
	;;
#0:	       sr	r0, 2 -> r2
#1:	       and	r0, r5 -> r0
#2:	       ldih	120 -> r3
	;;
#0:	       and	r2, r5 -> r2
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r0, 4 -> r2
#1:	       and	r0, r3 -> r0
#2:	       ldih	7 -> r5
	;;
#0:	       and	r2, r3 -> r2
#1:	       ldi	32 -> r3
	;;
#0:	       add	r0, r2 -> r0
	;;
#0:	       sr	r0, 8 -> r2
#1:	       and	r0, r5 -> r0
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       add	r0, r2 -> r0
	;;
#0:	       mask	r0, 4 -> r2
#1:	       sr	r0, 16 -> r0
	;;
#0:	       br	.BB78_15
#1:	       add	r2, r0 -> r2
	;;
#0:	       sub	r3, r2 -> r0
#1:	       ldx	$mem, 0 -> r3
#2:	       sr	r10, r2 -> r1
	;;
#0:	       sl	r10, r0 -> r0
#1:	       sr	r3, r2 -> r3
	;;
#0:	       or	r0, r3 -> r0
	;;
.BB78_31:                               ; %bb34
#0:	       sr	r12, 1 -> r2
#1:	       sr	r10, 1 -> r3
#2:	       ldiu	1365 -> r0
#3:	       ldiu	819 -> r4
	;;
#0:	       or	r12, r2 -> r2
#1:	       or	r10, r3 -> r3
#2:	       ldim	682 -> r0
#3:	       ldim	614 -> r4
	;;
#0:	       sr	r2, 2 -> r5
#1:	       sr	r3, 2 -> r1
#2:	       ldih	682 -> r0
#3:	       ldih	409 -> r4
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 4 -> r5
#1:	       sr	r3, 4 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 8 -> r5
#1:	       sr	r3, 8 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 16 -> r5
#1:	       sr	r3, 16 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       xor	r2, -1 -> r2
#1:	       xor	r3, -1 -> r3
	;;
#0:	       sr	r2, 1 -> r5
#1:	       sr	r3, 1 -> r1
#2:	       and	r2, r0 -> r2
#3:	       and	r3, r0 -> r3
	;;
#0:	       and	r5, r0 -> r5
#1:	       and	r1, r0 -> r0
#2:	       ldiu	1807 -> r1
	;;
#0:	       add	r2, r5 -> r2
#1:	       add	r3, r0 -> r0
#2:	       ldim	481 -> r1
	;;
#0:	       sr	r2, 2 -> r3
#1:	       sr	r0, 2 -> r5
#2:	       and	r2, r4 -> r2
#3:	       and	r0, r4 -> r0
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldih	120 -> r1
#3:	       ldiu	255 -> r4
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
#2:	       ldim	992 -> r4
	;;
#0:	       sr	r2, 4 -> r3
#1:	       sr	r0, 4 -> r5
#2:	       and	r2, r1 -> r2
#3:	       and	r0, r1 -> r0
	;;
#0:	       and	r3, r1 -> r3
#1:	       and	r5, r1 -> r5
#2:	       ldih	7 -> r4
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
	;;
#0:	       sr	r2, 8 -> r3
#1:	       sr	r0, 8 -> r5
#2:	       and	r2, r4 -> r2
#3:	       and	r0, r4 -> r0
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
	;;
#0:	       mask	r2, 4 -> r3
#1:	       sr	r2, 16 -> r2
#2:	       mask	r0, 4 -> r5
#3:	       sr	r0, 16 -> r0
	;;
#0:	       add	r3, r2 -> r2
#1:	       add	r5, r0 -> r0
	;;
#0:	       sub	r2, r0 -> r0
#1:	       ldi	32 -> r2
	;;
#0:	       cmpult	r0, r2 -> c1
	;;
#0:	if !c1 br	.BB78_24
	;;
	       nop	2
	;;
; BB#32:                                ; %bb38
#0:	       ldm.s	r14, 16
#1:	       ldi	31 -> r3
#2:	       add	r0, 1 -> r2
#3:	       sub	r0, 31 -> r5
	;;
#0:	       sub	r3, r0 -> r0
#1:	       sra	r5, 31 -> r4
#2:	       sr	r10, r2 -> r6
#3:	       ldi	0 -> r5
	;;
#0:	       br	.BB78_36
#1:	       ldx	$mem, 0 -> r3
#2:	       sl	r10, r0 -> r10
	;;
#0:	       sr	r3, r2 -> r1
#1:	       sl	r3, r0 -> r0
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       or	r1, r10 -> r3
#1:	       and	r6, r4 -> r10
	;;
.BB78_33:                               ; %bb41.preheader
#0:	       ldm.s	r14, 20
#1:	       sr	r10, 1 -> r3
#2:	       ldiu	819 -> r4
	;;
#0:	       ldim	614 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldih	409 -> r4
#2:	       ldm.s	r14, 16
	;;
#0:	       sr	r2, 1 -> r0
	;;
#0:	       or	r2, r0 -> r0
#1:	       or	r10, r3 -> r2
#2:	       ldx	$mem, 0 -> r7
	;;
#0:	       sr	r0, 2 -> r3
#1:	       sr	r2, 2 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 4 -> r3
#1:	       sr	r2, 4 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 8 -> r3
#1:	       sr	r2, 8 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 16 -> r3
#1:	       sr	r2, 16 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
#2:	       ldiu	1365 -> r3
	;;
#0:	       ldim	682 -> r3
#1:	       xor	r0, -1 -> r0
#2:	       xor	r2, -1 -> r2
	;;
#0:	       ldih	682 -> r3
#1:	       sr	r0, 1 -> r5
#2:	       sr	r2, 1 -> r1
	;;
#0:	       and	r0, r3 -> r0
#1:	       and	r5, r3 -> r5
#2:	       and	r2, r3 -> r2
#3:	       and	r1, r3 -> r3
	;;
#0:	       add	r0, r5 -> r0
#1:	       add	r2, r3 -> r2
#2:	       ldiu	1807 -> r1
	;;
#0:	       sr	r0, 2 -> r3
#1:	       sr	r2, 2 -> r5
#2:	       and	r0, r4 -> r0
#3:	       and	r2, r4 -> r2
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldim	481 -> r1
#3:	       ldiu	255 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
#2:	       ldih	120 -> r1
#3:	       ldim	992 -> r4
	;;
#0:	       sr	r0, 4 -> r3
#1:	       sr	r2, 4 -> r5
#2:	       and	r0, r1 -> r0
#3:	       and	r2, r1 -> r2
	;;
#0:	       and	r3, r1 -> r3
#1:	       and	r5, r1 -> r5
#2:	       ldih	7 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
	;;
#0:	       sr	r0, 8 -> r3
#1:	       sr	r2, 8 -> r5
#2:	       and	r0, r4 -> r0
#3:	       and	r2, r4 -> r2
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldi	-2 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
	;;
#0:	       mask	r0, 4 -> r3
#1:	       sr	r0, 16 -> r0
#2:	       mask	r2, 4 -> r5
#3:	       sr	r2, 16 -> r2
	;;
#0:	       add	r3, r0 -> r0
#1:	       add	r5, r2 -> r2
#2:	       ldi	31 -> r3
	;;
#0:	       sub	r0, r2 -> r0
#1:	       ldi	33 -> r2
	;;
#0:	       add	r0, r2 -> r2
#1:	       add	r0, 1 -> r1
#2:	       xor	r0, -1 -> r5
#3:	       sub	r3, r0 -> r3
	;;
#0:	       cmpeq	r2, 0 -> c1
#1:	       sub	r4, r0 -> r4
#2:	       sl	r10, r3 -> r6
#3:	       sr	r7, r1 -> r8
	;;
#0:	       sr	r7, r2 -> r9
#1:	       sl	r10, r5 -> r1.16
#2:	       or	r6, r8 -> r6
#3:	       sra	r5, 31 -> r8
	;;
#0:	       sra	r1, 31 -> r13
#1:	       sr	r10, r1 -> r1
#2:	       sra	r4, 31 -> r4
#3:	       sl	r7, r5 -> r5
	;;
#0:	       sra	r0, 31 -> r0
#1:	       or	r9, r1.16 -> r9
#2:	       sr	r10, r2 -> r10
#3:	       sl	r7, r3 -> r3
	;;
#0:	       and	r5, r0 -> r0
#1:	       and	r6, r8 -> r6
#2:	       and	r9, r13 -> r7
#3:	       and	r1, r4 -> r1
	;;
#0:	       and	r3, r8 -> r5
#1:	       or	r6, r0 -> r0
#2:	       or	r7, r1 -> r3
#3:	       and	r10, r13 -> r10
	;;
#0:	if !c1 br	.BB78_36
	;;
	       nop	2
	;;
; BB#34:                                ; %bb41.preheader.bb42_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB78_39
	;;
#0:	       or	r1, 0 -> r2
	;;
	       nop	1
	;;
.BB78_35:                               ; %bb24
#0:	       ldm.s	r14, 16
#1:	       ldi	31 -> r1
#2:	       add	r0, 1 -> r2
#3:	       ldi	0 -> r5
	;;
#0:	       sub	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       sl	r10, r0 -> r1
#2:	       sr	r10, r2 -> r10
	;;
#0:	       sr	r3, r2 -> r4
#1:	       sl	r3, r0 -> r0
	;;
#0:	       or	r1, r4 -> r3
	;;
.BB78_36:                               ; %bb.nph
#0:	       ldm.s	r14, 20
#1:	       ldi	-1 -> r1
#2:	       ldi	0 -> r6
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       carr	r4, r1 -> r1
#1:	       sub	r4, 1 -> r4
	;;
#0:	       add	r12, r1 -> r1
	;;
#0:	       sub	r1, 1 -> r7
	;;
.BB78_37:                               ; %bb40
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r3, 1 -> r1
#1:	       sr	r0, 31 -> r8
#2:	       sl	r10, 1 -> r10
#3:	       sr	r3, 31 -> r3
	;;
#0:	       or	r1, r8 -> r8
#1:	       or	r10, r3 -> r1
#2:	       sub	r2, 1 -> r2
#3:	       ldm.s	r14, 20
	;;
#0:	       sub	r7, r1 -> r3
#1:	       borr	r4, r8 -> r10
#2:	       cmpne	r2, 0 -> c1
#3:	       sl	r0, 1 -> r0
	;;
#1:	       sub	r3, r10 -> r3
#2:	       ldx	$mem, 0 -> r10
#0:	       sr	r5, 31 -> r0.16
	;;
#1:	if  c1 br	.BB78_37
#2:	       sra	r3, 31 -> r3
#0:	       or	r0, r0.16 -> r0
	;;
#0:	       and	r3, r12 -> r9
#1:	       and	r3, r10 -> r10
	;;
#3:	       sl	r5, 1 -> r3.16
#1:	       sub	r1, r9 -> r9
#2:	       and	r3, 1 -> r1
#0:	       borr	r8, r10 -> r0.17
	;;
#3:	       or	r6, r3.16 -> r5
#1:	       sub	r8, r10 -> r3
#0:	       sub	r9, r0.17 -> r10
#2:	       or	r1, 0 -> r6
	;;
; BB#38:                                ; %bb41.bb42_crit_edge
#0:	       ldi	0 -> r2
	;;
.BB78_39:                               ; %bb42
#0:	       cmpne	r11, 0 -> c1
#1:	       carr	r5, r5 -> r4
#2:	       add	r0, r0 -> r0
#3:	       add	r5, r5 -> r5
	;;
#0:	if !c1 br	.BB78_7
#1:	       add	r0, r4 -> r4
#2:	       or	r1, r5 -> r0
	;;
#0:	       or	r2, r4 -> r1
	;;
	       nop	1
	;;
; BB#40:                                ; %bb43
#0:	       stm.a	r3, r11, 0
#1:	       br	.BB78_15
	;;
#0:	       stm.a	r10, r11, 1
	;;
	       nop	1
	;;
	.align	4
___udivmoddi4_end:

	.globl	___udivsi3
	.align	4
___udivsi3:                             ; @__udivsi3
	.size	___udivsi3_end-___udivsi3
___udivsi3_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1
#1:	       ldiu	4 -> r2
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 br	.BB79_10
#1:	       sub	r15, r2 -> r15
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 ret
#1:	if !c1 ldi	0 -> r0
#2:	if !c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
; BB#2:                                 ; %bb3
#0:	       sr	r1, 1 -> r2
#1:	       sr	r0, 1 -> r3
#2:	       ldiu	819 -> r7
	;;
#0:	       or	r1, r2 -> r2
#1:	       or	r0, r3 -> r3
#2:	       ldim	614 -> r7
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       ldih	409 -> r7
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 16 -> r4
#1:	       sr	r3, 16 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
#2:	       ldiu	1365 -> r4
	;;
#0:	       ldim	682 -> r4
#1:	       xor	r2, -1 -> r2
#2:	       xor	r3, -1 -> r3
	;;
#0:	       ldih	682 -> r4
#1:	       sr	r2, 1 -> r5
#2:	       sr	r3, 1 -> r6
	;;
#0:	       and	r2, r4 -> r2
#1:	       and	r5, r4 -> r5
#2:	       and	r3, r4 -> r3
#3:	       and	r6, r4 -> r4
	;;
#0:	       add	r2, r5 -> r2
#1:	       add	r3, r4 -> r3
#2:	       ldiu	1807 -> r6
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
#2:	       ldim	481 -> r6
#3:	       ldiu	255 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
#2:	       ldih	120 -> r6
#3:	       ldim	992 -> r7
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
#2:	       and	r2, r6 -> r2
#3:	       and	r3, r6 -> r3
	;;
#0:	       and	r4, r6 -> r4
#1:	       and	r5, r6 -> r5
#2:	       ldih	7 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       mask	r2, 4 -> r4
#1:	       sr	r2, 16 -> r2
#2:	       mask	r3, 4 -> r5
#3:	       sr	r3, 16 -> r3
	;;
#0:	       add	r5, r3 -> r3
#1:	       add	r4, r2 -> r2
#2:	       ldi	31 -> r5
	;;
#0:	       sub	r2, r3 -> r4
	;;
#0:	       cmpult	r5, r4 -> c1
	;;
#0:	if  c1 br	.BB79_10
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb5
#0:	       cmpne	r4, r5 -> c1
	;;
#0:	if !c1 ret
#1:	if !c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
; BB#4:                                 ; %bb7
#0:	       ldi	31 -> r5
	;;
#0:	       sub	r5, r4 -> r5
#1:	       add	r4, 1 -> r4
	;;
#0:	       cmpne	r4, 0 -> c1
#1:	       sl	r0, r5 -> r5
	;;
#0:	if  c1 br	.BB79_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb7.bb10_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB79_8
	;;
	       nop	2
	;;
.BB79_6:                                ; %bb.nph
#0:	       add	r2, 1 -> r2
#1:	       sub	r1, 1 -> r6
#2:	       sr	r0, r4 -> r0
	;;
#0:	       sub	r2, r3 -> r3
#1:	       ldi	0 -> r2
	;;
.BB79_7:                                ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sr	r5, 31 -> r4
#1:	       sl	r0, 1 -> r0
#2:	       sub	r3, 1 -> r3
#3:	       sl	r5, 1 -> r5
	;;
#0:	       or	r0, r4 -> r0
#1:	       cmpne	r3, 0 -> c1
#2:	       or	r2, r5 -> r5
	;;
#0:	if  c1 br	.BB79_7
#1:	       sub	r6, r0 -> r4
	;;
#0:	       sra	r4, 31 -> r4
	;;
#0:	       and	r4, r1 -> r7
#1:	       and	r4, 1 -> r2
	;;
#0:	       sub	r0, r7 -> r0
	;;
.BB79_8:                                ; %bb10
#0:	       sl	r5, 1 -> r0
	;;
#0:	       or	r2, r0 -> r0
	;;
.BB79_9:                                ; %bb11
#0:	       s2add	r15, 1 -> r15
#1:	       ret
	;;
	       nop	3
	;;
.BB79_10:                               ; %entry.bb11_crit_edge
#0:	       ldi	0 -> r0
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
	.align	4
___udivsi3_end:

	.globl	___umoddi3
	.align	4
___umoddi3:                             ; @__umoddi3
	.size	___umoddi3_end-___umoddi3
___umoddi3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 7
#1:	       ldiu	28 -> r5
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       ldiu	4 -> r5
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       add	r14, 20 -> r4
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       sub	r15, r5 -> r15
	;;
#0:	       stm.a	r4, r15, 0
	;;
#0:	       callg	___udivmoddi4
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 7 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___umoddi3_end:

	.globl	___umodsi3
	.align	4
___umodsi3:                             ; @__umodsi3
	.size	___umodsi3_end-___umodsi3
___umodsi3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 6
#1:	       ldiu	24 -> r2
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
#1:	       or	r0, 0 -> r11
	;;
#0:	       callg	___udivsi3
	;;
	       nop	3
	;;
#0:	       mul	r0, r10 -> $mul0
#1:	       ldm.s	r14, 16
#2:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mul0, 0 -> r0
	;;
#0:	       sub	r11, r0 -> r0
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 6 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___umodsi3_end:

	.section	.rodata,"a",@progbits
	.align	32                      ; @pad.2804
_pad.2804:
	.ascii	 "\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

	.section	.data.rel.ro.local,"aw",@progbits
	.align	32                      ; @test.2643
_test.2643:
	.long	._.str
	.long	._.str1
	.long	._.str2
	.long	._.str3
	.long	._.str4
	.long	._.str5
	.long	._.str6
	.long	._.str7
	.long	._.str8
	.long	._.str9
	.long	._.str10
	.long	._.str11
	.long	._.str12
	.long	._.str13

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str
._.str:
	.byte	0

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str1
._.str1:
	.ascii	 "d41d8cd98f00b204e9800998ecf8427e\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str2
._.str2:
	.ascii	 "a\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str3
._.str3:
	.ascii	 "0cc175b9c0f1b6a831c399e269772661\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str4
._.str4:
	.ascii	 "abc\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str5
._.str5:
	.ascii	 "900150983cd24fb0d6963f7d28e17f72\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str6
._.str6:
	.ascii	 "message digest\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str7
._.str7:
	.ascii	 "f96b697d7cb7938d525a2f31aaf161d0\000"

	.align	16                      ; @.str8
._.str8:
	.ascii	 "abcdefghijklmnopqrstuvwxyz\000"

	.align	16                      ; @.str9
._.str9:
	.ascii	 "c3fcd3d76192e4007dfb496cca67e13b\000"

	.align	16                      ; @.str10
._.str10:
	.ascii	 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\000"

	.align	16                      ; @.str11
._.str11:
	.ascii	 "d174ab98d277d9f5a5611c2c9f419d9f\000"

	.align	16                      ; @.str12
._.str12:
	.ascii	 "12345678901234567890123456789012345678901234567890123456789012345678901234567890\000"

	.align	16                      ; @.str13
._.str13:
	.ascii	 "57edf4a22be3c955ac49da2e2107b67a\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str14
._.str14:
	.ascii	 "%02x\000"

	.align	4                       ; @.str15
._.str15:
	.ascii	 "MD5 (\"%s\") = \000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str16
._.str16:
	.ascii	 "**** ERROR, should be: %s\n\000"

	.align	16                      ; @.str17
._.str17:
	.ascii	 "md5 self-test completed successfully.\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str18
._.str18:
	.ascii	 "\n\000"

	.align	4                       ; @.str25
._.str25:
	.ascii	 "C\000"

	.section	.data.rel.local,"aw",@progbits
	.align	32                      ; @impure_data
_impure_data:
	.long	0                       ; 0x0
	.long	_impure_data+748
	.long	_impure_data+852
	.long	_impure_data+956
	.long	0                       ; 0x0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.long	._.str25
	.long	0                       ; 0x0
	.long	0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.quad	1                       ; 0x1
	.short	13070                   ; 0x330e
	.short	43981                   ; 0xabcd
	.short	4660                    ; 0x1234
	.short	58989                   ; 0xe66d
	.short	57068                   ; 0xdeec
	.short	5                       ; 0x5
	.short	11                      ; 0xb
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str26
._.str26:
	.ascii	 "INF\000"

	.align	4                       ; @.str127
._.str127:
	.ascii	 "inf\000"

	.align	4                       ; @.str228
._.str228:
	.ascii	 "NAN\000"

	.align	4                       ; @.str329
._.str329:
	.ascii	 "nan\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str430
._.str430:
	.ascii	 "0123456789abcdef\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str531
._.str531:
	.ascii	 "(null)\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str632
._.str632:
	.ascii	 "0123456789ABCDEF\000"

	.align	16                      ; @.str733
._.str733:
	.ascii	 "bug in vfprintf: bad base\000"

	.section	.rodata.cst16,"aM",@progbits,16
	.align	4                       ; @blanks.3634
_blanks.3634:
	.ascii	 "                "

	.align	4                       ; @zeroes.3635
_zeroes.3635:
	.ascii	 "0000000000000000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str834
._.str834:
	.ascii	 "0\000"

	.align	4                       ; @.str59
._.str59:
	.ascii	 "Infinity\000"

	.align	4                       ; @.str160
._.str160:
	.ascii	 "NaN\000"

	.align	4                       ; @.str65
._.str65:
	.ascii	 ".\000"

	.section	.data.rel.local,"aw",@progbits
	.align	32                      ; @__malloc_av_
___malloc_av_:
	.long	0
	.long	0
	.long	___malloc_av_
	.long	___malloc_av_
	.long	___malloc_av_+8
	.long	___malloc_av_+8
	.long	___malloc_av_+16
	.long	___malloc_av_+16
	.long	___malloc_av_+24
	.long	___malloc_av_+24
	.long	___malloc_av_+32
	.long	___malloc_av_+32
	.long	___malloc_av_+40
	.long	___malloc_av_+40
	.long	___malloc_av_+48
	.long	___malloc_av_+48
	.long	___malloc_av_+56
	.long	___malloc_av_+56
	.long	___malloc_av_+64
	.long	___malloc_av_+64
	.long	___malloc_av_+72
	.long	___malloc_av_+72
	.long	___malloc_av_+80
	.long	___malloc_av_+80
	.long	___malloc_av_+88
	.long	___malloc_av_+88
	.long	___malloc_av_+96
	.long	___malloc_av_+96
	.long	___malloc_av_+104
	.long	___malloc_av_+104
	.long	___malloc_av_+112
	.long	___malloc_av_+112
	.long	___malloc_av_+120
	.long	___malloc_av_+120
	.long	___malloc_av_+128
	.long	___malloc_av_+128
	.long	___malloc_av_+136
	.long	___malloc_av_+136
	.long	___malloc_av_+144
	.long	___malloc_av_+144
	.long	___malloc_av_+152
	.long	___malloc_av_+152
	.long	___malloc_av_+160
	.long	___malloc_av_+160
	.long	___malloc_av_+168
	.long	___malloc_av_+168
	.long	___malloc_av_+176
	.long	___malloc_av_+176
	.long	___malloc_av_+184
	.long	___malloc_av_+184
	.long	___malloc_av_+192
	.long	___malloc_av_+192
	.long	___malloc_av_+200
	.long	___malloc_av_+200
	.long	___malloc_av_+208
	.long	___malloc_av_+208
	.long	___malloc_av_+216
	.long	___malloc_av_+216
	.long	___malloc_av_+224
	.long	___malloc_av_+224
	.long	___malloc_av_+232
	.long	___malloc_av_+232
	.long	___malloc_av_+240
	.long	___malloc_av_+240
	.long	___malloc_av_+248
	.long	___malloc_av_+248
	.long	___malloc_av_+256
	.long	___malloc_av_+256
	.long	___malloc_av_+264
	.long	___malloc_av_+264
	.long	___malloc_av_+272
	.long	___malloc_av_+272
	.long	___malloc_av_+280
	.long	___malloc_av_+280
	.long	___malloc_av_+288
	.long	___malloc_av_+288
	.long	___malloc_av_+296
	.long	___malloc_av_+296
	.long	___malloc_av_+304
	.long	___malloc_av_+304
	.long	___malloc_av_+312
	.long	___malloc_av_+312
	.long	___malloc_av_+320
	.long	___malloc_av_+320
	.long	___malloc_av_+328
	.long	___malloc_av_+328
	.long	___malloc_av_+336
	.long	___malloc_av_+336
	.long	___malloc_av_+344
	.long	___malloc_av_+344
	.long	___malloc_av_+352
	.long	___malloc_av_+352
	.long	___malloc_av_+360
	.long	___malloc_av_+360
	.long	___malloc_av_+368
	.long	___malloc_av_+368
	.long	___malloc_av_+376
	.long	___malloc_av_+376
	.long	___malloc_av_+384
	.long	___malloc_av_+384
	.long	___malloc_av_+392
	.long	___malloc_av_+392
	.long	___malloc_av_+400
	.long	___malloc_av_+400
	.long	___malloc_av_+408
	.long	___malloc_av_+408
	.long	___malloc_av_+416
	.long	___malloc_av_+416
	.long	___malloc_av_+424
	.long	___malloc_av_+424
	.long	___malloc_av_+432
	.long	___malloc_av_+432
	.long	___malloc_av_+440
	.long	___malloc_av_+440
	.long	___malloc_av_+448
	.long	___malloc_av_+448
	.long	___malloc_av_+456
	.long	___malloc_av_+456
	.long	___malloc_av_+464
	.long	___malloc_av_+464
	.long	___malloc_av_+472
	.long	___malloc_av_+472
	.long	___malloc_av_+480
	.long	___malloc_av_+480
	.long	___malloc_av_+488
	.long	___malloc_av_+488
	.long	___malloc_av_+496
	.long	___malloc_av_+496
	.long	___malloc_av_+504
	.long	___malloc_av_+504
	.long	___malloc_av_+512
	.long	___malloc_av_+512
	.long	___malloc_av_+520
	.long	___malloc_av_+520
	.long	___malloc_av_+528
	.long	___malloc_av_+528
	.long	___malloc_av_+536
	.long	___malloc_av_+536
	.long	___malloc_av_+544
	.long	___malloc_av_+544
	.long	___malloc_av_+552
	.long	___malloc_av_+552
	.long	___malloc_av_+560
	.long	___malloc_av_+560
	.long	___malloc_av_+568
	.long	___malloc_av_+568
	.long	___malloc_av_+576
	.long	___malloc_av_+576
	.long	___malloc_av_+584
	.long	___malloc_av_+584
	.long	___malloc_av_+592
	.long	___malloc_av_+592
	.long	___malloc_av_+600
	.long	___malloc_av_+600
	.long	___malloc_av_+608
	.long	___malloc_av_+608
	.long	___malloc_av_+616
	.long	___malloc_av_+616
	.long	___malloc_av_+624
	.long	___malloc_av_+624
	.long	___malloc_av_+632
	.long	___malloc_av_+632
	.long	___malloc_av_+640
	.long	___malloc_av_+640
	.long	___malloc_av_+648
	.long	___malloc_av_+648
	.long	___malloc_av_+656
	.long	___malloc_av_+656
	.long	___malloc_av_+664
	.long	___malloc_av_+664
	.long	___malloc_av_+672
	.long	___malloc_av_+672
	.long	___malloc_av_+680
	.long	___malloc_av_+680
	.long	___malloc_av_+688
	.long	___malloc_av_+688
	.long	___malloc_av_+696
	.long	___malloc_av_+696
	.long	___malloc_av_+704
	.long	___malloc_av_+704
	.long	___malloc_av_+712
	.long	___malloc_av_+712
	.long	___malloc_av_+720
	.long	___malloc_av_+720
	.long	___malloc_av_+728
	.long	___malloc_av_+728
	.long	___malloc_av_+736
	.long	___malloc_av_+736
	.long	___malloc_av_+744
	.long	___malloc_av_+744
	.long	___malloc_av_+752
	.long	___malloc_av_+752
	.long	___malloc_av_+760
	.long	___malloc_av_+760
	.long	___malloc_av_+768
	.long	___malloc_av_+768
	.long	___malloc_av_+776
	.long	___malloc_av_+776
	.long	___malloc_av_+784
	.long	___malloc_av_+784
	.long	___malloc_av_+792
	.long	___malloc_av_+792
	.long	___malloc_av_+800
	.long	___malloc_av_+800
	.long	___malloc_av_+808
	.long	___malloc_av_+808
	.long	___malloc_av_+816
	.long	___malloc_av_+816
	.long	___malloc_av_+824
	.long	___malloc_av_+824
	.long	___malloc_av_+832
	.long	___malloc_av_+832
	.long	___malloc_av_+840
	.long	___malloc_av_+840
	.long	___malloc_av_+848
	.long	___malloc_av_+848
	.long	___malloc_av_+856
	.long	___malloc_av_+856
	.long	___malloc_av_+864
	.long	___malloc_av_+864
	.long	___malloc_av_+872
	.long	___malloc_av_+872
	.long	___malloc_av_+880
	.long	___malloc_av_+880
	.long	___malloc_av_+888
	.long	___malloc_av_+888
	.long	___malloc_av_+896
	.long	___malloc_av_+896
	.long	___malloc_av_+904
	.long	___malloc_av_+904
	.long	___malloc_av_+912
	.long	___malloc_av_+912
	.long	___malloc_av_+920
	.long	___malloc_av_+920
	.long	___malloc_av_+928
	.long	___malloc_av_+928
	.long	___malloc_av_+936
	.long	___malloc_av_+936
	.long	___malloc_av_+944
	.long	___malloc_av_+944
	.long	___malloc_av_+952
	.long	___malloc_av_+952
	.long	___malloc_av_+960
	.long	___malloc_av_+960
	.long	___malloc_av_+968
	.long	___malloc_av_+968
	.long	___malloc_av_+976
	.long	___malloc_av_+976
	.long	___malloc_av_+984
	.long	___malloc_av_+984
	.long	___malloc_av_+992
	.long	___malloc_av_+992
	.long	___malloc_av_+1000
	.long	___malloc_av_+1000
	.long	___malloc_av_+1008
	.long	___malloc_av_+1008
	.long	___malloc_av_+1016
	.long	___malloc_av_+1016

	.data
	.align	4                       ; @__malloc_sbrk_base
___malloc_sbrk_base:
	.long	4294967295

	.local	___malloc_current_mallinfo.0 ; @__malloc_current_mallinfo.0
                                        ; @__malloc_current_mallinfo.0
	.comm	___malloc_current_mallinfo.0,4,32
	.local	___malloc_max_sbrked_mem ; @__malloc_max_sbrked_mem
                                        ; @__malloc_max_sbrked_mem
	.comm	___malloc_max_sbrked_mem,4,4
	.local	___malloc_max_total_mem ; @__malloc_max_total_mem
                                        ; @__malloc_max_total_mem
	.comm	___malloc_max_total_mem,4,4
	.section	.rodata,"a",@progbits
	.align	32                      ; @__mprec_tens
___mprec_tens:
	.quad	4607182418800017408     ; double 1.000000e+00
	.quad	4621819117588971520     ; double 1.000000e+01
	.quad	4636737291354636288     ; double 1.000000e+02
	.quad	4652007308841189376     ; double 1.000000e+03
	.quad	4666723172467343360     ; double 1.000000e+04
	.quad	4681608360884174848     ; double 1.000000e+05
	.quad	4696837146684686336     ; double 1.000000e+06
	.quad	4711630319722168320     ; double 1.000000e+07
	.quad	4726483295884279808     ; double 1.000000e+08
	.quad	4741671816366391296     ; double 1.000000e+09
	.quad	4756540486875873280     ; double 1.000000e+10
	.quad	4771362005757984768     ; double 1.000000e+11
	.quad	4786511204640096256     ; double 1.000000e+12
	.quad	4801453603149578240     ; double 1.000000e+13
	.quad	4816244402031689728     ; double 1.000000e+14
	.quad	4831355200913801216     ; double 1.000000e+15
	.quad	4846369599423283200     ; double 1.000000e+16
	.quad	4861130398305394688     ; double 1.000000e+17
	.quad	4876203697187506176     ; double 1.000000e+18
	.quad	4891288408196988160     ; double 1.000000e+19
	.quad	4906019910204099648     ; double 1.000000e+20
	.quad	4921056587992461136     ; double 1.000000e+21
	.quad	4936209963552724370     ; double 1.000000e+22
	.quad	4950912855330343670     ; double 1.000000e+23
	.quad	4965913770331839924     ; double 1.000000e+24

	.align	4                       ; @p05.2269
_p05.2269:
	.long	5                       ; 0x5
	.long	25                      ; 0x19
	.long	125                     ; 0x7d

	.align	32                      ; @__mprec_bigtens
___mprec_bigtens:
	.quad	4846369599423283200     ; double 1.000000e+16
	.quad	5085611494797045271     ; double 1.000000e+32
	.quad	5564284217833028085     ; double 1.000000e+64
	.quad	6521906365687930162     ; double 1.000000e+128
	.quad	8436737289693151036     ; double 1.000000e+256

	.local	_errno.b                ; @errno.b
                                        ; @errno.b
	.comm	_errno.b,1,1
	.local	_heap_end.1081          ; @heap_end.1081
                                        ; @heap_end.1081
	.comm	_heap_end.1081,4,4
