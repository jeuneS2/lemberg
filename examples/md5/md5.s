	.file	"md5.linked.bc"
                                        ; Start of file scope inline assembly
.stabs "_fstat is not implemented and will always fail",30,0,0,0
.stabs "_fstat",1,0,0,0

.stabs "_lseek is not implemented and will always fail",30,0,0,0
.stabs "_lseek",1,0,0,0

                                        ; End of file scope inline assembly
	.text
	.align	4
_md5_process:                           ; @md5_process
	.size	_md5_process_end-_md5_process
_md5_process_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 37
#2:	       ldiu	148 -> r3
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r3 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       ldiu	128 -> r3
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, r3 -> r3
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r3, 4
	;;
#0:	       stm.s	r11, r3, 3
	;;
#0:	       stm.s	r12, r3, 2
	;;
#0:	       stm.s	r13, r3, 1
	;;
#0:	       ldm.f	r0, 8
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 5
	;;
#0:	       ldm.f	r0, 12
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r0, 16
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 15
	;;
#0:	       ldm.f	r0, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 16
#1:	       and	r1, 3 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stm.s	r0, r14, 4
	;;
#0:	if !c1 br	.BB0_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb2
#0:	       s2add	r14, 16 -> r12
#1:	       callg	_memcpy
#2:	       ldi	64 -> r2
	;;
#0:	       add	r12, 4 -> r11
	;;
#0:	       or	r11, 0 -> r0
	;;
	       nop	1
	;;
#0:	       or	r11, 0 -> r1
	;;
.BB0_2:                                 ; %bb10
#1:	       ldm.s	r14, 64
#2:	       xor	r10, -1 -> r0
#3:	       ldiu	1878 -> r6
#0:	       ldiu	1774 -> r0.16
	;;
#2:	       ldga	697464 -> r2.16
#1:	       ldim	246 -> r6
#0:	       ldim	953 -> r0.16
#3:	       or	r14, 0 -> r15
	;;
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.s	r14, 60
#3:	       ldih	1862 -> r6
#0:	       ldih	1549 -> r0.16
	;;
#0:	       and	r2, r0 -> r0
#2:	       ldih	1723 -> r2.16
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.f	r1, 0
	;;
#0:	       and	r3, r10 -> r4
#2:	       ldiu	33 -> r2.17
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       or	r0, r4 -> r0
	;;
#0:	       stm.s	r2, r14, 8
#2:	       ldim	641 -> r2.17
	;;
#0:	       ldm.s	r14, 20
#2:	       ldih	589 -> r2.17
	;;
#3:	       ldiu	1378 -> r3.17
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.f	r1, 4
	;;
#0:	       add	r3, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       add	r0, r2 -> r0
	;;
#0:	       stm.s	r5, r14, 12
#2:	       add	r0, r2.16 -> r0
	;;
#0:	       ldm.s	r14, 60
#1:	       rl	r0, 7 -> r0
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 64
#2:	       xor	r0, -1 -> r4
#3:	       and	r0, r10 -> r7
	;;
#0:	       and	r3, r4 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       or	r7, r4 -> r4
#2:	       ldm.f	r1, 8
	;;
#0:	       add	r2, r5 -> r8
	;;
#0:	       add	r8, r4 -> r4
#1:	       ldx	$mem, 0 -> r7
#2:	       ldiu	219 -> r8
	;;
#0:	       add	r4, r6 -> r4
#2:	       ldim	14 -> r8
#1:	       add	r3, r7 -> r1.16
#3:	       stm.s	r7, r14, 14
	;;
#0:	       rl	r4, 12 -> r4
#1:	       ldih	289 -> r8
#2:	       ldm.f	r1, 12
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r4, -1 -> r6
#1:	       and	r4, r0 -> r9
	;;
#0:	       and	r10, r6 -> r6
	;;
#0:	       or	r9, r6 -> r6
#1:	       ldx	$mem, 0 -> r9
	;;
#1:	       add	r1.16, r6 -> r6
#3:	       add	r10, r9 -> r3.16
#0:	       stm.s	r9, r14, 9
	;;
#0:	       add	r6, r8 -> r6
#1:	       ldm.f	r1, 16
	;;
#0:	       rl	r6, 17 -> r6
	;;
#0:	       add	r6, r4 -> r6
#1:	       ldx	$mem, 0 -> r11
	;;
#0:	       xor	r6, -1 -> r8
#2:	       and	r6, r4 -> r2.16
#1:	       stm.s	r11, r14, 13
	;;
#0:	       and	r0, r8 -> r8
#1:	       add	r11, r0 -> r0
#2:	       ldm.f	r1, 20
	;;
#2:	       or	r2.16, r8 -> r8
#3:	       ldim	964 -> r3.17
	;;
#3:	       add	r3.16, r8 -> r8
#2:	       ldiu	1967 -> r2.16
	;;
#0:	       add	r8, r0.16 -> r8
#2:	       ldim	897 -> r2.16
#3:	       ldih	1968 -> r3.17
	;;
#1:	       rl	r8, 22 -> r8
#2:	       ldih	1963 -> r2.16
#0:	       ldiu	1967 -> r0.16
	;;
#1:	       add	r8, r6 -> r8
#0:	       ldim	158 -> r0.16
	;;
#1:	       xor	r8, -1 -> r1.16
#0:	       and	r8, r6 -> r0.17
	;;
#1:	       and	r4, r1.16 -> r12
#0:	       ldih	1114 -> r0.16
	;;
#0:	       or	r0.17, r12 -> r12
	;;
#1:	       add	r0, r12 -> r0
#2:	       ldx	$mem, 0 -> r12
#0:	       ldiu	1578 -> r0.17
#3:	       ldm.f	r1, 24
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldim	248 -> r0.17
#1:	       add	r12, r4 -> r4
	;;
#1:	       rl	r0, 7 -> r0
#0:	       ldih	572 -> r0.17
	;;
#0:	       add	r0, r8 -> r0
	;;
#3:	       xor	r0, -1 -> r3.16
#2:	       and	r0, r8 -> r2.16
	;;
#3:	       and	r6, r3.16 -> r13
	;;
#2:	       or	r2.16, r13 -> r13
#3:	       ldiu	290 -> r3.16
	;;
#0:	       add	r4, r13 -> r4
#1:	       ldx	$mem, 0 -> r13
	;;
#0:	       add	r4, r0.17 -> r4
#2:	       ldiu	1555 -> r2.16
#1:	       add	r13, r6 -> r6
#3:	       stm.s	r13, r14, 10
	;;
#0:	       rl	r4, 12 -> r4
#2:	       ldim	520 -> r2.16
#1:	       ldm.f	r1, 28
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1345 -> r2.16
	;;
#1:	       xor	r4, -1 -> r1.16
#0:	       and	r4, r0 -> r0.17
#2:	       ldx	$mem, 0 -> r3
#3:	       ldm.f	r1, 32
	;;
#1:	       and	r8, r1.16 -> r2
#0:	       add	r3, r8 -> r8
	;;
#0:	       or	r0.17, r2 -> r2
#2:	       ldx	$mem, 0 -> r5
#1:	       ldiu	910 -> r1.16
	;;
#2:	       add	r6, r2 -> r2
#0:	       ldiu	1281 -> r0.17
#3:	       stm.s	r5, r14, 6
#1:	       ldim	808 -> r1.16
	;;
#2:	       add	r2, r2.16 -> r2
#0:	       ldim	210 -> r0.17
#3:	       ldm.f	r1, 36
#1:	       ldih	1331 -> r1.16
	;;
#1:	       rl	r2, 17 -> r2
#0:	       ldih	2026 -> r0.17
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r2, -1 -> r6
#2:	       and	r2, r4 -> r2.16
	;;
#0:	       and	r0, r6 -> r6
#1:	       add	r5, r0 -> r0
	;;
#2:	       or	r2.16, r6 -> r6
#3:	       ldim	940 -> r3.16
	;;
#0:	       add	r8, r6 -> r6
#2:	       ldga	39128 -> r2.16
	;;
#0:	       add	r6, r0.17 -> r6
#2:	       ldih	844 -> r2.16
#3:	       ldih	876 -> r3.16
	;;
#0:	       rl	r6, 22 -> r6
	;;
#0:	       add	r6, r2 -> r6
	;;
#0:	       xor	r6, -1 -> r8
#1:	       and	r6, r2 -> r7
	;;
#0:	       and	r4, r8 -> r8
	;;
#0:	       or	r7, r8 -> r7
#1:	       ldx	$mem, 0 -> r8
	;;
#0:	       add	r0, r7 -> r0
#1:	       add	r8, r4 -> r4
#2:	       stm.s	r8, r14, 11
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldm.f	r1, 40
	;;
#0:	       rl	r0, 7 -> r0
#2:	       ldiu	945 -> r2.16
	;;
#0:	       add	r0, r6 -> r0
#2:	       ldim	2027 -> r2.16
	;;
#0:	       xor	r0, -1 -> r7
#1:	       and	r0, r6 -> r9
	;;
#0:	       and	r2, r7 -> r7
	;;
#0:	       or	r9, r7 -> r7
#1:	       ldx	$mem, 0 -> r9
#2:	       ldm.f	r1, 44
	;;
#0:	       add	r4, r7 -> r4
#1:	       add	r9, r2 -> r2
	;;
#0:	       add	r4, r0.16 -> r4
#1:	       ldx	$mem, 0 -> r11
	;;
#0:	       rl	r4, 12 -> r4
#1:	       stm.s	r11, r14, 7
	;;
#0:	       add	r4, r0 -> r4
#1:	       ldm.f	r1, 48
	;;
#1:	       xor	r4, -1 -> r7
#0:	       and	r4, r0 -> r0.16
	;;
#0:	       and	r6, r7 -> r7
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r13
#3:	       ldm.f	r1, 52
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#0:	       ldiu	1982 -> r0.16
#2:	       ldx	$mem, 0 -> r5
#3:	       ldm.f	r1, 56
	;;
#2:	       add	r2, r2.16 -> r2
#0:	       ldim	922 -> r0.16
	;;
#1:	       rl	r2, 17 -> r2
#0:	       ldih	1098 -> r0.16
#2:	       ldx	$mem, 0 -> r8
#3:	       ldm.f	r1, 60
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r2, -1 -> r7
#2:	       and	r2, r4 -> r2.16
#1:	       ldx	$mem, 0 -> r1
#3:	       ldm.s	r14, 48
	;;
#0:	       and	r0, r7 -> r7
#1:	       add	r13, r0 -> r0
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#2:	       ldiu	290 -> r2.16
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldim	514 -> r2.16
	;;
#0:	       rl	r6, 22 -> r6
#2:	       ldih	860 -> r2.16
	;;
#0:	       add	r6, r2 -> r6
	;;
#1:	       xor	r6, -1 -> r7
#0:	       and	r6, r2 -> r0.16
	;;
#0:	       and	r4, r7 -> r7
#1:	       add	r5, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#0:	       ldiu	403 -> r0.16
	;;
#2:	       add	r0, r2.16 -> r0
#0:	       ldim	782 -> r0.16
	;;
#1:	       rl	r0, 7 -> r0
#0:	       ldih	2028 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#0:	       xor	r0, -1 -> r7
#2:	       and	r0, r6 -> r2.16
	;;
#0:	       and	r2, r7 -> r7
#1:	       add	r8, r2 -> r2
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
	;;
#0:	       add	r4, r0.16 -> r4
	;;
#0:	       rl	r4, 12 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#1:	       xor	r4, -1 -> r7
#0:	       and	r4, r0 -> r0.16
	;;
#0:	       and	r6, r7 -> r0.17
#1:	       add	r1, r6 -> r6
	;;
#0:	       or	r0.16, r0.17 -> r11
	;;
#0:	       add	r2, r11 -> r2
	;;
#1:	       add	r2, r1.16 -> r2
	;;
#0:	       rl	r2, 17 -> r2
#1:	       ldiu	322 -> r1.16
	;;
#0:	       add	r2, r4 -> r2
#1:	       ldim	1863 -> r1.16
	;;
#2:	       xor	r2, -1 -> r2.16
#0:	       and	r2, r7 -> r7
	;;
#2:	       and	r2, r4 -> r2.18
	;;
#2:	       and	r0, r2.16 -> r2.19
	;;
#2:	       or	r2.18, r2.19 -> r11
	;;
#0:	       add	r6, r11 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 40
	;;
#2:	       add	r6, r2.17 -> r6
#0:	       add	r11, r0 -> r0
	;;
#0:	       rl	r6, 22 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 28
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldiu	1665 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#2:	       and	r6, r2.16 -> r2.16
#1:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r0.16, r7 -> r7
#1:	       ldm.s	r14, 32
#2:	       ldim	60 -> r2.17
	;;
#1:	       add	r0, r7 -> r0
#0:	       ldga	45888 -> r0.16
#2:	       ldih	1733 -> r2.17
	;;
#3:	       add	r0, r3.17 -> r0
#0:	       ldih	1538 -> r0.16
	;;
#0:	       rl	r0, 5 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#0:	       and	r0, r2 -> r7
#1:	       add	r11, r2 -> r2
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 52
	;;
#2:	       or	r7, r2.16 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	593 -> r2.16
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	971 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	306 -> r2.16
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 44
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1962 -> r0.16
	;;
#2:	       add	r2, r2.16 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	728 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	1869 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.16
#0:	       add	r12, r0 -> r0
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	93 -> r2.16
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	482 -> r2.16
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	1713 -> r2.16
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r9, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldiu	1107 -> r0.16
	;;
#2:	       add	r0, r2.16 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldim	130 -> r0.16
	;;
#1:	       rl	r0, 5 -> r0
#0:	       ldih	18 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.16
#0:	       add	r1, r2 -> r2
	;;
#2:	       or	r2.16, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#1:	       and	r0, r7 -> r7
#2:	       ldiu	1665 -> r2.16
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	574 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1083 -> r2.16
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 36
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldga	1309640 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldih	1854 -> r0.16
	;;
#0:	       rl	r2, 14 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r11, r0 -> r0
#1:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 24
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	1510 -> r2.17
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	57 -> r2.17
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	271 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r8, r4 -> r4
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldiu	2006 -> r0.16
	;;
#2:	       add	r0, r2.17 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldim	736 -> r0.16
	;;
#1:	       rl	r0, 5 -> r0
#0:	       ldih	1561 -> r0.16
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.17
#0:	       add	r11, r2 -> r2
#1:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 56
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	1415 -> r2.17
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	673 -> r2.17
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	1958 -> r2.17
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r11, r6 -> r6
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 24
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1261 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	834 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	554 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r5, r0 -> r0
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r4, -1 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldiu	261 -> r2.17
#1:	       and	r2, r7 -> r7
	;;
#0:	       rl	r6, 20 -> r6
#2:	       ldim	125 -> r2.17
	;;
#0:	       add	r6, r2 -> r6
#2:	       ldih	1359 -> r2.17
	;;
#0:	       and	r6, r4 -> r0.16
#1:	       add	r11, r4 -> r4
#2:	       ldx	$mem, 0 -> r11
#3:	       ldm.s	r14, 28
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r0, r7 -> r0
#2:	       xor	r2, -1 -> r7
#0:	       ldga	1025016 -> r0.16
	;;
#2:	       add	r0, r2.17 -> r0
#1:	       and	r6, r7 -> r7
#0:	       ldih	2023 -> r0.16
	;;
#0:	       rl	r0, 5 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       and	r0, r2 -> r2.17
#0:	       add	r3, r2 -> r2
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r6, -1 -> r7
	;;
#0:	       add	r4, r0.16 -> r4
#2:	       ldiu	729 -> r2.17
#1:	       and	r0, r7 -> r7
	;;
#0:	       rl	r4, 9 -> r4
#2:	       ldim	480 -> r2.17
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldih	827 -> r2.17
	;;
#0:	       and	r4, r6 -> r0.16
#1:	       add	r13, r6 -> r6
	;;
#0:	       or	r0.16, r7 -> r7
	;;
#1:	       add	r2, r7 -> r2
#2:	       xor	r0, -1 -> r7
#0:	       ldiu	1162 -> r0.16
	;;
#2:	       add	r2, r2.17 -> r2
#1:	       and	r4, r7 -> r7
#0:	       ldim	329 -> r0.16
	;;
#1:	       rl	r2, 14 -> r2
#0:	       ldih	1129 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       and	r2, r0 -> r2.17
#0:	       add	r12, r0 -> r0
	;;
#2:	       or	r2.17, r7 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#1:	       ldm.s	r14, 48
#2:	       ldiu	485 -> r2.17
	;;
#1:	       rl	r6, 20 -> r6
#0:	       ldga	342028 -> r0.16
#2:	       ldim	883 -> r2.17
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldih	2031 -> r0.16
#2:	       ldih	1846 -> r2.17
	;;
#0:	       xor	r7, r6 -> r7
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#1:	       add	r0, r1.16 -> r0
#0:	       ldm.s	r14, 52
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldga	2026052 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldih	1317 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r8, r6 -> r6
	;;
#2:	       add	r4, r2.16 -> r4
	;;
#0:	       rl	r4, 11 -> r4
#2:	       ldiu	1961 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldim	985 -> r2.16
	;;
#0:	       xor	r7, r4 -> r7
#2:	       ldih	606 -> r2.16
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#3:	       add	r2, r3.16 -> r2
#0:	       ldm.s	r14, 32
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldga	1788768 -> r3.16
#1:	       ldm.s	r14, 36
	;;
#1:	       rl	r6, 23 -> r6
#0:	       ldga	2079856 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldih	1525 -> r0.16
	;;
#0:	       xor	r7, r6 -> r7
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r3, r2 -> r2
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldih	1973 -> r3.16
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldiu	1734 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldim	879 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
#1:	       ldih	324 -> r1.16
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r9, r6 -> r6
	;;
#2:	       add	r4, r2.16 -> r4
	;;
#0:	       rl	r4, 11 -> r4
#2:	       ldiu	2042 -> r2.16
	;;
#0:	       add	r4, r0 -> r4
#2:	       ldim	36 -> r2.16
	;;
#0:	       xor	r7, r4 -> r7
#2:	       ldih	1877 -> r2.16
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r5, r0 -> r0
	;;
#3:	       add	r2, r3.16 -> r2
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       xor	r2, r4 -> r7
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldiu	133 -> r3.16
#1:	       ldm.s	r14, 40
	;;
#1:	       rl	r6, 23 -> r6
#0:	       ldiu	1285 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldim	259 -> r0.16
	;;
#1:	       xor	r7, r6 -> r7
#0:	       ldih	36 -> r0.16
	;;
#0:	       add	r0, r7 -> r0
#1:	       xor	r6, r2 -> r7
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldim	486 -> r3.16
#0:	       ldm.s	r14, 44
	;;
#0:	       rl	r0, 4 -> r0
#1:	       ldiu	57 -> r1.16
	;;
#0:	       add	r0, r6 -> r0
#1:	       ldim	666 -> r1.16
	;;
#0:	       xor	r7, r0 -> r7
#1:	       ldih	1742 -> r1.16
	;;
#0:	       add	r4, r7 -> r4
#1:	       xor	r0, r6 -> r7
#2:	       add	r11, r6 -> r6
#3:	       ldx	$mem, 0 -> r11
	;;
#2:	       add	r4, r2.16 -> r4
#3:	       ldih	1703 -> r3.16
#0:	       ldm.s	r14, 56
	;;
#0:	       rl	r4, 11 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r7, r4 -> r7
	;;
#0:	       add	r2, r7 -> r2
#1:	       xor	r4, r0 -> r7
#2:	       add	r11, r0 -> r0
	;;
#3:	       add	r2, r3.16 -> r2
	;;
#0:	       rl	r2, 16 -> r2
	;;
#0:	       add	r2, r4 -> r2
	;;
#0:	       xor	r7, r2 -> r7
	;;
#0:	       add	r6, r7 -> r6
#1:	       ldiu	57 -> r7
	;;
#0:	       add	r6, r0.16 -> r6
#3:	       ldga	163064 -> r3.16
#1:	       ldim	628 -> r7
	;;
#1:	       rl	r6, 23 -> r6
#0:	       xor	r2, r4 -> r0.16
#2:	       add	r13, r4 -> r4
#3:	       ldih	2020 -> r7
	;;
#0:	       add	r6, r2 -> r6
	;;
#0:	       xor	r0.16, r6 -> r11
#2:	       xor	r6, r2 -> r2.16
#1:	       add	r1, r2 -> r2
	;;
#0:	       add	r0, r11 -> r0
	;;
#1:	       add	r0, r1.16 -> r0
#3:	       ldih	253 -> r3.16
	;;
#0:	       rl	r0, 4 -> r0
	;;
#0:	       add	r0, r6 -> r0
	;;
#2:	       xor	r2.16, r0 -> r11
#0:	       xor	r0, r6 -> r0.16
	;;
#0:	       add	r4, r11 -> r4
	;;
#2:	       add	r4, r2.17 -> r4
	;;
#0:	       rl	r4, 11 -> r4
	;;
#0:	       add	r4, r0 -> r4
	;;
#0:	       xor	r0.16, r4 -> r11
#2:	       xor	r4, r0 -> r2.16
#1:	       xor	r4, -1 -> r1.16
#3:	       add	r3, r4 -> r3
	;;
#1:	       add	r2, r11 -> r2
#2:	       ldx	$mem, 0 -> r11
#0:	       ldiu	1637 -> r0.16
#3:	       ldm.s	r14, 32
	;;
#3:	       add	r2, r3.16 -> r2
#0:	       ldim	394 -> r0.16
#1:	       add	r11, r6 -> r6
	;;
#1:	       rl	r2, 16 -> r2
#0:	       ldih	1573 -> r0.16
	;;
#0:	       add	r2, r4 -> r2
	;;
#2:	       xor	r2.16, r2 -> r11
#3:	       xor	r2, -1 -> r3.16
	;;
#0:	       add	r6, r11 -> r6
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 36
	;;
#0:	       add	r6, r0.16 -> r6
#2:	       ldga	598596 -> r2.16
#1:	       add	r11, r0 -> r0
	;;
#1:	       rl	r6, 23 -> r6
#2:	       ldih	1953 -> r2.16
#0:	       ldiu	1943 -> r0.16
	;;
#1:	       add	r6, r2 -> r6
#0:	       ldim	351 -> r0.16
	;;
#1:	       or	r6, r1.16 -> r1.16
#0:	       ldih	537 -> r0.16
	;;
#1:	       xor	r1.16, r2 -> r11
#0:	       add	r8, r2 -> r2
	;;
#0:	       add	r0, r11 -> r0
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 48
	;;
#2:	       add	r0, r2.16 -> r0
	;;
#0:	       rl	r0, 6 -> r0
#2:	       ldiu	935 -> r2.16
	;;
#0:	       add	r0, r6 -> r0
#2:	       ldim	644 -> r2.16
	;;
#3:	       or	r0, r3.16 -> r3.16
#2:	       ldih	1372 -> r2.16
	;;
#3:	       xor	r3.16, r6 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       xor	r6, -1 -> r4
#2:	       add	r12, r6 -> r6
	;;
#0:	       add	r3, r0.16 -> r3
	;;
#0:	       rl	r3, 10 -> r3
	;;
#0:	       add	r3, r0 -> r3
	;;
#0:	       or	r3, r4 -> r4
	;;
#0:	       xor	r4, r0 -> r4
	;;
#0:	       add	r2, r4 -> r2
#1:	       xor	r0, -1 -> r4
#2:	       add	r13, r0 -> r0
	;;
#2:	       add	r2, r2.16 -> r2
	;;
#0:	       rl	r2, 15 -> r2
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       or	r2, r4 -> r4
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       add	r6, r4 -> r4
#1:	       xor	r3, -1 -> r6
#2:	       add	r11, r3 -> r3
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r4, r7 -> r4
#1:	       ldiu	451 -> r7
#2:	       ldm.s	r14, 24
	;;
#0:	       rl	r4, 21 -> r4
#1:	       ldim	875 -> r7
	;;
#0:	       add	r4, r2 -> r4
#1:	       ldih	810 -> r7
	;;
#0:	       or	r4, r6 -> r6
	;;
#0:	       xor	r6, r2 -> r6
	;;
#0:	       add	r0, r6 -> r0
#1:	       xor	r2, -1 -> r6
#2:	       add	r9, r2 -> r2
	;;
#0:	       add	r0, r7 -> r0
#1:	       ldiu	1170 -> r7
	;;
#0:	       rl	r0, 6 -> r0
#1:	       ldim	409 -> r7
	;;
#0:	       add	r0, r4 -> r0
#1:	       ldih	1144 -> r7
	;;
#0:	       or	r0, r6 -> r6
	;;
#0:	       xor	r6, r4 -> r6
	;;
#0:	       add	r3, r6 -> r3
#1:	       xor	r4, -1 -> r6
#2:	       add	r11, r4 -> r4
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r3, r7 -> r3
#1:	       ldiu	1149 -> r7
#2:	       ldm.s	r14, 40
	;;
#0:	       rl	r3, 10 -> r3
#1:	       ldim	1534 -> r7
	;;
#0:	       add	r3, r0 -> r3
	;;
#0:	       or	r3, r6 -> r6
#1:	       add	r1, r3 -> r1
	;;
#0:	       xor	r6, r0 -> r6
	;;
#0:	       add	r2, r6 -> r2
#1:	       xor	r0, -1 -> r6
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r2, r7 -> r2
#1:	       ldiu	1489 -> r7
#2:	       ldm.s	r14, 52
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldim	139 -> r7
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldih	1068 -> r7
	;;
#0:	       or	r2, r6 -> r6
	;;
#0:	       xor	r6, r3 -> r6
	;;
#0:	       add	r4, r6 -> r4
#1:	       xor	r3, -1 -> r6
	;;
#0:	       add	r4, r7 -> r4
#1:	       ldiu	1615 -> r7
	;;
#0:	       rl	r4, 21 -> r4
#1:	       ldim	271 -> r7
	;;
#0:	       add	r4, r2 -> r4
#1:	       ldih	893 -> r7
	;;
#0:	       or	r4, r6 -> r6
	;;
#0:	       xor	r6, r2 -> r6
	;;
#0:	       add	r0, r6 -> r0
#1:	       xor	r2, -1 -> r6
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r0, r7 -> r0
#1:	       ldm.s	r14, 28
	;;
#0:	       rl	r0, 6 -> r0
	;;
#0:	       add	r0, r4 -> r0
	;;
#0:	       or	r0, r6 -> r6
	;;
#0:	       xor	r6, r4 -> r3
#1:	       ldiu	417 -> r6
	;;
#0:	       add	r1, r3 -> r1
#1:	       ldga	845536 -> r3
#2:	       ldim	258 -> r6
	;;
#0:	       ldih	2033 -> r3
#1:	       ldih	624 -> r6
	;;
#0:	       add	r1, r3 -> r1
#1:	       xor	r4, -1 -> r3
#2:	       add	r5, r4 -> r4
#3:	       ldiu	1666 -> r5
	;;
#0:	       rl	r1, 10 -> r1
#1:	       ldim	623 -> r5
	;;
#0:	       add	r1, r0 -> r1
#1:	       ldih	1978 -> r5
	;;
#0:	       or	r1, r3 -> r3
	;;
#0:	       xor	r3, r0 -> r3
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldga	82708 -> r3
	;;
#0:	       ldih	1304 -> r3
	;;
#0:	       add	r2, r3 -> r2
#1:	       xor	r0, -1 -> r3
#2:	       add	r11, r0 -> r0
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldm.s	r14, 56
	;;
#0:	       add	r2, r1 -> r2
	;;
#0:	       or	r2, r3 -> r3
	;;
#0:	       xor	r3, r1 -> r3
	;;
#0:	       add	r4, r3 -> r3
#1:	       xor	r1, -1 -> r4
#2:	       add	r11, r1 -> r1
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r3, r6 -> r3
#1:	       ldm.s	r14, 44
	;;
#0:	       rl	r3, 21 -> r3
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       or	r3, r4 -> r4
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       add	r0, r4 -> r0
#1:	       xor	r2, -1 -> r4
#2:	       add	r11, r2 -> r2
#3:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r0, r5 -> r0
#1:	       ldiu	565 -> r5
#2:	       ldm.s	r14, 20
	;;
#0:	       rl	r0, 6 -> r0
#1:	       ldim	862 -> r5
	;;
#0:	       add	r0, r3 -> r0
#1:	       ldih	1513 -> r5
	;;
#0:	       or	r0, r4 -> r4
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       add	r1, r4 -> r1
#1:	       xor	r3, -1 -> r4
#2:	       add	r11, r3 -> r3
	;;
#0:	       add	r1, r5 -> r1
#1:	       ldiu	699 -> r5
	;;
#0:	       rl	r1, 10 -> r1
#1:	       ldim	762 -> r5
	;;
#0:	       add	r1, r0 -> r1
#1:	       ldih	342 -> r5
	;;
#0:	       or	r1, r4 -> r4
	;;
#0:	       xor	r4, r0 -> r4
	;;
#0:	       add	r2, r4 -> r2
#1:	       xor	r0, -1 -> r4
	;;
#0:	       add	r2, r5 -> r2
#1:	       ldiu	913 -> r5
	;;
#0:	       rl	r2, 15 -> r2
#1:	       ldim	218 -> r5
	;;
#0:	       add	r2, r1 -> r2
#1:	       ldih	1884 -> r5
	;;
#0:	       or	r2, r4 -> r4
	;;
#0:	       xor	r4, r1 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       add	r2, r10 -> r4
	;;
#0:	       add	r3, r5 -> r3
#1:	       ldx	$mem, 0 -> r5
#2:	       ldm.s	r14, 16
	;;
#0:	       rl	r3, 21 -> r3
#1:	       add	r0, r5 -> r0
	;;
#0:	       add	r4, r3 -> r3
#1:	       ldx	$mem, 0 -> r4
	;;
#0:	       stm.a	r0, r4, 2
	;;
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stm.a	r3, r4, 3
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       stm.a	r0, r4, 4
#2:	       ldiu	148 -> r0
	;;
#0:	       add	r1, r2 -> r1
	;;
#0:	       stm.a	r1, r4, 5
	;;
#0:	       ldm.s	r14, 132
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 136
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 140
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 144
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 0
#2:	       add	r15, r0 -> r15
	;;
#0:	       stx	r0.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_md5_process_end:

	.align	4
_md5_append:                            ; @md5_append
	.size	_md5_append_end-_md5_append
_md5_append_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 10
#2:	       ldiu	40 -> r3
#1:	       ldx	$rb, 0 -> r1.31
	;;
#0:	       sub	r15, r3 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r2, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
#1:	       cmplt	r10, 1 -> c1
#2:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 7
#1:	       or	r0, 0 -> r12
	;;
#0:	if  c1 br	.BB1_9
#1:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r0.23, r14, 5
	;;
#0:	       ldm.f	r12, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r12, 4
#1:	       sra	r10, 29 -> r3
#2:	       sl	r10, 3 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r1 -> r3
#2:	       sr	r0, 3 -> r0
	;;
#0:	       stm.a	r2, r12, 1
#1:	       cmpule	r1, r3 -> c1
	;;
#0:	if !c1 add	r2, 1 -> r1
	;;
#0:	       stm.a	r3, r12, 0
	;;
#0:	if !c1 stm.a	r1, r12, 1
#1:	       ldi	63 -> r1
	;;
#0:	       and	r0, r1 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if !c1 br	.BB1_4
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb3
#0:	       add	r1, r10 -> r0
#1:	       ldi	64 -> r3
#2:	       or	r10, 0 -> r13
#3:	       add	r12, r1 -> r2
	;;
#0:	       callg	_memcpy
#1:	       cmplt	r3, r0 -> c1
#2:	       sub	r3, r1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r13
#1:	       add	r2, 24 -> r0
	;;
#0:	       add	r13, r1 -> r1
#1:	       or	r13, 0 -> r2
	;;
#0:	       stm.s	r1, r14, 4
#1:	       or	r11, 0 -> r1
	;;
	       nop	0
	;;
#0:	       ldm.s	r14, 16
#1:	       ldi	64 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r1, r3 -> c1
	;;
#0:	if  c1 br	.BB1_9
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb7
#0:	       add	r11, r13 -> r11
#1:	       sub	r10, r13 -> r10
#2:	       add	r12, 24 -> r1
#3:	       or	r12, 0 -> r0
	;;
#0:	       callg	_md5_process
	;;
	       nop	3
	;;
.BB1_4:                                 ; %bb9.preheader
#0:	       ldi	63 -> r13
	;;
#0:	       cmplt	r13, r10 -> c1
	;;
#0:	if !c1 br	.BB1_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb9.preheader.bb8_crit_edge
#0:	       ldi	-64 -> r0.23
#1:	       or	r11, 0 -> r1
	;;
.BB1_6:                                 ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#1:	       s2add	r1, 16 -> r11
#2:	       callg	_md5_process
#0:	       add	r10, r0.23 -> r10
#3:	       or	r12, 0 -> r0
	;;
	       nop	3
	;;
#0:	       cmplt	r13, r10 -> c1
#1:	       or	r11, 0 -> r1
	;;
#0:	if  c1 br	.BB1_6
	;;
	       nop	2
	;;
.BB1_7:                                 ; %bb10
#0:	       cmpeq	r10, 0 -> c1
	;;
#0:	if  c1 br	.BB1_9
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb11
#0:	       add	r12, 24 -> r0
#1:	       callg	_memcpy
#2:	       or	r11, 0 -> r1
#3:	       or	r10, 0 -> r2
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB1_10
#3:	       ldx	$mem, 0 -> r3.31
#1:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB1_9:                                 ; %return
#0:	       ldm.s	r14, 20
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB1_10:                                ; %return
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 10 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_md5_append_end:

	.globl	_main
	.align	4
_main:                                  ; @main
	.size	_main_end-_main
_main_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 61
#2:	       ldiu	244 -> r1
#0:	       ldx	$ro, 0 -> r0.31
#3:	       ldi	0 -> r0
	;;
#0:	       sub	r15, r1 -> r15
#1:	       ldiu	128 -> r1
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
#0:	       add	r14, r1 -> r1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r1, 28
	;;
#0:	       stm.s	r11, r1, 27
	;;
#0:	       stm.s	r12, r1, 26
	;;
#0:	       stm.s	r13, r1, 25
	;;
#0:	       stm.s	r0, r14, 7
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 5
	;;
.BB2_1:                                 ; %bb.nph.i
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB2_24 Depth 2
                                        ;     Child Loop BB2_22 Depth 2
                                        ;     Child Loop BB2_16 Depth 2
                                        ;     Child Loop BB2_14 Depth 2
                                        ;     Child Loop BB2_12 Depth 2
                                        ;     Child Loop BB2_4 Depth 2
                                        ;     Child Loop BB2_6 Depth 2
                                        ;     Child Loop BB2_8 Depth 2
                                        ;     Child Loop BB2_30 Depth 2
                                        ;     Child Loop BB2_32 Depth 2
                                        ;     Child Loop BB2_34 Depth 2
#0:	       ldm.s	r14, 28
#1:	       ldga	_test.2643 -> r2
#2:	       ldi	0 -> r6
#3:	       s2add	r14, 16 -> r7
	;;
#0:	       add	r7, 20 -> r5
#1:	       ldiu	905 -> r3
#2:	       ldiu	769 -> r4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldim	437 -> r3
#2:	       ldim	164 -> r4
	;;
#0:	       sl	r0, 1 -> r0
#1:	       ldih	1918 -> r3
#2:	       ldih	826 -> r4
	;;
#0:	       sl	r0, 2 -> r1
#1:	       sub	r6, r0 -> r0
	;;
#0:	       sub	r2, r1 -> r1
#1:	       ldiu	1278 -> r2
	;;
#0:	       ldm.f	r1, 0
#1:	       ldiu	1142 -> r1
#2:	       ldim	859 -> r2
	;;
#0:	       ldim	586 -> r1
#1:	       ldih	1221 -> r2
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       stm.s	r0, r14, 6
#2:	       ldih	129 -> r1
	;;
#0:	       stm.a	r1, r5, 5
	;;
#0:	       stm.a	r2, r5, 4
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB2_4
#1:	       stm.a	r3, r5, 3
	;;
#0:	       stm.a	r4, r5, 2
	;;
#0:	       stm.a	0, r5, 1
	;;
#0:	       stm.a	0, r5, 0
	;;
.BB2_2:                                 ; %bb.i
                                        ;   in Loop: Header=BB2_4 Depth=2
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 br	.BB2_11
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2.i1
                                        ;   in Loop: Header=BB2_4 Depth=2
#0:	       add	r2, 1 -> r2
	;;
.BB2_4:                                 ; %bb3.i
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       add	r10, r2 -> r0
	;;
#0:	       and	r0, 3 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB2_2
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4.i
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.f	r0, 0
#1:	       ldga	32896 -> r2
#2:	       ldiu	1791 -> r3
	;;
#0:	       ldim	991 -> r3
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldih	2039 -> r3
	;;
#0:	       and	r1, r2 -> r4
#1:	       add	r1, r3 -> r1
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       and	r4, r1 -> r1
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if !c1 br	.BB2_7
	;;
	       nop	2
	;;
.BB2_6:                                 ; %bb5.i3
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 4
#1:	       add	r0, 4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r2 -> r4
#1:	       add	r1, r3 -> r1
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       and	r4, r1 -> r1
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB2_6
	;;
	       nop	2
	;;
.BB2_7:                                 ; %bb8.i
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r1
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB2_10
	;;
	       nop	2
	;;
.BB2_8:                                 ; %bb9.i5
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 1
#1:	       add	r0, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       or	r1, 0 -> r0
	;;
#0:	if  c1 br	.BB2_8
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb9.i5.bb11.i6_crit_edge
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       or	r1, 0 -> r0
	;;
.BB2_10:                                ; %bb11.i6
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       sub	r0, r10 -> r2
	;;
.BB2_11:                                ; %strlen.exit
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       s2add	r14, 16 -> r13
#1:	       callg	_md5_append
#2:	       ldi	0 -> r11
#3:	       or	r10, 0 -> r1
	;;
#0:	       add	r13, 20 -> r12
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	1
	;;
#0:	       or	r11, 0 -> r0
	;;
.BB2_12:                                ; %bb.i35
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	-4 -> r1
#1:	       add	r0, 1 -> r4
#2:	       ldiu	192 -> r5
#3:	       and	r11, 24 -> r2
	;;
#0:	       and	r0, r1 -> r1
#1:	       cmpne	r4, 8 -> c1
#2:	       add	r14, r5 -> r5
#3:	       add	r11, 8 -> r11
	;;
#0:	       add	r12, r1 -> r1
#1:	       add	r5, 12 -> r3
	;;
#0:	if  c1 br	.BB2_12
#1:	       ldm.s	r1, 0
#2:	       add	r3, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sr	r1, r2 -> r1
	;;
#0:	       stmb.a	r1, r0, 0
#1:	       or	r4, 0 -> r0
	;;
; BB#13:                                ; %bb.nph.i36
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.s	r14, 84
#1:	       ldi	55 -> r1
#2:	       s2add	r14, 16 -> r13
	;;
#0:	       add	r13, 20 -> r11
	;;
#0:	       callg	_md5_append
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       sr	r0, 3 -> r0
	;;
#0:	       sub	r1, r0 -> r0
#1:	       ldi	63 -> r1
	;;
#0:	       and	r0, r1 -> r0
#1:	       ldga	_pad.2804 -> r1
	;;
#0:	       add	r0, 1 -> r2
#1:	       or	r11, 0 -> r0
	;;
#0:	       ldiu	192 -> r13
#1:	       ldi	0 -> r12
#2:	       or	r11, 0 -> r0
#3:	       ldi	8 -> r2
	;;
#0:	       callg	_md5_append
#1:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 12 -> r1
	;;
	       nop	2
	;;
#0:	       or	r12, 0 -> r0
	;;
.BB2_14:                                ; %bb4.i39
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	-4 -> r1
#1:	       s2add	r14, 16 -> r4
#2:	       and	r12, 24 -> r2
#3:	       add	r0, 1 -> r3
	;;
#0:	       and	r0, r1 -> r1
#1:	       add	r4, 4 -> r13
#2:	       add	r12, 8 -> r12
	;;
#0:	       add	r11, r1 -> r1
#1:	       add	r13, r0 -> r0
	;;
#0:	       ldm.s	r1, 8
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sr	r1, r2 -> r1
	;;
#0:	       stmb.a	r1, r0, 0
#1:	       ldi	16 -> r0
	;;
#0:	       cmpne	r3, r0 -> c1
#1:	       or	r3, 0 -> r0
	;;
#0:	if  c1 br	.BB2_14
	;;
	       nop	2
	;;
; BB#15:                                ; %bb4.i39.bb2.i_crit_edge
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       s2add	r14, 8 -> r1
#1:	       ldi	16 -> r11
	;;
#0:	       add	r1, 0 -> r0
	;;
.BB2_16:                                ; %bb2.i
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r13, r11 -> r1
#1:	       sub	r11, 1 -> r11
#2:	       add	r0, 2 -> r12
	;;
#0:	       ldm.s	r1, 16
#1:	       add	r1, 16 -> r2
	;;
#0:	       callg	_sprintf
#1:	       ldx	$membu, r2 -> r1
	;;
	       nop	3
	;;
#0:	       cmpne	r11, 0 -> c1
#1:	       or	r12, 0 -> r0
	;;
#0:	if  c1 br	.BB2_16
	;;
	       nop	2
	;;
; BB#17:                                ; %bb5.i
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.s	r14, 24
#1:	       ldga	_test.2643 -> r0
#2:	       s2add	r14, 8 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       s2add	r0, r1 -> r0
	;;
#0:	       ldm.f	r0, 4
#1:	       add	r2, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r11, r0 -> r1
	;;
#0:	       and	r1, 3 -> r1
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB2_19
	;;
	       nop	2
	;;
; BB#18:                                ; %bb5.i.bb8.i49_crit_edge
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       or	r11, 0 -> r1
#1:	       br	.BB2_24
	;;
	       nop	2
	;;
.BB2_19:                                ; %bb5.i.bb5.i45_crit_edge
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       s2add	r14, 8 -> r2
#1:	       br	.BB2_22
#2:	       or	r11, 0 -> r1
	;;
#0:	       add	r2, 0 -> r0
	;;
	       nop	1
	;;
.BB2_20:                                ; %bb1.i41
                                        ;   in Loop: Header=BB2_22 Depth=2
#0:	       ldga	32896 -> r0.16
#1:	       ldiu	1791 -> r3
	;;
#0:	       or	r0.16, 0 -> r4
#1:	       ldim	991 -> r3
	;;
#0:	       ldih	1028 -> r4
#1:	       ldih	2039 -> r3
	;;
#0:	       and	r2, r4 -> r5
#1:	       add	r2, r3 -> r2
	;;
#0:	       xor	r5, r4 -> r4
	;;
#0:	       and	r4, r2 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if !c1 br	.BB2_40
	;;
	       nop	2
	;;
; BB#21:                                ; %bb4.i42
                                        ;   in Loop: Header=BB2_22 Depth=2
#0:	       add	r0, 4 -> r0
#1:	       add	r1, 4 -> r1
	;;
.BB2_22:                                ; %bb5.i45
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       cmpeq	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB2_20
	;;
	       nop	2
	;;
#0:	       br	.BB2_24
	;;
	       nop	2
	;;
.BB2_23:                                ; %bb7.i47
                                        ;   in Loop: Header=BB2_24 Depth=2
#0:	       add	r0, 1 -> r0
#1:	       add	r1, 1 -> r1
	;;
.BB2_24:                                ; %bb8.i49
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r2
#1:	       ldm.f	r1, 0
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB2_26
#1:	       ldx	$membu, r1 -> r3
	;;
	       nop	2
	;;
; BB#25:                                ; %bb8.i49
                                        ;   in Loop: Header=BB2_24 Depth=2
#0:	       mask	r2, 0 -> r4
#1:	       mask	r3, 0 -> r5
	;;
#0:	       cmpeq	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB2_23
	;;
	       nop	2
	;;
.BB2_26:                                ; %strcmp.exit
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       mask	r2, 0 -> r0
#1:	       mask	r3, 0 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB2_40
	;;
	       nop	2
	;;
; BB#27:                                ; %bb7.i
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldi	0 -> r12
#1:	       callg	_printf
#2:	       ldga	._.str15 -> r0
#3:	       or	r10, 0 -> r1
	;;
	       nop	3
	;;
#0:	       br	.BB2_30
	;;
	       nop	2
	;;
.BB2_28:                                ; %bb.i55
                                        ;   in Loop: Header=BB2_30 Depth=2
#0:	       ldm.s	r1, 0
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if !c1 br	.BB2_37
	;;
	       nop	2
	;;
; BB#29:                                ; %bb2.i58
                                        ;   in Loop: Header=BB2_30 Depth=2
#0:	       add	r12, 1 -> r12
	;;
.BB2_30:                                ; %bb3.i60
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       s2add	r14, 8 -> r3
	;;
#0:	       add	r3, 0 -> r0
	;;
#0:	       add	r0, r12 -> r1
	;;
#0:	       and	r1, 3 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB2_28
	;;
	       nop	2
	;;
; BB#31:                                ; %bb4.i62
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.s	r1, 0
#1:	       ldga	32896 -> r2
#2:	       ldiu	1791 -> r3
	;;
#0:	       ldim	991 -> r3
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldih	2039 -> r3
	;;
#0:	       and	r12, r2 -> r4
#1:	       add	r12, r3 -> r12
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       and	r4, r12 -> r12
	;;
#0:	       cmpeq	r12, 0 -> c1
	;;
#0:	if !c1 br	.BB2_33
	;;
	       nop	2
	;;
.BB2_32:                                ; %bb5.i72
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 4
#1:	       add	r1, 4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
#0:	       and	r12, r2 -> r4
#1:	       add	r12, r3 -> r12
	;;
#0:	       xor	r4, r2 -> r4
	;;
#0:	       and	r4, r12 -> r12
	;;
#0:	       cmpeq	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB2_32
	;;
	       nop	2
	;;
.BB2_33:                                ; %bb8.i74
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$membu, r1 -> r12
	;;
#0:	       cmpeq	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB2_36
	;;
	       nop	2
	;;
.BB2_34:                                ; %bb9.i78
                                        ;   Parent Loop BB2_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 1
#1:	       add	r1, 1 -> r12
	;;
#0:	       ldx	$membu, r12 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
#1:	       or	r12, 0 -> r1
	;;
#0:	if  c1 br	.BB2_34
	;;
	       nop	2
	;;
; BB#35:                                ; %bb9.i78.bb11.i80_crit_edge
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       or	r12, 0 -> r1
	;;
.BB2_36:                                ; %bb11.i80
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       sub	r1, r0 -> r12
	;;
.BB2_37:                                ; %strlen.exit81
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldiu	192 -> r4
#1:	       add	r12, 1 -> r3
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 20 -> r1
#1:	       ldiu	160 -> r4
	;;
#0:	       stm.a	2, r1, 1
#1:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 12 -> r2
	;;
#0:	       stm.a	r2, r1, 0
	;;
#0:	       stm.a	r3, r1, 2
#1:	       ldga	._.str18 -> r1
	;;
#0:	       stm.a	1, r2, 3
	;;
#0:	       stm.a	r1, r2, 2
	;;
#0:	       stm.a	r0, r2, 0
	;;
#0:	       stm.a	r12, r2, 1
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       add	r0, 12 -> r1
	;;
#0:	       ldx	$memhu, r1 -> r1
	;;
#0:	       btest	r1, 13 -> c1
	;;
#0:	if  c1 br	.BB2_39
	;;
	       nop	2
	;;
; BB#38:                                ; %bb.i.i53
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldga	8192 -> r2
	;;
#0:	       or	r1, r2 -> r1
#1:	       ldiu	2047 -> r2
	;;
#0:	       stmh.a	r1, r0, 6
#1:	       ldim	2043 -> r2
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 100
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       stm.a	r1, r0, 25
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB2_39:                                ; %puts.exit54
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldiu	192 -> r10
#1:	       callg	___sfvwrite_r
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;
	       nop	1
	;;
#0:	       callg	_printf
#1:	       ldi	1 -> r0
#2:	       or	r11, 0 -> r1
	;;
#0:	       stm.s	r0, r14, 5
#1:	       ldga	._.str16 -> r0
	;;
	       nop	2
	;;
.BB2_40:                                ; %bb9.i
                                        ;   in Loop: Header=BB2_1 Depth=1
#0:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       cmpne	r0, -7 -> c1
#1:	       stm.s	r0, r14, 7
	;;
#0:	if  c1 br	.BB2_1
	;;
	       nop	2
	;;
; BB#41:                                ; %bb11.i
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB2_55
	;;
	       nop	2
	;;
; BB#42:                                ; %bb11.i.bb3.i12_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB2_45
#2:	       ldga	._.str17 -> r1
#3:	       ldi	37 -> r2
	;;
	       nop	2
	;;
.BB2_43:                                ; %bb.i7
                                        ;   in Loop: Header=BB2_45 Depth=1
#0:	       cmpne	r0, r2 -> c1
	;;
#0:	if !c1 br	.BB2_52
	;;
	       nop	2
	;;
; BB#44:                                ; %bb2.i10
                                        ;   in Loop: Header=BB2_45 Depth=1
#0:	       add	r0, 1 -> r0
	;;
.BB2_45:                                ; %bb3.i12
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r1, r0 -> r3
	;;
#0:	       and	r3, 3 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB2_43
	;;
	       nop	2
	;;
; BB#46:                                ; %bb4.i14
#0:	       ldga	._.str17 -> r1
#1:	       ldga	32896 -> r3
	;;
#0:	       add	r1, r0 -> r0
#1:	       ldiu	1791 -> r1
#2:	       ldih	1028 -> r3
	;;
#0:	       ldm.f	r0, 0
#1:	       ldim	991 -> r1
	;;
#0:	       ldih	2039 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if !c1 br	.BB2_48
	;;
	       nop	2
	;;
.BB2_47:                                ; %bb5.i24
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 4
#1:	       add	r0, 4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB2_47
	;;
	       nop	2
	;;
.BB2_48:                                ; %bb8.i26
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r1
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB2_51
	;;
	       nop	2
	;;
.BB2_49:                                ; %bb9.i30
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 1
#1:	       add	r0, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       or	r1, 0 -> r0
	;;
#0:	if  c1 br	.BB2_49
	;;
	       nop	2
	;;
; BB#50:                                ; %bb9.i30.bb11.i32_crit_edge
#0:	       or	r1, 0 -> r0
	;;
.BB2_51:                                ; %bb11.i32
#0:	       ldga	._.str17 -> r1
	;;
#0:	       sub	r0, r1 -> r0
	;;
.BB2_52:                                ; %strlen.exit33
#0:	       ldiu	160 -> r6
#1:	       ldga	._.str18 -> r2
#2:	       ldga	._.str17 -> r3
#3:	       add	r0, 1 -> r5
	;;
#0:	       add	r14, r6 -> r6
	;;
#0:	       add	r6, 12 -> r1
#1:	       ldiu	160 -> r6
	;;
#0:	       stm.a	1, r1, 3
#1:	       add	r14, r6 -> r6
	;;
#0:	       add	r6, 28 -> r4
	;;
#0:	       stm.a	r2, r1, 2
	;;
#0:	       stm.a	r3, r1, 0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       stm.a	2, r4, 1
	;;
#0:	       stm.a	r1, r4, 0
	;;
#0:	       stm.a	r5, r4, 2
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       add	r0, 12 -> r1
	;;
#0:	       ldx	$memhu, r1 -> r1
	;;
#0:	       btest	r1, 13 -> c1
	;;
#0:	if  c1 br	.BB2_54
	;;
	       nop	2
	;;
; BB#53:                                ; %bb.i.i
#0:	       ldga	8192 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       stmh.a	r1, r0, 6
#1:	       ldiu	2047 -> r1
	;;
#0:	       ldim	2043 -> r1
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 100
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       and	r2, r1 -> r1
	;;
#0:	       stm.a	r1, r0, 25
	;;
#0:	       ldmg.d	_impure_data+8
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB2_54:                                ; %puts.exit
#0:	       ldiu	160 -> r10
#1:	       callg	___sfvwrite_r
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 28 -> r1
	;;
	       nop	1
	;;
#0:	       ldm.s	r14, 228
#1:	       or	r14, 0 -> r15
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 232
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 236
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 240
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB2_56
#1:	       ldx	$mem, 0 -> r1.31
#2:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB2_55:                                ; %do_test.exit
#0:	       ldm.s	r14, 228
#1:	       or	r14, 0 -> r15
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 232
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 236
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 240
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB2_56:                                ; %do_test.exit
#0:	       ldm.s	r15, 0
#1:	       ldiu	244 -> r1
	;;
#0:	       add	r15, r1 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_main_end:

	.align	4
_printf:                                ; @printf
	.size	_printf_end-_printf
_printf_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 9
#2:	       ldiu	36 -> r7
#1:	       ldx	$rb, 0 -> r1.31
#3:	       or	r0, 0 -> r4
	;;
#0:	       sub	r15, r7 -> r15
#2:	       ldx	$ro, 0 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, 24 -> r0
#2:	       add	r14, 28 -> r5
#3:	       s2add	r14, 8 -> r7
	;;
#2:	       stm.s	r2.31, r15, 2
#0:	       add	r7, 0 -> r6
	;;
#0:	       stm.a	r1, r0, 0
#1:	       add	r14, 16 -> r1
	;;
#0:	       stm.a	r2, r5, 0
	;;
#0:	       stm.a	r3, r6, 0
	;;
#0:	       stm.a	r0, r1, 0       ; printf.c:51
#1:	       or	r4, 0 -> r1     ; printf.c:52
	;;
#0:	       ldmg.d	_impure_data+8  ; printf.c:52
	;;
#0:	       ldx	$mem, 0 -> r0   ; printf.c:52
#1:	       ldm.s	r14, 16         ; printf.c:52
	;;
#0:	       callg	__vfprintf_r    ; printf.c:52
#1:	       ldx	$mem, 0 -> r2   ; printf.c:52
	;;                              ; printf.c:52
	       nop	3               ; printf.c:52
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 0
#2:	       s2add	r15, 9 -> r15
	;;
#0:	       stx	r0.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
_printf_end:

	.align	4
_sprintf:                               ; @sprintf
	.size	_sprintf_end-_sprintf
_sprintf_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 125
#3:	       ldiu	500 -> r4
#0:	       ldx	$ro, 0 -> r0.31
#1:	       ldx	$f12 -> r1.31
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	384 -> r4
#2:	       ldiu	380 -> r6
#3:	       ldiu	384 -> r8
	;;
#3:	       ldx	$rb, 0 -> r3.31
#2:	       ldx	$f13 -> r2.31
#0:	       ldiu	380 -> r9
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
#0:	       add	r14, r4 -> r4
#1:	       add	r14, r6 -> r6
#2:	       add	r14, r8 -> r8
	;;
#0:	       stm.s	r0.31, r15, 2
#3:	       ldx	$f10 -> r3.31
#1:	       add	r14, r9 -> r9
	;;
#1:	       stm.s	r10, r4, 24
#0:	       ldx	$f11 -> r0.31
	;;
#0:	       stm.s	r11, r4, 23
	;;
#0:	       stm.s	r12, r4, 22
	;;
#0:	       stm.s	r13, r4, 21
	;;
#0:	       stm.s	r0.23, r4, 20
	;;
#1:	       stm.s	r1.23, r4, 19
	;;
#2:	       stm.s	r2.23, r4, 18
	;;
#3:	       stm.s	r3.23, r4, 17
	;;
#0:	       stm.s	r0.24, r4, 16
	;;
#2:	       stm.s	r2.24, r4, 15
	;;
#3:	       stm.s	r3.24, r4, 14
	;;
#3:	       stm.s	r3.25, r4, 13
	;;
#3:	       stm.s	r3.31, r4, 12
	;;
#0:	       stm.s	r0.31, r4, 11
#3:	       ldx	$f14 -> r3.31
	;;
#1:	       stm.s	r1.31, r4, 10
#0:	       ldx	$f15 -> r0.31
	;;
#2:	       stm.s	r2.31, r4, 9
#1:	       ldx	$f10 -> r1.31
	;;
#3:	       stm.s	r3.31, r4, 8
#2:	       ldx	$f12 -> r2.31
	;;
#0:	       stm.s	r0.31, r4, 7
#3:	       ldx	$f14 -> r3.31
	;;
#1:	       stm.s	r1.31, r4, 5
#0:	       ldiu	2047 -> r4
	;;
#1:	       ldx	$f11 -> r1.31
#0:	       ldim	1023 -> r4
	;;
#1:	       stm.s	r1.31, r6, 6
#0:	       ldi	520 -> r6
#2:	       ldih	1023 -> r4
	;;
#2:	       stm.s	r2.31, r8, 3
	;;
#2:	       ldx	$f13 -> r2.31
	;;
#2:	       stm.s	r2.31, r9, 4
#0:	       ldiu	384 -> r9
	;;
#0:	       add	r14, r9 -> r9
	;;
#3:	       stm.s	r3.31, r9, 1
#0:	       ldiu	380 -> r9
	;;
#0:	       add	r14, r9 -> r9
	;;
#3:	       ldx	$f15 -> r3.31
	;;
#3:	       stm.s	r3.31, r9, 2
#0:	       ldiu	480 -> r9
	;;
#0:	       add	r14, r9 -> r9
	;;
#0:	       add	r9, 8 -> r5
#1:	       s2add	r14, 24 -> r9
	;;
#0:	       add	r9, 28 -> r10
#1:	       ldiu	480 -> r9
	;;
#0:	       stm.a	r0, r10, 4      ; sprintf.c:626
#1:	       add	r14, r9 -> r9
	;;
#0:	       add	r9, 12 -> r7
#1:	       add	r9, 16 -> r8
	;;
#0:	       stm.a	r0, r10, 0      ; sprintf.c:626
	;;
#0:	       stmh.a	r6, r10, 6      ; sprintf.c:625
	;;
#0:	       stm.a	r1, r5, 0
#1:	       ldiu	224 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 4 -> r0
	;;
#0:	       stm.a	r2, r7, 0
	;;
#0:	       stm.a	r3, r8, 0
	;;
#0:	       stm.a	r4, r10, 2      ; sprintf.c:627
	;;
#0:	       stm.a	r4, r10, 5      ; sprintf.c:627
	;;
#0:	       stmh.a	-1, r10, 7      ; sprintf.c:628
	;;
#0:	       stm.a	r5, r0, 0       ; sprintf.c:630
	;;
#0:	       br	.BB4_3
#1:	       ldm.s	r14, 228        ; sprintf.c:634
	;;
#0:	       ldx	$mem, 0 -> r0   ; sprintf.c:634
	;;
#0:	       stm.s	r0, r14, 26
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 15
#1:	       ldga	._.str65 -> r0
	;;
.BB4_1:                                 ; %bb.i1.i
                                        ;   in Loop: Header=BB4_3 Depth=1
#0:	       ldm.s	r14, 60         ; strlen.c:68[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:68[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r1, 1 -> c1     ; strlen.c:68[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_10
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb2.i2.i
                                        ;   in Loop: Header=BB4_3 Depth=1
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 15
	;;
.BB4_3:                                 ; %bb3.i.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       and	r1, 3 -> r1     ; strlen.c:66[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:66[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_1          ; strlen.c:66[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;                              ; strlen.c:66[ vfprintf.c:576[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:66[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
; BB#4:                                 ; %bb4.i3.i
#0:	       ldm.s	r14, 60
#1:	       ldga	._.str65 -> r0
#2:	       ldga	32896 -> r3
	;;
#0:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldiu	1791 -> r1
	;;
#0:	       ldm.f	r0, 0           ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
#1:	       ldim	991 -> r1
	;;
#0:	       ldih	2039 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2    ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_6
	;;
	       nop	2
	;;
.BB4_5:                                 ; %bb5.i7.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 4           ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
#1:	       add	r0, 4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2    ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_5          ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;                              ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:76[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
.BB4_6:                                 ; %bb8.i8.i
#0:	       ldm.f	r0, 0           ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$membu, r0 -> r1 ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_9
	;;
	       nop	2
	;;
.BB4_7:                                 ; %bb9.i10.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 1           ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
#1:	       add	r0, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r0 ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
#1:	       or	r1, 0 -> r0
	;;
#0:	if  c1 br	.BB4_7          ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;                              ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:85[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
; BB#8:                                 ; %bb9.i10.i.bb11.i11.i_crit_edge
#0:	       or	r1, 0 -> r0
	;;
.BB4_9:                                 ; %bb11.i11.i
#0:	       ldga	._.str65 -> r1  ; strlen.c:87[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       sub	r0, r1 -> r0    ; strlen.c:87[ vfprintf.c:576[ sprintf.c:634 ] ]
	;;
#0:	       stm.s	r0, r14, 15
	;;
.BB4_10:                                ; %strlen.exit.i
#0:	       ldiu	128 -> r1
#1:	       ldm.f	r10, 12
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 8 -> r0
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 7 -> c1     ; vfprintf.c:729[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_15
	;;
	       nop	2
	;;
; BB#11:                                ; %bb.i
#0:	       ldm.f	r10, 16         ; vfprintf.c:729[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:729[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:729[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_15
	;;
	       nop	2
	;;
; BB#12:                                ; %bb1.i
#0:	       ldi	64 -> r11
#1:	       callg	__malloc_r      ; vfprintf.c:731[ sprintf.c:634 ]
#2:	       ldi	64 -> r0
	;;                              ; vfprintf.c:731[ sprintf.c:634 ]
	       nop	3               ; vfprintf.c:731[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:732[ sprintf.c:634 ]
#1:	       stm.a	r0, r10, 0      ; vfprintf.c:731[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_14         ; vfprintf.c:732[ sprintf.c:634 ]
#1:	       stm.a	r0, r10, 4      ; vfprintf.c:731[ sprintf.c:634 ]
	;;                              ; vfprintf.c:732[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:732[ sprintf.c:634 ]
	;;
; BB#13:                                ; %bb2.i
#0:	       ldga	_impure_data -> r0 ; vfprintf.c:734[ sprintf.c:634 ]
#1:	       br	.BB4_422
	;;
#0:	       stm.a	12, r0, 0       ; vfprintf.c:734[ sprintf.c:634 ]
	;;
	       nop	1
	;;
.BB4_14:                                ; %bb3.i
#0:	       stm.a	r11, r10, 5     ; vfprintf.c:737[ sprintf.c:634 ]
	;;
.BB4_15:                                ; %bb4.i
#1:	       ldiu	256 -> r2
#2:	       ldiu	320 -> r3
#3:	       fop	dzero -> d5
#0:	       ldi	48 -> r0.24
	;;
#0:	       add	r14, r2 -> r2
#1:	       add	r14, r3 -> r3
#2:	       fop	dzero -> d6
	;;
#0:	       add	r2, 20 -> r0
#1:	       ldiu	256 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 14
	;;
#0:	       add	r2, 19 -> r0
#1:	       ldiu	352 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 13
	;;
#0:	       add	r2, 6 -> r0
	;;
#0:	       stm.s	r0, r14, 12
#1:	       add	r3, 20 -> r0
#2:	       ldiu	352 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r0, r14, 23
	;;
#0:	       add	r3, 8 -> r1
#1:	       ldiu	384 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 7
	;;
#0:	       add	r3, 3 -> r1
#1:	       ldiu	352 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 8
	;;
#0:	       add	r3, 7 -> r1
#1:	       ldiu	384 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 6
	;;
#0:	       add	r3, 2 -> r1
#1:	       ldiu	256 -> r3
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 5
#2:	       ldga	._.str14 -> r1
	;;
#0:	       add	r3, 20 -> r2
	;;
#0:	       stm.s	r2, r14, 4      ; vfprintf.c:744[ sprintf.c:634 ]
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:744[ sprintf.c:634 ]
	;;
#0:	       stm.a	r2, r0, 0       ; vfprintf.c:742[ sprintf.c:634 ]
	;;
#0:	       stm.a	0, r0, 2        ; vfprintf.c:743[ sprintf.c:634 ]
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 18
	;;
#0:	       stm.s	r0, r14, 20
	;;
#0:	       stm.s	r0, r14, 11
	;;
#0:	       stm.s	r0, r14, 16
	;;
.BB4_16:                                ; %bb6.outer.i
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB4_413 Depth 2
                                        ;     Child Loop BB4_18 Depth 2
                                        ;       Child Loop BB4_28 Depth 3
                                        ;         Child Loop BB4_29 Depth 4
                                        ;           Child Loop BB4_56 Depth 5
                                        ;           Child Loop BB4_50 Depth 5
                                        ;     Child Loop BB4_188 Depth 2
                                        ;     Child Loop BB4_190 Depth 2
                                        ;     Child Loop BB4_192 Depth 2
                                        ;     Child Loop BB4_228 Depth 2
                                        ;     Child Loop BB4_226 Depth 2
                                        ;     Child Loop BB4_230 Depth 2
                                        ;     Child Loop BB4_213 Depth 2
                                        ;     Child Loop BB4_221 Depth 2
                                        ;     Child Loop BB4_216 Depth 2
                                        ;     Child Loop BB4_131 Depth 2
                                        ;     Child Loop BB4_141 Depth 2
                                        ;     Child Loop BB4_145 Depth 2
                                        ;     Child Loop BB4_247 Depth 2
                                        ;     Child Loop BB4_272 Depth 2
                                        ;     Child Loop BB4_284 Depth 2
                                        ;     Child Loop BB4_349 Depth 2
                                        ;     Child Loop BB4_330 Depth 2
                                        ;     Child Loop BB4_393 Depth 2
                                        ;     Child Loop BB4_374 Depth 2
                                        ;     Child Loop BB4_312 Depth 2
#0:	       ldm.s	r14, 16
#1:	       br	.BB4_18
#2:	       ldi	-1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 27
	;;
	       nop	0
	;;
.BB4_17:                                ; %bb7.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       sub	r10, 1 -> r10
	;;
.BB4_18:                                ; %bb8.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB4_28 Depth 3
                                        ;         Child Loop BB4_29 Depth 4
                                        ;           Child Loop BB4_56 Depth 5
                                        ;           Child Loop BB4_50 Depth 5
#0:	       sub	r1, r10 -> r11
	;;
#0:	       ldm.f	r11, -1         ; vfprintf.c:772[ sprintf.c:634 ]
#1:	       sub	r11, 1 -> r12
	;;
#0:	       ldx	$membu, r12 -> r0 ; vfprintf.c:772[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_20
	;;
	       nop	2
	;;
; BB#19:                                ; %bb8.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       mask	r0, 0 -> r2
#1:	       ldi	37 -> r3
	;;
#0:	       cmpne	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB4_17
	;;
	       nop	2
	;;
.BB4_20:                                ; %bb10.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:775[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_26
	;;
	       nop	2
	;;
; BB#21:                                ; %bb11.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:776[ sprintf.c:634 ]
#1:	       xor	r10, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r2, 0       ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 2       ; vfprintf.c:776[ sprintf.c:634 ]
#1:	       add	r2, 1 -> r1     ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:776[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_23         ; vfprintf.c:776[ sprintf.c:634 ]
	;;                              ; vfprintf.c:776[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:776[ sprintf.c:634 ]
	;;
; BB#22:                                ; %bb11.i.bb15.i_crit_edge
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:776[ sprintf.c:634 ]
#1:	       br	.BB4_25
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:776[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_23:                                ; %bb12.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:776[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:776[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#24:                                ; %bb12.i.bb15.i_crit_edge
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldiu	256 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB4_25:                                ; %bb12.i.bb15.i_crit_edge
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       stm.s	r0, r14, 27
	;;
#0:	       ldm.f	r11, -1
	;;
#0:	       ldx	$membu, r12 -> r0
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 20
	;;
.BB4_26:                                ; %bb16.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       mask	r0, 0 -> r1     ; vfprintf.c:783[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:783[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_419
	;;
	       nop	2
	;;
; BB#27:                                ; %bb17.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldiu	352 -> r2
#1:	       ldi	0 -> r1
#2:	       ldi	-1 -> r10
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r1, r14, 25
#2:	       or	r1, 0 -> r12
	;;
#0:	       add	r2, 16 -> r0
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:793[ sprintf.c:634 ]
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:793[ sprintf.c:634 ]
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
	;;
.BB4_28:                                ; %rflag.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ;     Parent Loop BB4_18 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB4_29 Depth 4
                                        ;           Child Loop BB4_56 Depth 5
                                        ;           Child Loop BB4_50 Depth 5
#0:	       ldm.f	r11, 0          ; vfprintf.c:805[ sprintf.c:634 ]
	;;
#0:	       ldx	$membs, r11 -> r13 ; vfprintf.c:805[ sprintf.c:634 ]
#1:	       add	r11, 1 -> r11   ; vfprintf.c:805[ sprintf.c:634 ]
	;;
.BB4_29:                                ; %reswitch.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ;     Parent Loop BB4_18 Depth=2
                                        ;       Parent Loop BB4_28 Depth=3
                                        ; =>      This Loop Header: Depth=4
                                        ;           Child Loop BB4_56 Depth 5
                                        ;           Child Loop BB4_50 Depth 5
#0:	       ldi	31 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB4_33
	;;
	       nop	2
	;;
; BB#30:                                ; %reswitch.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r13, 0 -> c1
	;;
#0:	if  c1 br	.BB4_419
	;;
	       nop	2
	;;
.BB4_31:                                ; %bb171.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	224 -> r2
#1:	       ldi	0 -> r1
#2:	       ldi	1 -> r10
	;;
#0:	       stm.s	r1, r14, 25
#1:	       add	r14, r2 -> r2
	;;
#0:	       stm.s	r10, r14, 21
#1:	       add	r2, 12 -> r0
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1490[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:1490[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1492[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1492[ sprintf.c:634 ]
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:1492[ sprintf.c:634 ]
	;;
.BB4_32:                                ; %bb171.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       or	r1, 0 -> r0
#1:	       br	.BB4_240
	;;
#0:	       stm.s	r0, r14, 19
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 17
	;;
	       nop	0
	;;
.BB4_33:                                ; %reswitch.i
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       ldi	-32 -> r1
#1:	       ldi	88 -> r0
	;;
#0:	       add	r13, r1 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_31
	;;
	       nop	2
	;;
; BB#34:                                ; %reswitch.i
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       ldga	.JTI4_0 -> r0
	;;
#0:	       s2add	r0, r1 -> r1
	;;
#0:	       ldm.d	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       br	r1
	;;
	       nop	3
	;;
.BB4_35:                                ; %reswitch.i.hex.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	._.str430 -> r0
#1:	       br	.BB4_201
	;;
	       nop	2
	;;
.BB4_36:                                ; %bb18.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 100        ; vfprintf.c:822[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:822[ sprintf.c:634 ]
	;;
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:822[ sprintf.c:634 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:822[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_28
	;;
	       nop	2
	;;
; BB#37:                                ; %bb19.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldi	32 -> r1
	;;
.BB4_38:                                ; %bb19.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       stm.s	r1, r14, 25     ; vfprintf.c:823[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:823[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:823[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r1, r13, 0      ; vfprintf.c:823[ sprintf.c:634 ]
	;;
.BB4_39:                                ; %bb20.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:826[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:826[ sprintf.c:634 ]
	;;
#0:	       or	r1, 1 -> r1     ; vfprintf.c:826[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:826[ sprintf.c:634 ]
	;;
.BB4_40:                                ; %bb21.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 104        ; vfprintf.c:865[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:865[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:865[ sprintf.c:634 ]
#1:	       add	r1, 4 -> r1     ; vfprintf.c:865[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:865[ sprintf.c:634 ]
#1:	       stm.s	r1, r14, 26
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r12 -> c1
	;;
#0:	if  c1 br	.BB4_28
	;;
	       nop	2
	;;
; BB#41:                                ; %bb22.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldi	0 -> r1
	;;
#0:	       sub	r1, r12 -> r12  ; vfprintf.c:871[ sprintf.c:634 ]
	;;
.BB4_42:                                ; %bb23.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:874[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:874[ sprintf.c:634 ]
	;;
#0:	       or	r1, 4 -> r1     ; vfprintf.c:874[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:874[ sprintf.c:634 ]
	;;
.BB4_43:                                ; %bb24.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldi	43 -> r1
#1:	       br	.BB4_38
	;;
	       nop	2
	;;
.BB4_44:                                ; %bb25.i
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       ldm.f	r11, 0          ; vfprintf.c:880[ sprintf.c:634 ]
#1:	       ldi	42 -> r10
#2:	       add	r11, 1 -> r0    ; vfprintf.c:880[ sprintf.c:634 ]
	;;
#0:	       ldx	$membu, r11 -> r1 ; vfprintf.c:880[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r1, r10 -> c1
	;;
#0:	if  c1 br	.BB4_47         ; vfprintf.c:880[ sprintf.c:634 ]
	;;                              ; vfprintf.c:880[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:880[ sprintf.c:634 ]
	;;
; BB#45:                                ; %bb30.preheader.i
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       mask	r1, 8 -> r13
#1:	       ldi	-48 -> r1
	;;
#0:	       add	r13, r1 -> r1
	;;
#0:	       cmpult	r1, 10 -> c1
	;;
#0:	if  c1 br	.BB4_49         ; vfprintf.c:919[ sprintf.c:634 ]
	;;                              ; vfprintf.c:919[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:919[ sprintf.c:634 ]
	;;
; BB#46:                                ; %bb30.preheader.i.bb31.i_crit_edge
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       ldi	0 -> r10
#1:	       br	.BB4_52
#2:	       or	r0, 0 -> r11
	;;
	       nop	2
	;;
.BB4_47:                                ; %bb26.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 104        ; vfprintf.c:910[ sprintf.c:634 ]
#1:	       or	r0, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:910[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:910[ sprintf.c:634 ]
#1:	       add	r1, 4 -> r1     ; vfprintf.c:910[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:910[ sprintf.c:634 ]
#1:	       stm.s	r1, r14, 26
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:914[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_28
	;;
	       nop	2
	;;
; BB#48:                                ; %bb27.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       or	r0, 0 -> r11
#1:	       br	.BB4_28
#2:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB4_49:                                ; %bb29.i.preheader
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       add	r11, 1 -> r11
#1:	       ldi	0 -> r10
	;;
.BB4_50:                                ; %bb29.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ;     Parent Loop BB4_18 Depth=2
                                        ;       Parent Loop BB4_28 Depth=3
                                        ;         Parent Loop BB4_29 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#1:	       ldm.f	r11, 0
#0:	       mul	r10, 10 -> $mul0 ; vfprintf.c:920[ sprintf.c:634 ]
#2:	       ldi	-48 -> r0
	;;
#0:	       ldx	$mul0, 0 -> r10 ; vfprintf.c:920[ sprintf.c:634 ]
	;;
#0:	       ldx	$membs, r11 -> r1
#1:	       add	r13, r10 -> r10
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r1, r0 -> r13
#1:	       add	r10, r0 -> r10  ; vfprintf.c:920[ sprintf.c:634 ]
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r1, 0 -> r13
	;;
#0:	if  c1 br	.BB4_50         ; vfprintf.c:919[ sprintf.c:634 ]
	;;                              ; vfprintf.c:919[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:919[ sprintf.c:634 ]
	;;
; BB#51:                                ; %bb29.i.bb31.i_crit_edge
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       or	r1, 0 -> r13
	;;
.BB4_52:                                ; %bb31.i
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       cmplt	r10, -1 -> c1
#1:	       br	.BB4_29
#2:	       ldi	-1 -> r1
	;;
#0:	if  c1 or	r1, 0 -> r10    ; vfprintf.c:923[ sprintf.c:634 ]
	;;
	       nop	1
	;;
.BB4_53:                                ; %bb32.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldi	128 -> r1
	;;
.BB4_54:                                ; %bb32.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:931[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:931[ sprintf.c:634 ]
	;;
#0:	       or	r13, r1 -> r13  ; vfprintf.c:931[ sprintf.c:634 ]
	;;
#0:	       stm.s	r13, r14, 28    ; vfprintf.c:931[ sprintf.c:634 ]
	;;
.BB4_55:                                ; %reswitch.i.bb34.i_crit_edge
                                        ;   in Loop: Header=BB4_29 Depth=4
#0:	       ldi	0 -> r12
	;;
.BB4_56:                                ; %bb34.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ;     Parent Loop BB4_18 Depth=2
                                        ;       Parent Loop BB4_28 Depth=3
                                        ;         Parent Loop BB4_29 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#0:	       ldm.f	r11, 0          ; vfprintf.c:938[ sprintf.c:634 ]
#1:	       mul	r12, 10 -> $mul1 ; vfprintf.c:937[ sprintf.c:634 ]
#2:	       ldi	-48 -> r0
	;;
#1:	       ldx	$mul1, 0 -> r12 ; vfprintf.c:937[ sprintf.c:634 ]
	;;
#0:	       ldx	$membs, r11 -> r1 ; vfprintf.c:938[ sprintf.c:634 ]
#1:	       add	r13, r12 -> r12
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r1, r0 -> r13
#1:	       add	r12, r0 -> r12  ; vfprintf.c:937[ sprintf.c:634 ]
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r1, 0 -> r13
	;;
#0:	if  c1 br	.BB4_56
	;;
	       nop	2
	;;
; BB#57:                                ;   in Loop: Header=BB4_29 Depth=4
#0:	       or	r1, 0 -> r13
#1:	       br	.BB4_29
	;;
	       nop	2
	;;
.BB4_58:                                ; %bb36.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:955[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:955[ sprintf.c:634 ]
	;;
#0:	       or	r1, 8 -> r1     ; vfprintf.c:955[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:955[ sprintf.c:634 ]
	;;
.BB4_59:                                ; %bb37.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldi	64 -> r1
#1:	       br	.BB4_54
	;;
	       nop	2
	;;
.BB4_60:                                ; %bb39.i
                                        ;   in Loop: Header=BB4_28 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:977[ sprintf.c:634 ]
#1:	       br	.BB4_28
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:977[ sprintf.c:634 ]
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:977[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:977[ sprintf.c:634 ]
	;;
.BB4_61:                                ; %bb40.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1036[ sprintf.c:634 ]
#1:	       ldiu	224 -> r3
#2:	       ldi	0 -> r0
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1036[ sprintf.c:634 ]
#1:	       add	r3, 12 -> r2
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1036[ sprintf.c:634 ]
	;;
#0:	       ldx	$membu, r1 -> r10 ; vfprintf.c:1036[ sprintf.c:634 ]
#1:	       stm.s	r0, r14, 25
#2:	       add	r1, 4 -> r1     ; vfprintf.c:1036[ sprintf.c:634 ]
	;;
#0:	       stm.s	r2, r14, 22     ; vfprintf.c:1036[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 26
#1:	       ldi	1 -> r1
	;;
#0:	       stm.s	r1, r14, 21     ; vfprintf.c:1036[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r10, r2, 0      ; vfprintf.c:1036[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1039[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_240
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1039[ sprintf.c:634 ]
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1039[ sprintf.c:634 ]
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 19
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB4_62:                                ; %bb42.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1042[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1042[ sprintf.c:634 ]
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1042[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28
	;;
.BB4_63:                                ; %bb43.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_65         ; vfprintf.c:1046[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1046[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
; BB#64:                                ; %bb44.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1046[ sprintf.c:634 ]
#1:	       br	.BB4_67
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
.BB4_65:                                ; %bb45.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 112        ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 6 -> c1     ; vfprintf.c:1046[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_68
	;;
	       nop	2
	;;
; BB#66:                                ; %bb46.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       mask	r0, 12 -> r0
	;;
.BB4_67:                                ; %bb46.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
.BB4_68:                                ; %bb49.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1050[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1050[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1050[ sprintf.c:634 ]
	;;
#0:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1050[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_70         ; vfprintf.c:1050[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1050[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1050[ sprintf.c:634 ]
	;;
; BB#69:                                ; %bb49.i.number.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	1 -> r1
#1:	       br	.BB4_208
	;;
	       nop	2
	;;
.BB4_70:                                ; %bb50.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r1
	;;
#0:	       sub	r1, r0 -> r0    ; vfprintf.c:1054[ sprintf.c:634 ]
#1:	       ldi	1 -> r1
	;;
#0:	       stm.s	r0, r14, 21
#1:	       ldi	45 -> r0
	;;
#0:	       br	.BB4_208
#1:	       stm.s	r0, r14, 25     ; vfprintf.c:1055[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1055[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1055[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r0, r2, 0       ; vfprintf.c:1055[ sprintf.c:634 ]
	;;
.BB4_71:                                ; %bb52.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1071[ sprintf.c:634 ]
#1:	       s2add	r14, 24 -> r4
	;;
#0:	       add	r4, 20 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1071[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1071[ sprintf.c:634 ]
#2:	       add	r1, 8 -> r1     ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       stx	r0 -> $f0       ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       fop	fmov	f0 -> f12 ; vfprintf.c:1071[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       fop	fmov	f12 -> f0
	;;
#0:	       stx	r2 -> $f1       ; vfprintf.c:1071[ sprintf.c:634 ]
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       fop	fmov	f1 -> f13 ; vfprintf.c:1071[ sprintf.c:634 ]
#1:	       stm.a	r0, r3, 0
	;;
#0:	       fop	fmov	f13 -> f0
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stm.a	r0, r3, 1
	;;
#0:	       ldm.f	r3, 4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       stm.s	r1, r14, 26
#2:	       ldga	0 -> r1
	;;
#0:	       ldih	1024 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_73
	;;
	       nop	2
	;;
; BB#72:                                ; %bb52.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_74
	;;
	       nop	2
	;;
.BB4_73:                                ; %bb1.i14.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r2, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1079[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_87
	;;
	       nop	2
	;;
.BB4_74:                                ; %bb3.i15.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	0 -> r1
#1:	       ldga	0 -> r3
	;;
#0:	       ldim	1536 -> r1
#1:	       ldih	1023 -> r3
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       cmpult	r1, r3 -> c1
	;;
#0:	if  c1 br	.BB4_87
	;;
	       nop	2
	;;
; BB#75:                                ; %bb3.i15.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1023 -> r1
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       cmpult	r1, r3 -> c1
	;;
#0:	if !c1 ldiu	0 -> r1
	;;
#0:	if !c1 ldim	512 -> r1
	;;
#0:	if !c1 cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_87
	;;
	       nop	2
	;;
; BB#76:                                ; %bb6.i18.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1024 -> r1
	;;
#0:	       cmplt	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_87
	;;
	       nop	2
	;;
; BB#77:                                ; %bb9.i19.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	2047 -> r1
	;;
#0:	       ldim	1535 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB4_81
	;;
	       nop	2
	;;
; BB#78:                                ; %bb9.i19.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	1024 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 cmpeq	r2, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1090[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_90
	;;
	       nop	2
	;;
.BB4_79:                                ; %bb64.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:1152[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_97
	;;
	       nop	2
	;;
; BB#80:                                ; %bb64.i.bb70.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	6 -> r10
#1:	       br	.BB4_99
	;;
	       nop	2
	;;
.BB4_81:                                ; %bb9.i19.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	0 -> r1
	;;
#0:	       ldim	1536 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_84
	;;
	       nop	2
	;;
; BB#82:                                ; %bb9.i19.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_89
	;;
	       nop	2
	;;
; BB#83:                                ; %bb9.i19.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1023 -> r1
	;;
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_90
	;;
	       nop	2
	;;
.BB4_84:                                ; %__fpclassifyd.exit.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r2, 0 -> c1     ; vfprintf.c:1079[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_87
	;;
	       nop	2
	;;
; BB#85:                                ; %bb53.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dzero -> d0
#1:	       ldga	._.str127 -> r2
	;;
#0:	       fop	dcmp	d6, d0 -> f0 ; vfprintf.c:1080[ sprintf.c:634 ]
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1080[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 2 -> c1     ; vfprintf.c:1080[ sprintf.c:634 ]
	;;
#0:	if  c1 ldi	45 -> r1
	;;
#0:	if  c1 stm.s	r1, r14, 25     ; vfprintf.c:1081[ sprintf.c:634 ]
	;;
#0:	if  c1 ldm.s	r14, 96         ; vfprintf.c:1081[ sprintf.c:634 ]
	;;
#0:	if  c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1081[ sprintf.c:634 ]
	;;
#0:	if  c1 stmb.a	r1, r0, 0       ; vfprintf.c:1081[ sprintf.c:634 ]
#1:	       ldi	72 -> r1
#2:	       ldi	-129 -> r0
	;;
#0:	       cmplt	r13, r1 -> c1
#1:	       ldga	._.str26 -> r1
	;;
.BB4_86:                                ; %bb55.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	if  c1 or	r1, 0 -> r2
#1:	       ldi	3 -> r10
	;;
#0:	       stm.s	r2, r14, 22     ; vfprintf.c:1087[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 112        ; vfprintf.c:1087[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1087[ sprintf.c:634 ]
	;;
#0:	       and	r1, r0 -> r1    ; vfprintf.c:1087[ sprintf.c:634 ]
#1:	       ldi	0 -> r0
	;;
#0:	       br	.BB4_240
#1:	       stm.s	r1, r14, 28
	;;
#0:	       stm.s	r0, r14, 19
	;;
#0:	       stm.s	r10, r14, 21
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB4_87:                                ; %bb59.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	1024 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_89
	;;
	       nop	2
	;;
; BB#88:                                ; %bb59.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_90
	;;
	       nop	2
	;;
.BB4_89:                                ; %bb1.i26.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r2, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1090[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_79
	;;
	       nop	2
	;;
.BB4_90:                                ; %bb3.i27.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	0 -> r1
#1:	       ldga	0 -> r3
	;;
#0:	       ldim	1536 -> r1
#1:	       ldih	1023 -> r3
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       cmpult	r1, r3 -> c1
	;;
#0:	if  c1 br	.BB4_79
	;;
	       nop	2
	;;
; BB#91:                                ; %bb3.i27.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1023 -> r1
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       cmpult	r1, r3 -> c1
	;;
#0:	if !c1 ldiu	0 -> r1
	;;
#0:	if !c1 ldim	512 -> r1
	;;
#0:	if !c1 cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_79
	;;
	       nop	2
	;;
; BB#92:                                ; %bb6.i30.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1024 -> r1
	;;
#0:	       cmplt	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_79
	;;
	       nop	2
	;;
; BB#93:                                ; %bb9.i31.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	0 -> r1
	;;
#0:	       ldim	1536 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_95
	;;
	       nop	2
	;;
; BB#94:                                ; %bb9.i31.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	1048576 -> r1
	;;
#0:	       ldih	1023 -> r1
	;;
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_96
	;;
	       nop	2
	;;
.BB4_95:                                ; %__fpclassifyd.exit37.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r2, 0 -> c1     ; s_fpclassify.c:26[ vfprintf.c:1090[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_79
	;;
	       nop	2
	;;
.BB4_96:                                ; %bb60.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	72 -> r1
#1:	       br	.BB4_86
#2:	       ldi	-129 -> r0
#3:	       ldga	._.str329 -> r2
	;;
#0:	       cmplt	r13, r1 -> c1
#1:	       ldga	._.str228 -> r1
	;;
	       nop	1
	;;
.BB4_97:                                ; %bb66.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	71 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 ldi	103 -> r1
	;;
#0:	if !c1 cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB4_99
	;;
	       nop	2
	;;
; BB#98:                                ; %bb68.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1154[ sprintf.c:634 ]
	;;
#0:	if !c1 ldi	1 -> r10
	;;
.BB4_99:                                ; %bb70.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmplt	r0, 0 -> c1
#1:	       ldm.s	r14, 112        ; vfprintf.c:1158[ sprintf.c:634 ]
#2:	       ldi	256 -> r1
	;;
#0:	if  c1 br	.BB4_101
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1158[ sprintf.c:634 ]
	;;
#1:	       or	r2, r1 -> r1.23 ; vfprintf.c:1158[ sprintf.c:634 ]
	;;
	       nop	1
	;;
; BB#100:                               ; %bb70.i.bb2.i.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#3:	       ldi	0 -> r3.23
#0:	       br	.BB4_102
#1:	       fop	dmov	d6 -> d7
	;;
	       nop	2
	;;
.BB4_101:                               ; %bb.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dabs	d6 -> d7
	;;
#3:	       ldi	45 -> r3.23
	;;
.BB4_102:                               ; %bb2.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	100 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB4_106
	;;
	       nop	2
	;;
; BB#103:                               ; %bb2.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	69 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_109
	;;
	       nop	2
	;;
; BB#104:                               ; %bb2.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_108
	;;
	       nop	2
	;;
.BB4_105:                               ; %bb2.i.i.bb8.i.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#2:	       or	r10, 0 -> r2.23
#0:	       br	.BB4_110
	;;
	       nop	2
	;;
.BB4_106:                               ; %bb2.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	101 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_109
	;;
	       nop	2
	;;
; BB#107:                               ; %bb2.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpne	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_105
	;;
	       nop	2
	;;
.BB4_108:                               ; %bb2.i.i.bb9.i.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	3 -> r2
#1:	       br	.BB4_111
#2:	       or	r10, 0 -> r2.23
	;;
	       nop	2
	;;
.BB4_109:                               ; %bb7.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#2:	       add	r10, 1 -> r2.23
	;;
.BB4_110:                               ; %bb8.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	2 -> r2
	;;
.BB4_111:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	12 -> r4
#1:	       fop	fmov	f14 -> f0
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	352 -> r4
#2:	       fop	fmov	f15 -> f1
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f0 -> r0
	;;
#0:	       callg	__dtoa_r
#2:	       add	r4, 12 -> r2.24
#1:	       add	r4, 24 -> r1
	;;
#2:	       stm.a	r2.24, r15, 0
#3:	       add	r4, 20 -> r3.24
	;;
#2:	       or	r2.23, 0 -> r3
	;;
#0:	       stm.a	r1, r15, 1
#1:	       ldx	$f1 -> r1
	;;
#3:	       stm.a	r3.24, r15, 2
	;;
#0:	       ldi	101 -> r1
#1:	       s2add	r15, 3 -> r15
#2:	       stm.s	r0, r14, 22
	;;
#0:	       cmplt	r1, r13 -> c1
	;;
#0:	if  c1 br	.BB4_117
	;;
	       nop	2
	;;
; BB#112:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_121
	;;
	       nop	2
	;;
; BB#113:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	71 -> r1
	;;
.BB4_114:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB4_126
	;;
	       nop	2
	;;
; BB#115:                               ; %bb11.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB4_119
	;;
	       nop	2
	;;
; BB#116:                               ; %bb11.bb22_crit_edge.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 372
#1:	       br	.BB4_132
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	1
	;;
.BB4_117:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_121
	;;
	       nop	2
	;;
; BB#118:                               ; %bb9.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	103 -> r1
#1:	       br	.BB4_114
	;;
	       nop	2
	;;
.BB4_119:                               ; %bb12.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	70 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_121
	;;
	       nop	2
	;;
; BB#120:                               ; %bb12.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmpne	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB4_126
	;;
	       nop	2
	;;
.BB4_121:                               ; %bb14.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r1
#1:	       ldi	48 -> r0
	;;
#0:	       cmpne	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB4_123
	;;
	       nop	2
	;;
; BB#122:                               ; %bb14.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r1
	;;
#0:	       btest	r1, 9 -> c1
	;;
#0:	if  c1 br	.BB4_124
	;;
	       nop	2
	;;
.BB4_123:                               ; %bb14.bb17_crit_edge.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364
#1:	       br	.BB4_125
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	1
	;;
.BB4_124:                               ; %bb16.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	1 -> r1
	;;
#2:	       sub	r1, r2.23 -> r1
	;;
#2:	       stm.a	r1, r2.24, 0
	;;
.BB4_125:                               ; %bb17.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#2:	       add	r1, r2.23 -> r2.23
	;;
.BB4_126:                               ; %bb18.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
#1:	       ldm.s	r14, 88
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#2:	       add	r0, r2.23 -> r1
#0:	       ldx	$f0 -> r0
	;;
#0:	       btest	r0, 9 -> c1
	;;
#0:	if  c1 br	.BB4_128
	;;
	       nop	2
	;;
; BB#127:                               ; %bb21.preheader.thread.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#3:	       stm.a	r1, r3.24, 0
#0:	       br	.BB4_132
	;;
	       nop	2
	;;
.BB4_128:                               ; %bb21.preheader.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 372
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB4_130
	;;
	       nop	2
	;;
; BB#129:                               ; %bb21.preheader.i.i.cvt.exit.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       or	r0, 0 -> r1
#1:	       br	.BB4_132
	;;
	       nop	2
	;;
.BB4_130:                               ; %bb20.i.preheader.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88
#2:	       sub	r2.23, r0 -> r2
#1:	       add	r0, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, r2 -> r2
	;;
.BB4_131:                               ; %bb20.i.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r2, 1 -> r2
#1:	       ldi	48 -> r3
#2:	       sub	r0, 1 -> r4
#3:	       add	r0, 1 -> r5
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stmb.a	r3, r4, 0
	;;
#0:	if  c1 br	.BB4_131
#3:	       stm.a	r0, r3.24, 0
#1:	       or	r5, 0 -> r0
	;;
	       nop	2
	;;
.BB4_132:                               ; %cvt.exit.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88
#1:	       ldi	71 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r1, r2 -> r1
	;;
#0:	       stm.s	r1, r14, 18
#1:	if !c1 ldi	103 -> r1
	;;
#0:	if !c1 cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB4_138
	;;
	       nop	2
	;;
; BB#133:                               ; %bb72.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1164[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1164[ sprintf.c:634 ]
	;;
#0:	       cmplt	r0, -3 -> c1
#1:	       stm.s	r0, r14, 19
	;;
#0:	if !c1 cmplt	r10, r0 -> c1
	;;
#0:	if  c1 br	.BB4_137
	;;
	       nop	2
	;;
; BB#134:                               ; %bb72.i.bb94.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	103 -> r13
	;;
.BB4_135:                               ; %bb94.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1192[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1192[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72         ; vfprintf.c:1192[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1192[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1192[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_160
	;;
	       nop	2
	;;
; BB#136:                               ; %bb95.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1194[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_161
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1194[ sprintf.c:634 ]
#2:	       ldm.s	r14, 76
	;;
#0:	       and	r1, 1 -> r1     ; vfprintf.c:1194[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r1 -> r10
	;;
.BB4_137:                               ; %bb74.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       sub	r13, 2 -> r13
	;;
.BB4_138:                               ; %bb76.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	101 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1173[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_152        ; vfprintf.c:1173[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1173[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1173[ sprintf.c:634 ]
	;;
; BB#139:                               ; %bb77.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1174[ sprintf.c:634 ]
#1:	       ldi	1 -> r10
#2:	       ldiu	352 -> r3
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1174[ sprintf.c:634 ]
	;;
#0:	       sub	r1, 1 -> r0
#1:	       sub	r10, r1 -> r1
#2:	       ldi	43 -> r10
	;;
#0:	       stm.s	r10, r14, 21
#1:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1742[ vfprintf.c:1175[ sprintf.c:634 ] ]
#2:	       or	r0, 0 -> r10
	;;
#0:	       ldm.s	r14, 84
#1:	if  c1 or	r1, 0 -> r10
#2:	       ldi	45 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	if  c1 or	r1, 0 -> r2
#1:	       add	r3, 4 -> r1
#2:	       cmplt	r10, 10 -> c1   ; vfprintf.c:1749[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_147        ; vfprintf.c:1749[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       stm.s	r1, r14, 25
	;;
#0:	       stmb.a	r2, r1, 1
	;;
#2:	       stm.a	r0, r2.24, 0    ; vfprintf.c:1174[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r13, r1, 0      ; vfprintf.c:1741[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
; BB#140:                               ; %bb77.i.bb4.i.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#3:	       ldi	0 -> r3.24
	;;
.BB4_141:                               ; %bb4.i.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       or	r10, 0 -> r0    ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       callg	___divsi3       ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
#2:	       ldi	10 -> r1
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
	       nop	3               ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldiu	352 -> r2
#2:	       or	r0, 0 -> r2.23  ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       or	r10, 0 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
#3:	       ldi	10 -> r1
	;;
#0:	       callg	___modsi3       ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       add	r14, r2 -> r2
	;;
#3:	       add	r2, 28 -> r3.25
	;;                              ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
	       nop	2               ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldi	99 -> r3
#1:	       s2add	r0, 12 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       cmplt	r3, r10 -> c1
#2:	       or	r2.23, 0 -> r10
	;;
#0:	if  c1 br	.BB4_141        ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
#3:	       sub	r3.25, r3.24 -> r2
	;;
#3:	       add	r3.24, 1 -> r1
#0:	       stmb.a	r0, r2, 6       ; vfprintf.c:1751[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#3:	       or	r1, 0 -> r3.24
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
	       nop	0               ; vfprintf.c:1752[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
; BB#142:                               ; %bb5.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 20
#2:	       s2add	r2.23, 12 -> r10 ; vfprintf.c:1753[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stmb.a	r10, r2, 5      ; vfprintf.c:1753[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       sub	r0, r1 -> r0
	;;
#0:	       ldm.s	r14, 32         ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       cmpult	r0, r10 -> c1   ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_144        ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	       nop	2               ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
; BB#143:                               ; %bb5.i.i.exponent.exit.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 48
#1:	       br	.BB4_148
	;;
	       nop	2
	;;
.BB4_144:                               ; %bb5.i.i.bb6.i.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 48
#1:	       add	r1, 1 -> r10
#2:	       add	r1, 2 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
.BB4_145:                               ; %bb6.i.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r10, 1 -> r10
	;;
#3:	       sub	r3.25, r0 -> r3
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       sub	r0, 1 -> r0
	;;
#0:	if  c1 br	.BB4_145        ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       ldm.f	r3, 8           ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
#2:	       add	r3, 8 -> r4
	;;
#0:	       ldx	$membu, r4 -> r3 ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       add	r2, 1 -> r4
	;;
#0:	       stmb.a	r3, r2, 0       ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       or	r4, 0 -> r2
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	       nop	0               ; vfprintf.c:1754[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
; BB#146:                               ; %bb7.bb10.loopexit_crit_edge.i.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 24
#1:	       br	.BB4_149
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, r1 -> r1
	;;
	       nop	0
	;;
.BB4_147:                               ; %bb9.i398.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1758[ vfprintf.c:1175[ sprintf.c:634 ] ]
#1:	       ldi	48 -> r1
#2:	       s2add	r10, 12 -> r10  ; vfprintf.c:1759[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1758[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       stmb.a	r1, r0, 2       ; vfprintf.c:1758[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       stmb.a	r10, r0, 3      ; vfprintf.c:1759[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldm.s	r14, 28
	;;
.BB4_148:                               ; %bb9.i398.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldx	$mem, 0 -> r1
	;;
.BB4_149:                               ; %exponent.exit.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1761[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1761[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       sub	r1, r10 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175[ sprintf.c:634 ] ]
	;;
#0:	       stm.s	r0, r14, 11     ; vfprintf.c:1176[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1176[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1176[ sprintf.c:634 ]
	;;
#0:	       add	r0, r1 -> r10   ; vfprintf.c:1176[ sprintf.c:634 ]
	;;
#0:	       stm.s	r10, r14, 21
#1:	       ldi	1 -> r10
	;;
#0:	       cmplt	r10, r1 -> c1   ; vfprintf.c:1177[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1177[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1177[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1177[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_151
	;;
	       nop	2
	;;
.BB4_150:                               ; %bb79.i.bb103.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB4_162
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
.BB4_151:                               ; %bb81.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1178[ sprintf.c:634 ]
#1:	       br	.BB4_150
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1178[ sprintf.c:634 ]
	;;
#0:	       add	r10, 1 -> r10   ; vfprintf.c:1178[ sprintf.c:634 ]
	;;
#0:	       stm.s	r10, r14, 21
	;;
.BB4_152:                               ; %bb82.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	102 -> r1
#1:	       ldm.s	r14, 364        ; vfprintf.c:1184[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r13, r1 -> c1   ; vfprintf.c:1183[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_135
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
; BB#153:                               ; %bb83.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmplt	r0, 1 -> c1     ; vfprintf.c:1184[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_158        ; vfprintf.c:1184[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1184[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1184[ sprintf.c:634 ]
	;;
; BB#154:                               ; %bb84.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1186[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1186[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1186[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1186[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_156
	;;
	       nop	2
	;;
; BB#155:                               ; %bb85.i.bb103.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 21
#1:	       br	.BB4_162
	;;
	       nop	2
	;;
.BB4_156:                               ; %bb87.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1187[ sprintf.c:634 ]
#1:	       br	.BB4_161
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1187[ sprintf.c:634 ]
	;;
#0:	       add	r10, r0 -> r1   ; vfprintf.c:1187[ sprintf.c:634 ]
	;;
#0:	       add	r1, 1 -> r10    ; vfprintf.c:1187[ sprintf.c:634 ]
	;;
.BB4_157:                               ; %bb89.i.bb103.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	1 -> r10
#1:	       br	.BB4_161
	;;
	       nop	2
	;;
.BB4_158:                               ; %bb88.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1189[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1189[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1189[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1189[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_157
	;;
	       nop	2
	;;
; BB#159:                               ; %bb91.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r10, 2 -> r10   ; vfprintf.c:1189[ sprintf.c:634 ]
#1:	       br	.BB4_161
	;;
	       nop	2
	;;
.BB4_160:                               ; %bb98.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 76
#1:	       ldi	2 -> r1
#2:	       ldi	1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 72         ; vfprintf.c:1197[ sprintf.c:634 ]
	;;
#0:	       cmplt	r0, 1 -> c1
#1:	       sub	r1, r0 -> r1    ; vfprintf.c:1197[ sprintf.c:634 ]
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1197[ sprintf.c:634 ]
	;;
#0:	       add	r10, r0 -> r10  ; vfprintf.c:1197[ sprintf.c:634 ]
	;;
.BB4_161:                               ; %bb98.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r10, r14, 21
	;;
.BB4_162:                               ; %bb103.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#3:	       mask	r3.23, 0 -> r1  ; vfprintf.c:1220[ sprintf.c:634 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1220[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_164        ; vfprintf.c:1220[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1220[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1220[ sprintf.c:634 ]
	;;
; BB#163:                               ; %bb103.i.bb173.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 368
#1:	       ldga	___mem_emergency -> r1
#2:	       ldi	0 -> r0
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stm.a	r2.31, r1, 0
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       br	.BB4_165
#1:	       ldx	$mem, 0 -> r1
#2:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$membu, r1 -> r1
	;;
#0:	       stm.s	r1, r14, 25
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB4_164:                               ; %bb104.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r0
#1:	       ldi	45 -> r1
	;;
#0:	       stm.s	r0, r14, 17
	;;
#0:	       stm.s	r1, r14, 25     ; vfprintf.c:1221[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1221[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1221[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r1, r10, 0      ; vfprintf.c:1221[ sprintf.c:634 ]
	;;
.BB4_165:                               ; %bb104.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#1:	       or	r1.23, 0 -> r1
#0:	       br	.BB4_240
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:1221[ sprintf.c:634 ]
	;;
	       nop	1
	;;
.BB4_166:                               ; %bb105.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 112        ; vfprintf.c:1230[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1230[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1230[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_168        ; vfprintf.c:1230[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1230[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1230[ sprintf.c:634 ]
	;;
; BB#167:                               ; %bb106.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 104        ; vfprintf.c:1231[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1231[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1231[ sprintf.c:634 ]
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1231[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_18
#1:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1231[ sprintf.c:634 ]
#2:	       stm.s	r1, r14, 26     ; vfprintf.c:1231[ sprintf.c:634 ]
#3:	       or	r11, 0 -> r1
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1231[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1231[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:1231[ sprintf.c:634 ]
#1:	       ldi	-1 -> r10
	;;
.BB4_168:                               ; %bb107.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 104        ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239[ sprintf.c:634 ]
#1:	       ldm.s	r14, 112        ; vfprintf.c:1232[ sprintf.c:634 ]
	;;
#0:	       add	r1, 4 -> r10    ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1232[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 6 -> c1     ; vfprintf.c:1232[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_171        ; vfprintf.c:1232[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1232[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1232[ sprintf.c:634 ]
	;;
; BB#169:                               ; %bb108.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 104        ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1233[ sprintf.c:634 ]
#1:	       ldm.s	r14, 80         ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
#0:	       stmh.a	r0, r1, 0       ; vfprintf.c:1233[ sprintf.c:634 ]
	;;
.BB4_170:                               ; %bb108.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       stm.s	r10, r14, 26    ; vfprintf.c:1233[ sprintf.c:634 ]
#1:	       br	.BB4_18
#2:	       or	r11, 0 -> r1
#3:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB4_171:                               ; %bb109.i
                                        ;   in Loop: Header=BB4_18 Depth=2
#0:	       ldm.s	r14, 104        ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_170
#1:	       ldm.f	r1, 0           ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1239[ sprintf.c:634 ]
#1:	       ldm.s	r14, 80         ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1239[ sprintf.c:634 ]
	;;
.BB4_172:                               ; %bb110.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1242[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1242[ sprintf.c:634 ]
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1242[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28
	;;
.BB4_173:                               ; %bb111.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_175        ; vfprintf.c:1245[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1245[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
; BB#174:                               ; %bb112.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1245[ sprintf.c:634 ]
#1:	       br	.BB4_176
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
.BB4_175:                               ; %bb113.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1245[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1245[ sprintf.c:634 ]
#1:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB4_176:                               ; %bb113.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
#0:	       br	.BB4_207
#1:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 26
#1:	       ldi	0 -> r1
	;;
.BB4_177:                               ; %bb118.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1260[ sprintf.c:634 ]
#1:	       ldiu	224 -> r3
#2:	       ldi	120 -> r13
#3:	       ldi	48 -> r2
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1260[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1260[ sprintf.c:634 ]
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1260[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1260[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1260[ sprintf.c:634 ]
#1:	       ldga	._.str430 -> r0
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1263[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 112        ; vfprintf.c:1263[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1263[ sprintf.c:634 ]
	;;
#0:	       or	r1, 2 -> r1     ; vfprintf.c:1263[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_207
#1:	       stm.s	r1, r14, 28
#2:	       ldi	2 -> r1
	;;
#0:	       stm.s	r0, r14, 16
#1:	       add	r3, 8 -> r0
	;;
#0:	       stmb.a	r13, r0, 1      ; vfprintf.c:1265[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r2, r0, 0       ; vfprintf.c:1264[ sprintf.c:634 ]
	;;
.BB4_178:                               ; %bb119.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1272[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1272[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1272[ sprintf.c:634 ]
#1:	       add	r1, 4 -> r1     ; vfprintf.c:1272[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1272[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1272[ sprintf.c:634 ]
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1278[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_180        ; vfprintf.c:1278[ sprintf.c:634 ]
#1:	       stm.s	r1, r14, 26     ; vfprintf.c:1271[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1271[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1271[ sprintf.c:634 ]
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1271[ sprintf.c:634 ]
	;;
; BB#179:                               ; %bb120.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	6 -> r1
#1:	       ldi	0 -> r0
	;;
#0:	       br	.BB4_185
#1:	       cmpult	r1, r10 -> c1
#2:	       stm.s	r0, r14, 25
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldga	._.str531 -> r1
	;;
#0:	       stm.s	r1, r14, 22
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 19
	;;
.BB4_180:                               ; %bb124.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1
	;;
#0:	if  c1 br	.BB4_183        ; vfprintf.c:1347[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1347[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1347[ sprintf.c:634 ]
	;;
; BB#181:                               ; %bb124.i.bb3.i43.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r10
#1:	       br	.BB4_188
	;;
	       nop	2
	;;
.BB4_182:                               ; %bb126.i.bb173.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r1
#1:	       br	.BB4_32
	;;
#0:	       stm.s	r1, r14, 25
	;;
	       nop	1
	;;
.BB4_183:                               ; %bb125.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r1
#1:	       or	r10, 0 -> r2    ; vfprintf.c:1353[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 25     ; vfprintf.c:1353[ sprintf.c:634 ]
#1:	       ldi	0 -> r1
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1353[ sprintf.c:634 ]
	;;
#0:	       callg	_memchr         ; vfprintf.c:1353[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1353[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1353[ sprintf.c:634 ]
	       nop	3               ; vfprintf.c:1353[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1355[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 88         ; vfprintf.c:1356[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1356[ sprintf.c:634 ]
	;;
#0:	if !c1 sub	r0, r1 -> r1    ; vfprintf.c:1356[ sprintf.c:634 ]
	;;
#0:	if !c1 stm.s	r1, r14, 21     ; vfprintf.c:1357[ sprintf.c:634 ]
#1:	if !c1 cmplt	r10, r1 -> c1   ; vfprintf.c:1357[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_182
	;;
	       nop	2
	;;
; BB#184:                               ; %bb127.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
#1:	       or	r1, 0 -> r0
	;;
.BB4_185:                               ; %bb127.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 17
#1:	       br	.BB4_240
	;;
#0:	       stm.s	r10, r14, 21
	;;
	       nop	1
	;;
.BB4_186:                               ; %bb.i38.i
                                        ;   in Loop: Header=BB4_188 Depth=2
#0:	       ldm.f	r1, 0           ; strlen.c:68[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$membu, r1 -> r1 ; strlen.c:68[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:68[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_182
	;;
	       nop	2
	;;
; BB#187:                               ; %bb2.i41.i
                                        ;   in Loop: Header=BB4_188 Depth=2
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 1 -> r10
	;;
.BB4_188:                               ; %bb2.i41.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       stm.s	r10, r14, 21
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r10 -> r1
	;;
#0:	       and	r1, 3 -> r10    ; strlen.c:66[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r10, 0 -> c1    ; strlen.c:66[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_186        ; strlen.c:66[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;                              ; strlen.c:66[ vfprintf.c:1362[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:66[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
; BB#189:                               ; %bb4.i45.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.f	r1, 0           ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       ldiu	1791 -> r10
#2:	       ldga	32896 -> r2
	;;
#0:	       ldim	991 -> r10
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       ldih	2039 -> r10
	;;
#0:	       and	r0, r2 -> r3
#1:	       add	r0, r10 -> r10
	;;
#0:	       xor	r3, r2 -> r2
	;;
#0:	       and	r2, r10 -> r10  ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_191
	;;
	       nop	2
	;;
.BB4_190:                               ; %bb5.i55.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 4           ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       ldiu	1791 -> r10
#2:	       ldga	32896 -> r2
#3:	       add	r1, 4 -> r1
	;;
#0:	       ldim	991 -> r10
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       ldih	2039 -> r10
	;;
#0:	       and	r0, r2 -> r3
#1:	       add	r0, r10 -> r10
	;;
#0:	       xor	r3, r2 -> r2
	;;
#0:	       and	r2, r10 -> r10  ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_190        ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;                              ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:76[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
.BB4_191:                               ; %bb8.i57.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.f	r1, 0           ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$membu, r1 -> r10 ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_194
	;;
	       nop	2
	;;
.BB4_192:                               ; %bb9.i61.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 1           ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       add	r1, 1 -> r10
	;;
#0:	       ldx	$membu, r10 -> r1 ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
#1:	       or	r10, 0 -> r1
	;;
#0:	if  c1 br	.BB4_192        ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;                              ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:85[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
; BB#193:                               ; %bb9.i61.i.bb11.i63.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       or	r10, 0 -> r1
	;;
.BB4_194:                               ; %bb11.i63.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 25    ; strlen.c:87[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       ldm.s	r14, 88         ; strlen.c:87[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; strlen.c:87[ vfprintf.c:1362[ sprintf.c:634 ] ]
	;;
#0:	       br	.BB4_240
#1:	       sub	r1, r0 -> r1    ; strlen.c:87[ vfprintf.c:1362[ sprintf.c:634 ] ]
#2:	       or	r10, 0 -> r0
	;;
#0:	       stm.s	r1, r14, 21
	;;
#0:	       stm.s	r0, r14, 19
#1:	       or	r10, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB4_195:                               ; %bb130.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1366[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1366[ sprintf.c:634 ]
	;;
#0:	       or	r1, 16 -> r1    ; vfprintf.c:1366[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 28
	;;
.BB4_196:                               ; %bb131.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_198        ; vfprintf.c:1369[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1369[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
; BB#197:                               ; %bb132.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1369[ sprintf.c:634 ]
#1:	       br	.BB4_199
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
.BB4_198:                               ; %bb133.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1369[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1369[ sprintf.c:634 ]
#1:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB4_199:                               ; %bb133.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
#0:	       br	.BB4_207
#1:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 26
#1:	       ldi	1 -> r1
	;;
.BB4_200:                               ; %hex.i.loopexit11
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	._.str632 -> r0
	;;
.BB4_201:                               ; %hex.i.loopexit11
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 16
	;;
#0:	       ldm.s	r14, 112        ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 4 -> c1     ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_203        ; vfprintf.c:1377[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1377[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
; BB#202:                               ; %bb140.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1377[ sprintf.c:634 ]
#1:	       br	.BB4_204
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
.BB4_203:                               ; %bb141.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1377[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1377[ sprintf.c:634 ]
#1:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       btest	r0, 6 -> c1
#1:	       mask	r1, 4 -> r0
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB4_204:                               ; %bb141.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 21
	;;
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 26     ; vfprintf.c:1380[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 112        ; vfprintf.c:1380[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1380[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1380[ sprintf.c:634 ]
	;;
#0:	if  c1 ldm.s	r14, 84
	;;
#0:	if  c1 ldx	$mem, 0 -> r0
	;;
#0:	if  c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB4_206
	;;
	       nop	2
	;;
; BB#205:                               ; %bb145.i.nosign.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	2 -> r1
#1:	       br	.BB4_207
	;;
	       nop	2
	;;
.BB4_206:                               ; %bb148.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	224 -> r3
#1:	       or	r1, 2 -> r1     ; vfprintf.c:1383[ sprintf.c:634 ]
#2:	       ldi	48 -> r0
	;;
#0:	       add	r14, r3 -> r3
#1:	       stm.s	r1, r14, 28
#2:	       ldi	2 -> r1
	;;
#0:	       add	r3, 8 -> r2
	;;
#0:	       stmb.a	r0, r2, 0       ; vfprintf.c:1381[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r13, r2, 1      ; vfprintf.c:1382[ sprintf.c:634 ]
	;;
.BB4_207:                               ; %nosign.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 25     ; vfprintf.c:1390[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1390[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1390[ sprintf.c:634 ]
	;;
#0:	       stmb.a	0, r0, 0        ; vfprintf.c:1390[ sprintf.c:634 ]
	;;
.BB4_208:                               ; %number.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1397[ sprintf.c:634 ]
#1:	       ldi	-1 -> r0
#2:	       ldi	-129 -> r2
	;;
#0:	       cmplt	r0, r10 -> c1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1397[ sprintf.c:634 ]
#1:	       ldm.s	r14, 84
	;;
#0:	       and	r0, r2 -> r2    ; vfprintf.c:1397[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	if  c1 or	r2, 0 -> r0
	;;
#0:	       or	r3, r10 -> r3
#1:	       stm.s	r0, r14, 28
	;;
#0:	       cmpeq	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB4_233        ; vfprintf.c:1405[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1405[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1405[ sprintf.c:634 ]
	;;
; BB#209:                               ; %bb153.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:1411[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1411[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_215        ; vfprintf.c:1411[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1411[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1411[ sprintf.c:634 ]
	;;
; BB#210:                               ; %bb153.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpeq	r1, 1 -> c1
	;;
#0:	if  c1 br	.BB4_219
	;;
	       nop	2
	;;
; BB#211:                               ; %bb153.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       cmpne	r1, 2 -> c1
	;;
#0:	if  c1 br	.BB4_214
	;;
	       nop	2
	;;
; BB#212:                               ; %bb153.i.bb162.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB4_213:                               ; %bb162.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 84         ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1459[ sprintf.c:634 ]
#1:	       ldm.s	r14, 64         ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       and	r0, 15 -> r1    ; vfprintf.c:1459[ sprintf.c:634 ]
#1:	       sr	r0, 4 -> r0     ; vfprintf.c:1460[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1459[ sprintf.c:634 ]
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1461[ sprintf.c:634 ]
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1459[ sprintf.c:634 ]
#1:	       stm.s	r0, r14, 21
	;;
#0:	       ldm.s	r14, 88
	;;
#0:	if  c1 br	.BB4_213
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.s	r2, r14, 22     ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1459[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_238
	;;
	       nop	2
	;;
.BB4_214:                               ; %bb153.i.bb3.i70.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r1
#1:	       br	.BB4_226
	;;
	       nop	2
	;;
.BB4_215:                               ; %bb153.i.bb154.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB4_216:                               ; %bb154.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 84         ; vfprintf.c:1414[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1414[ sprintf.c:634 ]
	;;
#0:	       and	r0, 7 -> r2     ; vfprintf.c:1414[ sprintf.c:634 ]
#1:	       sr	r0, 3 -> r0     ; vfprintf.c:1415[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 21
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1416[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB4_216        ; vfprintf.c:1416[ sprintf.c:634 ]
#1:	       sub	r3, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 22
#1:	       ldi	48 -> r3
	;;
#0:	       or	r2, r3 -> r2
#1:	       sub	r1, 1 -> r3
	;;
#0:	       stmb.a	r2, r1, 0       ; vfprintf.c:1414[ sprintf.c:634 ]
#1:	       or	r3, 0 -> r1
	;;
; BB#217:                               ; %bb155.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1418[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1418[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1418[ sprintf.c:634 ]
	;;
#0:	if  c1 mask	r2, 0 -> r1
#1:	if  c1 ldi	48 -> r0
	;;
#0:	if  c1 cmpne	r1, r0 -> c1
	;;
#0:	if !c1 br	.BB4_238
	;;
	       nop	2
	;;
; BB#218:                               ; %bb158.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stmb.a	r0, r3, 0       ; vfprintf.c:1419[ sprintf.c:634 ]
#1:	       br	.BB4_237
#2:	       or	r3, 0 -> r0
	;;
	       nop	2
	;;
.BB4_219:                               ; %bb159.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 10 -> c1
	;;
#0:	if  c1 br	.BB4_423        ; vfprintf.c:1424[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1424[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1424[ sprintf.c:634 ]
	;;
; BB#220:                               ; %bb159.i.bb161.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB4_221:                               ; %bb161.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 84         ; vfprintf.c:1453[ sprintf.c:634 ]
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___udivsi3      ; vfprintf.c:1453[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1453[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1453[ sprintf.c:634 ]
	       nop	3               ; vfprintf.c:1453[ sprintf.c:634 ]
	;;
#1:	       ldm.s	r14, 84         ; vfprintf.c:1432[ sprintf.c:634 ]
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:1453[ sprintf.c:634 ]
#2:	       ldi	10 -> r1
	;;
#0:	       callg	___umodsi3      ; vfprintf.c:1432[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1432[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1432[ sprintf.c:634 ]
	       nop	3               ; vfprintf.c:1432[ sprintf.c:634 ]
	;;
#1:	       ldm.s	r14, 88
#0:	       or	r0, r0.24 -> r0
#2:	       ldi	9 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 22
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1432[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#1:	       cmpult	r2, r0 -> c1
#0:	       or	r0.23, 0 -> r0
	;;
#0:	if  c1 br	.BB4_221
#1:	       stm.s	r0, r14, 21     ; vfprintf.c:1454[ sprintf.c:634 ]
	;;
	       nop	2
	;;
#0:	       br	.BB4_238
	;;
	       nop	2
	;;
.BB4_222:                               ; %bb.i65.i
                                        ;   in Loop: Header=BB4_226 Depth=2
#0:	       ldm.s	r14, 84         ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       ldi	25 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r0, r1 -> c1    ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_225        ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;                              ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:68[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
; BB#223:                               ; %bb.i65.i.bb173.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	._.str733 -> r0
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB4_224:                               ; %bb.i65.i.bb173.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB4_239
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
.BB4_225:                               ; %bb2.i68.i
                                        ;   in Loop: Header=BB4_226 Depth=2
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 1 -> r1
	;;
.BB4_226:                               ; %bb2.i68.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       stm.s	r1, r14, 21
#1:	       ldga	._.str733 -> r1
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r1, r0 -> r1
	;;
#0:	       and	r1, 3 -> r0     ; strlen.c:66[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:66[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_222        ; strlen.c:66[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;                              ; strlen.c:66[ vfprintf.c:1466[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:66[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
; BB#227:                               ; %bb4.i72.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.f	r1, 0           ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       ldiu	1791 -> r0
#2:	       ldga	32896 -> r3
	;;
#0:	       ldim	991 -> r0
#1:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       ldih	2039 -> r0
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r0 -> r0
	;;
#0:	       xor	r4, r3 -> r3
	;;
#0:	       and	r3, r0 -> r0    ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	if !c1 br	.BB4_229
	;;
	       nop	2
	;;
.BB4_228:                               ; %bb5.i82.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 4           ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       ldiu	1791 -> r0
#2:	       ldga	32896 -> r3
#3:	       add	r1, 4 -> r1
	;;
#0:	       ldim	991 -> r0
#1:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       ldih	2039 -> r0
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r0 -> r0
	;;
#0:	       xor	r4, r3 -> r3
	;;
#0:	       and	r3, r0 -> r0    ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_228        ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;                              ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:76[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
.BB4_229:                               ; %bb8.i84.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.f	r1, 0           ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       ldx	$membu, r1 -> r0 ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	if  c1 br	.BB4_232
	;;
	       nop	2
	;;
.BB4_230:                               ; %bb9.i88.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, 1           ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       add	r1, 1 -> r0
	;;
#0:	       ldx	$membu, r0 -> r1 ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       or	r0, 0 -> r1
	;;
#0:	if  c1 br	.BB4_230        ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;                              ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	       nop	2               ; strlen.c:85[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
; BB#231:                               ; %bb9.i88.i.bb11.i90.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       or	r0, 0 -> r1
	;;
.BB4_232:                               ; %bb11.i90.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	._.str733 -> r0 ; strlen.c:87[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       br	.BB4_224
	;;
#0:	       stm.s	r0, r14, 22     ; strlen.c:87[ vfprintf.c:1466[ sprintf.c:634 ] ]
#1:	       sub	r1, r0 -> r1    ; strlen.c:87[ vfprintf.c:1466[ sprintf.c:634 ] ]
	;;
#0:	       stm.s	r1, r14, 21
	;;
	       nop	0
	;;
.BB4_233:                               ; %bb164.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       mask	r1, 0 -> r1     ; vfprintf.c:1479[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1479[ sprintf.c:634 ]
	;;
#0:	if  c1 or	r0, 0 -> r1     ; vfprintf.c:1479[ sprintf.c:634 ]
	;;
#0:	if  c1 btest	r1, 0 -> c1     ; vfprintf.c:1479[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_235
	;;
	       nop	2
	;;
; BB#234:                               ; %bb164.i.bb168.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 56
#1:	       br	.BB4_237
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB4_235:                               ; %bb167.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	48 -> r1
	;;
.BB4_236:                               ; %bb167.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 52         ; vfprintf.c:1480[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1480[ sprintf.c:634 ]
	;;
#0:	       stmb.a	r1, r0, 0       ; vfprintf.c:1480[ sprintf.c:634 ]
	;;
.BB4_237:                               ; %bb167.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r0, r14, 22
	;;
.BB4_238:                               ; %bb168.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19     ; vfprintf.c:1482[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1482[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1482[ sprintf.c:634 ]
#1:	       ldm.s	r14, 56         ; vfprintf.c:1482[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1482[ sprintf.c:634 ]
	;;
#0:	       sub	r1, r0 -> r1    ; vfprintf.c:1482[ sprintf.c:634 ]
	;;
#0:	       stm.s	r1, r14, 21
	;;
.BB4_239:                               ; %bb168.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r10, r14, 17
	;;
.BB4_240:                               ; %bb173.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100
#1:	       ldi	132 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 68         ; vfprintf.c:1511[ sprintf.c:634 ]
	;;
#0:	       mask	r1, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1511[ sprintf.c:634 ]
#1:	       ldm.s	r14, 84         ; vfprintf.c:1511[ sprintf.c:634 ]
#2:	       cmpne	r1, 0 -> c1
	;;
#0:	       ldx	$c1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1511[ sprintf.c:634 ]
#1:	       ldm.s	r14, 112
	;;
#0:	       cmple	r0, r10 -> c2   ; vfprintf.c:1511[ sprintf.c:634 ]
	;;
#0:	if  c2 or	r10, 0 -> r0    ; vfprintf.c:1511[ sprintf.c:634 ]
	;;
#0:	       add	r1, r0 -> r1
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	       and	r0, r3 -> r3    ; vfprintf.c:1518[ sprintf.c:634 ]
#1:	       btest	r0, 1 -> c1
#2:	       add	r1, 2 -> r2     ; vfprintf.c:1515[ sprintf.c:634 ]
#3:	       and	r0, 2 -> r0     ; vfprintf.c:1514[ sprintf.c:634 ]
	;;
#0:	if !c1 or	r1, 0 -> r2
#1:	       cmpeq	r3, 0 -> c1     ; vfprintf.c:1518[ sprintf.c:634 ]
#2:	       stm.s	r3, r14, 9      ; vfprintf.c:1514[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_253
#1:	       stm.s	r0, r14, 10
	;;
#0:	       stm.s	r2, r14, 25     ; vfprintf.c:1518[ sprintf.c:634 ]
	;;
	       nop	1
	;;
; BB#241:                               ; %bb179.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       or	r2, 0 -> r1     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_247
	;;
	       nop	2
	;;
#0:	       br	.BB4_253
	;;
	       nop	2
	;;
.BB4_242:                               ; %bb180.i
                                        ;   in Loop: Header=BB4_247 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_244        ; vfprintf.c:1519[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1519[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
; BB#243:                               ; %bb180.i.bb184.i_crit_edge
                                        ;   in Loop: Header=BB4_247 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       br	.BB4_246
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_244:                               ; %bb181.i
                                        ;   in Loop: Header=BB4_247 Depth=2
#0:	       s2add	r14, 24 -> r2
#1:	       callg	___ssprint_r    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r2, 28 -> r0
#1:	       ldiu	320 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 20 -> r1
	;;                              ; vfprintf.c:1519[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#245:                               ; %bb181.i.bb184.i_crit_edge
                                        ;   in Loop: Header=BB4_247 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_246:                               ; %bb181.i.bb184.i_crit_edge
                                        ;   in Loop: Header=BB4_247 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_247:                               ; %bb185.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldga	_blanks.3634 -> r1 ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_242        ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1519[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1519[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
; BB#248:                               ; %bb186.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_250        ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1519[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1519[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
; BB#249:                               ; %bb186.bb190_crit_edge.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1519[ sprintf.c:634 ]
#1:	       br	.BB4_252
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_250:                               ; %bb187.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1519[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#251:                               ; %bb187.i.bb190.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_252:                               ; %bb187.i.bb190.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_253:                               ; %bb190.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 368        ; vfprintf.c:1522[ sprintf.c:634 ]
#1:	       ldga	___mem_emergency -> r1 ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#1:	       stm.a	r1.31, r1, 0    ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1522[ sprintf.c:634 ]
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1522[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_259
	;;
	       nop	2
	;;
; BB#254:                               ; %bb191.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523[ sprintf.c:634 ]
#1:	       ldm.s	r14, 108        ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1523[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1523[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_256        ; vfprintf.c:1523[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1523[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
; BB#255:                               ; %bb191.i.bb195.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1523[ sprintf.c:634 ]
#1:	       br	.BB4_258
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_256:                               ; %bb192.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1523[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1523[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#257:                               ; %bb192.i.bb195.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_258:                               ; %bb192.i.bb195.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_259:                               ; %bb195.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 40         ; vfprintf.c:1524[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1524[ sprintf.c:634 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1524[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_265
	;;
	       nop	2
	;;
; BB#260:                               ; %bb196.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	224 -> r3
#1:	       ldm.s	r14, 108        ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       add	r3, 8 -> r1
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       stm.a	2, r0, 1        ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       add	r0, 2 -> r0     ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1525[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1525[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_262        ; vfprintf.c:1525[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1525[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
; BB#261:                               ; %bb196.i.bb201.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1525[ sprintf.c:634 ]
#1:	       br	.BB4_264
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_262:                               ; %bb198.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1525[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1525[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#263:                               ; %bb198.i.bb201.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_264:                               ; %bb198.i.bb201.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_265:                               ; %bb201.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 36         ; vfprintf.c:1528[ sprintf.c:634 ]
#1:	       ldi	128 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1528[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r0, r1 -> c1    ; vfprintf.c:1528[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_278
	;;
	       nop	2
	;;
; BB#266:                               ; %bb202.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_272
	;;
	       nop	2
	;;
#0:	       br	.BB4_278
	;;
	       nop	2
	;;
.BB4_267:                               ; %bb203.i
                                        ;   in Loop: Header=BB4_272 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_269        ; vfprintf.c:1529[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1529[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
; BB#268:                               ; %bb203.i.bb207.i_crit_edge
                                        ;   in Loop: Header=BB4_272 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       br	.BB4_271
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_269:                               ; %bb204.i
                                        ;   in Loop: Header=BB4_272 Depth=2
#0:	       s2add	r14, 24 -> r2
#1:	       callg	___ssprint_r    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r2, 28 -> r0
#1:	       ldiu	320 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 20 -> r1
	;;                              ; vfprintf.c:1529[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#270:                               ; %bb204.i.bb207.i_crit_edge
                                        ;   in Loop: Header=BB4_272 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_271:                               ; %bb204.i.bb207.i_crit_edge
                                        ;   in Loop: Header=BB4_272 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_272:                               ; %bb208.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_267        ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1529[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1529[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
; BB#273:                               ; %bb209.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_275        ; vfprintf.c:1529[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1529[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
; BB#274:                               ; %bb209.i.bb213.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1529[ sprintf.c:634 ]
#1:	       br	.BB4_277
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_275:                               ; %bb210.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1529[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#276:                               ; %bb210.i.bb213.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_277:                               ; %bb210.i.bb213.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_278:                               ; %bb213.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 68         ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldi	0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldm.s	r14, 84         ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       sub	r0, r10 -> r10  ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_284
	;;
	       nop	2
	;;
#0:	       br	.BB4_290
	;;
	       nop	2
	;;
.BB4_279:                               ; %bb214.i
                                        ;   in Loop: Header=BB4_284 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_281        ; vfprintf.c:1532[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1532[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
; BB#280:                               ; %bb214.i.bb218.i_crit_edge
                                        ;   in Loop: Header=BB4_284 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       br	.BB4_283
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_281:                               ; %bb215.i
                                        ;   in Loop: Header=BB4_284 Depth=2
#0:	       s2add	r14, 24 -> r2
#1:	       callg	___ssprint_r    ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r2, 28 -> r0
#1:	       ldiu	320 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 20 -> r1
	;;                              ; vfprintf.c:1532[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#282:                               ; %bb215.i.bb218.i_crit_edge
                                        ;   in Loop: Header=BB4_284 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_283:                               ; %bb215.i.bb218.i_crit_edge
                                        ;   in Loop: Header=BB4_284 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_284:                               ; %bb219.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_279        ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1532[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1532[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
; BB#285:                               ; %bb220.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_287        ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1532[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1532[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
; BB#286:                               ; %bb220.bb224_crit_edge.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1532[ sprintf.c:634 ]
#1:	       br	.BB4_289
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_287:                               ; %bb221.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1532[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#288:                               ; %bb221.i.bb224.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_289:                               ; %bb221.i.bb224.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_290:                               ; %bb224.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1536[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1536[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 8 -> c1     ; vfprintf.c:1536[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_295        ; vfprintf.c:1536[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1536[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1536[ sprintf.c:634 ]
	;;
; BB#291:                               ; %bb225.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537[ sprintf.c:634 ]
#1:	       ldm.s	r14, 108        ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 84         ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       add	r13, r10 -> r13 ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537[ sprintf.c:634 ]
#1:	       stm.a	r13, r1, 2      ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r13    ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1537[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_294        ; vfprintf.c:1537[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1537[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
.BB4_292:                               ; %bb225.i.bb366.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537[ sprintf.c:634 ]
	;;
.BB4_293:                               ; %bb277.i.bb366.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1552[ sprintf.c:634 ]
#1:	       br	.BB4_405
	;;
	       nop	2
	;;
.BB4_294:                               ; %bb226.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r13
#1:	       br	.BB4_403
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;
.BB4_295:                               ; %bb229.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldi	102 -> r1
	;;
#0:	       cmplt	r13, r1 -> c1   ; vfprintf.c:1539[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_375        ; vfprintf.c:1539[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1539[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1539[ sprintf.c:634 ]
	;;
; BB#296:                               ; %bb230.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1540[ sprintf.c:634 ]
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1540[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 9 -> c1     ; vfprintf.c:1540[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_314        ; vfprintf.c:1540[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1540[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1540[ sprintf.c:634 ]
	;;
; BB#297:                               ; %bb231.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1542[ sprintf.c:634 ]
#1:	       ldga	._.str834 -> r1 ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1542[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1542[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_299        ; vfprintf.c:1542[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1542[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
; BB#298:                               ; %bb231.i.bb235.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1542[ sprintf.c:634 ]
#1:	       br	.BB4_301
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_299:                               ; %bb232.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1542[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#300:                               ; %bb232.i.bb235.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_301:                               ; %bb232.i.bb235.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
#0:	       ldm.s	r14, 364        ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1543[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72         ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1543[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_406
	;;
	       nop	2
	;;
; BB#302:                               ; %bb238.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1544[ sprintf.c:634 ]
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 60         ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1544[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1544[ sprintf.c:634 ]
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1544[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_304        ; vfprintf.c:1544[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1544[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
; BB#303:                               ; %bb238.i.bb242.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1544[ sprintf.c:634 ]
#1:	       br	.BB4_306
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_304:                               ; %bb239.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1544[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#305:                               ; %bb239.i.bb242.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_306:                               ; %bb239.i.bb242.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
#1:	       ldi	0 -> r1
	;;
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_312
	;;
	       nop	2
	;;
#0:	       br	.BB4_406
	;;
	       nop	2
	;;
.BB4_307:                               ; %bb243.i
                                        ;   in Loop: Header=BB4_312 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_309        ; vfprintf.c:1545[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1545[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
; BB#308:                               ; %bb243.i.bb247.i_crit_edge
                                        ;   in Loop: Header=BB4_312 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       br	.BB4_311
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_309:                               ; %bb244.i
                                        ;   in Loop: Header=BB4_312 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1545[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#310:                               ; %bb244.i.bb247.i_crit_edge
                                        ;   in Loop: Header=BB4_312 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_311:                               ; %bb244.i.bb247.i_crit_edge
                                        ;   in Loop: Header=BB4_312 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_312:                               ; %bb248.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_307        ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1545[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1545[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
.BB4_313:                               ; %bb249.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1545[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_292
	;;
	       nop	2
	;;
#0:	       br	.BB4_402
	;;
	       nop	2
	;;
.BB4_314:                               ; %bb253.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1547[ sprintf.c:634 ]
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1547[ sprintf.c:634 ]
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1547[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_336        ; vfprintf.c:1547[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1547[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1547[ sprintf.c:634 ]
	;;
; BB#315:                               ; %bb254.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1548[ sprintf.c:634 ]
#1:	       ldga	._.str834 -> r1 ; vfprintf.c:1542[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1548[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1548[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_317        ; vfprintf.c:1548[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1548[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
; BB#316:                               ; %bb254.i.bb258.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1548[ sprintf.c:634 ]
#1:	       br	.BB4_319
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_317:                               ; %bb255.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1548[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1548[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#318:                               ; %bb255.i.bb258.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_319:                               ; %bb255.i.bb258.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
#0:	       ldm.s	r14, 364        ; vfprintf.c:1549[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1549[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r1, r0 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1549[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1549[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1549[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1549[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_406
	;;
	       nop	2
	;;
; BB#320:                               ; %bb262.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1550[ sprintf.c:634 ]
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 60         ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1550[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1550[ sprintf.c:634 ]
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1550[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_322        ; vfprintf.c:1550[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1550[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
; BB#321:                               ; %bb262.i.bb266.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1550[ sprintf.c:634 ]
#1:	       br	.BB4_324
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_322:                               ; %bb263.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1550[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1550[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#323:                               ; %bb263.i.bb266.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_324:                               ; %bb266.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       sub	r2, r0 -> r10   ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_330
	;;
	       nop	2
	;;
#0:	       br	.BB4_335
	;;
	       nop	2
	;;
.BB4_325:                               ; %bb267.i
                                        ;   in Loop: Header=BB4_330 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_327        ; vfprintf.c:1551[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1551[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
; BB#326:                               ; %bb267.i.bb271.i_crit_edge
                                        ;   in Loop: Header=BB4_330 Depth=2
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       br	.BB4_329
	;;
	       nop	2
	;;
.BB4_327:                               ; %bb268.i
                                        ;   in Loop: Header=BB4_330 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1551[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#328:                               ; %bb268.i.bb271.i_crit_edge
                                        ;   in Loop: Header=BB4_330 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_329:                               ; %bb271.i
                                        ;   in Loop: Header=BB4_330 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB4_330:                               ; %bb272.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_325        ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 0       ; vfprintf.c:1551[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1551[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
; BB#331:                               ; %bb273.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_333        ; vfprintf.c:1551[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1551[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
; BB#332:                               ; %bb273.i.bb277.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1551[ sprintf.c:634 ]
#1:	       br	.BB4_335
	;;
	       nop	2
	;;
.BB4_333:                               ; %bb274.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1551[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#334:                               ; %bb274.i.bb277.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_335:                               ; %bb277.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1552[ sprintf.c:634 ]
#1:	       br	.BB4_401
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1552[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1552[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1552[ sprintf.c:634 ]
	;;
.BB4_336:                               ; %bb281.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       or	r0, 0 -> r10
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_342
	;;
	       nop	2
	;;
; BB#337:                               ; %bb285.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_339        ; vfprintf.c:1556[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
; BB#338:                               ; %bb285.i.bb289.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       br	.BB4_341
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_339:                               ; %bb286.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#340:                               ; %bb286.i.bb289.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_341:                               ; %bb286.i.bb289.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_342:                               ; %bb289.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       cmplt	r10, 0 -> c1
#2:	       ldi	0 -> r1
	;;
#0:	if  c1 or	r1, 0 -> r10    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       sub	r0, r10 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_355
	;;
	       nop	2
	;;
; BB#343:                               ; %bb297.preheader.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 76
	;;
#0:	       xor	r0, -1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       xor	r0, -1 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       xor	r2, -1 -> r1
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB4_349
#1:	       cmplt	r2, r1 -> c1
#2:	       ldi	0 -> r2
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
#0:	       sub	r0, r2 -> r10
	;;
#0:	       or	r10, 0 -> r13
#2:	       or	r10, 0 -> r2.23
	;;
.BB4_344:                               ; %bb292.i
                                        ;   in Loop: Header=BB4_349 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_346        ; vfprintf.c:1556[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
; BB#345:                               ; %bb292.i.bb296.i_crit_edge
                                        ;   in Loop: Header=BB4_349 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       br	.BB4_348
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_346:                               ; %bb293.i
                                        ;   in Loop: Header=BB4_349 Depth=2
#0:	       s2add	r14, 24 -> r2
#1:	       callg	___ssprint_r    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r2, 28 -> r0
#1:	       ldiu	320 -> r2
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 20 -> r1
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#347:                               ; %bb293.i.bb296.i_crit_edge
                                        ;   in Loop: Header=BB4_349 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_348:                               ; %bb293.i.bb296.i_crit_edge
                                        ;   in Loop: Header=BB4_349 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
#2:	       sub	r13, 16 -> r13
	;;
#2:	       sub	r2.23, 16 -> r2.23
	;;
.BB4_349:                               ; %bb297.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_344        ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
; BB#350:                               ; %bb298.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#2:	       add	r0, r2.23 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_352        ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1556[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
; BB#351:                               ; %bb298.bb302_crit_edge.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1556[ sprintf.c:634 ]
#1:	       br	.BB4_354
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_352:                               ; %bb299.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1556[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#353:                               ; %bb299.i.bb302.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_354:                               ; %bb299.i.bb302.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_355:                               ; %bb302.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1577[ sprintf.c:634 ]
#1:	       ldm.s	r14, 76         ; vfprintf.c:1558[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1558[ sprintf.c:634 ]
#1:	       ldm.s	r14, 88         ; vfprintf.c:1558[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1558[ sprintf.c:634 ]
	;;
#0:	       add	r0, r2 -> r0    ; vfprintf.c:1558[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 72         ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	if !c1 cmpne	r1, 0 -> c1     ; vfprintf.c:1577[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_361
	;;
	       nop	2
	;;
; BB#356:                               ; %bb305.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       ldga	._.str65 -> r1  ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 60         ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r1     ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_358        ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1578[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1578[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
; BB#357:                               ; %bb305.bb309_crit_edge.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1578[ sprintf.c:634 ]
#1:	       br	.BB4_360
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_358:                               ; %bb306.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1578[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1578[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#359:                               ; %bb306.i.bb309.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_360:                               ; %bb306.i.bb309.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_361:                               ; %bb309.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldm.s	r14, 88         ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72         ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r0, r1 -> r0    ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       sub	r1, r10 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       sub	r0, r2 -> r13   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if  c1 or	r1, 0 -> r13
#1:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r13 -> c1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_367
	;;
	       nop	2
	;;
; BB#362:                               ; %bb313.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       or	r2, 0 -> r0     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       stm.a	r13, r1, 1      ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r0, r13 -> r0   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_364        ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1579[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
; BB#363:                               ; %bb313.bb317_crit_edge.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       br	.BB4_366
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_364:                               ; %bb314.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r3
#1:	       callg	___ssprint_r    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r3, 28 -> r0
#1:	       ldiu	320 -> r3
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       add	r3, 20 -> r1
	;;                              ; vfprintf.c:1579[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#365:                               ; %bb314.i.bb317.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_366:                               ; %bb314.i.bb317.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_367:                               ; %bb317.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 364        ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldi	0 -> r0
#2:	       cmplt	r13, 0 -> c1
	;;
#0:	       sub	r0, r13 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldm.s	r14, 72         ; vfprintf.c:1579[ sprintf.c:634 ]
#2:	if  c1 or	r0, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       sub	r3, r1 -> r3    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r3, r2 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_406
	;;
	       nop	2
	;;
; BB#368:                               ; %bb325.preheader.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 96
#1:	       sub	r10, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 72
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 88
	;;
#0:	       sub	r0, r3 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       sub	r2, r4 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
#1:	       ldi	-1 -> r0
	;;
#0:	       br	.BB4_374
#1:	       cmplt	r0, r2 -> c1
#2:	       add	r3, r2 -> r0
	;;
#0:	       sub	r0, r1 -> r1
#1:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r2, 0 -> r0
	;;
#0:	       sub	r1, r0 -> r10
	;;
.BB4_369:                               ; %bb320.i
                                        ;   in Loop: Header=BB4_374 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_371        ; vfprintf.c:1579[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1579[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
; BB#370:                               ; %bb320.i.bb324.i_crit_edge
                                        ;   in Loop: Header=BB4_374 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       br	.BB4_373
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_371:                               ; %bb321.i
                                        ;   in Loop: Header=BB4_374 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1579[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#372:                               ; %bb321.i.bb324.i_crit_edge
                                        ;   in Loop: Header=BB4_374 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_373:                               ; %bb321.i.bb324.i_crit_edge
                                        ;   in Loop: Header=BB4_374 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_374:                               ; %bb325.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1579[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_369
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1579[ sprintf.c:634 ]
	;;
	       nop	1
	;;
#0:	       br	.BB4_313
	;;
	       nop	2
	;;
.BB4_375:                               ; %bb330.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 72         ; vfprintf.c:1583[ sprintf.c:634 ]
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1583[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1583[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 112        ; vfprintf.c:1583[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1583[ sprintf.c:634 ]
	;;
#0:	if !c1 btest	r1, 0 -> c1     ; vfprintf.c:1583[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_396
	;;
	       nop	2
	;;
; BB#376:                               ; %bb333.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584[ sprintf.c:634 ]
#1:	       ldm.s	r14, 108        ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1584[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1584[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_378        ; vfprintf.c:1584[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1584[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
; BB#377:                               ; %bb333.i.bb337.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1584[ sprintf.c:634 ]
#1:	       br	.BB4_380
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_378:                               ; %bb334.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1584[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1584[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#379:                               ; %bb334.i.bb337.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_380:                               ; %bb337.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldga	._.str65 -> r0  ; vfprintf.c:1544[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 60         ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 88         ; vfprintf.c:1585[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1585[ sprintf.c:634 ]
#1:	       ldm.s	r14, 92         ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r10    ; vfprintf.c:1585[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1586[ sprintf.c:634 ]
#1:	       ldm.f	r2, 4           ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       add	r3, r0 -> r0    ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1586[ sprintf.c:634 ]
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1586[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_382        ; vfprintf.c:1586[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1586[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
; BB#381:                               ; %bb337.i.bb341.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1586[ sprintf.c:634 ]
#1:	       br	.BB4_384
	;;
	       nop	2
	;;
.BB4_382:                               ; %bb338.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1586[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1586[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#383:                               ; %bb338.i.bb341.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_384:                               ; %bb341.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1587[ sprintf.c:634 ]
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1587[ sprintf.c:634 ]
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1587[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_387        ; vfprintf.c:1587[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1587[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1587[ sprintf.c:634 ]
	;;
; BB#385:                               ; %bb342.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       stm.a	r10, r1, 0      ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1588[ sprintf.c:634 ]
#1:	       ldm.f	r2, 4           ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       add	r0, r3 -> r0    ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1588[ sprintf.c:634 ]
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1588[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1588[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_398
	;;
	       nop	2
	;;
; BB#386:                               ; %bb342.i.bb361.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1588[ sprintf.c:634 ]
#1:	       br	.BB4_400
	;;
	       nop	2
	;;
.BB4_387:                               ; %bb346.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 72
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_393
	;;
	       nop	2
	;;
#0:	       br	.BB4_400
	;;
	       nop	2
	;;
.BB4_388:                               ; %bb347.i
                                        ;   in Loop: Header=BB4_393 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_390        ; vfprintf.c:1591[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1591[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
; BB#389:                               ; %bb347.i.bb351.i_crit_edge
                                        ;   in Loop: Header=BB4_393 Depth=2
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       br	.BB4_392
	;;
	       nop	2
	;;
.BB4_390:                               ; %bb348.i
                                        ;   in Loop: Header=BB4_393 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1591[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#391:                               ; %bb348.i.bb351.i_crit_edge
                                        ;   in Loop: Header=BB4_393 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_392:                               ; %bb351.i
                                        ;   in Loop: Header=BB4_393 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB4_393:                               ; %bb352.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_388        ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 0       ; vfprintf.c:1591[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1591[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
; BB#394:                               ; %bb353.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       ldm.f	r0, 4           ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       stm.a	r2, r0, 2       ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	       stm.a	r2, r0, 1       ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; vfprintf.c:1591[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_398
	;;
	       nop	2
	;;
; BB#395:                               ; %bb353.i.bb361.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1591[ sprintf.c:634 ]
#1:	       br	.BB4_400
	;;
	       nop	2
	;;
.BB4_396:                               ; %bb357.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 88         ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593[ sprintf.c:634 ]
#1:	       ldm.s	r14, 108        ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1593[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1593[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_398
	;;
	       nop	2
	;;
; BB#397:                               ; %bb357.i.bb361.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1593[ sprintf.c:634 ]
#1:	       br	.BB4_400
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_398:                               ; %bb358.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1593[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1593[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#399:                               ; %bb358.i.bb361.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_400:                               ; %bb361.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	352 -> r5
	;;
#0:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 4 -> r0
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 44         ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
.BB4_401:                               ; %bb361.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1594[ sprintf.c:634 ]
#1:	       ldm.f	r2, 4           ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       add	r3, r0 -> r0    ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1594[ sprintf.c:634 ]
#1:	       stm.a	r0, r2, 2       ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       add	r4, 1 -> r0     ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r2, 1       ; vfprintf.c:1594[ sprintf.c:634 ]
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_293
	;;
	       nop	2
	;;
.BB4_402:                               ; %bb363.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;
.BB4_403:                               ; %bb363.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       callg	___ssprint_r    ; vfprintf.c:1594[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1594[ sprintf.c:634 ]
	       nop	3               ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1594[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#404:                               ; %bb363.i.bb366.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_405:                               ; %bb363.i.bb366.i_crit_edge
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       stm.s	r1, r14, 27
	;;
.BB4_406:                               ; %bb366.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1601[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1601[ sprintf.c:634 ]
	;;
#0:	       btest	r1, 2 -> c1     ; vfprintf.c:1601[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_416
	;;
	       nop	2
	;;
; BB#407:                               ; %bb367.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       sub	r12, r1 -> r10  ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	if !c1 br	.BB4_413
	;;
	       nop	2
	;;
#0:	       br	.BB4_416
	;;
	       nop	2
	;;
.BB4_408:                               ; %bb368.i
                                        ;   in Loop: Header=BB4_413 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r0, 16 -> r0    ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_410        ; vfprintf.c:1602[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1602[ sprintf.c:634 ]
	       nop	2               ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
; BB#409:                               ; %bb368.i.bb372.i_crit_edge
                                        ;   in Loop: Header=BB4_413 Depth=2
#0:	       ldm.s	r14, 108        ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       br	.BB4_412
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r1, 8 -> r1     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
	       nop	0
	;;
.BB4_410:                               ; %bb369.i
                                        ;   in Loop: Header=BB4_413 Depth=2
#0:	       s2add	r14, 24 -> r13
#1:	       callg	___ssprint_r    ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r13, 28 -> r0
#1:	       ldiu	320 -> r13
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       add	r13, 20 -> r1
	;;                              ; vfprintf.c:1602[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
; BB#411:                               ; %bb369.i.bb372.i_crit_edge
                                        ;   in Loop: Header=BB4_413 Depth=2
#0:	       ldiu	256 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r1
	;;
.BB4_412:                               ; %bb369.i.bb372.i_crit_edge
                                        ;   in Loop: Header=BB4_413 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r1, r14, 27
	;;
.BB4_413:                               ; %bb373.i
                                        ;   Parent Loop BB4_16 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
#1:	       ldm.s	r14, 108        ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       ldga	_blanks.3634 -> r1 ; vfprintf.c:1519[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_408        ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1602[ sprintf.c:634 ]
	;;                              ; vfprintf.c:1602[ sprintf.c:634 ]
	       nop	1               ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
; BB#414:                               ; %bb374.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       stm.a	r10, r1, 1      ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       ldm.f	r1, 4           ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602[ sprintf.c:634 ]
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r2, 1 -> r0     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       cmplt	r0, 8 -> c1     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_416
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
	       nop	2
	;;
; BB#415:                               ; %bb375.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1602[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
.BB4_416:                               ; %bb378.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_418
	;;
	       nop	2
	;;
; BB#417:                               ; %bb381.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1607[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_422
	;;
	       nop	2
	;;
.BB4_418:                               ; %bb382.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       ldm.s	r14, 100        ; vfprintf.c:1605[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1605[ sprintf.c:634 ]
#1:	       ldm.s	r14, 80         ; vfprintf.c:1605[ sprintf.c:634 ]
	;;
#0:	       cmple	r12, r1 -> c1   ; vfprintf.c:1605[ sprintf.c:634 ]
	;;
#0:	if  c1 or	r1, 0 -> r12    ; vfprintf.c:1605[ sprintf.c:634 ]
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605[ sprintf.c:634 ]
	;;
#0:	       add	r12, r0 -> r0   ; vfprintf.c:1605[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_16
#1:	       stm.s	r0, r14, 20     ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607[ sprintf.c:634 ]
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:1607[ sprintf.c:634 ]
#1:	       or	r11, 0 -> r1
	;;
.BB4_419:                               ; %done.i
#0:	       ldm.s	r14, 92         ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	if  c1 br	.BB4_421
	;;
	       nop	2
	;;
; BB#420:                               ; %bb385.i
#0:	       s2add	r14, 24 -> r10
#1:	       callg	___ssprint_r    ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       add	r10, 28 -> r0
#1:	       ldiu	320 -> r10
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       add	r10, 20 -> r1
	;;                              ; vfprintf.c:1615[ sprintf.c:634 ]
	       nop	0               ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       br	.BB4_422
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	if !c1 ldm.s	r14, 92         ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	if !c1 stm.a	0, r0, 1        ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
.BB4_421:                               ; %bb386.i
#0:	       ldm.s	r14, 92         ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1615[ sprintf.c:634 ]
	;;
.BB4_422:                               ; %_svfprintf_r.exit
#0:	       ldm.s	r14, 124        ; sprintf.c:636
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0   ; sprintf.c:636
	;;
#0:	       stmb.a	0, r0, 0        ; sprintf.c:636
#1:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldm.s	r0, -636
#1:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r0, -632
#2:	       ldiu	1024 -> r0
	;;
#1:	       add	r14, r0 -> r0
#0:	       stx	r0.31 -> $f14
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r0, -628
#2:	       ldiu	1020 -> r0
	;;
#1:	       add	r14, r0 -> r0
#0:	       stx	r0.31 -> $f15
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r0, -624
#2:	       ldiu	1024 -> r0
	;;
#0:	       add	r14, r0 -> r0
#1:	       stx	r1.31 -> $f12
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r0, -620
#2:	       ldiu	1020 -> r0
	;;
#0:	       add	r14, r0 -> r0
#1:	       stx	r1.31 -> $f13
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r0, -616
	;;
#2:	       stx	r2.31 -> $f10
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r14, 412
	;;
#2:	       stx	r2.31 -> $f11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 416
	;;
#0:	       stx	r0 -> $f15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 420
	;;
#0:	       stx	r0 -> $f14
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 424
	;;
#0:	       stx	r0 -> $f13
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 428
	;;
#0:	       stx	r0 -> $f12
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 432
	;;
#0:	       stx	r0 -> $f11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 436
	;;
#0:	       stx	r0 -> $f10
#1:	       ldiu	500 -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.25
#0:	       ldm.s	r14, 440
	;;
#3:	       ldx	$mem, 0 -> r3.24
#0:	       ldm.s	r14, 444
	;;
#2:	       ldx	$mem, 0 -> r2.24
#0:	       ldm.s	r14, 448
	;;
#0:	       ldx	$mem, 0 -> r0.24
#1:	       ldm.s	r14, 452
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 456
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 460
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 464
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 468
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 472
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 476
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 480
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 0
#1:	       add	r15, r0 -> r15
	;;
#2:	       stx	r2.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB4_423:                               ; %bb160.i
                                        ;   in Loop: Header=BB4_16 Depth=1
#0:	       s2add	r0, 12 -> r1    ; vfprintf.c:1425[ sprintf.c:634 ]
#1:	       br	.BB4_236
	;;
	       nop	2
	;;
	.align	4
_sprintf_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI4_0:
	.long	.BB4_36-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_39-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_40-_sprintf_start
	.long	.BB4_43-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_42-_sprintf_start
	.long	.BB4_44-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_53-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_55-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_62-_sprintf_start
	.long	.BB4_71-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_71-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_58-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_172-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_195-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_200-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_61-_sprintf_start
	.long	.BB4_63-_sprintf_start
	.long	.BB4_71-_sprintf_start
	.long	.BB4_71-_sprintf_start
	.long	.BB4_71-_sprintf_start
	.long	.BB4_59-_sprintf_start
	.long	.BB4_63-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_60-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_166-_sprintf_start
	.long	.BB4_173-_sprintf_start
	.long	.BB4_177-_sprintf_start
	.long	.BB4_60-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_178-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_196-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_31-_sprintf_start
	.long	.BB4_35-_sprintf_start

	.text
	.align	4
___sfvwrite_r:                          ; @__sfvwrite_r
	.size	___sfvwrite_r_end-___sfvwrite_r
___sfvwrite_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 15
#2:	       ldiu	60 -> r2
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 14
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 13
	;;
#0:	       stm.s	r12, r14, 12
	;;
#0:	       stm.s	r13, r14, 11
	;;
#0:	       stm.s	r1, r14, 7
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:59
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:59
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:59
	;;
#0:	if  c1 br	.BB5_56
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       add	r10, 12 -> r0   ; fvwrite.c:63
	;;
#0:	       stm.s	r0, r14, 6      ; fvwrite.c:63
	;;
#0:	       ldm.f	r10, 12         ; fvwrite.c:63
	;;
#0:	       ldx	$memhu, r0 -> r1 ; fvwrite.c:63
	;;
#0:	       btest	r1, 3 -> c1     ; fvwrite.c:63
	;;
#0:	if !c1 br	.BB5_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb2
#0:	       ldm.f	r10, 16         ; fvwrite.c:63
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:63
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:63
	;;
#0:	if !c1 br	.BB5_5
	;;
	       nop	2
	;;
.BB5_3:                                 ; %bb3
#0:	       or	r10, 0 -> r0    ; fvwrite.c:63
#1:	       callg	___swsetup_r    ; fvwrite.c:63
	;;                              ; fvwrite.c:63
	       nop	3               ; fvwrite.c:63
	;;
#0:	       ldm.f	r10, 12
#1:	       ldga	___mem_emergency -> r1
#2:	       cmpne	r0, 0 -> c1     ; fvwrite.c:63
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#0:	if !c1 br	.BB5_5
#3:	       stm.a	r3.31, r1, 0
	;;
#0:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r1 -> r1
	;;
; BB#4:                                 ; %bb4
#0:	       ldi	64 -> r0
#1:	       br	.BB5_57
	;;
#0:	       or	r1, r0 -> r1    ; fvwrite.c:65
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:66
	;;
#0:	       stmh.a	r1, r10, 6      ; fvwrite.c:65
	;;
#0:	       stm.a	9, r0, 0        ; fvwrite.c:66
#1:	       ldi	-1 -> r0
	;;
.BB5_5:                                 ; %bb5
#0:	       ldm.s	r14, 28         ; fvwrite.c:70
#1:	       btest	r1, 1 -> c1     ; fvwrite.c:93
	;;
#0:	if !c1 br	.BB5_11         ; fvwrite.c:93
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:70
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:70
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:70
	;;                              ; fvwrite.c:93
	       nop	0               ; fvwrite.c:93
	;;
; BB#6:                                 ; %bb7.preheader
#0:	       ldi	0 -> r11
#1:	       br	.BB5_8
#2:	       add	r0, 4 -> r0
#3:	       ldiu	1024 -> r12
	;;
#0:	       stm.s	r0, r14, 10
#1:	       or	r11, 0 -> r13
	;;
	       nop	1
	;;
.BB5_7:                                 ; %bb6
                                        ;   in Loop: Header=BB5_8 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:100
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:100
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:100
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:100
#1:	       ldm.f	r0, 0           ; fvwrite.c:100
#2:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:100
#1:	       stm.s	r0, r14, 10
	;;
.BB5_8:                                 ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r13, 0 -> c1    ; fvwrite.c:100
	;;
#0:	if  c1 br	.BB5_7          ; fvwrite.c:100
	;;                              ; fvwrite.c:100
	       nop	2               ; fvwrite.c:100
	;;
; BB#9:                                 ; %bb8
                                        ;   in Loop: Header=BB5_8 Depth=1
#0:	       ldm.f	r10, 36         ; fvwrite.c:101
#1:	       cmpult	r12, r13 -> c1
#2:	       or	r13, 0 -> r3    ; fvwrite.c:101
#3:	       ldga	_impure_data -> r0 ; fvwrite.c:101
	;;
#0:	if  c1 or	r12, 0 -> r3    ; fvwrite.c:101
#1:	       or	r11, 0 -> r2    ; fvwrite.c:101
	;;
#0:	       ldx	$mem, 0 -> r4   ; fvwrite.c:101
#1:	       ldm.f	r10, 28         ; fvwrite.c:101
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:101
	;;
#0:	       call	r4              ; fvwrite.c:101
	;;                              ; fvwrite.c:101
	       nop	3               ; fvwrite.c:101
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
; BB#10:                                ; %bb10
                                        ;   in Loop: Header=BB5_8 Depth=1
#0:	       ldm.s	r14, 28         ; fvwrite.c:107
#1:	       add	r11, r0 -> r11  ; fvwrite.c:104
#2:	       sub	r13, r0 -> r13  ; fvwrite.c:105
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:107
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:107
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:107
	;;
#0:	       cmpeq	r2, r0 -> c1
#1:	       sub	r2, r0 -> r3    ; fvwrite.c:107
	;;
#0:	if !c1 br	.BB5_8
#1:	       stm.a	r3, r1, 2       ; fvwrite.c:107
	;;
	       nop	2
	;;
#0:	       br	.BB5_56
	;;
	       nop	2
	;;
.BB5_11:                                ; %bb11
#0:	       mask	r1, 4 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1     ; fvwrite.c:109
	;;
#0:	if  c1 br	.BB5_13         ; fvwrite.c:109
	;;                              ; fvwrite.c:109
	       nop	2               ; fvwrite.c:109
	;;
; BB#12:                                ; %bb13.preheader
#0:	       ldi	0 -> r1
#1:	       br	.BB5_15
#2:	       add	r0, 4 -> r0
	;;
#0:	       stm.s	r1, r14, 10
#1:	       or	r1, 0 -> r11
	;;
#0:	       stm.s	r0, r14, 5
	;;
	       nop	0
	;;
.BB5_13:                                ; %bb38.preheader
#0:	       add	r0, 4 -> r11
	;;
#0:	       br	.BB5_38
#1:	       stm.s	r11, r14, 4
#2:	       ldi	0 -> r11
	;;
#0:	       stm.s	r11, r14, 10
	;;
#0:	       stm.s	r11, r14, 9
	;;
#0:	       stm.s	r11, r14, 5
	;;
.BB5_14:                                ; %bb12
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 20         ; fvwrite.c:126
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:126
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:126
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:126
	;;
#0:	       stm.s	r11, r14, 10    ; fvwrite.c:126
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:126
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:126
#1:	       stm.s	r0, r14, 5
	;;
.BB5_15:                                ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r11, 0 -> c1    ; fvwrite.c:126
	;;
#0:	if  c1 br	.BB5_14         ; fvwrite.c:126
	;;                              ; fvwrite.c:126
	       nop	2               ; fvwrite.c:126
	;;
; BB#16:                                ; %bb14
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stm.a	r0.31, r0, 0
	;;
#0:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 9 -> c1     ; fvwrite.c:128
#1:	       stm.s	r0, r14, 8      ; fvwrite.c:127
	;;
#0:	if !c1 br	.BB5_30         ; fvwrite.c:128
#1:	       ldm.f	r10, 8          ; fvwrite.c:127
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:127
	;;                              ; fvwrite.c:128
	       nop	1               ; fvwrite.c:128
	;;
; BB#17:                                ; %bb15
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       cmpule	r12, r11 -> c1  ; fvwrite.c:130
	;;
#0:	if !c1 br	.BB5_28
	;;
	       nop	2
	;;
; BB#18:                                ; %bb16
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 32         ; fvwrite.c:130
#1:	       ldiu	1152 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:130
	;;
#0:	       and	r1, r0 -> r0    ; fvwrite.c:130
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:130
	;;
#0:	if  c1 br	.BB5_28
	;;
	       nop	2
	;;
; BB#19:                                ; %bb17
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 20         ; fvwrite.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:141
#1:	       ldm.f	r10, 16         ; fvwrite.c:133
	;;
#0:	       mul	r12, 3 -> $mul0 ; fvwrite.c:141
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:133
#1:	       ldm.f	r10, 0          ; fvwrite.c:133
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:133
	;;
#1:	       sub	r1, r0 -> r12   ; fvwrite.c:133
#0:	       ldx	$mul0, 0 -> r1  ; fvwrite.c:141
	;;
#0:	       sr	r1, 31 -> r2    ; fvwrite.c:141
#1:	       stm.s	r12, r14, 9     ; fvwrite.c:141
#2:	       add	r11, r12 -> r12 ; fvwrite.c:142
	;;
#0:	       add	r1, r2 -> r1    ; fvwrite.c:141
#1:	       add	r12, 1 -> r12   ; fvwrite.c:142
#2:	       ldm.s	r14, 32         ; fvwrite.c:144
	;;
#0:	       sra	r1, 1 -> r13    ; fvwrite.c:141
	;;
#0:	       cmpult	r13, r12 -> c1  ; fvwrite.c:142
	;;
#0:	if  c1 or	r12, 0 -> r13
#1:	       ldx	$mem, 0 -> r12  ; fvwrite.c:144
	;;
#0:	       btest	r12, 10 -> c1   ; fvwrite.c:144
	;;
#0:	if !c1 br	.BB5_23         ; fvwrite.c:144
	;;                              ; fvwrite.c:144
	       nop	2               ; fvwrite.c:144
	;;
; BB#20:                                ; %bb20
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       or	r13, 0 -> r0    ; fvwrite.c:147
#1:	       callg	__malloc_r      ; fvwrite.c:147
	;;                              ; fvwrite.c:147
	       nop	3               ; fvwrite.c:147
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:148
	;;
#0:	if  c1 br	.BB5_26         ; fvwrite.c:148
	;;                              ; fvwrite.c:148
	       nop	2               ; fvwrite.c:148
	;;
.BB5_21:                                ; %bb21
#0:	       ldga	_impure_data -> r0 ; fvwrite.c:150
	;;
#0:	       stm.a	12, r0, 0       ; fvwrite.c:150
	;;
.BB5_22:                                ; %err
#0:	       ldm.f	r10, 12         ; fvwrite.c:269
#1:	       ldga	___mem_emergency -> r0 ; fvwrite.c:269
#2:	       ldi	64 -> r1
#3:	       or	r14, 0 -> r15   ; fvwrite.c:270
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fvwrite.c:269
	;;
#1:	       stm.a	r1.31, r0, 0    ; fvwrite.c:269
	;;
#0:	       ldm.s	r14, 24         ; fvwrite.c:269
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:269
#1:	       ldmg.d	___mem_emergency ; fvwrite.c:269
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fvwrite.c:269
	;;
#0:	       or	r0, r1 -> r0    ; fvwrite.c:269
	;;
#0:	       stmh.a	r0, r10, 6      ; fvwrite.c:269
#1:	       ldi	-1 -> r0
	;;
#0:	       ldm.s	r14, 44         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:270
#1:	       ldm.s	r14, 48         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:270
#1:	       ldm.s	r14, 52         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:270
#1:	       ldm.s	r14, 56         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r10  ; fvwrite.c:270
#1:	       ldm.s	r15, 8          ; fvwrite.c:270
	;;
#0:	       br	.BB5_58
#3:	       ldx	$mem, 0 -> r3.31 ; fvwrite.c:270
#1:	       ldm.s	r15, 4          ; fvwrite.c:270
	;;
#3:	       stx	r3.31 -> $ro    ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fvwrite.c:270
	;;
#0:	       stx	r0.31 -> $rb    ; fvwrite.c:270
	;;
.BB5_23:                                ; %bb23
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       or	r13, 0 -> r1    ; fvwrite.c:158
#1:	       callg	__realloc_r     ; fvwrite.c:158
	;;                              ; fvwrite.c:158
	       nop	3               ; fvwrite.c:158
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:160
	;;
#0:	if  c1 br	.BB5_25         ; fvwrite.c:160
	;;                              ; fvwrite.c:160
	       nop	2               ; fvwrite.c:160
	;;
; BB#24:                                ; %bb23.bb25_crit_edge
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       or	r0, 0 -> r12
#1:	       br	.BB5_27
	;;
	       nop	2
	;;
.BB5_25:                                ; %bb24
#0:	       ldm.f	r10, 16         ; fvwrite.c:163
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:165
	;;
#0:	       callg	__free_r        ; fvwrite.c:163
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:163
	;;                              ; fvwrite.c:163
	       nop	3               ; fvwrite.c:163
	;;
#0:	       br	.BB5_21
	;;
	       nop	2
	;;
.BB5_26:                                ; %bb22
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 16         ; fvwrite.c:153
#1:	       or	r0, 0 -> r12    ; fvwrite.c:147
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:153
#1:	       ldm.s	r14, 36         ; fvwrite.c:153
	;;
#0:	       callg	_memcpy         ; fvwrite.c:153
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:153
	;;                              ; fvwrite.c:153
	       nop	3               ; fvwrite.c:153
	;;
#0:	       ldm.f	r10, 12         ; fvwrite.c:154
#1:	       ldga	___mem_emergency -> r0 ; fvwrite.c:154
#2:	       ldiu	895 -> r1
	;;
#0:	       ldim	31 -> r1
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fvwrite.c:154
	;;
#2:	       stm.a	r2.31, r0, 0    ; fvwrite.c:154
	;;
#0:	       ldm.s	r14, 24         ; fvwrite.c:154
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:154
#1:	       ldmg.d	___mem_emergency ; fvwrite.c:154
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fvwrite.c:154
	;;
#0:	       and	r0, r1 -> r0    ; fvwrite.c:154
#1:	       ldi	128 -> r1
	;;
#0:	       or	r0, r1 -> r0    ; fvwrite.c:154
	;;
#0:	       stmh.a	r0, r10, 6      ; fvwrite.c:154
	;;
.BB5_27:                                ; %bb25
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 36         ; fvwrite.c:173
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:173
	;;
#0:	       sub	r13, r0 -> r1   ; fvwrite.c:173
#1:	       add	r12, r0 -> r0   ; fvwrite.c:170
	;;
#0:	       stm.a	r1, r10, 2      ; fvwrite.c:173
	;;
#0:	       stm.a	r13, r10, 5     ; fvwrite.c:171
	;;
#0:	       stm.a	r12, r10, 4     ; fvwrite.c:169
#1:	       or	r11, 0 -> r12
	;;
#0:	       stm.a	r0, r10, 0      ; fvwrite.c:170
	;;
.BB5_28:                                ; %bb26
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 0          ; fvwrite.c:177
#1:	       cmpult	r11, r12 -> c1  ; fvwrite.c:175
	;;
#0:	if  c1 or	r11, 0 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:177
#1:	       ldm.s	r14, 40         ; fvwrite.c:177
#2:	       or	r12, 0 -> r2    ; fvwrite.c:177
	;;
#0:	       callg	_memmove        ; fvwrite.c:177
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:177
	;;                              ; fvwrite.c:177
	       nop	3               ; fvwrite.c:177
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:178
	;;
#0:	       br	.BB5_35
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:178
#2:	       ldm.f	r10, 0          ; fvwrite.c:179
	;;
#0:	       sub	r0, r12 -> r0   ; fvwrite.c:178
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:179
#1:	       stm.a	r0, r10, 2      ; fvwrite.c:178
	;;
#0:	       add	r1, r12 -> r12  ; fvwrite.c:179
	;;
.BB5_29:                                ; %bb31
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:185
#1:	       or	r12, 0 -> r2    ; fvwrite.c:185
	;;
#0:	       callg	_memmove        ; fvwrite.c:185
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:185
	;;                              ; fvwrite.c:185
	       nop	3               ; fvwrite.c:185
	;;
#0:	       ldm.f	r10, 0          ; fvwrite.c:187
#1:	       or	r10, 0 -> r1    ; fvwrite.c:188
	;;
#0:	       callg	__fflush_r      ; fvwrite.c:188
#1:	       ldx	$mem, 0 -> r0   ; fvwrite.c:187
	;;
#0:	       add	r0, r12 -> r0   ; fvwrite.c:187
	;;
#0:	       stm.a	r0, r10, 0      ; fvwrite.c:187
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:188
	;;                              ; fvwrite.c:188
	       nop	1               ; fvwrite.c:188
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:188
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
#0:	       br	.BB5_36
	;;
	       nop	2
	;;
.BB5_30:                                ; %bb29
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 0          ; fvwrite.c:182
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:182
#1:	       ldm.f	r10, 16         ; fvwrite.c:182
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:182
	;;
#0:	       cmpule	r0, r1 -> c1    ; fvwrite.c:182
	;;
#0:	if !c1 cmpule	r11, r12 -> c1
	;;
#0:	if !c1 br	.BB5_29
	;;
	       nop	2
	;;
; BB#31:                                ; %bb32
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 20         ; fvwrite.c:191
	;;
#0:	       ldx	$mem, 0 -> r3   ; fvwrite.c:191
	;;
#0:	       cmpult	r11, r3 -> c1   ; fvwrite.c:191
	;;
#0:	if  c1 br	.BB5_34         ; fvwrite.c:191
	;;                              ; fvwrite.c:191
	       nop	2               ; fvwrite.c:191
	;;
; BB#32:                                ; %bb33
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.f	r10, 36         ; fvwrite.c:194
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:188
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:194
#1:	       ldm.f	r10, 28         ; fvwrite.c:194
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:194
#1:	       ldm.s	r14, 40         ; fvwrite.c:194
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:194
	;;
#0:	       call	r12             ; fvwrite.c:194
	;;                              ; fvwrite.c:194
	       nop	3               ; fvwrite.c:194
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
; BB#33:                                ; %bb33.bb35_crit_edge
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       or	r0, 0 -> r12
#1:	       br	.BB5_36
	;;
	       nop	2
	;;
.BB5_34:                                ; %bb34
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 40         ; fvwrite.c:202
#1:	       or	r11, 0 -> r2    ; fvwrite.c:202
	;;
#0:	       callg	_memmove        ; fvwrite.c:202
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:202
	;;                              ; fvwrite.c:202
	       nop	3               ; fvwrite.c:202
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:203
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:203
#1:	       ldm.f	r10, 0          ; fvwrite.c:204
	;;
#0:	       sub	r12, r11 -> r12 ; fvwrite.c:203
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:204
#1:	       stm.a	r12, r10, 2     ; fvwrite.c:203
	;;
#0:	       add	r0, r11 -> r12  ; fvwrite.c:204
	;;
.BB5_35:                                ; %bb34
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       stm.a	r12, r10, 0     ; fvwrite.c:204
#1:	       or	r11, 0 -> r12
	;;
.BB5_36:                                ; %bb35
                                        ;   in Loop: Header=BB5_15 Depth=1
#0:	       ldm.s	r14, 28         ; fvwrite.c:209
#1:	       sub	r11, r12 -> r11 ; fvwrite.c:207
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:209
	;;
#0:	       ldm.f	r0, 8           ; fvwrite.c:209
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:209
#1:	       ldm.s	r14, 40         ; fvwrite.c:206
	;;
#0:	       cmpeq	r1, r12 -> c1
	;;
#0:	if !c1 br	.BB5_15
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:206
	;;
#0:	       add	r2, r12 -> r2   ; fvwrite.c:206
	;;
#0:	       stm.s	r2, r14, 10     ; fvwrite.c:207
#1:	       sub	r1, r12 -> r2   ; fvwrite.c:209
	;;
#0:	       stm.a	r2, r0, 2       ; fvwrite.c:209
	;;
#0:	       br	.BB5_56
	;;
	       nop	2
	;;
.BB5_37:                                ; %bb37
                                        ;   in Loop: Header=BB5_38 Depth=1
#0:	       ldm.s	r14, 16         ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:224
	;;
#0:	       ldm.f	r0, -4          ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:224
	;;
#0:	       stm.s	r1, r14, 10     ; fvwrite.c:224
	;;
#0:	       ldm.f	r0, 0           ; fvwrite.c:224
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:224
	;;
#0:	       stm.s	r1, r14, 9
	;;
#0:	       stm.s	r0, r14, 4
	;;
.BB5_38:                                ; %bb38.outer
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB5_39 Depth 2
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB5_39:                                ; %bb38
                                        ;   Parent Loop BB5_38 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 36         ; fvwrite.c:224
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:224
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:224
	;;
#0:	if  c1 br	.BB5_37         ; fvwrite.c:224
	;;                              ; fvwrite.c:224
	       nop	2               ; fvwrite.c:224
	;;
; BB#40:                                ; %bb39
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 32         ; fvwrite.c:225
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:225
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:225
	;;
#0:	if  c1 br	.BB5_42         ; fvwrite.c:225
	;;                              ; fvwrite.c:225
	       nop	2               ; fvwrite.c:225
	;;
; BB#41:                                ; %bb39.bb44_crit_edge
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 20
#1:	       br	.BB5_46
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
	       nop	1
	;;
.BB5_42:                                ; %bb40
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:227
#1:	       ldi	10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:227
#1:	       ldm.s	r14, 36         ; fvwrite.c:227
	;;
#0:	       callg	_memchr         ; fvwrite.c:227
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:227
	;;                              ; fvwrite.c:227
	       nop	3               ; fvwrite.c:227
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fvwrite.c:228
	;;
#0:	if  c1 br	.BB5_44         ; fvwrite.c:228
	;;                              ; fvwrite.c:228
	       nop	2               ; fvwrite.c:228
	;;
; BB#43:                                ; %bb41
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:228
#1:	       br	.BB5_45
#2:	       add	r0, 1 -> r11    ; fvwrite.c:228
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:228
	;;
#0:	       sub	r11, r0 -> r11  ; fvwrite.c:228
	;;
	       nop	0
	;;
.BB5_44:                                ; %bb42
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 36         ; fvwrite.c:228
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:228
	;;
#0:	       add	r11, 1 -> r11   ; fvwrite.c:228
	;;
.BB5_45:                                ; %bb42
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldi	1 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB5_46:                                ; %bb44
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.f	r10, 20         ; fvwrite.c:232
	;;
#0:	       ldx	$mem, 0 -> r3   ; fvwrite.c:232
#1:	       ldm.f	r10, 8          ; fvwrite.c:232
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:232
#1:	       ldm.f	r10, 0          ; fvwrite.c:233
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:233
#1:	       ldm.s	r14, 36         ; fvwrite.c:231
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:231
#1:	       ldm.f	r10, 16         ; fvwrite.c:233
	;;
#0:	       cmpule	r11, r2 -> c1   ; fvwrite.c:231
#1:	       or	r2, 0 -> r12    ; fvwrite.c:231
	;;
#0:	       ldx	$mem, 0 -> r4   ; fvwrite.c:233
#1:	if  c1 or	r11, 0 -> r12   ; fvwrite.c:231
	;;
#0:	       cmpule	r0, r4 -> c1    ; fvwrite.c:233
	;;
#0:	if !c1 add	r3, r1 -> r13   ; fvwrite.c:232
	;;
#0:	if !c1 cmple	r12, r13 -> c1
	;;
#0:	if  c1 br	.BB5_48
	;;
	       nop	2
	;;
; BB#47:                                ; %bb48
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:235
#1:	       or	r13, 0 -> r2    ; fvwrite.c:235
	;;
#0:	       callg	_memmove        ; fvwrite.c:235
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:235
	;;                              ; fvwrite.c:235
	       nop	3               ; fvwrite.c:235
	;;
#0:	       ldm.f	r10, 0          ; fvwrite.c:237
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:238
#2:	       or	r10, 0 -> r1    ; fvwrite.c:238
	;;
#0:	       callg	__fflush_r      ; fvwrite.c:238
#1:	       ldx	$mem, 0 -> r12  ; fvwrite.c:237
	;;
#0:	       add	r12, r13 -> r12 ; fvwrite.c:237
	;;
#0:	       stm.a	r12, r10, 0     ; fvwrite.c:237
	;;                              ; fvwrite.c:238
	       nop	1               ; fvwrite.c:238
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:238
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
#0:	       br	.BB5_52
	;;
	       nop	2
	;;
.BB5_48:                                ; %bb49
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       cmplt	r12, r3 -> c1   ; fvwrite.c:241
	;;
#0:	if  c1 br	.BB5_51         ; fvwrite.c:241
	;;                              ; fvwrite.c:241
	       nop	2               ; fvwrite.c:241
	;;
; BB#49:                                ; %bb50
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.f	r10, 36         ; fvwrite.c:243
#1:	       ldga	_impure_data -> r0 ; fvwrite.c:238
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:243
#1:	       ldm.f	r10, 28         ; fvwrite.c:243
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:243
#1:	       ldm.s	r14, 40         ; fvwrite.c:243
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:243
	;;
#0:	       call	r12             ; fvwrite.c:243
	;;                              ; fvwrite.c:243
	       nop	3               ; fvwrite.c:243
	;;
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
; BB#50:                                ; %bb50.bb52_crit_edge
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       or	r0, 0 -> r13
#1:	       br	.BB5_52
	;;
	       nop	2
	;;
.BB5_51:                                ; %bb51
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 40         ; fvwrite.c:250
#1:	       or	r12, 0 -> r2    ; fvwrite.c:250
	;;
#0:	       callg	_memmove        ; fvwrite.c:250
#1:	       ldx	$mem, 0 -> r1   ; fvwrite.c:250
	;;                              ; fvwrite.c:250
	       nop	3               ; fvwrite.c:250
	;;
#0:	       ldm.f	r10, 8          ; fvwrite.c:251
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:251
#1:	       ldm.f	r10, 0          ; fvwrite.c:252
	;;
#0:	       sub	r13, r12 -> r13 ; fvwrite.c:251
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:252
#1:	       stm.a	r13, r10, 2     ; fvwrite.c:251
	;;
#0:	       add	r0, r12 -> r13  ; fvwrite.c:252
	;;
#0:	       stm.a	r13, r10, 0     ; fvwrite.c:252
#1:	       or	r12, 0 -> r13
	;;
.BB5_52:                                ; %bb52
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       cmpeq	r11, r13 -> c1
#1:	       sub	r11, r13 -> r0  ; fvwrite.c:254
	;;
#0:	if !c1 br	.BB5_55
#1:	       stm.s	r0, r14, 5
	;;
	       nop	2
	;;
; BB#53:                                ; %bb53
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldga	_impure_data -> r0 ; fvwrite.c:238
#1:	       callg	__fflush_r      ; fvwrite.c:257
#2:	       or	r10, 0 -> r1    ; fvwrite.c:257
	;;                              ; fvwrite.c:257
	       nop	3               ; fvwrite.c:257
	;;
#0:	       cmpne	r0, 0 -> c1     ; fvwrite.c:257
	;;
#0:	if  c1 br	.BB5_22
	;;
	       nop	2
	;;
; BB#54:                                ; %bb53.bb55_crit_edge
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
.BB5_55:                                ; %bb55
                                        ;   in Loop: Header=BB5_39 Depth=2
#0:	       ldm.s	r14, 28         ; fvwrite.c:264
	;;
#0:	       ldx	$mem, 0 -> r1   ; fvwrite.c:264
	;;
#0:	       ldm.f	r1, 8           ; fvwrite.c:264
	;;
#0:	       ldx	$mem, 0 -> r0   ; fvwrite.c:264
#1:	       ldm.s	r14, 40         ; fvwrite.c:261
	;;
#0:	       cmpeq	r0, r13 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2   ; fvwrite.c:261
	;;
#0:	       add	r2, r13 -> r2   ; fvwrite.c:261
	;;
#0:	       stm.s	r2, r14, 10     ; fvwrite.c:262
	;;
#0:	       ldm.s	r14, 36         ; fvwrite.c:262
	;;
#0:	if !c1 br	.BB5_39
#1:	       ldx	$mem, 0 -> r2   ; fvwrite.c:262
	;;
#0:	       sub	r2, r13 -> r2   ; fvwrite.c:262
	;;
#0:	       stm.s	r2, r14, 9      ; fvwrite.c:264
#1:	       sub	r0, r13 -> r2   ; fvwrite.c:264
	;;
#0:	       stm.a	r2, r1, 2       ; fvwrite.c:264
	;;
.BB5_56:                                ; %bb57
#0:	       ldi	0 -> r0
	;;
.BB5_57:                                ; %bb57
#0:	       ldm.s	r14, 44         ; fvwrite.c:270
#1:	       or	r14, 0 -> r15   ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r13  ; fvwrite.c:270
#1:	       ldm.s	r14, 48         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r12  ; fvwrite.c:270
#1:	       ldm.s	r14, 52         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r11  ; fvwrite.c:270
#1:	       ldm.s	r14, 56         ; fvwrite.c:270
	;;
#0:	       ldx	$mem, 0 -> r10  ; fvwrite.c:270
#1:	       ldm.s	r15, 8          ; fvwrite.c:270
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fvwrite.c:270
#0:	       ldm.s	r15, 4          ; fvwrite.c:270
	;;
#1:	       stx	r1.31 -> $ro    ; fvwrite.c:270
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fvwrite.c:270
	;;
#2:	       stx	r2.31 -> $rb    ; fvwrite.c:270
	;;
.BB5_58:                                ; %bb57
#0:	       ldm.s	r15, 0          ; fvwrite.c:270
#1:	       s2add	r15, 15 -> r15  ; fvwrite.c:270
	;;
#0:	       ret                      ; fvwrite.c:270
#1:	       ldx	$mem, 0 -> r14  ; fvwrite.c:270
	;;                              ; fvwrite.c:270
	       nop	3               ; fvwrite.c:270
	;;
	.align	4
___sfvwrite_r_end:

	.align	4
__vfprintf_r:                           ; @_vfprintf_r
	.size	__vfprintf_r_end-__vfprintf_r
__vfprintf_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 379
#3:	       ldiu	1516 -> r3
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r3 -> r15
#1:	       ldiu	1408 -> r3
#2:	       ldiu	1404 -> r4
	;;
#2:	       ldx	$f11 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       add	r14, r3 -> r3
#2:	       add	r14, r4 -> r4
	;;
#1:	       stm.s	r1.31, r15, 2
#3:	       ldx	$f12 -> r3.31
	;;
#0:	       stm.s	r10, r3, 26
#1:	       ldx	$f10 -> r1.31
	;;
#1:	       stm.s	r11, r3, 25
#0:	       ldx	$f13 -> r0.31
	;;
#0:	       stm.s	r12, r3, 24
	;;
#0:	       stm.s	r13, r3, 23
	;;
#0:	       stm.s	r0.23, r3, 22
	;;
#2:	       stm.s	r2.23, r3, 21
	;;
#3:	       stm.s	r3.23, r3, 20
	;;
#0:	       stm.s	r0.24, r3, 19
	;;
#2:	       stm.s	r2.24, r3, 18
	;;
#3:	       stm.s	r3.24, r3, 17
	;;
#3:	       stm.s	r3.25, r3, 16
	;;
#1:	       stm.s	r1.31, r3, 15
	;;
#2:	       stm.s	r2.31, r3, 14
#1:	       ldx	$f14 -> r1.31
	;;
#3:	       stm.s	r3.31, r3, 13
#2:	       ldx	$f15 -> r2.31
	;;
#0:	       stm.s	r0.31, r3, 12
#3:	       ldx	$f10 -> r3.31
	;;
#1:	       stm.s	r1.31, r3, 11
#0:	       ldx	$f12 -> r0.31
	;;
#2:	       stm.s	r2.31, r3, 10
#1:	       ldx	$f14 -> r1.31
	;;
#3:	       stm.s	r3.31, r3, 8
#0:	       ldi	0 -> r3
	;;
#3:	       ldx	$f11 -> r3.31
	;;
#3:	       stm.s	r3.31, r4, 9
#0:	       ldiu	1408 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       stm.s	r0.31, r4, 6
#1:	       ldiu	1404 -> r4
	;;
#1:	       add	r14, r4 -> r4
#0:	       ldx	$f13 -> r0.31
	;;
#0:	       stm.s	r0.31, r4, 7
#1:	       ldiu	1408 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#1:	       stm.s	r1.31, r4, 4
#0:	       ldiu	1404 -> r4
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f15 -> r1.31
	;;
#1:	       stm.s	r1.31, r4, 5
	;;
#0:	       br	.BB6_3
#1:	       stm.s	r3, r14, 17
	;;
#0:	       stm.s	r0, r14, 25
#1:	       ldga	._.str65 -> r0
	;;
#0:	       stm.s	r1, r14, 31
	;;
#0:	       stm.s	r2, r14, 29
	;;
.BB6_1:                                 ; %bb.i1
                                        ;   in Loop: Header=BB6_3 Depth=1
#0:	       ldm.s	r14, 68         ; strlen.c:68[ vfprintf.c:576 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:68[ vfprintf.c:576 ]
	;;
#0:	       cmpne	r1, 1 -> c1     ; strlen.c:68[ vfprintf.c:576 ]
	;;
#0:	if !c1 br	.BB6_10
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb2.i2
                                        ;   in Loop: Header=BB6_3 Depth=1
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 17
	;;
.BB6_3:                                 ; %bb3.i3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r0, r1 -> r1
	;;
#0:	       and	r1, 3 -> r1     ; strlen.c:66[ vfprintf.c:576 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:66[ vfprintf.c:576 ]
	;;
#0:	if  c1 br	.BB6_1          ; strlen.c:66[ vfprintf.c:576 ]
	;;                              ; strlen.c:66[ vfprintf.c:576 ]
	       nop	2               ; strlen.c:66[ vfprintf.c:576 ]
	;;
; BB#4:                                 ; %bb4.i4
#0:	       ldm.s	r14, 68
#1:	       ldga	._.str65 -> r0
#2:	       ldga	32896 -> r3
	;;
#0:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldiu	1791 -> r1
	;;
#0:	       ldm.f	r0, 0           ; strlen.c:76[ vfprintf.c:576 ]
#1:	       ldim	991 -> r1
	;;
#0:	       ldih	2039 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2    ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	if !c1 br	.BB6_6
	;;
	       nop	2
	;;
.BB6_5:                                 ; %bb5.i8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 4           ; strlen.c:76[ vfprintf.c:576 ]
#1:	       add	r0, 4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r2
	;;
#0:	       xor	r4, r3 -> r4
	;;
#0:	       and	r4, r2 -> r2    ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	       cmpeq	r2, 0 -> c1     ; strlen.c:76[ vfprintf.c:576 ]
	;;
#0:	if  c1 br	.BB6_5          ; strlen.c:76[ vfprintf.c:576 ]
	;;                              ; strlen.c:76[ vfprintf.c:576 ]
	       nop	2               ; strlen.c:76[ vfprintf.c:576 ]
	;;
.BB6_6:                                 ; %bb8.i9
#0:	       ldm.f	r0, 0           ; strlen.c:85[ vfprintf.c:576 ]
	;;
#0:	       ldx	$membu, r0 -> r1 ; strlen.c:85[ vfprintf.c:576 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:85[ vfprintf.c:576 ]
	;;
#0:	if  c1 br	.BB6_9
	;;
	       nop	2
	;;
.BB6_7:                                 ; %bb9.i11
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r0, 1           ; strlen.c:85[ vfprintf.c:576 ]
#1:	       add	r0, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r0 ; strlen.c:85[ vfprintf.c:576 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:85[ vfprintf.c:576 ]
#1:	       or	r1, 0 -> r0
	;;
#0:	if  c1 br	.BB6_7          ; strlen.c:85[ vfprintf.c:576 ]
	;;                              ; strlen.c:85[ vfprintf.c:576 ]
	       nop	2               ; strlen.c:85[ vfprintf.c:576 ]
	;;
; BB#8:                                 ; %bb9.i11.bb11.i12_crit_edge
#0:	       or	r1, 0 -> r0
	;;
.BB6_9:                                 ; %bb11.i12
#0:	       ldga	._.str65 -> r1  ; strlen.c:87[ vfprintf.c:576 ]
	;;
#0:	       sub	r0, r1 -> r0    ; strlen.c:87[ vfprintf.c:576 ]
	;;
#0:	       stm.s	r0, r14, 17
	;;
.BB6_10:                                ; %bb
#0:	       ldmg.d	_impure_data+56 ; vfprintf.c:710
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:710
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:710
	;;
#0:	if  c1 br	.BB6_12
	;;
	       nop	2
	;;
; BB#11:                                ; %bb1
#0:	       ldga	_impure_data -> r0 ; vfprintf.c:710
#1:	       callg	___sinit        ; vfprintf.c:710
	;;                              ; vfprintf.c:710
	       nop	3               ; vfprintf.c:710
	;;
.BB6_12:                                ; %bb2
#0:	       ldm.s	r14, 100        ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:713
	;;
#0:	       add	r0, 12 -> r1    ; vfprintf.c:713
	;;
#0:	       stm.s	r1, r14, 5      ; vfprintf.c:713
	;;
#0:	       ldm.f	r0, 12          ; vfprintf.c:713
	;;
#0:	       ldx	$memhu, r1 -> r0 ; vfprintf.c:713
	;;
#0:	       btest	r0, 13 -> c1    ; vfprintf.c:713
	;;
#0:	if  c1 br	.BB6_14
	;;
	       nop	2
	;;
; BB#13:                                ; %bb3
#0:	       ldm.s	r14, 100        ; vfprintf.c:713
#2:	       ldiu	2047 -> r1
#1:	       ldga	8192 -> r1.16
	;;
#0:	       ldim	2043 -> r1
#1:	       or	r0, r1.16 -> r0 ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:713
	;;
#0:	       ldm.f	r2, 100         ; vfprintf.c:713
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:713
	;;
#0:	       and	r3, r1 -> r1    ; vfprintf.c:713
	;;
#0:	       stm.a	r1, r2, 25      ; vfprintf.c:713
	;;
#0:	       stmh.a	r0, r2, 6       ; vfprintf.c:713
	;;
.BB6_14:                                ; %bb4
#0:	       btest	r0, 3 -> c1     ; vfprintf.c:716
	;;
#0:	if !c1 br	.BB6_16
	;;
	       nop	2
	;;
; BB#15:                                ; %bb5
#0:	       ldm.s	r14, 100        ; vfprintf.c:716
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:716
	;;
#0:	       ldm.f	r1, 16          ; vfprintf.c:716
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:716
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:716
	;;
#0:	if !c1 br	.BB6_18
	;;
	       nop	2
	;;
.BB6_16:                                ; %bb6
#0:	       ldm.s	r14, 100        ; vfprintf.c:716
	;;
#0:	       callg	___swsetup_r    ; vfprintf.c:716
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:716
	;;                              ; vfprintf.c:716
	       nop	3               ; vfprintf.c:716
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:716
	;;
#0:	if  c1 br	.BB6_437        ; vfprintf.c:716
	;;                              ; vfprintf.c:716
	       nop	2               ; vfprintf.c:716
	;;
; BB#17:                                ; %bb6.bb8_crit_edge
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stm.a	r3.31, r0, 0
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
.BB6_18:                                ; %bb8
#0:	       and	r0, 26 -> r1    ; vfprintf.c:722
	;;
#0:	       cmpne	r1, 10 -> c1    ; vfprintf.c:722
	;;
#0:	if !c1 ldm.s	r14, 100        ; vfprintf.c:722
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:722
	;;
#0:	if !c1 ldm.f	r1, 14          ; vfprintf.c:722
#1:	if !c1 add	r1, 14 -> r2    ; vfprintf.c:722
	;;
#0:	if !c1 ldx	$memhs, r2 -> r1 ; vfprintf.c:722
	;;
#0:	if !c1 cmplt	r1, 0 -> c1     ; vfprintf.c:722
	;;
#0:	if  c1 br	.BB6_27
	;;
	       nop	2
	;;
; BB#19:                                ; %bb10
#0:	       ldm.s	r14, 100        ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       ldiu	1312 -> r11
#2:	       ldiu	2045 -> r2
#3:	       ldiu	288 -> r12
	;;
#0:	       add	r14, r11 -> r11
#1:	       ldim	31 -> r2
#2:	       add	r14, r12 -> r12
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       add	r11, 4 -> r10
#2:	       and	r0, r2 -> r0    ; vfprintf.c:349[ vfprintf.c:725 ]
	;;
#0:	       ldm.f	r3, 28          ; vfprintf.c:352[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:352[ vfprintf.c:725 ]
#1:	       ldm.f	r3, 100         ; vfprintf.c:350[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r5   ; vfprintf.c:350[ vfprintf.c:725 ]
#1:	       ldm.f	r3, 36          ; vfprintf.c:353[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:353[ vfprintf.c:725 ]
#1:	       stm.a	r4, r10, 7      ; vfprintf.c:352[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r1, r10, 7      ; vfprintf.c:351[ vfprintf.c:725 ]
#1:	       ldiu	1024 -> r1
	;;
#0:	       stm.a	r5, r10, 25     ; vfprintf.c:350[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:349[ vfprintf.c:725 ]
#1:	       add	r12, 4 -> r0
	;;
#0:	       stm.a	r2, r10, 9      ; vfprintf.c:353[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:356[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r0, r10, 4      ; vfprintf.c:356[ vfprintf.c:725 ]
#1:	       or	r10, 0 -> r0    ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r1, r10, 2      ; vfprintf.c:357[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r1, r10, 5      ; vfprintf.c:357[ vfprintf.c:725 ]
	;;
#0:	       stm.a	0, r10, 6       ; vfprintf.c:358[ vfprintf.c:725 ]
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldm.s	r14, 116        ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       callg	__vfprintf_r    ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:364[ vfprintf.c:725 ]
	;;                              ; vfprintf.c:364[ vfprintf.c:725 ]
	       nop	3               ; vfprintf.c:364[ vfprintf.c:725 ]
	;;
#0:	       or	r0, 0 -> r11    ; vfprintf.c:364[ vfprintf.c:725 ]
#1:	       ldi	-1 -> r0
	;;
#0:	       cmplt	r0, r11 -> c1
	;;
#0:	if !c1 br	.BB6_21
	;;
	       nop	2
	;;
; BB#20:                                ; %bb.i406
#0:	       ldiu	1312 -> r12
#1:	       callg	__fflush_r      ; vfprintf.c:365[ vfprintf.c:725 ]
#2:	       ldga	_impure_data -> r0 ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	       add	r14, r12 -> r12
	;;
#0:	       add	r12, 4 -> r1
	;;                              ; vfprintf.c:365[ vfprintf.c:725 ]
	       nop	1               ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:365[ vfprintf.c:725 ]
	;;
#0:	if !c1 ldi	-1 -> r11
	;;
.BB6_21:                                ; %bb3.i
#0:	       ldiu	1312 -> r1
#1:	       ldm.f	r10, 12
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 16 -> r0
	;;
#0:	       ldx	$memhu, r0 -> r0
	;;
#0:	       btest	r0, 6 -> c1     ; vfprintf.c:367[ vfprintf.c:725 ]
	;;
#0:	if !c1 br	.BB6_25         ; vfprintf.c:367[ vfprintf.c:725 ]
	;;                              ; vfprintf.c:367[ vfprintf.c:725 ]
	       nop	2               ; vfprintf.c:367[ vfprintf.c:725 ]
	;;
; BB#22:                                ; %bb4.i408
#0:	       ldm.s	r14, 100        ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       ldga	___mem_emergency -> r1 ; vfprintf.c:368[ vfprintf.c:725 ]
#2:	       ldi	64 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldm.f	r0, 12          ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       stm.a	r0.31, r1, 0    ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldm.s	r14, 20         ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       ldx	$memhu, r1 -> r1 ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       or	r1, r2 -> r1    ; vfprintf.c:368[ vfprintf.c:725 ]
	;;
#0:	       stmh.a	r1, r0, 6       ; vfprintf.c:368[ vfprintf.c:725 ]
#1:	       or	r11, 0 -> r0    ; vfprintf.c:1622
	;;
.BB6_23:                                ; %bb4.i408
#0:	       ldiu	1024 -> r1      ; vfprintf.c:1622
#1:	       or	r14, 0 -> r15   ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 400         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 404         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 408         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 412         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f12   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 416         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 420         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f10   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 424         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#2:	       ldm.s	r1, 428         ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f11   ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f15   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f12   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 444         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f11   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 448         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f10   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.25 ; vfprintf.c:1622
#0:	       ldm.s	r1, 452         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 456         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 460         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.24 ; vfprintf.c:1622
#1:	       ldm.s	r1, 464         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 468         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 472         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:1622
#1:	       ldm.s	r1, 476         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1622
#1:	       ldm.s	r1, 480         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1622
#1:	       ldm.s	r1, 484         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:1622
#1:	       ldm.s	r1, 488         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1622
#1:	       ldm.s	r15, 8          ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r15, 4          ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $ro    ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $rb    ; vfprintf.c:1622
	;;
.BB6_24:                                ; %bb4.i408
#0:	       ldm.s	r15, 0          ; vfprintf.c:1622
#1:	       ldiu	1516 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r15, r1 -> r15  ; vfprintf.c:1622
	;;
#0:	       ret                      ; vfprintf.c:1622
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:1622
	;;                              ; vfprintf.c:1622
	       nop	3               ; vfprintf.c:1622
	;;
.BB6_25:                                ; %__sbprintf.exit
#0:	       or	r11, 0 -> r0    ; vfprintf.c:1622
	;;
.BB6_26:                                ; %__sbprintf.exit
#0:	       ldiu	1024 -> r1      ; vfprintf.c:1622
#1:	       or	r14, 0 -> r15   ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldm.s	r1, 400         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 404         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 408         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#2:	       stx	r2.31 -> $f15   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 412         ; vfprintf.c:1622
#1:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f12   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 416         ; vfprintf.c:1622
#1:	       ldiu	1020 -> r1      ; vfprintf.c:1622
	;;
#0:	       add	r14, r1 -> r1   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 420         ; vfprintf.c:1622
#2:	       ldiu	1024 -> r1      ; vfprintf.c:1622
	;;
#1:	       add	r14, r1 -> r1   ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f10   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 424         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#2:	       ldm.s	r1, 428         ; vfprintf.c:1622
#0:	       stx	r0.31 -> $f11   ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f15   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 432         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f14   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 436         ; vfprintf.c:1622
	;;
#3:	       stx	r3.31 -> $f13   ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#1:	       ldm.s	r1, 440         ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $f12   ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 444         ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $f11   ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1622
#0:	       ldm.s	r1, 448         ; vfprintf.c:1622
	;;
#2:	       stx	r2.31 -> $f10   ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.25 ; vfprintf.c:1622
#0:	       ldm.s	r1, 452         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 456         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.24 ; vfprintf.c:1622
#0:	       ldm.s	r1, 460         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.24 ; vfprintf.c:1622
#1:	       ldm.s	r1, 464         ; vfprintf.c:1622
	;;
#3:	       ldx	$mem, 0 -> r3.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 468         ; vfprintf.c:1622
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; vfprintf.c:1622
#0:	       ldm.s	r1, 472         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:1622
#1:	       ldm.s	r1, 476         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1622
#1:	       ldm.s	r1, 480         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1622
#1:	       ldm.s	r1, 484         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:1622
#1:	       ldm.s	r1, 488         ; vfprintf.c:1622
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1622
#1:	       ldm.s	r15, 8          ; vfprintf.c:1622
	;;
#1:	       br	.BB6_24
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:1622
#2:	       ldm.s	r15, 4          ; vfprintf.c:1622
	;;
#0:	       stx	r0.31 -> $ro    ; vfprintf.c:1622
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:1622
	;;
#1:	       stx	r1.31 -> $rb    ; vfprintf.c:1622
	;;
.BB6_27:                                ; %bb11
#1:	       ldiu	160 -> r2
#2:	       fop	dzero -> d5
#0:	       ldi	48 -> r0.24
	;;
#0:	       add	r14, r2 -> r2
#1:	       fop	dzero -> d6
	;;
#0:	       add	r2, 20 -> r0
#1:	       ldiu	160 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 16
	;;
#0:	       add	r2, 19 -> r0
#1:	       ldiu	256 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 15
	;;
#0:	       add	r2, 6 -> r0
#1:	       ldiu	224 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 14
	;;
#0:	       add	r2, 20 -> r0
#1:	       ldiu	256 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 26
	;;
#0:	       add	r2, 8 -> r1
	;;
#0:	       stm.s	r1, r14, 9
#1:	       add	r2, 27 -> r1
	;;
#0:	       stm.s	r1, r14, 10
#1:	       add	r2, 7 -> r1
	;;
#0:	       stm.s	r1, r14, 8
#1:	       add	r2, 26 -> r1
#2:	       ldiu	160 -> r2
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r1, r14, 7
	;;
#0:	       add	r2, 20 -> r1
	;;
#0:	       stm.s	r1, r14, 6      ; vfprintf.c:744
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:744
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:742
	;;
#0:	       stm.a	0, r0, 2        ; vfprintf.c:743
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 20
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	       stm.s	r0, r14, 13
	;;
#0:	       stm.s	r0, r14, 18
	;;
.BB6_28:                                ; %bb13.outer
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB6_427 Depth 2
                                        ;     Child Loop BB6_30 Depth 2
                                        ;       Child Loop BB6_40 Depth 3
                                        ;         Child Loop BB6_41 Depth 4
                                        ;           Child Loop BB6_67 Depth 5
                                        ;           Child Loop BB6_61 Depth 5
                                        ;     Child Loop BB6_201 Depth 2
                                        ;     Child Loop BB6_203 Depth 2
                                        ;     Child Loop BB6_205 Depth 2
                                        ;     Child Loop BB6_241 Depth 2
                                        ;     Child Loop BB6_239 Depth 2
                                        ;     Child Loop BB6_243 Depth 2
                                        ;     Child Loop BB6_226 Depth 2
                                        ;     Child Loop BB6_234 Depth 2
                                        ;     Child Loop BB6_229 Depth 2
                                        ;     Child Loop BB6_142 Depth 2
                                        ;     Child Loop BB6_152 Depth 2
                                        ;     Child Loop BB6_156 Depth 2
                                        ;     Child Loop BB6_260 Depth 2
                                        ;     Child Loop BB6_285 Depth 2
                                        ;     Child Loop BB6_297 Depth 2
                                        ;     Child Loop BB6_364 Depth 2
                                        ;     Child Loop BB6_345 Depth 2
                                        ;     Child Loop BB6_408 Depth 2
                                        ;     Child Loop BB6_389 Depth 2
                                        ;     Child Loop BB6_325 Depth 2
#0:	       ldm.s	r14, 24
#1:	       br	.BB6_30
#2:	       ldi	-1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 30
	;;
	       nop	0
	;;
.BB6_29:                                ; %bb14
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       sub	r10, 1 -> r10
	;;
.BB6_30:                                ; %bb15
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB6_40 Depth 3
                                        ;         Child Loop BB6_41 Depth 4
                                        ;           Child Loop BB6_67 Depth 5
                                        ;           Child Loop BB6_61 Depth 5
#0:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, r10 -> r11
	;;
#0:	       ldm.f	r11, -1         ; vfprintf.c:772
#1:	       sub	r11, 1 -> r12
	;;
#0:	       ldx	$membu, r12 -> r0 ; vfprintf.c:772
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_32
	;;
	       nop	2
	;;
; BB#31:                                ; %bb15
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       mask	r0, 0 -> r1
#1:	       ldi	37 -> r2
	;;
#0:	       cmpne	r1, r2 -> c1
	;;
#0:	if  c1 br	.BB6_29
	;;
	       nop	2
	;;
.BB6_32:                                ; %bb17
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:775
	;;
#0:	if !c1 br	.BB6_38
	;;
	       nop	2
	;;
; BB#33:                                ; %bb18
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 124        ; vfprintf.c:776
#1:	       xor	r10, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776
#1:	       ldm.s	r14, 120        ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776
	;;
#0:	       stm.a	r2, r1, 0       ; vfprintf.c:776
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:776
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:776
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:776
#1:	       ldm.f	r0, 4           ; vfprintf.c:776
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 2       ; vfprintf.c:776
#1:	       add	r2, 1 -> r1     ; vfprintf.c:776
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:776
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:776
	;;
#0:	if  c1 br	.BB6_35         ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	2               ; vfprintf.c:776
	;;
; BB#34:                                ; %bb18.bb22_crit_edge
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:776
#1:	       br	.BB6_37
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:776
	;;
	       nop	0
	;;
.BB6_35:                                ; %bb19
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:776
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:776
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:776
	;;                              ; vfprintf.c:776
	       nop	3               ; vfprintf.c:776
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:776
	;;
#0:	if !c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#36:                                ; %bb19.bb22_crit_edge
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_37:                                ; %bb19.bb22_crit_edge
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.f	r11, -1
	;;
#0:	       ldx	$membu, r12 -> r0
#1:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, r10 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 22
	;;
.BB6_38:                                ; %bb23
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:783
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:783
	;;
#0:	if  c1 br	.BB6_433
	;;
	       nop	2
	;;
; BB#39:                                ; %bb24
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldiu	256 -> r2
#1:	       ldi	0 -> r0
#2:	       ldi	-1 -> r10
	;;
#0:	       add	r14, r2 -> r2
#1:	       stm.s	r0, r14, 28
#2:	       or	r0, 0 -> r12
	;;
#0:	       add	r2, 16 -> r1
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:793
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:793
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 31
	;;
.BB6_40:                                ; %rflag
                                        ;   Parent Loop BB6_28 Depth=1
                                        ;     Parent Loop BB6_30 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB6_41 Depth 4
                                        ;           Child Loop BB6_67 Depth 5
                                        ;           Child Loop BB6_61 Depth 5
#0:	       ldm.f	r11, 0          ; vfprintf.c:805
	;;
#0:	       ldx	$membs, r11 -> r13 ; vfprintf.c:805
#1:	       add	r11, 1 -> r11   ; vfprintf.c:805
	;;
.BB6_41:                                ; %reswitch
                                        ;   Parent Loop BB6_28 Depth=1
                                        ;     Parent Loop BB6_30 Depth=2
                                        ;       Parent Loop BB6_40 Depth=3
                                        ; =>      This Loop Header: Depth=4
                                        ;           Child Loop BB6_67 Depth 5
                                        ;           Child Loop BB6_61 Depth 5
#0:	       ldi	31 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB6_44
	;;
	       nop	2
	;;
; BB#42:                                ; %reswitch
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r13, 0 -> c1
	;;
#0:	if  c1 br	.BB6_433
	;;
	       nop	2
	;;
.BB6_43:                                ; %bb178
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	128 -> r2
#1:	       ldi	0 -> r0
#2:	       ldi	1 -> r10
	;;
#0:	       stm.s	r0, r14, 28
#1:	       add	r14, r2 -> r2
	;;
#0:	       stm.s	r10, r14, 23
#1:	       add	r2, 12 -> r1
	;;
#0:	       stm.s	r1, r14, 24     ; vfprintf.c:1490
	;;
#0:	       stmb.a	r13, r1, 0      ; vfprintf.c:1490
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1492
	;;
#0:	       br	.BB6_253
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1492
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1492
#1:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 21
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB6_44:                                ; %reswitch
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       ldi	-32 -> r0
#1:	       ldi	88 -> r1
	;;
#0:	       add	r13, r0 -> r0
	;;
#0:	       cmpult	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB6_43
	;;
	       nop	2
	;;
; BB#45:                                ; %reswitch
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       ldga	.JTI6_0 -> r1
	;;
#0:	       s2add	r1, r0 -> r0
	;;
#0:	       ldm.d	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       br	r0
	;;
	       nop	3
	;;
.BB6_46:                                ; %reswitch.hex_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	._.str430 -> r0
#1:	       br	.BB6_214
	;;
	       nop	2
	;;
.BB6_47:                                ; %bb25
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 112        ; vfprintf.c:822
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:822
	;;
#0:	       mask	r13, 0 -> r13   ; vfprintf.c:822
	;;
#0:	       cmpne	r13, 0 -> c1    ; vfprintf.c:822
	;;
#0:	if  c1 br	.BB6_40
	;;
	       nop	2
	;;
; BB#48:                                ; %bb26
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldi	32 -> r13
	;;
.BB6_49:                                ; %bb26
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       stm.s	r13, r14, 28    ; vfprintf.c:823
#1:	       br	.BB6_40
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:823
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:823
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:823
	;;
.BB6_50:                                ; %bb27
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:826
#1:	       br	.BB6_40
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:826
	;;
#0:	       or	r0, 1 -> r0     ; vfprintf.c:826
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:826
	;;
.BB6_51:                                ; %bb28
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:865
#1:	       ldi	-1 -> r13
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:865
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:865
#1:	       add	r2, 4 -> r2     ; vfprintf.c:865
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:865
#1:	       stm.s	r2, r14, 29
	;;
#0:	       cmplt	r13, r12 -> c1
	;;
#0:	if  c1 br	.BB6_40
	;;
	       nop	2
	;;
; BB#52:                                ; %bb29
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldi	0 -> r13
	;;
#0:	       sub	r13, r12 -> r12 ; vfprintf.c:871
	;;
.BB6_53:                                ; %bb30
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:874
#1:	       br	.BB6_40
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:874
	;;
#0:	       or	r0, 4 -> r0     ; vfprintf.c:874
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:874
	;;
.BB6_54:                                ; %bb31
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldi	43 -> r13
#1:	       br	.BB6_49
	;;
	       nop	2
	;;
.BB6_55:                                ; %bb32
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       ldm.f	r11, 0          ; vfprintf.c:880
#1:	       ldi	42 -> r13
#2:	       add	r11, 1 -> r0    ; vfprintf.c:880
	;;
#0:	       ldx	$membu, r11 -> r10 ; vfprintf.c:880
	;;
#0:	       cmpeq	r10, r13 -> c1
	;;
#0:	if  c1 br	.BB6_58         ; vfprintf.c:880
	;;                              ; vfprintf.c:880
	       nop	2               ; vfprintf.c:880
	;;
; BB#56:                                ; %bb37.preheader
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       mask	r10, 8 -> r13
#1:	       ldi	-48 -> r10
	;;
#0:	       add	r13, r10 -> r10
	;;
#0:	       cmpult	r10, 10 -> c1
	;;
#0:	if  c1 br	.BB6_60         ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#57:                                ; %bb37.preheader.bb38_crit_edge
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       ldi	0 -> r10
#1:	       br	.BB6_63
#2:	       or	r0, 0 -> r11
	;;
	       nop	2
	;;
.BB6_58:                                ; %bb33
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 116        ; vfprintf.c:910
#1:	       ldi	-1 -> r13
#2:	       or	r0, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:910
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:910
#1:	       add	r2, 4 -> r2     ; vfprintf.c:910
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:910
#1:	       stm.s	r2, r14, 29
	;;
#0:	       cmplt	r13, r10 -> c1  ; vfprintf.c:914
	;;
#0:	if  c1 br	.BB6_40
	;;
	       nop	2
	;;
; BB#59:                                ; %bb34
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       or	r0, 0 -> r11
#1:	       br	.BB6_40
#2:	       ldi	-1 -> r10
	;;
	       nop	2
	;;
.BB6_60:                                ; %bb36.preheader
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       add	r11, 1 -> r11
#1:	       ldi	0 -> r10
	;;
.BB6_61:                                ; %bb36
                                        ;   Parent Loop BB6_28 Depth=1
                                        ;     Parent Loop BB6_30 Depth=2
                                        ;       Parent Loop BB6_40 Depth=3
                                        ;         Parent Loop BB6_41 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#1:	       ldm.f	r11, 0
#0:	       mul	r10, 10 -> $mul0 ; vfprintf.c:920
#2:	       ldi	-48 -> r1
	;;
#0:	       ldx	$mul0, 0 -> r10 ; vfprintf.c:920
	;;
#0:	       ldx	$membs, r11 -> r0
#1:	       add	r13, r10 -> r10
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r0, r1 -> r13
#1:	       add	r10, r1 -> r10  ; vfprintf.c:920
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r0, 0 -> r13
	;;
#0:	if  c1 br	.BB6_61         ; vfprintf.c:919
	;;                              ; vfprintf.c:919
	       nop	2               ; vfprintf.c:919
	;;
; BB#62:                                ; %bb36.bb38_crit_edge
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       or	r0, 0 -> r13
	;;
.BB6_63:                                ; %bb38
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       cmplt	r10, -1 -> c1
#1:	       br	.BB6_41
#2:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10    ; vfprintf.c:923
	;;
	       nop	1
	;;
.BB6_64:                                ; %bb39
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldi	128 -> r13
	;;
.BB6_65:                                ; %bb39
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:931
#1:	       br	.BB6_40
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:931
	;;
#0:	       or	r0, r13 -> r0   ; vfprintf.c:931
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:931
	;;
.BB6_66:                                ; %reswitch.bb41_crit_edge
                                        ;   in Loop: Header=BB6_41 Depth=4
#0:	       ldi	0 -> r12
	;;
.BB6_67:                                ; %bb41
                                        ;   Parent Loop BB6_28 Depth=1
                                        ;     Parent Loop BB6_30 Depth=2
                                        ;       Parent Loop BB6_40 Depth=3
                                        ;         Parent Loop BB6_41 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
#0:	       ldm.f	r11, 0          ; vfprintf.c:938
#1:	       mul	r12, 10 -> $mul1 ; vfprintf.c:937
#2:	       ldi	-48 -> r1
	;;
#1:	       ldx	$mul1, 0 -> r12 ; vfprintf.c:937
	;;
#0:	       ldx	$membs, r11 -> r0 ; vfprintf.c:938
#1:	       add	r13, r12 -> r12
#2:	       add	r11, 1 -> r11
	;;
#0:	       add	r0, r1 -> r13
#1:	       add	r12, r1 -> r12  ; vfprintf.c:937
	;;
#0:	       cmpult	r13, 10 -> c1
#1:	       or	r0, 0 -> r13
	;;
#0:	if  c1 br	.BB6_67
	;;
	       nop	2
	;;
; BB#68:                                ;   in Loop: Header=BB6_41 Depth=4
#0:	       or	r0, 0 -> r13
#1:	       br	.BB6_41
	;;
	       nop	2
	;;
.BB6_69:                                ; %bb43
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:955
#1:	       br	.BB6_40
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:955
	;;
#0:	       or	r0, 8 -> r0     ; vfprintf.c:955
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:955
	;;
.BB6_70:                                ; %bb44
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldi	64 -> r13
#1:	       br	.BB6_65
	;;
	       nop	2
	;;
.BB6_71:                                ; %bb46
                                        ;   in Loop: Header=BB6_40 Depth=3
#0:	       ldm.s	r14, 124        ; vfprintf.c:977
#1:	       br	.BB6_40
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:977
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:977
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:977
	;;
.BB6_72:                                ; %bb47
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1036
#1:	       ldiu	128 -> r3
#2:	       ldi	0 -> r0
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1036
#1:	       add	r3, 12 -> r1
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1036
	;;
#0:	       ldx	$membu, r2 -> r10 ; vfprintf.c:1036
#1:	       stm.s	r0, r14, 28
#2:	       add	r2, 4 -> r2     ; vfprintf.c:1036
	;;
#0:	       stm.s	r1, r14, 24     ; vfprintf.c:1036
	;;
#0:	       stm.s	r2, r14, 29
#1:	       ldi	1 -> r2
	;;
#0:	       stm.s	r2, r14, 23     ; vfprintf.c:1036
	;;
#0:	       br	.BB6_195
#1:	       stmb.a	r10, r1, 0      ; vfprintf.c:1036
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1039
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1039
	;;
#0:	       stmb.a	0, r10, 0       ; vfprintf.c:1039
	;;
.BB6_73:                                ; %bb49
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1042
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1042
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1042
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB6_74:                                ; %bb50
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB6_76         ; vfprintf.c:1046
	;;                              ; vfprintf.c:1046
	       nop	2               ; vfprintf.c:1046
	;;
; BB#75:                                ; %bb51
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
#1:	       br	.BB6_78
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
.BB6_76:                                ; %bb52
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1046
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1046
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1046
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1046
	;;
#0:	       btest	r0, 6 -> c1     ; vfprintf.c:1046
	;;
#0:	if !c1 br	.BB6_79
	;;
	       nop	2
	;;
; BB#77:                                ; %bb53
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       mask	r0, 12 -> r0
	;;
.BB6_78:                                ; %bb53
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 23
	;;
.BB6_79:                                ; %bb56
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1050
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1050
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1050
	;;
#0:	       cmplt	r0, 0 -> c1     ; vfprintf.c:1050
	;;
#0:	if  c1 br	.BB6_81         ; vfprintf.c:1050
	;;                              ; vfprintf.c:1050
	       nop	2               ; vfprintf.c:1050
	;;
; BB#80:                                ; %bb56.number_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	1 -> r0
#1:	       br	.BB6_221
	;;
	       nop	2
	;;
.BB6_81:                                ; %bb57
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1054
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1054
	;;
#0:	       sub	r0, r1 -> r1    ; vfprintf.c:1054
#1:	       ldi	1 -> r0
	;;
#0:	       stm.s	r1, r14, 23
#1:	       ldi	45 -> r1
	;;
#0:	       br	.BB6_221
#1:	       stm.s	r1, r14, 28     ; vfprintf.c:1055
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1055
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1055
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1055
	;;
.BB6_82:                                ; %bb59
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1071
#1:	       ldiu	128 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1071
#1:	       add	r4, 0 -> r3
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1071
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1071
#1:	       ldm.f	r2, 4           ; vfprintf.c:1071
#2:	       add	r2, 8 -> r2     ; vfprintf.c:1071
	;;
#0:	       stx	r0 -> $f0       ; vfprintf.c:1071
	;;
#0:	       fop	fmov	f0 -> f12 ; vfprintf.c:1071
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1071
	;;
#0:	       fop	fmov	f12 -> f0
	;;
#0:	       stx	r1 -> $f1       ; vfprintf.c:1071
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       fop	fmov	f1 -> f13 ; vfprintf.c:1071
#1:	       stm.a	r0, r3, 0
	;;
#0:	       fop	fmov	f13 -> f0
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stm.a	r0, r3, 1
	;;
#0:	       ldm.f	r3, 4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       stm.s	r2, r14, 29
#2:	       ldga	0 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_84
	;;
	       nop	2
	;;
; BB#83:                                ; %bb59
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_85
	;;
	       nop	2
	;;
.BB6_84:                                ; %bb1.i15
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r1, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1079 ]
	;;
#0:	if  c1 br	.BB6_98
	;;
	       nop	2
	;;
.BB6_85:                                ; %bb3.i16
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	0 -> r2
#1:	       ldga	0 -> r3
	;;
#0:	       ldim	1536 -> r2
#1:	       ldih	1023 -> r3
	;;
#0:	       add	r0, r2 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB6_98
	;;
	       nop	2
	;;
; BB#86:                                ; %bb3.i16
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1023 -> r2
	;;
#0:	       add	r0, r2 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if !c1 ldiu	0 -> r2
	;;
#0:	if !c1 ldim	512 -> r2
	;;
#0:	if !c1 cmpult	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_98
	;;
	       nop	2
	;;
; BB#87:                                ; %bb6.i19
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_98
	;;
	       nop	2
	;;
; BB#88:                                ; %bb9.i20
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	2047 -> r2
	;;
#0:	       ldim	1535 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 br	.BB6_92
	;;
	       nop	2
	;;
; BB#89:                                ; %bb9.i20
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	0 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 cmpeq	r1, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1090 ]
	;;
#0:	if !c1 br	.BB6_101
	;;
	       nop	2
	;;
.BB6_90:                                ; %bb71
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r10, -1 -> c1   ; vfprintf.c:1152
	;;
#0:	if  c1 br	.BB6_108
	;;
	       nop	2
	;;
; BB#91:                                ; %bb71.bb77_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	6 -> r10
#1:	       br	.BB6_110
	;;
	       nop	2
	;;
.BB6_92:                                ; %bb9.i20
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	0 -> r2
	;;
#0:	       ldim	1536 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_95
	;;
	       nop	2
	;;
; BB#93:                                ; %bb9.i20
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_100
	;;
	       nop	2
	;;
; BB#94:                                ; %bb9.i20
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1023 -> r2
	;;
#0:	       cmpne	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_101
	;;
	       nop	2
	;;
.BB6_95:                                ; %__fpclassifyd.exit
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1079
	;;
#0:	if  c1 br	.BB6_98
	;;
	       nop	2
	;;
; BB#96:                                ; %bb60
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dzero -> d0
#1:	       ldga	._.str127 -> r2
	;;
#0:	       fop	dcmp	d6, d0 -> f0 ; vfprintf.c:1080
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1080
	;;
#0:	       btest	r0, 2 -> c1     ; vfprintf.c:1080
	;;
#0:	if  c1 ldi	45 -> r0
	;;
#0:	if  c1 stm.s	r0, r14, 28     ; vfprintf.c:1081
	;;
#0:	if  c1 ldm.s	r14, 108        ; vfprintf.c:1081
	;;
#0:	if  c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1081
	;;
#0:	if  c1 stmb.a	r0, r1, 0       ; vfprintf.c:1081
#1:	       ldi	72 -> r0
#2:	       ldi	-129 -> r1
	;;
#0:	       cmplt	r13, r0 -> c1
#1:	       ldga	._.str26 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 24     ; vfprintf.c:1087
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1087
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1087
	;;
#0:	       and	r0, r1 -> r0    ; vfprintf.c:1087
	;;
.BB6_97:                                ; %bb62
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 31
#1:	       br	.BB6_253
#2:	       ldi	0 -> r0
#3:	       ldi	3 -> r10
	;;
#0:	       stm.s	r0, r14, 21
	;;
#0:	       stm.s	r10, r14, 23
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB6_98:                                ; %bb66
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	0 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_100
	;;
	       nop	2
	;;
; BB#99:                                ; %bb66
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_101
	;;
	       nop	2
	;;
.BB6_100:                               ; %bb1.i27
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r1, 0 -> c1     ; s_fpclassify.c:16[ vfprintf.c:1090 ]
	;;
#0:	if  c1 br	.BB6_90
	;;
	       nop	2
	;;
.BB6_101:                               ; %bb3.i28
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	0 -> r2
#1:	       ldga	0 -> r3
	;;
#0:	       ldim	1536 -> r2
#1:	       ldih	1023 -> r3
	;;
#0:	       add	r0, r2 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB6_90
	;;
	       nop	2
	;;
; BB#102:                               ; %bb3.i28
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1023 -> r2
	;;
#0:	       add	r0, r2 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if !c1 ldiu	0 -> r2
	;;
#0:	if !c1 ldim	512 -> r2
	;;
#0:	if !c1 cmpult	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_90
	;;
	       nop	2
	;;
; BB#103:                               ; %bb6.i31
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1024 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_90
	;;
	       nop	2
	;;
; BB#104:                               ; %bb9.i32
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	0 -> r2
	;;
#0:	       ldim	1536 -> r2
	;;
#0:	       cmpeq	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_106
	;;
	       nop	2
	;;
; BB#105:                               ; %bb9.i32
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	1048576 -> r2
	;;
#0:	       ldih	1023 -> r2
	;;
#0:	       cmpne	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB6_107
	;;
	       nop	2
	;;
.BB6_106:                               ; %__fpclassifyd.exit38
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r1, 0 -> c1     ; s_fpclassify.c:26[ vfprintf.c:1090 ]
	;;
#0:	if  c1 br	.BB6_90
	;;
	       nop	2
	;;
.BB6_107:                               ; %bb67
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	72 -> r0
#1:	       ldga	._.str329 -> r1
#2:	       ldi	-129 -> r10
	;;
#0:	       cmplt	r13, r0 -> c1
#1:	       ldga	._.str228 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r1
	;;
#0:	       br	.BB6_97
#1:	       stm.s	r1, r14, 24     ; vfprintf.c:1096
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1096
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1096
	;;
#0:	       and	r0, r10 -> r0   ; vfprintf.c:1096
	;;
.BB6_108:                               ; %bb73
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	71 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 ldi	103 -> r1
	;;
#0:	if !c1 cmpeq	r13, r1 -> c1
	;;
#0:	if !c1 br	.BB6_110
	;;
	       nop	2
	;;
; BB#109:                               ; %bb75
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1154
	;;
#0:	if !c1 ldi	1 -> r10
	;;
.BB6_110:                               ; %bb77
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmplt	r0, 0 -> c1
#1:	       ldm.s	r14, 124        ; vfprintf.c:1158
#2:	       ldi	256 -> r1
	;;
#0:	if  c1 br	.BB6_112
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1158
	;;
#2:	       or	r2, r1 -> r2.23 ; vfprintf.c:1158
	;;
	       nop	1
	;;
; BB#111:                               ; %bb77.bb2.i_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#3:	       ldi	0 -> r3.23
#0:	       br	.BB6_113
#1:	       fop	dmov	d6 -> d7
	;;
	       nop	2
	;;
.BB6_112:                               ; %bb.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dabs	d6 -> d7
	;;
#3:	       ldi	45 -> r3.23
	;;
.BB6_113:                               ; %bb2.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	100 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB6_117
	;;
	       nop	2
	;;
; BB#114:                               ; %bb2.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	69 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_120
	;;
	       nop	2
	;;
; BB#115:                               ; %bb2.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_119
	;;
	       nop	2
	;;
.BB6_116:                               ; %bb2.i.bb8.i_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r10, r14, 28
#1:	       br	.BB6_121
	;;
	       nop	2
	;;
.BB6_117:                               ; %bb2.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	101 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_120
	;;
	       nop	2
	;;
; BB#118:                               ; %bb2.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpne	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_116
	;;
	       nop	2
	;;
.BB6_119:                               ; %bb2.i.bb9.i405_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	3 -> r2
#1:	       br	.BB6_122
#2:	       stm.s	r10, r14, 28
	;;
	       nop	2
	;;
.BB6_120:                               ; %bb7.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r10, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 28
	;;
.BB6_121:                               ; %bb8.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	2 -> r2
	;;
.BB6_122:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	12 -> r4
#1:	       fop	fmov	f15 -> f1
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	256 -> r4
#2:	       fop	fmov	f14 -> f0
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f1 -> r1
	;;
#2:	       add	r4, 12 -> r2.24
#0:	       ldiu	288 -> r4
	;;
#2:	       stm.a	r2.24, r15, 0
#0:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 0 -> r0
#1:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       stm.a	r0, r15, 1
#1:	       ldx	$f0 -> r0
	;;
#3:	       add	r4, 28 -> r3.24
	;;
#3:	       stm.a	r3.24, r15, 2
	;;
#0:	       ldm.s	r14, 112
	;;
#0:	       callg	__dtoa_r
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#0:	       stm.s	r0, r14, 24
#1:	       ldi	101 -> r0
#2:	       s2add	r15, 3 -> r15
	;;
#0:	       cmplt	r0, r13 -> c1
	;;
#0:	if  c1 br	.BB6_128
	;;
	       nop	2
	;;
; BB#123:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_132
	;;
	       nop	2
	;;
; BB#124:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	71 -> r0
	;;
.BB6_125:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB6_137
	;;
	       nop	2
	;;
; BB#126:                               ; %bb11.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_130
	;;
	       nop	2
	;;
; BB#127:                               ; %bb11.bb22_crit_edge.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 284
#1:	       br	.BB6_143
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB6_128:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_132
	;;
	       nop	2
	;;
; BB#129:                               ; %bb9.i405
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	103 -> r0
#1:	       br	.BB6_125
	;;
	       nop	2
	;;
.BB6_130:                               ; %bb12.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	70 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_132
	;;
	       nop	2
	;;
; BB#131:                               ; %bb12.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmpne	r13, r0 -> c1
	;;
#0:	if  c1 br	.BB6_137
	;;
	       nop	2
	;;
.BB6_132:                               ; %bb14.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96
#1:	       ldi	48 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r0
	;;
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB6_134
	;;
	       nop	2
	;;
; BB#133:                               ; %bb14.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       btest	r0, 9 -> c1
	;;
#0:	if  c1 br	.BB6_135
	;;
	       nop	2
	;;
.BB6_134:                               ; %bb14.bb17_crit_edge.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268
#1:	       br	.BB6_136
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB6_135:                               ; %bb16.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112
#1:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       sub	r0, r3 -> r0
	;;
#2:	       stm.a	r0, r2.24, 0
	;;
.BB6_136:                               ; %bb17.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r0, r3 -> r3
	;;
#0:	       stm.s	r3, r14, 28
	;;
.BB6_137:                               ; %bb18.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dzero -> d0
	;;
#0:	       fop	dcmp	d7, d0 -> f0
#1:	       ldm.s	r14, 112
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$f0 -> r1
	;;
#0:	       btest	r1, 9 -> c1
#1:	       ldx	$mem, 0 -> r0
	;;
#0:	if  c1 br	.BB6_139
#1:	       add	r0, r3 -> r0
	;;
	       nop	2
	;;
; BB#138:                               ; %bb21.preheader.thread.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#3:	       stm.a	r0, r3.24, 0
#0:	       br	.BB6_143
	;;
	       nop	2
	;;
.BB6_139:                               ; %bb21.preheader.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 284
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB6_141
	;;
	       nop	2
	;;
; BB#140:                               ; %bb21.preheader.i.cvt.exit_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       or	r1, 0 -> r0
#1:	       br	.BB6_143
	;;
	       nop	2
	;;
.BB6_141:                               ; %bb20.i.preheader
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 96
	;;
#0:	       sub	r3, r1 -> r2
#1:	       add	r1, 1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, r2 -> r2
	;;
.BB6_142:                               ; %bb20.i
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sub	r2, 1 -> r2
#1:	       ldi	48 -> r3
#2:	       sub	r1, 1 -> r4
#3:	       add	r1, 1 -> r5
	;;
#0:	       cmpne	r2, 0 -> c1
#1:	       stmb.a	r3, r4, 0
	;;
#0:	if  c1 br	.BB6_142
#3:	       stm.a	r1, r3.24, 0
#1:	       or	r5, 0 -> r1
	;;
	       nop	2
	;;
.BB6_143:                               ; %cvt.exit
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96
#1:	       ldi	71 -> r1
	;;
#0:	       cmpeq	r13, r1 -> c1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r0, r2 -> r0
	;;
#0:	       stm.s	r0, r14, 20
#1:	if !c1 ldi	103 -> r0
	;;
#0:	if !c1 cmpeq	r13, r0 -> c1
	;;
#0:	if !c1 br	.BB6_149
	;;
	       nop	2
	;;
; BB#144:                               ; %bb79
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1164
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1164
	;;
#0:	       cmplt	r0, -3 -> c1
#1:	       stm.s	r0, r14, 21
	;;
#0:	if !c1 cmplt	r10, r0 -> c1
	;;
#0:	if  c1 br	.BB6_148
	;;
	       nop	2
	;;
; BB#145:                               ; %bb79.bb101_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	103 -> r13
	;;
.BB6_146:                               ; %bb101
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1192
#1:	       ldm.s	r14, 80         ; vfprintf.c:1192
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1192
	;;
#0:	       cmplt	r10, r0 -> c1   ; vfprintf.c:1192
	;;
#0:	if  c1 br	.BB6_171
	;;
	       nop	2
	;;
; BB#147:                               ; %bb102
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1194
#1:	       br	.BB6_172
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1194
#1:	       ldm.s	r14, 84
	;;
#0:	       and	r0, 1 -> r0     ; vfprintf.c:1194
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB6_148:                               ; %bb81
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       sub	r13, 2 -> r13
	;;
.BB6_149:                               ; %bb83
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	101 -> r0
	;;
#0:	       cmplt	r0, r13 -> c1   ; vfprintf.c:1173
	;;
#0:	if  c1 br	.BB6_163        ; vfprintf.c:1173
	;;                              ; vfprintf.c:1173
	       nop	2               ; vfprintf.c:1173
	;;
; BB#150:                               ; %bb84
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1174
#1:	       ldi	1 -> r10
#2:	       ldiu	256 -> r3
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1174
	;;
#0:	       sub	r0, 1 -> r1
#1:	       sub	r10, r0 -> r0
#2:	       ldi	43 -> r10
	;;
#0:	       stm.s	r10, r14, 28
#1:	       cmplt	r1, 0 -> c1     ; vfprintf.c:1742[ vfprintf.c:1175 ]
#2:	       or	r1, 0 -> r10
	;;
#0:	       ldm.s	r14, 112
#1:	if  c1 or	r0, 0 -> r10
#2:	       ldi	45 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	if  c1 or	r0, 0 -> r2
#1:	       add	r3, 4 -> r0
#2:	       cmplt	r10, 10 -> c1   ; vfprintf.c:1749[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB6_158        ; vfprintf.c:1749[ vfprintf.c:1175 ]
#1:	       stm.s	r0, r14, 23
	;;
#0:	       stmb.a	r2, r0, 1
	;;
#2:	       stm.a	r1, r2.24, 0    ; vfprintf.c:1174
	;;
#0:	       stmb.a	r13, r0, 0      ; vfprintf.c:1741[ vfprintf.c:1175 ]
	;;
; BB#151:                               ; %bb84.bb4.i_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#3:	       ldi	0 -> r3.24
	;;
.BB6_152:                               ; %bb4.i
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       or	r10, 0 -> r0    ; vfprintf.c:1752[ vfprintf.c:1175 ]
#1:	       callg	___divsi3       ; vfprintf.c:1752[ vfprintf.c:1175 ]
#2:	       ldi	10 -> r1
	;;                              ; vfprintf.c:1752[ vfprintf.c:1175 ]
	       nop	3               ; vfprintf.c:1752[ vfprintf.c:1175 ]
	;;
#0:	       callg	___modsi3       ; vfprintf.c:1751[ vfprintf.c:1175 ]
#1:	       ldiu	256 -> r2
#2:	       ldi	10 -> r1
	;;
#0:	       add	r14, r2 -> r2
	;;
#3:	       or	r0, 0 -> r3.25  ; vfprintf.c:1752[ vfprintf.c:1175 ]
#0:	       add	r2, 20 -> r0
	;;
#0:	       stm.s	r0, r14, 28     ; vfprintf.c:1751[ vfprintf.c:1175 ]
#1:	       or	r10, 0 -> r0    ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;                              ; vfprintf.c:1751[ vfprintf.c:1175 ]
	       nop	0               ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       ldi	99 -> r3
#1:	       ldm.s	r14, 112
#2:	       s2add	r0, 12 -> r2    ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#0:	       cmplt	r3, r10 -> c1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	if  c1 br	.BB6_152        ; vfprintf.c:1752[ vfprintf.c:1175 ]
#3:	       sub	r0, r3.24 -> r0
	;;
#3:	       add	r3.24, 1 -> r1
#0:	       stmb.a	r2, r0, 6       ; vfprintf.c:1751[ vfprintf.c:1175 ]
	;;
#3:	       or	r1, 0 -> r3.24
	;;
#3:	       or	r3.25, 0 -> r10
	;;
; BB#153:                               ; %bb5.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 28
	;;
#3:	       s2add	r3.25, 12 -> r10 ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       stmb.a	r10, r0, 5      ; vfprintf.c:1753[ vfprintf.c:1175 ]
	;;
#0:	       sub	r2, r1 -> r2
	;;
#0:	       ldm.s	r14, 40         ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       cmpult	r2, r10 -> c1   ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	if  c1 br	.BB6_155        ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;                              ; vfprintf.c:1754[ vfprintf.c:1175 ]
	       nop	2               ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
; BB#154:                               ; %bb5.i.exponent.exit_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 56
#1:	       br	.BB6_159
	;;
	       nop	2
	;;
.BB6_155:                               ; %bb5.i.bb6.i_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 56
#1:	       add	r1, 1 -> r10
#2:	       add	r1, 2 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
.BB6_156:                               ; %bb6.i
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 112
#1:	       sub	r10, 1 -> r10
	;;
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1754[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB6_156        ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       sub	r3, r0 -> r3
#2:	       sub	r0, 1 -> r0
	;;
#0:	       ldm.f	r3, 8           ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       add	r3, 8 -> r4
	;;
#0:	       ldx	$membu, r4 -> r3 ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       add	r2, 1 -> r4
	;;
#0:	       stmb.a	r3, r2, 0       ; vfprintf.c:1754[ vfprintf.c:1175 ]
#1:	       or	r4, 0 -> r2
	;;
; BB#157:                               ; %bb7.bb10.loopexit_crit_edge.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 32
#1:	       br	.BB6_160
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, r1 -> r10
	;;
	       nop	0
	;;
.BB6_158:                               ; %bb9.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1758[ vfprintf.c:1175 ]
#1:	       ldi	48 -> r0
#2:	       s2add	r10, 12 -> r10  ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r0, r1, 2       ; vfprintf.c:1758[ vfprintf.c:1175 ]
	;;
#0:	       stmb.a	r10, r1, 3      ; vfprintf.c:1759[ vfprintf.c:1175 ]
	;;
#0:	       ldm.s	r14, 36
	;;
.BB6_159:                               ; %bb9.i
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldx	$mem, 0 -> r10
	;;
.BB6_160:                               ; %exponent.exit
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       sub	r10, r0 -> r0   ; vfprintf.c:1761[ vfprintf.c:1175 ]
	;;
#0:	       stm.s	r0, r14, 13     ; vfprintf.c:1176
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1176
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1176
	;;
#0:	       add	r0, r10 -> r0   ; vfprintf.c:1176
	;;
#0:	       stm.s	r0, r14, 23
#1:	       ldi	1 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1177
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1177
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1177
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1177
	;;
#0:	if  c1 br	.BB6_162
	;;
	       nop	2
	;;
.BB6_161:                               ; %bb86.bb110_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB6_174
	;;
#0:	       stm.s	r0, r14, 21
	;;
	       nop	1
	;;
.BB6_162:                               ; %bb88
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92         ; vfprintf.c:1178
#1:	       br	.BB6_161
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1178
	;;
#0:	       add	r10, 1 -> r10   ; vfprintf.c:1178
	;;
#0:	       stm.s	r10, r14, 23
	;;
.BB6_163:                               ; %bb89
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1184
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184
	;;
#0:	       stm.s	r0, r14, 21
#1:	       ldi	102 -> r0
	;;
#0:	       cmpeq	r13, r0 -> c1   ; vfprintf.c:1183
	;;
#0:	if !c1 br	.BB6_146
	;;
	       nop	2
	;;
; BB#164:                               ; %bb90
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1184
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1184
	;;
#0:	       cmplt	r0, 1 -> c1     ; vfprintf.c:1184
	;;
#0:	if  c1 br	.BB6_169        ; vfprintf.c:1184
	;;                              ; vfprintf.c:1184
	       nop	2               ; vfprintf.c:1184
	;;
; BB#165:                               ; %bb91
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1186
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1186
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1186
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1186
	;;
#0:	if  c1 br	.BB6_167
	;;
	       nop	2
	;;
; BB#166:                               ; %bb92.bb110_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84
#1:	       br	.BB6_174
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 23
	;;
	       nop	0
	;;
.BB6_167:                               ; %bb94
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1187
#1:	       br	.BB6_173
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1187
	;;
#0:	       add	r10, r0 -> r0   ; vfprintf.c:1187
	;;
#0:	       add	r0, 1 -> r10    ; vfprintf.c:1187
	;;
.BB6_168:                               ; %bb96.bb110_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	1 -> r10
#1:	       br	.BB6_173
	;;
	       nop	2
	;;
.BB6_169:                               ; %bb95
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; vfprintf.c:1189
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1189
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1189
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1189
	;;
#0:	if !c1 br	.BB6_168
	;;
	       nop	2
	;;
; BB#170:                               ; %bb98
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r10, 2 -> r10   ; vfprintf.c:1189
#1:	       br	.BB6_173
	;;
	       nop	2
	;;
.BB6_171:                               ; %bb105
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmplt	r10, 1 -> c1
#1:	       ldi	2 -> r0
#2:	       ldm.s	r14, 80         ; vfprintf.c:1197
	;;
#0:	       sub	r0, r10 -> r0   ; vfprintf.c:1197
#1:	       ldi	1 -> r10
	;;
#0:	if  c1 or	r0, 0 -> r10
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1197
	;;
.BB6_172:                               ; %bb105
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r10, r0 -> r10  ; vfprintf.c:1197
	;;
.BB6_173:                               ; %bb105
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r10, r14, 23
	;;
.BB6_174:                               ; %bb110
                                        ;   in Loop: Header=BB6_28 Depth=1
#3:	       mask	r3.23, 0 -> r0  ; vfprintf.c:1220
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1220
	;;
#0:	if  c1 br	.BB6_176        ; vfprintf.c:1220
	;;                              ; vfprintf.c:1220
	       nop	2               ; vfprintf.c:1220
	;;
; BB#175:                               ; %bb110.bb180_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 272
#1:	       ldga	___mem_emergency -> r0
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stm.a	r3.31, r0, 0
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       br	.BB6_177
#1:	       ldx	$mem, 0 -> r0
#2:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$membu, r0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
#1:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB6_176:                               ; %bb111
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
#1:	       ldi	45 -> r0
	;;
#0:	       stm.s	r0, r14, 28     ; vfprintf.c:1221
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1221
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1221
	;;
#0:	       stmb.a	r0, r10, 0      ; vfprintf.c:1221
	;;
.BB6_177:                               ; %bb111
                                        ;   in Loop: Header=BB6_28 Depth=1
#2:	       or	r2.23, 0 -> r0
#0:	       br	.BB6_253
	;;
#0:	       stm.s	r0, r14, 31     ; vfprintf.c:1221
	;;
	       nop	1
	;;
.BB6_178:                               ; %bb112
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 124        ; vfprintf.c:1230
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1230
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1230
	;;
#0:	if !c1 br	.BB6_180        ; vfprintf.c:1230
	;;                              ; vfprintf.c:1230
	       nop	2               ; vfprintf.c:1230
	;;
; BB#179:                               ; %bb113
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1231
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1231
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1231
#1:	       stm.s	r2, r14, 29     ; vfprintf.c:1231
	;;
#0:	       br	.BB6_30
#1:	       ldm.s	r14, 88         ; vfprintf.c:1231
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1231
	;;
#0:	       stm.a	r10, r0, 0      ; vfprintf.c:1231
#1:	       ldi	-1 -> r10
	;;
#0:	       stm.s	r11, r14, 31
	;;
.BB6_180:                               ; %bb114
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1239
#1:	       ldm.s	r14, 124        ; vfprintf.c:1232
	;;
#0:	       add	r2, 4 -> r0     ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1232
	;;
#0:	       btest	r10, 6 -> c1    ; vfprintf.c:1232
	;;
#0:	if !c1 br	.BB6_182        ; vfprintf.c:1232
	;;                              ; vfprintf.c:1232
	       nop	2               ; vfprintf.c:1232
	;;
; BB#181:                               ; %bb115
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.s	r14, 116        ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1233
	;;
#0:	       br	.BB6_183
#1:	       ldm.f	r2, 0           ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1233
#1:	       ldm.s	r14, 88         ; vfprintf.c:1233
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1233
	;;
#0:	       stmh.a	r12, r10, 0     ; vfprintf.c:1233
	;;
.BB6_182:                               ; %bb116
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       ldm.f	r2, 0           ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1239
#1:	       ldm.s	r14, 88         ; vfprintf.c:1239
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:1239
	;;
#0:	       stm.a	r12, r10, 0     ; vfprintf.c:1239
	;;
.BB6_183:                               ; %bb116
                                        ;   in Loop: Header=BB6_30 Depth=2
#0:	       stm.s	r11, r14, 31
#1:	       br	.BB6_30
#2:	       or	r0, 0 -> r2
#3:	       ldi	-1 -> r10
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1239
	;;
	       nop	1
	;;
.BB6_184:                               ; %bb117
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1242
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1242
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1242
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB6_185:                               ; %bb118
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1245
	;;
#0:	if !c1 br	.BB6_187        ; vfprintf.c:1245
	;;                              ; vfprintf.c:1245
	       nop	2               ; vfprintf.c:1245
	;;
; BB#186:                               ; %bb119
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1245
	;;
#0:	       br	.BB6_188
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1245
	;;
.BB6_187:                               ; %bb120
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1245
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1245
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1245
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 23
	;;
.BB6_188:                               ; %bb124
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116
#1:	       br	.BB6_220
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29
	;;
.BB6_189:                               ; %bb125
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1260
#1:	       ldiu	128 -> r3
#2:	       ldga	._.str430 -> r1
#3:	       ldi	120 -> r13
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1260
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1260
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1260
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1260
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1260
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1263
#1:	       ldi	48 -> r2
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1263
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1263
	;;
#0:	       or	r0, 2 -> r0     ; vfprintf.c:1263
	;;
#0:	       br	.BB6_220
#1:	       stm.s	r0, r14, 31
#2:	       ldi	2 -> r0
	;;
#0:	       stm.s	r1, r14, 18
#1:	       add	r3, 8 -> r1
	;;
#0:	       stmb.a	r13, r1, 1      ; vfprintf.c:1265
	;;
#0:	       stmb.a	r2, r1, 0       ; vfprintf.c:1264
	;;
.BB6_190:                               ; %bb126
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1272
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1272
#1:	       add	r2, 4 -> r2     ; vfprintf.c:1272
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1272
	;;
#0:	       stm.s	r0, r14, 24     ; vfprintf.c:1272
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1278
	;;
#0:	if  c1 br	.BB6_192        ; vfprintf.c:1278
#1:	       stm.s	r2, r14, 29     ; vfprintf.c:1271
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1271
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1271
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1271
	;;
; BB#191:                               ; %bb127
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	6 -> r0
#1:	       ldi	0 -> r1
	;;
#0:	       br	.BB6_198
#1:	       cmpult	r0, r10 -> c1
#2:	       stm.s	r1, r14, 28
	;;
#0:	if  c1 or	r0, 0 -> r10
#1:	       ldga	._.str531 -> r0
	;;
#0:	       stm.s	r0, r14, 24
#1:	       or	r1, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
#1:	       or	r1, 0 -> r0
	;;
.BB6_192:                               ; %bb131
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	-1 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1
	;;
#0:	if  c1 br	.BB6_196        ; vfprintf.c:1347
	;;                              ; vfprintf.c:1347
	       nop	2               ; vfprintf.c:1347
	;;
; BB#193:                               ; %bb131.bb3.i44_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r10
#1:	       br	.BB6_201
	;;
	       nop	2
	;;
.BB6_194:                               ; %bb133.bb180_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 28
	;;
.BB6_195:                               ; %bb133.bb180_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       or	r0, 0 -> r10
#1:	       br	.BB6_253
	;;
#0:	       stm.s	r10, r14, 21
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	0
	;;
.BB6_196:                               ; %bb132
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r10, 0 -> r2    ; vfprintf.c:1353
	;;
#0:	       stm.s	r0, r14, 28     ; vfprintf.c:1353
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1353
	;;
#0:	       callg	_memchr         ; vfprintf.c:1353
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1353
	;;                              ; vfprintf.c:1353
	       nop	3               ; vfprintf.c:1353
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1355
	;;
#0:	if !c1 ldm.s	r14, 96         ; vfprintf.c:1356
	;;
#0:	if !c1 ldx	$mem, 0 -> r1   ; vfprintf.c:1356
	;;
#0:	if !c1 sub	r0, r1 -> r0    ; vfprintf.c:1356
	;;
#0:	if !c1 stm.s	r0, r14, 23     ; vfprintf.c:1357
#1:	if !c1 cmplt	r10, r0 -> c1   ; vfprintf.c:1357
	;;
#0:	if !c1 br	.BB6_194
	;;
	       nop	2
	;;
; BB#197:                               ; %bb134
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 21
	;;
.BB6_198:                               ; %bb134
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 19
#1:	       br	.BB6_253
	;;
#0:	       stm.s	r10, r14, 23
	;;
	       nop	1
	;;
.BB6_199:                               ; %bb.i39
                                        ;   in Loop: Header=BB6_201 Depth=2
#0:	       ldm.f	r0, 0           ; strlen.c:68[ vfprintf.c:1362 ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; strlen.c:68[ vfprintf.c:1362 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:68[ vfprintf.c:1362 ]
	;;
#0:	if !c1 br	.BB6_194
	;;
	       nop	2
	;;
; BB#200:                               ; %bb2.i42
                                        ;   in Loop: Header=BB6_201 Depth=2
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 1 -> r10
	;;
.BB6_201:                               ; %bb2.i42
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       stm.s	r10, r14, 23
	;;
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, r10 -> r0
	;;
#0:	       and	r0, 3 -> r10    ; strlen.c:66[ vfprintf.c:1362 ]
	;;
#0:	       cmpne	r10, 0 -> c1    ; strlen.c:66[ vfprintf.c:1362 ]
	;;
#0:	if  c1 br	.BB6_199        ; strlen.c:66[ vfprintf.c:1362 ]
	;;                              ; strlen.c:66[ vfprintf.c:1362 ]
	       nop	2               ; strlen.c:66[ vfprintf.c:1362 ]
	;;
; BB#202:                               ; %bb4.i46
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.f	r0, 0           ; strlen.c:76[ vfprintf.c:1362 ]
#1:	       ldiu	1791 -> r10
#2:	       ldga	32896 -> r2
	;;
#0:	       ldim	991 -> r10
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:76[ vfprintf.c:1362 ]
#1:	       ldih	2039 -> r10
	;;
#0:	       and	r1, r2 -> r3
#1:	       add	r1, r10 -> r10
	;;
#0:	       xor	r3, r2 -> r2
	;;
#0:	       and	r2, r10 -> r10  ; strlen.c:76[ vfprintf.c:1362 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:76[ vfprintf.c:1362 ]
	;;
#0:	if !c1 br	.BB6_204
	;;
	       nop	2
	;;
.BB6_203:                               ; %bb5.i56
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 4           ; strlen.c:76[ vfprintf.c:1362 ]
#1:	       ldiu	1791 -> r10
#2:	       ldga	32896 -> r2
#3:	       add	r0, 4 -> r0
	;;
#0:	       ldim	991 -> r10
#1:	       ldih	1028 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:76[ vfprintf.c:1362 ]
#1:	       ldih	2039 -> r10
	;;
#0:	       and	r1, r2 -> r3
#1:	       add	r1, r10 -> r10
	;;
#0:	       xor	r3, r2 -> r2
	;;
#0:	       and	r2, r10 -> r10  ; strlen.c:76[ vfprintf.c:1362 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:76[ vfprintf.c:1362 ]
	;;
#0:	if  c1 br	.BB6_203        ; strlen.c:76[ vfprintf.c:1362 ]
	;;                              ; strlen.c:76[ vfprintf.c:1362 ]
	       nop	2               ; strlen.c:76[ vfprintf.c:1362 ]
	;;
.BB6_204:                               ; %bb8.i58
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.f	r0, 0           ; strlen.c:85[ vfprintf.c:1362 ]
	;;
#0:	       ldx	$membu, r0 -> r10 ; strlen.c:85[ vfprintf.c:1362 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; strlen.c:85[ vfprintf.c:1362 ]
	;;
#0:	if  c1 br	.BB6_207
	;;
	       nop	2
	;;
.BB6_205:                               ; %bb9.i62
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 1           ; strlen.c:85[ vfprintf.c:1362 ]
#1:	       add	r0, 1 -> r10
	;;
#0:	       ldx	$membu, r10 -> r0 ; strlen.c:85[ vfprintf.c:1362 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:85[ vfprintf.c:1362 ]
#1:	       or	r10, 0 -> r0
	;;
#0:	if  c1 br	.BB6_205        ; strlen.c:85[ vfprintf.c:1362 ]
	;;                              ; strlen.c:85[ vfprintf.c:1362 ]
	       nop	2               ; strlen.c:85[ vfprintf.c:1362 ]
	;;
; BB#206:                               ; %bb9.i62.bb11.i64_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       or	r10, 0 -> r0
	;;
.BB6_207:                               ; %bb11.i64
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 28    ; strlen.c:87[ vfprintf.c:1362 ]
	;;
#0:	       ldm.s	r14, 96         ; strlen.c:87[ vfprintf.c:1362 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:87[ vfprintf.c:1362 ]
	;;
#0:	       br	.BB6_253
#1:	       sub	r0, r1 -> r0    ; strlen.c:87[ vfprintf.c:1362 ]
	;;
#0:	       stm.s	r0, r14, 23
#1:	       or	r10, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
#1:	       or	r10, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB6_208:                               ; %bb137
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1366
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1366
	;;
#0:	       or	r0, 16 -> r0    ; vfprintf.c:1366
	;;
#0:	       stm.s	r0, r14, 31
	;;
.BB6_209:                               ; %bb138
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1369
	;;
#0:	if !c1 br	.BB6_211        ; vfprintf.c:1369
	;;                              ; vfprintf.c:1369
	       nop	2               ; vfprintf.c:1369
	;;
; BB#210:                               ; %bb139
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1369
	;;
#0:	       br	.BB6_212
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1369
	;;
.BB6_211:                               ; %bb140
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1369
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1369
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 23
	;;
.BB6_212:                               ; %bb144
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116
#1:	       br	.BB6_220
#2:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29
	;;
.BB6_213:                               ; %hex.loopexit
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	._.str632 -> r0
	;;
.BB6_214:                               ; %hex.loopexit
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 18
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
	;;
#0:	       btest	r0, 4 -> c1     ; vfprintf.c:1377
	;;
#0:	if !c1 br	.BB6_216        ; vfprintf.c:1377
	;;                              ; vfprintf.c:1377
	       nop	2               ; vfprintf.c:1377
	;;
; BB#215:                               ; %bb147
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1377
	;;
#0:	       br	.BB6_217
#1:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
	;;
#0:	       stm.s	r0, r14, 23     ; vfprintf.c:1377
	;;
.BB6_216:                               ; %bb148
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116        ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1377
	;;
#0:	       ldm.f	r2, 0           ; vfprintf.c:1377
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1377
#1:	       ldm.s	r14, 124
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       btest	r1, 6 -> c1
#1:	       mask	r0, 4 -> r1
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 23
	;;
.BB6_217:                               ; %bb152
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 116
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 4 -> r2
	;;
#0:	       stm.s	r2, r14, 29     ; vfprintf.c:1380
	;;
#0:	       ldm.s	r14, 124        ; vfprintf.c:1380
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1380
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1380
	;;
#0:	if  c1 ldm.s	r14, 92
	;;
#0:	if  c1 ldx	$mem, 0 -> r0
	;;
#0:	if  c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB6_219
	;;
	       nop	2
	;;
; BB#218:                               ; %bb152.nosign_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	2 -> r0
#1:	       br	.BB6_220
	;;
	       nop	2
	;;
.BB6_219:                               ; %bb155
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1383
#1:	       ldiu	128 -> r3
#2:	       ldi	48 -> r1
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1383
#1:	       add	r3, 8 -> r2
	;;
#0:	       or	r0, 2 -> r0     ; vfprintf.c:1383
	;;
#0:	       stm.s	r0, r14, 31
#1:	       ldi	2 -> r0
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1381
	;;
#0:	       stmb.a	r13, r2, 1      ; vfprintf.c:1382
	;;
.BB6_220:                               ; %nosign
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r1
	;;
#0:	       stm.s	r1, r14, 28     ; vfprintf.c:1390
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1390
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1390
	;;
#0:	       stmb.a	0, r1, 0        ; vfprintf.c:1390
	;;
.BB6_221:                               ; %number
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1397
#1:	       ldi	-1 -> r1
#2:	       ldi	-129 -> r2
	;;
#0:	       cmplt	r1, r10 -> c1
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1397
#1:	       ldm.s	r14, 92
	;;
#0:	       and	r1, r2 -> r2    ; vfprintf.c:1397
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	if  c1 or	r2, 0 -> r1
	;;
#0:	       or	r3, r10 -> r3
#1:	       stm.s	r1, r14, 31
	;;
#0:	       cmpeq	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB6_246        ; vfprintf.c:1405
	;;                              ; vfprintf.c:1405
	       nop	2               ; vfprintf.c:1405
	;;
; BB#222:                               ; %bb160
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:1411
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1411
	;;
#0:	if  c1 br	.BB6_228        ; vfprintf.c:1411
	;;                              ; vfprintf.c:1411
	       nop	2               ; vfprintf.c:1411
	;;
; BB#223:                               ; %bb160
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpeq	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB6_232
	;;
	       nop	2
	;;
; BB#224:                               ; %bb160
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       cmpne	r0, 2 -> c1
	;;
#0:	if  c1 br	.BB6_227
	;;
	       nop	2
	;;
; BB#225:                               ; %bb160.bb169_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB6_226:                               ; %bb169
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 92         ; vfprintf.c:1459
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1459
#1:	       ldm.s	r14, 72         ; vfprintf.c:1459
	;;
#0:	       and	r0, 15 -> r1    ; vfprintf.c:1459
#1:	       sr	r0, 4 -> r0     ; vfprintf.c:1460
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1459
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1461
	;;
#0:	       add	r2, r1 -> r1    ; vfprintf.c:1459
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:1459
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:1459
#1:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	if  c1 br	.BB6_226
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.s	r2, r14, 24     ; vfprintf.c:1459
	;;
#0:	       stmb.a	r1, r2, 0       ; vfprintf.c:1459
	;;
#0:	       br	.BB6_251
	;;
	       nop	2
	;;
.BB6_227:                               ; %bb160.bb3.i71_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB6_239
	;;
	       nop	2
	;;
.BB6_228:                               ; %bb160.bb161_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB6_229:                               ; %bb161
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 92         ; vfprintf.c:1414
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1414
	;;
#0:	       and	r1, 7 -> r2     ; vfprintf.c:1414
#1:	       sr	r1, 3 -> r1     ; vfprintf.c:1415
	;;
#0:	       stm.s	r1, r14, 23
#1:	       cmpne	r1, 0 -> c1     ; vfprintf.c:1416
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	if  c1 br	.BB6_229        ; vfprintf.c:1416
#1:	       sub	r3, 1 -> r3
	;;
#0:	       stm.s	r3, r14, 24
#1:	       ldi	48 -> r3
	;;
#0:	       or	r2, r3 -> r2
#1:	       sub	r0, 1 -> r3
	;;
#0:	       stmb.a	r2, r0, 0       ; vfprintf.c:1414
#1:	       or	r3, 0 -> r0
	;;
; BB#230:                               ; %bb162
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1418
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1418
	;;
#0:	       btest	r0, 0 -> c1     ; vfprintf.c:1418
	;;
#0:	if  c1 mask	r2, 0 -> r0
#1:	if  c1 ldi	48 -> r1
	;;
#0:	if  c1 cmpne	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB6_251
	;;
	       nop	2
	;;
; BB#231:                               ; %bb165
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stmb.a	r1, r3, 0       ; vfprintf.c:1419
#1:	       br	.BB6_250
#2:	       or	r3, 0 -> r0
	;;
	       nop	2
	;;
.BB6_232:                               ; %bb166
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 10 -> c1
	;;
#0:	if  c1 br	.BB6_438        ; vfprintf.c:1424
	;;                              ; vfprintf.c:1424
	       nop	2               ; vfprintf.c:1424
	;;
; BB#233:                               ; %bb166.bb168_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB6_234:                               ; %bb168
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 92         ; vfprintf.c:1453
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___udivsi3      ; vfprintf.c:1453
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1453
	;;                              ; vfprintf.c:1453
	       nop	3               ; vfprintf.c:1453
	;;
#1:	       ldm.s	r14, 92         ; vfprintf.c:1432
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:1453
#2:	       ldi	10 -> r1
	;;
#0:	       callg	___umodsi3      ; vfprintf.c:1432
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1432
	;;                              ; vfprintf.c:1432
	       nop	3               ; vfprintf.c:1432
	;;
#1:	       ldm.s	r14, 96
#0:	       or	r0, r0.24 -> r0
#2:	       ldi	9 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.s	r1, r14, 24
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1432
	;;
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#1:	       cmpult	r2, r0 -> c1
#0:	       or	r0.23, 0 -> r0
	;;
#0:	if  c1 br	.BB6_234
#1:	       stm.s	r0, r14, 23     ; vfprintf.c:1454
	;;
	       nop	2
	;;
#0:	       br	.BB6_251
	;;
	       nop	2
	;;
.BB6_235:                               ; %bb.i66
                                        ;   in Loop: Header=BB6_239 Depth=2
#0:	       ldm.s	r14, 92         ; strlen.c:68[ vfprintf.c:1466 ]
#1:	       ldi	25 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; strlen.c:68[ vfprintf.c:1466 ]
	;;
#0:	       cmpne	r1, r0 -> c1    ; strlen.c:68[ vfprintf.c:1466 ]
	;;
#0:	if  c1 br	.BB6_238        ; strlen.c:68[ vfprintf.c:1466 ]
	;;                              ; strlen.c:68[ vfprintf.c:1466 ]
	       nop	2               ; strlen.c:68[ vfprintf.c:1466 ]
	;;
; BB#236:                               ; %bb.i66.bb180_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	._.str733 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB6_237:                               ; %bb.i66.bb180_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
#1:	       br	.BB6_252
	;;
#0:	       stm.s	r0, r14, 21
	;;
	       nop	1
	;;
.BB6_238:                               ; %bb2.i69
                                        ;   in Loop: Header=BB6_239 Depth=2
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 1 -> r0
	;;
.BB6_239:                               ; %bb2.i69
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       stm.s	r0, r14, 23
#1:	       ldga	._.str733 -> r0
	;;
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       and	r0, 3 -> r1     ; strlen.c:66[ vfprintf.c:1466 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; strlen.c:66[ vfprintf.c:1466 ]
	;;
#0:	if  c1 br	.BB6_235        ; strlen.c:66[ vfprintf.c:1466 ]
	;;                              ; strlen.c:66[ vfprintf.c:1466 ]
	       nop	2               ; strlen.c:66[ vfprintf.c:1466 ]
	;;
; BB#240:                               ; %bb4.i73
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.f	r0, 0           ; strlen.c:76[ vfprintf.c:1466 ]
#1:	       ldiu	1791 -> r1
#2:	       ldga	32896 -> r3
	;;
#0:	       ldim	991 -> r1
#1:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:1466 ]
#1:	       ldih	2039 -> r1
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r1
	;;
#0:	       xor	r4, r3 -> r3
	;;
#0:	       and	r3, r1 -> r1    ; strlen.c:76[ vfprintf.c:1466 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:76[ vfprintf.c:1466 ]
	;;
#0:	if !c1 br	.BB6_242
	;;
	       nop	2
	;;
.BB6_241:                               ; %bb5.i83
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 4           ; strlen.c:76[ vfprintf.c:1466 ]
#1:	       ldiu	1791 -> r1
#2:	       ldga	32896 -> r3
#3:	       add	r0, 4 -> r0
	;;
#0:	       ldim	991 -> r1
#1:	       ldih	1028 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; strlen.c:76[ vfprintf.c:1466 ]
#1:	       ldih	2039 -> r1
	;;
#0:	       and	r2, r3 -> r4
#1:	       add	r2, r1 -> r1
	;;
#0:	       xor	r4, r3 -> r3
	;;
#0:	       and	r3, r1 -> r1    ; strlen.c:76[ vfprintf.c:1466 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:76[ vfprintf.c:1466 ]
	;;
#0:	if  c1 br	.BB6_241        ; strlen.c:76[ vfprintf.c:1466 ]
	;;                              ; strlen.c:76[ vfprintf.c:1466 ]
	       nop	2               ; strlen.c:76[ vfprintf.c:1466 ]
	;;
.BB6_242:                               ; %bb8.i85
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.f	r0, 0           ; strlen.c:85[ vfprintf.c:1466 ]
	;;
#0:	       ldx	$membu, r0 -> r1 ; strlen.c:85[ vfprintf.c:1466 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; strlen.c:85[ vfprintf.c:1466 ]
	;;
#0:	if  c1 br	.BB6_245
	;;
	       nop	2
	;;
.BB6_243:                               ; %bb9.i89
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 1           ; strlen.c:85[ vfprintf.c:1466 ]
#1:	       add	r0, 1 -> r1
	;;
#0:	       ldx	$membu, r1 -> r0 ; strlen.c:85[ vfprintf.c:1466 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; strlen.c:85[ vfprintf.c:1466 ]
#1:	       or	r1, 0 -> r0
	;;
#0:	if  c1 br	.BB6_243        ; strlen.c:85[ vfprintf.c:1466 ]
	;;                              ; strlen.c:85[ vfprintf.c:1466 ]
	       nop	2               ; strlen.c:85[ vfprintf.c:1466 ]
	;;
; BB#244:                               ; %bb9.i89.bb11.i91_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       or	r1, 0 -> r0
	;;
.BB6_245:                               ; %bb11.i91
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	._.str733 -> r1 ; strlen.c:87[ vfprintf.c:1466 ]
#1:	       br	.BB6_237
	;;
#0:	       stm.s	r1, r14, 24     ; strlen.c:87[ vfprintf.c:1466 ]
#1:	       sub	r0, r1 -> r0    ; strlen.c:87[ vfprintf.c:1466 ]
	;;
#0:	       stm.s	r0, r14, 23
	;;
	       nop	0
	;;
.BB6_246:                               ; %bb171
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       mask	r0, 0 -> r0     ; vfprintf.c:1479
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 or	r1, 0 -> r0     ; vfprintf.c:1479
	;;
#0:	if  c1 btest	r0, 0 -> c1     ; vfprintf.c:1479
	;;
#0:	if  c1 br	.BB6_248
	;;
	       nop	2
	;;
; BB#247:                               ; %bb171.bb175_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 64
#1:	       br	.BB6_250
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB6_248:                               ; %bb174
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	48 -> r0
	;;
.BB6_249:                               ; %bb174
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 60         ; vfprintf.c:1480
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1480
	;;
#0:	       stmb.a	r0, r1, 0       ; vfprintf.c:1480
#1:	       or	r1, 0 -> r0
	;;
.BB6_250:                               ; %bb174
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 24
	;;
.BB6_251:                               ; %bb175
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 21     ; vfprintf.c:1482
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1482
#1:	       ldm.s	r14, 64         ; vfprintf.c:1482
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1482
	;;
#0:	       sub	r0, r1 -> r0    ; vfprintf.c:1482
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB6_252:                               ; %bb175
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r10, r14, 19
	;;
.BB6_253:                               ; %bb180
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112
#1:	       ldi	132 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 76         ; vfprintf.c:1511
	;;
#0:	       mask	r0, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1511
#2:	       ldm.s	r14, 92         ; vfprintf.c:1511
	;;
#0:	       ldx	$c1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1511
#1:	       ldm.s	r14, 124
	;;
#0:	       cmple	r0, r10 -> c2   ; vfprintf.c:1511
	;;
#0:	if  c2 or	r10, 0 -> r0    ; vfprintf.c:1511
	;;
#0:	       add	r1, r0 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r3 -> r3    ; vfprintf.c:1518
#1:	       btest	r1, 1 -> c1
#2:	       add	r0, 2 -> r2     ; vfprintf.c:1515
#3:	       and	r1, 2 -> r1     ; vfprintf.c:1514
	;;
#0:	if !c1 or	r0, 0 -> r2
#1:	       cmpeq	r3, 0 -> c1     ; vfprintf.c:1518
#2:	       stm.s	r3, r14, 11     ; vfprintf.c:1514
	;;
#0:	if !c1 br	.BB6_266
#1:	       stm.s	r1, r14, 12
	;;
#0:	       stm.s	r2, r14, 28     ; vfprintf.c:1518
	;;
	       nop	1
	;;
; BB#254:                               ; %bb186
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       or	r2, 0 -> r0     ; vfprintf.c:1519
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1519
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1519
	;;
#0:	if !c1 br	.BB6_260
	;;
	       nop	2
	;;
#0:	       br	.BB6_266
	;;
	       nop	2
	;;
.BB6_255:                               ; %bb187
                                        ;   in Loop: Header=BB6_260 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
#1:	       ldm.f	r0, 4           ; vfprintf.c:1519
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1519
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1519
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB6_257        ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#256:                               ; %bb187.bb191_crit_edge
                                        ;   in Loop: Header=BB6_260 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
#1:	       br	.BB6_259
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB6_257:                               ; %bb188
                                        ;   in Loop: Header=BB6_260 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1519
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1519
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if !c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#258:                               ; %bb188.bb191_crit_edge
                                        ;   in Loop: Header=BB6_260 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_259:                               ; %bb188.bb191_crit_edge
                                        ;   in Loop: Header=BB6_260 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_260:                               ; %bb192
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1519
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1519
#1:	       ldga	_blanks.3634 -> r0 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB6_255        ; vfprintf.c:1519
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	1               ; vfprintf.c:1519
	;;
; BB#261:                               ; %bb193
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1519
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1519
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1519
#1:	       ldm.f	r0, 4           ; vfprintf.c:1519
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1519
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1519
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB6_263        ; vfprintf.c:1519
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	2               ; vfprintf.c:1519
	;;
; BB#262:                               ; %bb193.bb197_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1519
#1:	       br	.BB6_265
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1519
	;;
	       nop	0
	;;
.BB6_263:                               ; %bb194
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1519
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1519
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1519
	;;                              ; vfprintf.c:1519
	       nop	3               ; vfprintf.c:1519
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#264:                               ; %bb194.bb197_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_265:                               ; %bb194.bb197_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_266:                               ; %bb197
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 272        ; vfprintf.c:1522
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:1522
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:1522
	;;
#2:	       stm.a	r2.31, r0, 0    ; vfprintf.c:1522
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1522
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1522
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:1522
	;;
#0:	       ldx	$membu, r0 -> r0 ; vfprintf.c:1522
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1522
	;;
#0:	if !c1 br	.BB6_272
	;;
	       nop	2
	;;
; BB#267:                               ; %bb198
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
#1:	       ldm.s	r14, 120        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1523
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1523
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1523
#1:	       ldm.f	r0, 4           ; vfprintf.c:1523
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1523
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1523
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1523
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1523
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1523
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB6_269        ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	2               ; vfprintf.c:1523
	;;
; BB#268:                               ; %bb198.bb202_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1523
#1:	       br	.BB6_271
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1523
	;;
	       nop	0
	;;
.BB6_269:                               ; %bb199
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1523
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1523
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1523
	;;                              ; vfprintf.c:1523
	       nop	3               ; vfprintf.c:1523
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1523
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#270:                               ; %bb199.bb202_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_271:                               ; %bb199.bb202_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_272:                               ; %bb202
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 48         ; vfprintf.c:1524
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1524
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1524
	;;
#0:	if !c1 br	.BB6_278
	;;
	       nop	2
	;;
; BB#273:                               ; %bb203
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	128 -> r3
#1:	       ldm.s	r14, 120        ; vfprintf.c:1525
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       add	r3, 8 -> r0
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1525
	;;
#0:	       stm.a	2, r1, 1        ; vfprintf.c:1525
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1525
#1:	       ldm.f	r0, 4           ; vfprintf.c:1525
	;;
#0:	       add	r1, 2 -> r1     ; vfprintf.c:1525
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1525
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1525
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1525
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1525
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB6_275        ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	2               ; vfprintf.c:1525
	;;
; BB#274:                               ; %bb203.bb208_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1525
#1:	       br	.BB6_277
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1525
	;;
	       nop	0
	;;
.BB6_275:                               ; %bb205
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1525
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1525
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1525
	;;                              ; vfprintf.c:1525
	       nop	3               ; vfprintf.c:1525
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1525
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#276:                               ; %bb205.bb208_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_277:                               ; %bb205.bb208_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_278:                               ; %bb208
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 44         ; vfprintf.c:1528
#1:	       ldi	128 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1528
	;;
#0:	       cmpeq	r1, r0 -> c1    ; vfprintf.c:1528
	;;
#0:	if !c1 br	.BB6_291
	;;
	       nop	2
	;;
; BB#279:                               ; %bb209
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1529
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1529
	;;
#0:	if !c1 br	.BB6_285
	;;
	       nop	2
	;;
#0:	       br	.BB6_291
	;;
	       nop	2
	;;
.BB6_280:                               ; %bb210
                                        ;   in Loop: Header=BB6_285 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
#1:	       ldm.f	r0, 4           ; vfprintf.c:1529
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1529
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_282        ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#281:                               ; %bb210.bb214_crit_edge
                                        ;   in Loop: Header=BB6_285 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
#1:	       br	.BB6_284
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB6_282:                               ; %bb211
                                        ;   in Loop: Header=BB6_285 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1529
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1529
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#283:                               ; %bb211.bb214_crit_edge
                                        ;   in Loop: Header=BB6_285 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_284:                               ; %bb211.bb214_crit_edge
                                        ;   in Loop: Header=BB6_285 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_285:                               ; %bb215
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1529
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1529
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_280        ; vfprintf.c:1529
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	1               ; vfprintf.c:1529
	;;
; BB#286:                               ; %bb216
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1529
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1529
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1529
#1:	       ldm.f	r0, 4           ; vfprintf.c:1529
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1529
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1529
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1529
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1529
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_288        ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	2               ; vfprintf.c:1529
	;;
; BB#287:                               ; %bb216.bb220_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1529
#1:	       br	.BB6_290
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1529
	;;
	       nop	0
	;;
.BB6_288:                               ; %bb217
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1529
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1529
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1529
	;;                              ; vfprintf.c:1529
	       nop	3               ; vfprintf.c:1529
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#289:                               ; %bb217.bb220_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_290:                               ; %bb217.bb220_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_291:                               ; %bb220
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 76         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
#1:	       ldm.s	r14, 92         ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1532
	;;
#0:	       sub	r0, r10 -> r10  ; vfprintf.c:1532
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB6_297
	;;
	       nop	2
	;;
#0:	       br	.BB6_303
	;;
	       nop	2
	;;
.BB6_292:                               ; %bb221
                                        ;   in Loop: Header=BB6_297 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.f	r0, 4           ; vfprintf.c:1532
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1532
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1532
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB6_294        ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#293:                               ; %bb221.bb225_crit_edge
                                        ;   in Loop: Header=BB6_297 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
#1:	       br	.BB6_296
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB6_294:                               ; %bb222
                                        ;   in Loop: Header=BB6_297 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1532
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1532
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#295:                               ; %bb222.bb225_crit_edge
                                        ;   in Loop: Header=BB6_297 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_296:                               ; %bb222.bb225_crit_edge
                                        ;   in Loop: Header=BB6_297 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_297:                               ; %bb226
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1532
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1532
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_292        ; vfprintf.c:1532
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	1               ; vfprintf.c:1532
	;;
; BB#298:                               ; %bb227
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1532
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1532
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1532
#1:	       ldm.f	r0, 4           ; vfprintf.c:1532
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1532
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1532
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB6_300        ; vfprintf.c:1532
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	2               ; vfprintf.c:1532
	;;
; BB#299:                               ; %bb227.bb231_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1532
#1:	       br	.BB6_302
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1532
	;;
	       nop	0
	;;
.BB6_300:                               ; %bb228
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1532
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1532
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1532
	;;                              ; vfprintf.c:1532
	       nop	3               ; vfprintf.c:1532
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1532
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#301:                               ; %bb228.bb231_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_302:                               ; %bb228.bb231_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_303:                               ; %bb231
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1536
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1536
	;;
#0:	       btest	r0, 8 -> c1     ; vfprintf.c:1536
	;;
#0:	if  c1 br	.BB6_308        ; vfprintf.c:1536
	;;                              ; vfprintf.c:1536
	       nop	2               ; vfprintf.c:1536
	;;
; BB#304:                               ; %bb232
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
#1:	       ldm.s	r14, 120        ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r13, 0      ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 92         ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1537
	;;
#0:	       stm.a	r10, r13, 1     ; vfprintf.c:1537
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       ldm.f	r13, 8          ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
#1:	       ldm.f	r13, 4          ; vfprintf.c:1537
	;;
#0:	       add	r0, r10 -> r0   ; vfprintf.c:1537
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1537
#1:	       stm.a	r0, r13, 2      ; vfprintf.c:1537
	;;
#0:	       add	r1, 1 -> r0     ; vfprintf.c:1537
	;;
#0:	       stm.a	r0, r13, 1      ; vfprintf.c:1537
#1:	       ldi	7 -> r13
	;;
#0:	       cmplt	r13, r0 -> c1   ; vfprintf.c:1537
	;;
#0:	if  c1 br	.BB6_306        ; vfprintf.c:1537
	;;                              ; vfprintf.c:1537
	       nop	2               ; vfprintf.c:1537
	;;
; BB#305:                               ; %bb232.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1537
#1:	       br	.BB6_420
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:1537
	;;
#0:	       add	r13, 8 -> r13   ; vfprintf.c:1537
	;;
#0:	       stm.s	r13, r14, 30
	;;
.BB6_306:                               ; %bb233
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1537
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1537
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1537
	;;                              ; vfprintf.c:1537
	       nop	3               ; vfprintf.c:1537
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1537
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#307:                               ; %bb233.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r0
#1:	       br	.BB6_420
	;;
#0:	       add	r14, r0 -> r0
	;;
#0:	       add	r0, 20 -> r13
	;;
#0:	       stm.s	r13, r14, 30
	;;
.BB6_308:                               ; %bb236
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldi	102 -> r0
	;;
#0:	       cmplt	r13, r0 -> c1   ; vfprintf.c:1539
	;;
#0:	if  c1 br	.BB6_390        ; vfprintf.c:1539
	;;                              ; vfprintf.c:1539
	       nop	2               ; vfprintf.c:1539
	;;
; BB#309:                               ; %bb237
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1540
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; vfprintf.c:1540
	;;
#0:	       btest	r0, 9 -> c1     ; vfprintf.c:1540
	;;
#0:	if  c1 br	.BB6_329        ; vfprintf.c:1540
	;;                              ; vfprintf.c:1540
	       nop	2               ; vfprintf.c:1540
	;;
; BB#310:                               ; %bb238
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1542
#1:	       ldga	._.str834 -> r0 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1542
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1542
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1542
#1:	       ldm.f	r0, 4           ; vfprintf.c:1542
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1542
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1542
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1542
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1542
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB6_312        ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	2               ; vfprintf.c:1542
	;;
; BB#311:                               ; %bb238.bb242_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1542
#1:	       br	.BB6_314
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1542
	;;
	       nop	0
	;;
.BB6_312:                               ; %bb239
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1542
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1542
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1542
	;;                              ; vfprintf.c:1542
	       nop	3               ; vfprintf.c:1542
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1542
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#313:                               ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_314:                               ; %bb239.bb242_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 268        ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1543
#1:	       ldm.s	r14, 80         ; vfprintf.c:1543
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1543
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1543
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1543
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1543
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1543
	;;
#0:	if !c1 br	.BB6_420
	;;
	       nop	2
	;;
; BB#315:                               ; %bb245
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1544
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 68         ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1544
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1544
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1544
#1:	       ldm.f	r1, 4           ; vfprintf.c:1544
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1544
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1544
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1544
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1544
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB6_317        ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	2               ; vfprintf.c:1544
	;;
; BB#316:                               ; %bb245.bb249_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1544
#1:	       br	.BB6_319
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1544
	;;
	       nop	0
	;;
.BB6_317:                               ; %bb246
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1544
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1544
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1544
	;;                              ; vfprintf.c:1544
	       nop	3               ; vfprintf.c:1544
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1544
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#318:                               ; %bb246.bb249_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_319:                               ; %bb246.bb249_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r10
#1:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB6_325
	;;
	       nop	2
	;;
#0:	       br	.BB6_420
	;;
	       nop	2
	;;
.BB6_320:                               ; %bb250
                                        ;   in Loop: Header=BB6_325 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
#1:	       ldm.f	r0, 4           ; vfprintf.c:1545
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1545
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB6_322        ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	2               ; vfprintf.c:1545
	;;
; BB#321:                               ; %bb250.bb254_crit_edge
                                        ;   in Loop: Header=BB6_325 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
#1:	       br	.BB6_324
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1545
	;;
	       nop	0
	;;
.BB6_322:                               ; %bb251
                                        ;   in Loop: Header=BB6_325 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1545
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1545
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	3               ; vfprintf.c:1545
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#323:                               ; %bb251.bb254_crit_edge
                                        ;   in Loop: Header=BB6_325 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_324:                               ; %bb251.bb254_crit_edge
                                        ;   in Loop: Header=BB6_325 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_325:                               ; %bb255
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1545
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_320        ; vfprintf.c:1545
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1545
	;;                              ; vfprintf.c:1545
	       nop	1               ; vfprintf.c:1545
	;;
.BB6_326:                               ; %bb256
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1545
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1545
#1:	       ldm.f	r0, 4           ; vfprintf.c:1545
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1545
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1545
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1545
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1545
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1545
	;;
#0:	if  c1 br	.BB6_417
	;;
	       nop	2
	;;
; BB#327:                               ; %bb256.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1545
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1545
	;;
.BB6_328:                               ; %bb284.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1552
#1:	       br	.BB6_419
	;;
	       nop	2
	;;
.BB6_329:                               ; %bb260
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1547
#1:	       ldi	0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1547
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1547
	;;
#0:	if  c1 br	.BB6_351        ; vfprintf.c:1547
	;;                              ; vfprintf.c:1547
	       nop	2               ; vfprintf.c:1547
	;;
; BB#330:                               ; %bb261
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1548
#1:	       ldga	._.str834 -> r0 ; vfprintf.c:1542
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1548
	;;
#0:	       stm.a	1, r1, 1        ; vfprintf.c:1548
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1548
#1:	       ldm.f	r0, 4           ; vfprintf.c:1548
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1548
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1548
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1548
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1548
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1548
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB6_332        ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	2               ; vfprintf.c:1548
	;;
; BB#331:                               ; %bb261.bb265_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1548
#1:	       br	.BB6_334
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1548
	;;
	       nop	0
	;;
.BB6_332:                               ; %bb262
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1548
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1548
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1548
	;;                              ; vfprintf.c:1548
	       nop	3               ; vfprintf.c:1548
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1548
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#333:                               ; %bb262.bb265_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_334:                               ; %bb262.bb265_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
#0:	       ldm.s	r14, 268        ; vfprintf.c:1549
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1549
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1549
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1549
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1549
	;;
#0:	if !c1 br	.BB6_420
	;;
	       nop	2
	;;
; BB#335:                               ; %bb269
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1550
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 68         ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1550
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1550
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1550
#1:	       ldm.f	r1, 4           ; vfprintf.c:1550
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1550
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1550
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1550
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1550
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1550
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB6_337        ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	2               ; vfprintf.c:1550
	;;
; BB#336:                               ; %bb269.bb273_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1550
#1:	       br	.BB6_339
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1550
	;;
	       nop	0
	;;
.BB6_337:                               ; %bb270
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1550
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1550
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1550
	;;                              ; vfprintf.c:1550
	       nop	3               ; vfprintf.c:1550
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1550
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#338:                               ; %bb270.bb273_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_339:                               ; %bb273
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1551
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       sub	r2, r1 -> r10   ; vfprintf.c:1551
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB6_345
	;;
	       nop	2
	;;
#0:	       br	.BB6_350
	;;
	       nop	2
	;;
.BB6_340:                               ; %bb274
                                        ;   in Loop: Header=BB6_345 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r1, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB6_342        ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#341:                               ; %bb274.bb278_crit_edge
                                        ;   in Loop: Header=BB6_345 Depth=2
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1551
#1:	       br	.BB6_344
	;;
	       nop	2
	;;
.BB6_342:                               ; %bb275
                                        ;   in Loop: Header=BB6_345 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1551
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1551
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#343:                               ; %bb275.bb278_crit_edge
                                        ;   in Loop: Header=BB6_345 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_344:                               ; %bb278
                                        ;   in Loop: Header=BB6_345 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB6_345:                               ; %bb279
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1551
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_340        ; vfprintf.c:1551
#1:	       stm.a	r1, r0, 0       ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#346:                               ; %bb280
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1551
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1551
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1551
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1551
#1:	       ldm.f	r1, 4           ; vfprintf.c:1551
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1551
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1551
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1551
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1551
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB6_348        ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	2               ; vfprintf.c:1551
	;;
; BB#347:                               ; %bb280.bb284_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1551
#1:	       br	.BB6_350
	;;
	       nop	2
	;;
.BB6_348:                               ; %bb281
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1551
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1551
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1551
	;;                              ; vfprintf.c:1551
	       nop	3               ; vfprintf.c:1551
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1551
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#349:                               ; %bb281.bb284_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_350:                               ; %bb284
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1552
#1:	       br	.BB6_416
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1552
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1552
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1552
	;;
.BB6_351:                               ; %bb288
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.s	r14, 80         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:1556
#1:	       or	r0, 0 -> r10
#2:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r1, 0 -> r10
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB6_357
	;;
	       nop	2
	;;
; BB#352:                               ; %bb292
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1556
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#0:	       add	r1, r10 -> r1   ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_354        ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#353:                               ; %bb292.bb296_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB6_356
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB6_354:                               ; %bb293
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#355:                               ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_356:                               ; %bb293.bb296_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_357:                               ; %bb296
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 84         ; vfprintf.c:1556
#1:	       cmplt	r10, 0 -> c1
#2:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       sub	r1, r10 -> r1   ; vfprintf.c:1556
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if !c1 br	.BB6_370
	;;
	       nop	2
	;;
; BB#358:                               ; %bb304.preheader
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 84
	;;
#0:	       xor	r0, -1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       xor	r1, -1 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       xor	r2, -1 -> r0
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB6_364
#1:	       cmplt	r2, r0 -> c1
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       sub	r1, r2 -> r10
	;;
#0:	       or	r10, 0 -> r13
#2:	       or	r10, 0 -> r2.23
	;;
.BB6_359:                               ; %bb299
                                        ;   in Loop: Header=BB6_364 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_361        ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#360:                               ; %bb299.bb303_crit_edge
                                        ;   in Loop: Header=BB6_364 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB6_363
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB6_361:                               ; %bb300
                                        ;   in Loop: Header=BB6_364 Depth=2
#0:	       ldiu	224 -> r2
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r2, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#362:                               ; %bb300.bb303_crit_edge
                                        ;   in Loop: Header=BB6_364 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_363:                               ; %bb300.bb303_crit_edge
                                        ;   in Loop: Header=BB6_364 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
#2:	       sub	r13, 16 -> r13
	;;
#2:	       sub	r2.23, 16 -> r2.23
	;;
.BB6_364:                               ; %bb304
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1556
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_359        ; vfprintf.c:1556
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	1               ; vfprintf.c:1556
	;;
; BB#365:                               ; %bb305
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       stm.a	r13, r0, 1      ; vfprintf.c:1556
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1556
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1556
#1:	       ldm.f	r0, 4           ; vfprintf.c:1556
	;;
#2:	       add	r1, r2.23 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1556
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1556
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_367        ; vfprintf.c:1556
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	2               ; vfprintf.c:1556
	;;
; BB#366:                               ; %bb305.bb309_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1556
#1:	       br	.BB6_369
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1556
	;;
	       nop	0
	;;
.BB6_367:                               ; %bb306
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1556
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1556
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1556
	;;                              ; vfprintf.c:1556
	       nop	3               ; vfprintf.c:1556
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1556
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#368:                               ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_369:                               ; %bb306.bb309_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_370:                               ; %bb309
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1577
#1:	       ldm.s	r14, 84         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1558
#1:	       ldm.s	r14, 96         ; vfprintf.c:1558
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1558
	;;
#0:	       add	r1, r2 -> r1    ; vfprintf.c:1558
	;;
#0:	       stm.s	r1, r14, 27     ; vfprintf.c:1577
	;;
#0:	       ldm.s	r14, 80         ; vfprintf.c:1577
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1577
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1577
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1577
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1577
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; vfprintf.c:1577
	;;
#0:	if !c1 br	.BB6_376
	;;
	       nop	2
	;;
; BB#371:                               ; %bb312
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1578
#1:	       ldga	._.str65 -> r0  ; vfprintf.c:1544
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 68         ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1578
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1578
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1578
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1578
#1:	       ldm.f	r1, 4           ; vfprintf.c:1578
	;;
#0:	       add	r2, r0 -> r0    ; vfprintf.c:1578
#1:	       ldi	7 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1578
#1:	       stm.a	r0, r1, 2       ; vfprintf.c:1578
	;;
#0:	       add	r3, 1 -> r0     ; vfprintf.c:1578
	;;
#0:	       cmplt	r2, r0 -> c1    ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB6_373        ; vfprintf.c:1578
#1:	       stm.a	r0, r1, 1       ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	2               ; vfprintf.c:1578
	;;
; BB#372:                               ; %bb312.bb316_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1578
#1:	       br	.BB6_375
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1578
	;;
	       nop	0
	;;
.BB6_373:                               ; %bb313
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1578
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1578
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1578
	;;                              ; vfprintf.c:1578
	       nop	3               ; vfprintf.c:1578
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1578
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#374:                               ; %bb313.bb316_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_375:                               ; %bb313.bb316_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_376:                               ; %bb316
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:1579
#1:	       ldm.s	r14, 96         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.s	r14, 80         ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r1, r0 -> r1    ; vfprintf.c:1579
#1:	       sub	r0, r10 -> r0   ; vfprintf.c:1579
	;;
#0:	       stm.s	r1, r14, 24     ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
	;;
#0:	       sub	r1, r2 -> r13   ; vfprintf.c:1579
#1:	       ldi	0 -> r2
	;;
#0:	       cmplt	r0, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if  c1 or	r0, 0 -> r13
	;;
#0:	       cmplt	r2, r13 -> c1   ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB6_382
	;;
	       nop	2
	;;
; BB#377:                               ; %bb320
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 108        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.s	r14, 120        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1579
	;;
#0:	       stm.a	r13, r0, 1      ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.f	r0, 4           ; vfprintf.c:1579
	;;
#0:	       add	r1, r13 -> r1   ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1579
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB6_379        ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#378:                               ; %bb320.bb324_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1579
#1:	       br	.BB6_381
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB6_379:                               ; %bb321
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r3
#1:	       ldm.s	r14, 100        ; vfprintf.c:1579
	;;
#0:	       add	r14, r3 -> r3
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1579
#1:	       add	r3, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#380:                               ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_381:                               ; %bb321.bb324_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_382:                               ; %bb324
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 268        ; vfprintf.c:1579
#1:	       ldi	0 -> r2
#2:	       cmplt	r13, 0 -> c1
	;;
#0:	       sub	r2, r13 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
#1:	       ldm.s	r14, 80         ; vfprintf.c:1579
#2:	if  c1 or	r2, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1579
	;;
#0:	       sub	r3, r0 -> r3    ; vfprintf.c:1579
	;;
#0:	       add	r3, r1 -> r1
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if !c1 br	.BB6_420
	;;
	       nop	2
	;;
; BB#383:                               ; %bb332.preheader
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 108
#1:	       sub	r10, 1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 80
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 96
	;;
#0:	       sub	r1, r3 -> r1
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       sub	r2, r4 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1
	;;
#0:	       br	.BB6_389
#1:	if  c1 or	r1, 0 -> r2
#2:	       ldi	-1 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1
#1:	       add	r3, r2 -> r3
	;;
#0:	       sub	r3, r0 -> r0
#1:	if  c1 or	r2, 0 -> r1
	;;
#0:	       sub	r0, r1 -> r10
	;;
.BB6_384:                               ; %bb327
                                        ;   in Loop: Header=BB6_389 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1579
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
#1:	       ldm.f	r0, 4           ; vfprintf.c:1579
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1579
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1579
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1579
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1579
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1579
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB6_386        ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	2               ; vfprintf.c:1579
	;;
; BB#385:                               ; %bb327.bb331_crit_edge
                                        ;   in Loop: Header=BB6_389 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1579
#1:	       br	.BB6_388
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1579
	;;
	       nop	0
	;;
.BB6_386:                               ; %bb328
                                        ;   in Loop: Header=BB6_389 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1579
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1579
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1579
	;;                              ; vfprintf.c:1579
	       nop	3               ; vfprintf.c:1579
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1579
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#387:                               ; %bb328.bb331_crit_edge
                                        ;   in Loop: Header=BB6_389 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_388:                               ; %bb328.bb331_crit_edge
                                        ;   in Loop: Header=BB6_389 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_389:                               ; %bb332
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1579
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1579
#1:	       ldga	_zeroes.3635 -> r0 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_384
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1579
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1579
	;;
	       nop	1
	;;
#0:	       br	.BB6_326
	;;
	       nop	2
	;;
.BB6_390:                               ; %bb337
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 80         ; vfprintf.c:1583
#1:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1583
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1583
	;;
#0:	if !c1 ldm.s	r14, 124        ; vfprintf.c:1583
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1583
	;;
#0:	if !c1 btest	r0, 0 -> c1     ; vfprintf.c:1583
	;;
#0:	if !c1 br	.BB6_411
	;;
	       nop	2
	;;
; BB#391:                               ; %bb340
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
#1:	       ldm.s	r14, 120        ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1584
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1584
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1584
#1:	       ldm.f	r0, 4           ; vfprintf.c:1584
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1584
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1584
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1584
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1584
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1584
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB6_393        ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	2               ; vfprintf.c:1584
	;;
; BB#392:                               ; %bb340.bb344_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1584
#1:	       br	.BB6_395
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1584
	;;
	       nop	0
	;;
.BB6_393:                               ; %bb341
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1584
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1584
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1584
	;;                              ; vfprintf.c:1584
	       nop	3               ; vfprintf.c:1584
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1584
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#394:                               ; %bb341.bb344_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_395:                               ; %bb344
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldga	._.str65 -> r1  ; vfprintf.c:1544
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 68         ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1586
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1586
	;;
#0:	       ldm.s	r14, 96         ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1585
#1:	       ldm.s	r14, 104        ; vfprintf.c:1586
	;;
#0:	       add	r2, 1 -> r10    ; vfprintf.c:1585
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1586
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1586
#1:	       ldm.f	r2, 4           ; vfprintf.c:1586
	;;
#0:	       add	r3, r1 -> r1    ; vfprintf.c:1586
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1586
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1586
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1586
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1586
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB6_397        ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	2               ; vfprintf.c:1586
	;;
; BB#396:                               ; %bb344.bb348_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1586
#1:	       br	.BB6_399
	;;
	       nop	2
	;;
.BB6_397:                               ; %bb345
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1586
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1586
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1586
	;;                              ; vfprintf.c:1586
	       nop	3               ; vfprintf.c:1586
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1586
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#398:                               ; %bb345.bb348_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_399:                               ; %bb348
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       fop	dcmp	d6, d5 -> f0 ; vfprintf.c:1587
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r1       ; vfprintf.c:1587
	;;
#0:	       btest	r1, 0 -> c1     ; vfprintf.c:1587
	;;
#0:	if  c1 br	.BB6_402        ; vfprintf.c:1587
	;;                              ; vfprintf.c:1587
	       nop	2               ; vfprintf.c:1587
	;;
; BB#400:                               ; %bb349
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       stm.a	r10, r0, 0      ; vfprintf.c:1588
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1588
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1588
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1588
#1:	       ldm.f	r2, 4           ; vfprintf.c:1588
	;;
#0:	       add	r1, r3 -> r1    ; vfprintf.c:1588
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1588
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1588
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1588
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1588
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1588
	;;
#0:	if  c1 br	.BB6_413
	;;
	       nop	2
	;;
; BB#401:                               ; %bb349.bb368_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1588
#1:	       br	.BB6_415
	;;
	       nop	2
	;;
.BB6_402:                               ; %bb353
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 80
#1:	       ldi	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r10
	;;
#0:	       cmplt	r2, r10 -> c1   ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB6_408
	;;
	       nop	2
	;;
#0:	       br	.BB6_415
	;;
	       nop	2
	;;
.BB6_403:                               ; %bb354
                                        ;   in Loop: Header=BB6_408 Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r1, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, 16 -> r2    ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB6_405        ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#404:                               ; %bb354.bb358_crit_edge
                                        ;   in Loop: Header=BB6_408 Depth=2
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1591
#1:	       br	.BB6_407
	;;
	       nop	2
	;;
.BB6_405:                               ; %bb355
                                        ;   in Loop: Header=BB6_408 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1591
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1591
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	3               ; vfprintf.c:1591
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#406:                               ; %bb355.bb358_crit_edge
                                        ;   in Loop: Header=BB6_408 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_407:                               ; %bb358
                                        ;   in Loop: Header=BB6_408 Depth=2
#0:	       sub	r10, 16 -> r10
	;;
.BB6_408:                               ; %bb359
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; vfprintf.c:1591
#1:	       ldga	_zeroes.3635 -> r1 ; vfprintf.c:1529
	;;
#0:	if  c1 br	.BB6_403        ; vfprintf.c:1591
#1:	       stm.a	r1, r0, 0       ; vfprintf.c:1591
	;;                              ; vfprintf.c:1591
	       nop	2               ; vfprintf.c:1591
	;;
; BB#409:                               ; %bb360
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1591
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1591
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1591
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1591
#1:	       ldm.f	r1, 4           ; vfprintf.c:1591
	;;
#0:	       add	r2, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1591
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:1591
	;;
#0:	       add	r3, 1 -> r2     ; vfprintf.c:1591
	;;
#0:	       stm.a	r2, r1, 1       ; vfprintf.c:1591
#1:	       ldi	7 -> r1
	;;
#0:	       cmplt	r1, r2 -> c1    ; vfprintf.c:1591
	;;
#0:	if  c1 br	.BB6_413
	;;
	       nop	2
	;;
; BB#410:                               ; %bb360.bb368_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1591
#1:	       br	.BB6_415
	;;
	       nop	2
	;;
.BB6_411:                               ; %bb364
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 96         ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
#1:	       ldm.s	r14, 120        ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1593
	;;
#0:	       stm.a	1, r0, 1        ; vfprintf.c:1593
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1593
#1:	       ldm.f	r0, 4           ; vfprintf.c:1593
	;;
#0:	       add	r1, 1 -> r1     ; vfprintf.c:1593
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1593
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1593
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1593
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1593
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1593
	;;
#0:	if  c1 br	.BB6_413
	;;
	       nop	2
	;;
; BB#412:                               ; %bb364.bb368_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1593
#1:	       br	.BB6_415
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1593
	;;
	       nop	0
	;;
.BB6_413:                               ; %bb365
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1593
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1593
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1593
	;;                              ; vfprintf.c:1593
	       nop	3               ; vfprintf.c:1593
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1593
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#414:                               ; %bb365.bb368_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_415:                               ; %bb368
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	256 -> r5
	;;
#0:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 4 -> r1
	;;
#0:	       stm.a	r1, r0, 0       ; vfprintf.c:1594
	;;
#0:	       ldm.s	r14, 52         ; vfprintf.c:1594
	;;
.BB6_416:                               ; %bb368
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1594
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1594
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1594
	;;
#0:	       ldm.f	r2, 8           ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r3   ; vfprintf.c:1594
#1:	       ldm.f	r2, 4           ; vfprintf.c:1594
	;;
#0:	       add	r3, r1 -> r1    ; vfprintf.c:1594
	;;
#0:	       ldx	$mem, 0 -> r4   ; vfprintf.c:1594
#1:	       stm.a	r1, r2, 2       ; vfprintf.c:1594
	;;
#0:	       add	r4, 1 -> r1     ; vfprintf.c:1594
	;;
#0:	       stm.a	r1, r2, 1       ; vfprintf.c:1594
#1:	       ldi	7 -> r2
	;;
#0:	       cmplt	r2, r1 -> c1    ; vfprintf.c:1594
	;;
#0:	if !c1 br	.BB6_328
	;;
	       nop	2
	;;
.BB6_417:                               ; %bb370
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1594
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1594
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1594
	;;                              ; vfprintf.c:1594
	       nop	3               ; vfprintf.c:1594
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1594
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#418:                               ; %bb370.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_419:                               ; %bb370.bb373_crit_edge
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       stm.s	r0, r14, 30
	;;
.BB6_420:                               ; %bb373
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 124        ; vfprintf.c:1601
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1601
	;;
#0:	       btest	r0, 2 -> c1     ; vfprintf.c:1601
	;;
#0:	if !c1 br	.BB6_430
	;;
	       nop	2
	;;
; BB#421:                               ; %bb374
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       sub	r12, r0 -> r10  ; vfprintf.c:1602
	;;
#0:	       cmplt	r10, 1 -> c1    ; vfprintf.c:1602
	;;
#0:	if !c1 br	.BB6_427
	;;
	       nop	2
	;;
#0:	       br	.BB6_430
	;;
	       nop	2
	;;
.BB6_422:                               ; %bb375
                                        ;   in Loop: Header=BB6_427 Depth=2
#0:	       ldi	16 -> r0
	;;
#0:	       stm.a	r0, r1, 1       ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
#1:	       ldm.f	r0, 4           ; vfprintf.c:1602
	;;
#0:	       add	r1, 16 -> r1    ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1602
	;;
#0:	       stm.a	r1, r0, 1       ; vfprintf.c:1602
#1:	       ldi	7 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB6_424        ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	2               ; vfprintf.c:1602
	;;
; BB#423:                               ; %bb375.bb379_crit_edge
                                        ;   in Loop: Header=BB6_427 Depth=2
#0:	       ldm.s	r14, 120        ; vfprintf.c:1602
#1:	       br	.BB6_426
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       add	r0, 8 -> r0     ; vfprintf.c:1602
	;;
	       nop	0
	;;
.BB6_424:                               ; %bb376
                                        ;   in Loop: Header=BB6_427 Depth=2
#0:	       ldiu	224 -> r13
#1:	       ldm.s	r14, 100        ; vfprintf.c:1602
	;;
#0:	       add	r14, r13 -> r13
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1602
#1:	       add	r13, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
; BB#425:                               ; %bb376.bb379_crit_edge
                                        ;   in Loop: Header=BB6_427 Depth=2
#0:	       ldiu	160 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 20 -> r0
	;;
.BB6_426:                               ; %bb376.bb379_crit_edge
                                        ;   in Loop: Header=BB6_427 Depth=2
#0:	       sub	r10, 16 -> r10
#1:	       stm.s	r0, r14, 30
	;;
.BB6_427:                               ; %bb380
                                        ;   Parent Loop BB6_28 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldi	16 -> r0
#1:	       ldm.s	r14, 120        ; vfprintf.c:1602
	;;
#0:	       cmplt	r0, r10 -> c1   ; vfprintf.c:1602
#1:	       ldga	_blanks.3634 -> r0 ; vfprintf.c:1519
	;;
#0:	if  c1 br	.BB6_422        ; vfprintf.c:1602
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
	;;
#0:	       stm.a	r0, r1, 0       ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	1               ; vfprintf.c:1602
	;;
; BB#428:                               ; %bb381
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 120        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       stm.a	r10, r0, 1      ; vfprintf.c:1602
	;;
#0:	       ldm.s	r14, 104        ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1602
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1602
#1:	       ldm.f	r0, 4           ; vfprintf.c:1602
	;;
#0:	       add	r1, r10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:1602
#1:	       stm.a	r1, r0, 2       ; vfprintf.c:1602
	;;
#0:	       add	r2, 1 -> r1     ; vfprintf.c:1602
	;;
#0:	       cmplt	r1, 8 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB6_430
#1:	       stm.a	r1, r0, 1       ; vfprintf.c:1602
	;;
	       nop	2
	;;
; BB#429:                               ; %bb382
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1602
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1602
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1602
	;;                              ; vfprintf.c:1602
	       nop	3               ; vfprintf.c:1602
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1602
	;;
#0:	if  c1 br	.BB6_436
	;;
	       nop	2
	;;
.BB6_430:                               ; %bb385
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 112        ; vfprintf.c:1605
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605
#1:	       ldm.s	r14, 104        ; vfprintf.c:1607
	;;
#0:	       cmple	r12, r0 -> c1   ; vfprintf.c:1605
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
#1:	if  c1 or	r0, 0 -> r12    ; vfprintf.c:1605
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:1607
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:1607
#1:	       ldm.s	r14, 88         ; vfprintf.c:1605
	;;
#0:	       cmpeq	r1, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if  c1 br	.BB6_432
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1605
	;;
#0:	       add	r12, r0 -> r0   ; vfprintf.c:1605
	;;
#0:	       stm.s	r0, r14, 22     ; vfprintf.c:1607
	;;
	       nop	0
	;;
; BB#431:                               ; %bb388
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1607
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1607
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1607
	;;                              ; vfprintf.c:1607
	       nop	3               ; vfprintf.c:1607
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1607
	;;
#0:	if !c1 br	.BB6_436
	;;
	       nop	2
	;;
.BB6_432:                               ; %bb389
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       ldm.s	r14, 104        ; vfprintf.c:1607
#1:	       br	.BB6_28
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1607
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1607
	;;
#0:	       stm.s	r11, r14, 31
	;;
.BB6_433:                               ; %done
#0:	       ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       ldm.f	r0, 8           ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if  c1 br	.BB6_435
	;;
	       nop	2
	;;
; BB#434:                               ; %bb392
#0:	       ldiu	224 -> r10
#1:	       ldm.s	r14, 100        ; vfprintf.c:1615
	;;
#0:	       add	r14, r10 -> r10
	;;
#0:	       callg	___sprint_r     ; vfprintf.c:1615
#1:	       add	r10, 20 -> r1
#2:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;                              ; vfprintf.c:1615
	       nop	3               ; vfprintf.c:1615
	;;
#0:	       br	.BB6_436
#1:	       cmpne	r0, 0 -> c1     ; vfprintf.c:1615
	;;
#0:	if !c1 ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	if !c1 stm.a	0, r0, 1        ; vfprintf.c:1615
	;;
.BB6_435:                               ; %bb393
#0:	       ldm.s	r14, 104        ; vfprintf.c:1615
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:1615
	;;
#0:	       stm.a	0, r0, 1        ; vfprintf.c:1615
	;;
.BB6_436:                               ; %bb396
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, 12
#1:	       ldga	___mem_emergency -> r0
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stm.a	r1.31, r0, 0
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       br	.BB6_23
#1:	       ldx	$memhu, r0 -> r1
#2:	       ldm.s	r14, 88
#3:	       ldi	-1 -> r0
	;;
#0:	       btest	r1, 6 -> c1
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	if !c1 or	r1, 0 -> r0
	;;
.BB6_437:                               ; %bb400
#0:	       ldi	-1 -> r0
#1:	       br	.BB6_26
	;;
	       nop	2
	;;
.BB6_438:                               ; %bb167
                                        ;   in Loop: Header=BB6_28 Depth=1
#0:	       s2add	r0, 12 -> r0    ; vfprintf.c:1425
#1:	       br	.BB6_249
	;;
	       nop	2
	;;
	.align	4
__vfprintf_r_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI6_0:
	.long	.BB6_47-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_50-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_51-__vfprintf_r_start
	.long	.BB6_54-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_53-__vfprintf_r_start
	.long	.BB6_55-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_64-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_66-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_73-__vfprintf_r_start
	.long	.BB6_82-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_82-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_69-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_184-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_208-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_213-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_72-__vfprintf_r_start
	.long	.BB6_74-__vfprintf_r_start
	.long	.BB6_82-__vfprintf_r_start
	.long	.BB6_82-__vfprintf_r_start
	.long	.BB6_82-__vfprintf_r_start
	.long	.BB6_70-__vfprintf_r_start
	.long	.BB6_74-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_71-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_178-__vfprintf_r_start
	.long	.BB6_185-__vfprintf_r_start
	.long	.BB6_189-__vfprintf_r_start
	.long	.BB6_71-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_190-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_209-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_43-__vfprintf_r_start
	.long	.BB6_46-__vfprintf_r_start

	.text
	.align	4
__cleanup_r:                            ; @_cleanup_r
	.size	__cleanup_r_end-__cleanup_r
__cleanup_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 9
#1:	       ldiu	36 -> r2
#2:	       ldi	736 -> r1
	;;
#0:	       sub	r15, r2 -> r15
#2:	       ldx	$rb, 0 -> r2.31
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 8
#1:	       add	r0, r1 -> r10   ; fwalk.c:47[ findfp.c:165 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; fwalk.c:47[ findfp.c:165 ]
#1:	       stm.s	r11, r14, 7
	;;
#0:	if  c1 br	.BB7_20
#1:	       stm.s	r12, r14, 6
	;;
#0:	       stm.s	r13, r14, 5
	;;
#2:	       stm.s	r2.23, r14, 4
	;;
	       nop	0
	;;
; BB#1:                                 ; %entry.bb.i_crit_edge
#0:	       ldi	-1 -> r11
	;;
.BB7_2:                                 ; %bb.i
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB7_4 Depth 2
#0:	       ldm.f	r10, 4          ; fwalk.c:48[ findfp.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; fwalk.c:48[ findfp.c:165 ]
	;;
#0:	       sub	r12, 1 -> r0
	;;
#0:	       cmplt	r0, 0 -> c1     ; fwalk.c:48[ findfp.c:165 ]
	;;
#0:	if  c1 br	.BB7_19
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb.nph.i
                                        ;   in Loop: Header=BB7_2 Depth=1
#0:	       ldm.f	r10, 8          ; fwalk.c:48[ findfp.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; fwalk.c:48[ findfp.c:165 ]
	;;
.BB7_4:                                 ; %bb1.i
                                        ;   Parent Loop BB7_2 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r13, 12         ; fwalk.c:49[ findfp.c:165 ]
#2:	       add	r13, 12 -> r2.23
	;;
#2:	       ldx	$memhu, r2.23 -> r0 ; fwalk.c:49[ findfp.c:165 ]
	;;
#0:	       cmpult	r0, 2 -> c1     ; fwalk.c:49[ findfp.c:165 ]
	;;
#0:	if !c1 ldm.f	r13, 14         ; fwalk.c:51[ findfp.c:165 ]
#1:	if !c1 add	r13, 14 -> r0
#2:	if !c1 ldiu	2047 -> r1
	;;
#0:	if !c1 ldim	31 -> r1
	;;
#0:	if !c1 ldx	$memhu, r0 -> r0 ; fwalk.c:51[ findfp.c:165 ]
	;;
#0:	if !c1 cmpeq	r0, r1 -> c1    ; fwalk.c:51[ findfp.c:165 ]
	;;
#0:	if  c1 br	.BB7_18
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb1.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldmg.d	_impure_data+56 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_7
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb4.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       callg	___sinit        ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldm.f	r13, 12
	;;
#2:	       ldx	$memhu, r2.23 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fclose.c:81[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_18
	;;
	       nop	2
	;;
.BB7_7:                                 ; %bb6.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       callg	__fflush_r      ; fclose.c:89[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#2:	       or	r13, 0 -> r1    ; fclose.c:89[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:89[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:89[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldm.f	r13, 44         ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       cmpeq	r2, 0 -> c1     ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_9
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb7.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldm.f	r13, 28         ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       call	r2              ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       cmplt	r11, r0 -> c1   ; fclose.c:90[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_9:                                 ; %bb9.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldm.f	r13, 12
	;;
#2:	       ldx	$memhu, r2.23 -> r0
	;;
#0:	       btest	r0, 7 -> c1     ; fclose.c:92[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if !c1 br	.BB7_11
	;;
	       nop	2
	;;
; BB#10:                                ; %bb10.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldm.f	r13, 16         ; fclose.c:93[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       callg	__free_r        ; fclose.c:93[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       ldx	$mem, 0 -> r1   ; fclose.c:93[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:93[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:93[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_11:                                ; %bb11.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldm.f	r13, 48         ; fclose.c:94[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:94[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fclose.c:94[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_15
	;;
	       nop	2
	;;
; BB#12:                                ; %bb12.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       s2add	r13, 16 -> r0
	;;
#0:	       cmpeq	r0, r1 -> c1    ; fclose.c:95[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_14
	;;
	       nop	2
	;;
; BB#13:                                ; %bb13.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       callg	__free_r        ; fclose.c:95[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:95[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:95[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_14:                                ; %bb14.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       stm.a	0, r13, 12      ; fclose.c:95[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_15:                                ; %bb15.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldm.f	r13, 68         ; fclose.c:96[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fclose.c:96[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fclose.c:96[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	if  c1 br	.BB7_17
	;;
	       nop	2
	;;
; BB#16:                                ; %bb16.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       ldga	_impure_data -> r0 ; fclose.c:77[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
#1:	       callg	__free_r        ; fclose.c:97[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;                              ; fclose.c:97[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	       nop	3               ; fclose.c:97[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
#0:	       stm.a	0, r13, 17      ; fclose.c:97[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_17:                                ; %bb17.i.i.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       stmh.a	0, r13, 6       ; fclose.c:99[ fclose.c:116[ fwalk.c:52[ findfp.c:165 ] ] ]
	;;
.BB7_18:                                ; %bb5.i
                                        ;   in Loop: Header=BB7_4 Depth=2
#0:	       sub	r12, 1 -> r12
#1:	       s2add	r13, 26 -> r13
	;;
#0:	       cmpne	r12, 0 -> c1    ; fwalk.c:48[ findfp.c:165 ]
	;;
#0:	if  c1 br	.BB7_4
	;;
	       nop	2
	;;
.BB7_19:                                ; %bb7.i
                                        ;   in Loop: Header=BB7_2 Depth=1
#0:	       ldm.f	r10, 0          ; fwalk.c:47[ findfp.c:165 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; fwalk.c:47[ findfp.c:165 ]
	;;
#0:	       cmpne	r10, 0 -> c1    ; fwalk.c:47[ findfp.c:165 ]
	;;
#0:	if  c1 br	.BB7_2
	;;
	       nop	2
	;;
.BB7_20:                                ; %_fwalk.exit
#0:	       ldm.s	r14, 16         ; findfp.c:167
#1:	       or	r14, 0 -> r15   ; findfp.c:167
	;;
#2:	       ldx	$mem, 0 -> r2.23 ; findfp.c:167
#0:	       ldm.s	r14, 20         ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r13  ; findfp.c:167
#1:	       ldm.s	r14, 24         ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:167
#1:	       ldm.s	r14, 28         ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:167
#1:	       ldm.s	r14, 32         ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:167
#1:	       ldm.s	r15, 8          ; findfp.c:167
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; findfp.c:167
#1:	       ldm.s	r15, 4          ; findfp.c:167
	;;
#0:	       stx	r0.31 -> $ro    ; findfp.c:167
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; findfp.c:167
#0:	       ldm.s	r15, 0          ; findfp.c:167
#2:	       s2add	r15, 9 -> r15   ; findfp.c:167
	;;
#1:	       stx	r1.31 -> $rb    ; findfp.c:167
	;;
#0:	       ret                      ; findfp.c:167
#1:	       ldx	$mem, 0 -> r14  ; findfp.c:167
	;;                              ; findfp.c:167
	       nop	3               ; findfp.c:167
	;;
	.align	4
__cleanup_r_end:

	.align	4
___sinit:                               ; @__sinit
	.size	___sinit_end-___sinit
___sinit_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 7          ; findfp.c:187
#1:	       ldiu	28 -> r2        ; findfp.c:187
	;;
#0:	       sub	r15, r2 -> r15  ; findfp.c:187
#2:	       ldx	$rb, 0 -> r2.31 ; findfp.c:187
	;;
#3:	       ldx	$ro, 0 -> r3.31 ; findfp.c:187
	;;
#0:	       stm.s	r14, r15, 0     ; findfp.c:187
#1:	       or	r15, 0 -> r14   ; findfp.c:187
	;;
#2:	       stm.s	r2.31, r15, 1   ; findfp.c:187
	;;
#3:	       stm.s	r3.31, r15, 2   ; findfp.c:187
	;;
#0:	       stm.s	r10, r14, 6     ; findfp.c:187
	;;
#0:	       stm.s	r11, r14, 5     ; findfp.c:187
	;;
#0:	       stm.s	r12, r14, 4     ; findfp.c:187
	;;
#0:	       ldm.f	r0, 56          ; findfp.c:187
	;;
#0:	       ldx	$mem, 0 -> r1   ; findfp.c:187
	;;
#0:	       cmpeq	r1, 0 -> c1     ; findfp.c:187
	;;
#0:	if  c1 br	.BB8_3          ; findfp.c:187
	;;                              ; findfp.c:187
	       nop	2               ; findfp.c:187
	;;
; BB#1:                                 ; %bb
#0:	       ldm.s	r14, 16         ; findfp.c:227
#1:	       or	r14, 0 -> r15   ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:227
#1:	       ldm.s	r14, 20         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:227
#1:	       ldm.s	r14, 24         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:227
#1:	       ldm.s	r15, 8          ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; findfp.c:227
#1:	       ldm.s	r15, 4          ; findfp.c:227
	;;
#0:	       stx	r0.31 -> $ro    ; findfp.c:227
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; findfp.c:227
	;;
#1:	       stx	r1.31 -> $rb    ; findfp.c:227
	;;
.BB8_2:                                 ; %bb
#0:	       ldm.s	r15, 0          ; findfp.c:227
#1:	       s2add	r15, 7 -> r15   ; findfp.c:227
	;;
#0:	       ret                      ; findfp.c:227
#1:	       ldx	$mem, 0 -> r14  ; findfp.c:227
	;;                              ; findfp.c:227
	       nop	3               ; findfp.c:227
	;;
.BB8_3:                                 ; %bb1
#0:	       or	r0, 0 -> r10
#1:	       ldi	736 -> r0
#2:	       ldi	740 -> r1
#3:	       ldi	748 -> r2
	;;
#0:	       ldm.f	r10, 4          ; findfp.c:209
#1:	       add	r10, r0 -> r0
#2:	       add	r10, r1 -> r1
#3:	       ldi	744 -> r3
	;;
#1:	       add	r10, r2 -> r2
#2:	       add	r10, r3 -> r3
#0:	       ldga	__cleanup_r -> r0.16 ; findfp.c:194
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:209
#1:	       stm.a	0, r0, 0        ; findfp.c:197
	;;
#0:	       s2add	r11, 23 -> r0
	;;
#0:	       stm.a	3, r1, 0        ; findfp.c:199
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r3, 0       ; findfp.c:200
	;;
#0:	       stm.a	r0.16, r10, 15  ; findfp.c:194
	;;
#0:	       stm.a	1, r10, 14      ; findfp.c:195
	;;
#0:	       stm.a	0, r11, 4
	;;
#0:	       stmh.a	0, r11, 7
	;;
#0:	       stm.a	0, r11, 25
	;;
#0:	       stmh.a	4, r11, 6
	;;
#0:	       stm.a	0, r11, 2
	;;
#0:	       stm.a	0, r11, 0
	;;
#0:	       stm.a	0, r11, 1
	;;
#0:	       stm.a	0, r11, 5
	;;
#0:	       stm.a	0, r11, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r11, 11
	;;
#0:	       stm.a	r1, r11, 10
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r11, 9
	;;
#0:	       stm.a	r11, r11, 7
	;;
#0:	       stm.a	r3, r11, 8
#1:	       ldi	18 -> r11
	;;
#0:	       ldm.f	r10, 8          ; findfp.c:220
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:220
	;;
#0:	       stm.a	0, r12, 4
#1:	       s2add	r12, 23 -> r0
	;;
#0:	       stmh.a	1, r12, 7
	;;
#0:	       stm.a	0, r12, 25
	;;
#0:	       stmh.a	9, r12, 6
	;;
#0:	       stm.a	0, r12, 2
	;;
#0:	       stm.a	0, r12, 0
	;;
#0:	       stm.a	0, r12, 1
	;;
#0:	       stm.a	0, r12, 5
	;;
#0:	       stm.a	0, r12, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r12, 11
	;;
#0:	       stm.a	r1, r12, 10
#1:	       ldi	8 -> r1
	;;
#0:	       stm.a	r2, r12, 9
	;;
#0:	       stm.a	r12, r12, 7
	;;
#0:	       stm.a	r3, r12, 8
	;;
#0:	       ldm.f	r10, 12         ; findfp.c:225
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:225
	;;
#0:	       stm.a	0, r10, 4
#1:	       s2add	r10, 23 -> r0
	;;
#0:	       stmh.a	2, r10, 7
	;;
#0:	       stm.a	0, r10, 25
	;;
#0:	       stmh.a	r11, r10, 6
	;;
#0:	       stm.a	0, r10, 2
	;;
#0:	       stm.a	0, r10, 0
	;;
#0:	       stm.a	0, r10, 1
	;;
#0:	       stm.a	0, r10, 5
	;;
#0:	       stm.a	0, r10, 6
	;;
#0:	       callg	_memset
	;;
	       nop	3
	;;
#0:	       ldga	___sclose -> r0
#1:	       ldga	___sseek -> r1
#2:	       ldga	___swrite -> r2
#3:	       ldga	___sread -> r3
	;;
#0:	       stm.a	r0, r10, 11
#1:	       or	r14, 0 -> r15   ; findfp.c:227
	;;
#0:	       stm.a	r1, r10, 10
	;;
#0:	       stm.a	r2, r10, 9
	;;
#0:	       stm.a	r10, r10, 7
	;;
#0:	       stm.a	r3, r10, 8
	;;
#0:	       ldm.s	r14, 16         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r12  ; findfp.c:227
#1:	       ldm.s	r14, 20         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r11  ; findfp.c:227
#1:	       ldm.s	r14, 24         ; findfp.c:227
	;;
#0:	       ldx	$mem, 0 -> r10  ; findfp.c:227
#1:	       ldm.s	r15, 8          ; findfp.c:227
	;;
#0:	       br	.BB8_2
#2:	       ldx	$mem, 0 -> r2.31 ; findfp.c:227
#1:	       ldm.s	r15, 4          ; findfp.c:227
	;;
#2:	       stx	r2.31 -> $ro    ; findfp.c:227
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; findfp.c:227
	;;
#3:	       stx	r3.31 -> $rb    ; findfp.c:227
	;;
	.align	4
___sinit_end:

	.align	4
___sprint_r:                            ; @__sprint_r
	.size	___sprint_r_end-___sprint_r
___sprint_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 15
#3:	       ldiu	60 -> r2
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 14
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 13
	;;
#0:	       stm.s	r12, r14, 12
	;;
#0:	       stm.s	r13, r14, 11
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:300
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:300
#1:	       stm.s	r1, r14, 4
	;;
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:300
	;;
#0:	if  c1 br	.BB9_3          ; vfprintf.c:300
	;;                              ; vfprintf.c:300
	       nop	2               ; vfprintf.c:300
	;;
; BB#1:                                 ; %bb
#0:	       stm.a	0, r1, 1        ; vfprintf.c:301
#1:	       or	r14, 0 -> r15   ; vfprintf.c:326
#2:	       ldi	0 -> r0
	;;
#0:	       ldm.s	r14, 44         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:326
#1:	       ldm.s	r14, 48         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:326
#1:	       ldm.s	r14, 52         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:326
#1:	       ldm.s	r14, 56         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:326
#1:	       ldm.s	r15, 8          ; vfprintf.c:326
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:326
#0:	       ldm.s	r15, 4          ; vfprintf.c:326
	;;
#2:	       stx	r2.31 -> $ro    ; vfprintf.c:326
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:326
	;;
#3:	       stx	r3.31 -> $rb    ; vfprintf.c:326
	;;
.BB9_2:                                 ; %bb
#0:	       ldm.s	r15, 0          ; vfprintf.c:326
#1:	       s2add	r15, 15 -> r15  ; vfprintf.c:326
	;;
#0:	       ret                      ; vfprintf.c:326
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:326
	;;                              ; vfprintf.c:326
	       nop	3               ; vfprintf.c:326
	;;
.BB9_3:                                 ; %bb1
#0:	       ldi	101 -> r1
#1:	       ldm.f	r10, 101        ; vfprintf.c:304
	;;
#0:	       add	r10, r1 -> r1   ; vfprintf.c:304
	;;
#0:	       ldx	$membu, r1 -> r1 ; vfprintf.c:304
	;;
#0:	       btest	r1, 5 -> c1     ; vfprintf.c:304
	;;
#0:	if !c1 br	.BB9_28         ; vfprintf.c:304
	;;                              ; vfprintf.c:304
	       nop	2               ; vfprintf.c:304
	;;
; BB#4:                                 ; %bb2
#0:	       ldm.s	r14, 16         ; vfprintf.c:309
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:309
	;;
#0:	       br	.BB9_26
#1:	       ldm.f	r1, 0           ; vfprintf.c:309
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:309
	;;
#0:	       add	r1, 4 -> r1
	;;
#0:	       stm.s	r1, r14, 6      ; vfprintf.c:309
	;;
.BB9_5:                                 ; %bb3
                                        ;   in Loop: Header=BB9_26 Depth=1
#0:	       ldm.s	r14, 24         ; vfprintf.c:313
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:313
	;;
#0:	       ldm.f	r0, 0           ; vfprintf.c:313
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:313
	;;
#0:	       stm.s	r1, r14, 5      ; vfprintf.c:312
	;;
#0:	       br	.BB9_24
#1:	       ldm.f	r0, -4          ; vfprintf.c:312
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:312
	;;
#0:	       stm.s	r0, r14, 8
#1:	       sr	r1, 2 -> r0
	;;
#0:	       stm.s	r0, r14, 7
#1:	       ldi	0 -> r0
	;;
.BB9_6:                                 ; %bb4
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       ldm.s	r14, 32
#1:	       or	r1, 0 -> r2
#2:	       add	r10, 12 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r10, 12         ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	       s2add	r1, r2 -> r1
	;;
#0:	       ldx	$memhu, r0 -> r2 ; fputwc.c:164[ vfprintf.c:315 ]
#1:	       ldm.f	r1, 0           ; vfprintf.c:315
	;;
#0:	       btest	r2, 13 -> c1    ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	if  c1 br	.BB9_8
#1:	       ldx	$mem, 0 -> r11  ; vfprintf.c:315
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb.i
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       ldm.f	r10, 100        ; fputwc.c:164[ vfprintf.c:315 ]
#1:	       ldga	8192 -> r3
	;;
#0:	       or	r2, r3 -> r2    ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	       or	r1, r3 -> r1    ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	       stm.a	r1, r10, 25     ; fputwc.c:164[ vfprintf.c:315 ]
	;;
#0:	       stmh.a	r2, r10, 6      ; fputwc.c:164[ vfprintf.c:315 ]
	;;
.BB9_8:                                 ; %bb1.i
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       sub	r11, 1 -> r1
#1:	       ldi	255 -> r2
	;;
#0:	       cmpult	r1, r2 -> c1    ; fputwc.c:129[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	if !c1 ldi	256 -> r1
	;;
#0:	if !c1 cmpult	r11, r1 -> c1
	;;
#0:	if  c1 br	.BB9_10
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb5.i.i
#0:	       ldi	138 -> r11
#1:	       ldga	_impure_data -> r1 ; wcrtomb.c:35[ fputwc.c:141[ fputwc.c:165[ vfprintf.c:315 ] ] ]
	;;
#0:	       stm.a	r11, r1, 0      ; wctomb_r.c:50[ wcrtomb.c:30[ fputwc.c:141[ fputwc.c:165[ vfprintf.c:315 ] ] ] ]
	;;
#0:	       stm.a	0, r10, 23      ; wcrtomb.c:34[ fputwc.c:141[ fputwc.c:165[ vfprintf.c:315 ] ] ]
	;;
#0:	       stm.a	r11, r1, 0      ; wcrtomb.c:35[ fputwc.c:141[ fputwc.c:165[ vfprintf.c:315 ] ] ]
#1:	       ldi	64 -> r1
	;;
#0:	       br	.BB9_29
#1:	       ldm.f	r10, 12         ; fputwc.c:143[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$memhu, r0 -> r11 ; fputwc.c:143[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       ldi	-1 -> r0
	;;
#0:	       or	r11, r1 -> r11  ; fputwc.c:143[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       stmh.a	r11, r10, 6     ; fputwc.c:143[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
.BB9_10:                                ; %bb6.i.i
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       s2add	r14, 8 -> r0
#1:	       ldi	0 -> r12
	;;
#0:	       add	r0, 8 -> r13
	;;
#0:	       stmb.a	r11, r13, 0
	;;
.BB9_11:                                ; %bb19.i.i
                                        ;   Parent Loop BB9_26 Depth=1
                                        ;     Parent Loop BB9_24 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
#0:	       cmpeq	r12, 0 -> c1
	;;
#0:	if !c1 br	.BB9_22
	;;
	       nop	2
	;;
; BB#12:                                ; %bb7.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       ldm.f	r10, 8          ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       ldi	-1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       cmplt	r1, r0 -> c1    ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       stm.a	r0, r10, 2      ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	if  c1 br	.BB9_21         ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;                              ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
; BB#13:                                ; %bb8.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       ldm.f	r10, 24         ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       cmplt	r0, r1 -> c1    ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	if  c1 br	.BB9_20         ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;                              ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
; BB#14:                                ; %bb9.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       sub	r13, r12 -> r0
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       stmb.a	r0, r1, 0       ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$membu, r0 -> r1 ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       cmpeq	r1, 10 -> c1    ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	if  c1 br	.BB9_17         ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;                              ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	       nop	2               ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
.BB9_15:                                ; %bb10.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       add	r0, 1 -> r0     ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       stm.a	r0, r10, 0      ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
.BB9_16:                                ; %bb18.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       sub	r12, 1 -> r12
#1:	       br	.BB9_11
	;;
	       nop	2
	;;
.BB9_17:                                ; %bb11.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       ldi	10 -> r0
	;;
.BB9_18:                                ; %bb11.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       or	r10, 0 -> r1    ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       callg	___swbuf_r      ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;                              ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	       nop	3               ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$c1 -> r0       ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       mask	r0, 0 -> r0     ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	if  c1 br	.BB9_16
	;;
	       nop	2
	;;
.BB9_19:                                ; %bb16.i.i.out_crit_edge
#0:	       ldi	-1 -> r0
#1:	       br	.BB9_29
	;;
	       nop	2
	;;
.BB9_20:                                ; %bb13.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       sub	r13, r12 -> r0
#1:	       br	.BB9_18
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
	       nop	0
	;;
.BB9_21:                                ; %bb15.i.i
                                        ;   in Loop: Header=BB9_11 Depth=3
#0:	       sub	r13, r12 -> r0
	;;
#0:	       ldm.f	r0, 0           ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$membu, r0 -> r0 ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
#1:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       br	.BB9_15
#1:	       ldx	$mem, 0 -> r1   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       stmb.a	r0, r1, 0       ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldm.f	r10, 0          ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fputwc.c:149[ fputwc.c:165[ vfprintf.c:315 ] ]
	;;
.BB9_22:                                ; %_fputwc_r.exit
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       cmpeq	r11, -1 -> c1   ; vfprintf.c:315
	;;
#0:	if  c1 br	.BB9_19
	;;
	       nop	2
	;;
; BB#23:                                ; %bb6
                                        ;   in Loop: Header=BB9_24 Depth=2
#0:	       ldm.s	r14, 36         ; vfprintf.c:314
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:314
	;;
#0:	       add	r0, 1 -> r0     ; vfprintf.c:314
	;;
.BB9_24:                                ; %bb6
                                        ;   Parent Loop BB9_26 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB9_11 Depth 3
#0:	       stm.s	r0, r14, 9
	;;
#0:	       ldm.s	r14, 36         ; vfprintf.c:314
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:314
#1:	       ldm.s	r14, 28         ; vfprintf.c:314
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:314
	;;
#0:	       cmplt	r1, r0 -> c1    ; vfprintf.c:314
	;;
#0:	if  c1 br	.BB9_6          ; vfprintf.c:314
	;;                              ; vfprintf.c:314
	       nop	2               ; vfprintf.c:314
	;;
; BB#25:                                ; %bb8
                                        ;   in Loop: Header=BB9_26 Depth=1
#0:	       ldm.s	r14, 16         ; vfprintf.c:311
#1:	       ldi	-4 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:311
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:311
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:311
#1:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 24
	;;
#0:	       and	r3, r2 -> r2
	;;
#0:	       sub	r0, r2 -> r0    ; vfprintf.c:311
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 8 -> r2
	;;
#0:	       stm.s	r2, r14, 6      ; vfprintf.c:311
	;;
#0:	       stm.a	r0, r1, 2       ; vfprintf.c:311
	;;
.BB9_26:                                ; %bb9
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB9_24 Depth 2
                                        ;       Child Loop BB9_11 Depth 3
#0:	       cmpne	r0, 0 -> c1     ; vfprintf.c:310
	;;
#0:	if  c1 br	.BB9_5          ; vfprintf.c:310
	;;                              ; vfprintf.c:310
	       nop	2               ; vfprintf.c:310
	;;
; BB#27:                                ; %bb9.out_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB9_29
	;;
	       nop	2
	;;
.BB9_28:                                ; %bb10
#0:	       ldm.s	r14, 16         ; vfprintf.c:322
#1:	       or	r10, 0 -> r0    ; vfprintf.c:322
	;;
#0:	       callg	___sfvwrite_r   ; vfprintf.c:322
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:322
	;;                              ; vfprintf.c:322
	       nop	3               ; vfprintf.c:322
	;;
.BB9_29:                                ; %out
#0:	       ldm.s	r14, 16         ; vfprintf.c:324
#1:	       or	r14, 0 -> r15   ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:324
	;;
#0:	       stm.a	0, r1, 2        ; vfprintf.c:324
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:325
	;;
#0:	       ldm.s	r14, 44         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:326
#1:	       ldm.s	r14, 48         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:326
#1:	       ldm.s	r14, 52         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:326
#1:	       ldm.s	r14, 56         ; vfprintf.c:326
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:326
#1:	       ldm.s	r15, 8          ; vfprintf.c:326
	;;
#1:	       br	.BB9_2
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:326
#2:	       ldm.s	r15, 4          ; vfprintf.c:326
	;;
#0:	       stx	r0.31 -> $ro    ; vfprintf.c:326
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:326
	;;
#1:	       stx	r1.31 -> $rb    ; vfprintf.c:326
	;;
	.align	4
___sprint_r_end:

	.align	4
___ssprint_r:                           ; @__ssprint_r
	.size	___ssprint_r_end-___ssprint_r
___ssprint_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 13         ; vfprintf.c:205
#3:	       ldiu	52 -> r3        ; vfprintf.c:205
#0:	       ldx	$rb, 0 -> r0.31 ; vfprintf.c:205
#1:	       ldx	$ro, 0 -> r1.31 ; vfprintf.c:205
	;;
#0:	       sub	r15, r3 -> r15  ; vfprintf.c:205
	;;
#0:	       stm.s	r14, r15, 0     ; vfprintf.c:205
#1:	       or	r15, 0 -> r14   ; vfprintf.c:205
	;;
#0:	       stm.s	r0.31, r15, 1   ; vfprintf.c:205
	;;
#1:	       stm.s	r1.31, r15, 2   ; vfprintf.c:205
	;;
#0:	       stm.s	r10, r14, 12    ; vfprintf.c:205
	;;
#0:	       stm.s	r11, r14, 11    ; vfprintf.c:205
	;;
#0:	       stm.s	r12, r14, 10    ; vfprintf.c:205
	;;
#0:	       stm.s	r13, r14, 9     ; vfprintf.c:205
	;;
#0:	       stm.s	r0.23, r14, 8   ; vfprintf.c:205
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:205
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:205
#1:	       stm.s	r1, r14, 5
	;;
#0:	       cmpeq	r2, 0 -> c1     ; vfprintf.c:205
	;;
#0:	if  c1 br	.BB10_2         ; vfprintf.c:205
	;;                              ; vfprintf.c:205
	       nop	2               ; vfprintf.c:205
	;;
; BB#1:                                 ; %bb2.preheader
#0:	       ldm.s	r14, 20         ; vfprintf.c:202
#1:	       or	r0, 0 -> r10
#2:	       ldi	0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:202
	;;
#0:	       ldm.f	r1, 0           ; vfprintf.c:202
	;;
#0:	       br	.BB10_6
#1:	       ldx	$mem, 0 -> r0   ; vfprintf.c:202
	;;
#0:	       add	r0, 4 -> r0
	;;
#0:	       stm.s	r0, r14, 4
	;;
#0:	       stm.s	r11, r14, 7
	;;
.BB10_2:                                ; %bb
#0:	       or	r1, 0 -> r10    ; vfprintf.c:206
#1:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r10, 1       ; vfprintf.c:206
	;;
.BB10_3:                                ; %bb
#0:	       ldm.s	r14, 32         ; vfprintf.c:280
#1:	       or	r14, 0 -> r15   ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:280
#1:	       ldm.s	r14, 36         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:280
#1:	       ldm.s	r14, 40         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:280
#1:	       ldm.s	r14, 44         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:280
#1:	       ldm.s	r14, 48         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:280
#1:	       ldm.s	r15, 8          ; vfprintf.c:280
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:280
#0:	       ldm.s	r15, 4          ; vfprintf.c:280
	;;
#2:	       stx	r2.31 -> $ro    ; vfprintf.c:280
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:280
	;;
#3:	       stx	r3.31 -> $rb    ; vfprintf.c:280
	;;
.BB10_4:                                ; %bb
#0:	       ldm.s	r15, 0          ; vfprintf.c:280
#1:	       s2add	r15, 13 -> r15  ; vfprintf.c:280
	;;
#0:	       ret                      ; vfprintf.c:280
#1:	       ldx	$mem, 0 -> r14  ; vfprintf.c:280
	;;                              ; vfprintf.c:280
	       nop	3               ; vfprintf.c:280
	;;
.BB10_5:                                ; %bb1
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       ldm.s	r14, 16         ; vfprintf.c:212
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:212
	;;
#0:	       ldm.f	r0, -4          ; vfprintf.c:212
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:212
	;;
#0:	       stm.s	r11, r14, 7     ; vfprintf.c:213
	;;
#0:	       ldm.f	r0, 0           ; vfprintf.c:213
#1:	       add	r0, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:213
#1:	       stm.s	r0, r14, 4
	;;
.BB10_6:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r11, 0 -> c1    ; vfprintf.c:211
	;;
#0:	if  c1 br	.BB10_5         ; vfprintf.c:211
	;;                              ; vfprintf.c:211
	       nop	2               ; vfprintf.c:211
	;;
; BB#7:                                 ; %bb3
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       ldm.f	r10, 8          ; vfprintf.c:216
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:216
	;;
#0:	       cmpule	r12, r11 -> c1  ; vfprintf.c:217
	;;
#0:	if !c1 br	.BB10_15
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb4
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       add	r10, 12 -> r0
	;;
#0:	       stm.s	r0, r14, 6
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r0 -> r1
#1:	       ldiu	1152 -> r0
	;;
#0:	       and	r1, r0 -> r0    ; vfprintf.c:217
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:217
	;;
#0:	if  c1 br	.BB10_15
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb5
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       ldm.f	r10, 20         ; vfprintf.c:228
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:228
#1:	       ldm.f	r10, 16         ; vfprintf.c:220
	;;
#0:	       mul	r12, 3 -> $mul0 ; vfprintf.c:228
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:220
#1:	       ldm.f	r10, 0          ; vfprintf.c:220
	;;
#0:	       ldx	$mem, 0 -> r2   ; vfprintf.c:220
	;;
#1:	       sub	r2, r0 -> r12   ; vfprintf.c:220
#0:	       ldx	$mul0, 0 -> r2  ; vfprintf.c:228
	;;
#0:	       sr	r2, 31 -> r3    ; vfprintf.c:228
#1:	       add	r11, r12 -> r4  ; vfprintf.c:229
	;;
#0:	       add	r2, r3 -> r2    ; vfprintf.c:228
#1:	       add	r4, 1 -> r3     ; vfprintf.c:229
	;;
#0:	       sra	r2, 1 -> r13    ; vfprintf.c:228
	;;
#0:	       cmpult	r13, r3 -> c1   ; vfprintf.c:229
	;;
#0:	if  c1 or	r3, 0 -> r13
#1:	       btest	r1, 10 -> c1    ; vfprintf.c:231
	;;
#0:	if !c1 br	.BB10_12        ; vfprintf.c:231
	;;                              ; vfprintf.c:231
	       nop	2               ; vfprintf.c:231
	;;
; BB#10:                                ; %bb8
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       or	r13, 0 -> r0    ; vfprintf.c:234
#1:	       callg	__malloc_r      ; vfprintf.c:234
	;;                              ; vfprintf.c:234
	       nop	3               ; vfprintf.c:234
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:235
	;;
#0:	if  c1 br	.BB10_18
	;;
	       nop	2
	;;
; BB#11:                                ; %bb10
                                        ;   in Loop: Header=BB10_6 Depth=1
#1:	       ldm.f	r10, 16         ; vfprintf.c:240
#0:	       or	r0, 0 -> r0.23  ; vfprintf.c:234
#2:	       or	r12, 0 -> r2    ; vfprintf.c:240
	;;
#0:	       callg	_memcpy         ; vfprintf.c:240
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:240
	;;                              ; vfprintf.c:240
	       nop	3               ; vfprintf.c:240
	;;
#0:	       ldm.f	r10, 12         ; vfprintf.c:241
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:241
#2:	       ldiu	895 -> r1
	;;
#0:	       ldim	31 -> r1
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; vfprintf.c:241
	;;
#3:	       stm.a	r3.31, r0, 0    ; vfprintf.c:241
	;;
#0:	       ldm.s	r14, 24         ; vfprintf.c:241
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:241
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:241
	;;
#0:	       br	.BB10_14
#1:	       ldx	$memhu, r0 -> r0 ; vfprintf.c:241
	;;
#0:	       and	r0, r1 -> r0    ; vfprintf.c:241
#1:	       ldi	128 -> r1
	;;
#0:	       or	r0, r1 -> r0    ; vfprintf.c:241
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:241
	;;
.BB10_12:                               ; %bb11
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       or	r13, 0 -> r1    ; vfprintf.c:245
#1:	       callg	__realloc_r     ; vfprintf.c:245
	;;                              ; vfprintf.c:245
	       nop	3               ; vfprintf.c:245
	;;
#0:	       cmpeq	r0, 0 -> c1     ; vfprintf.c:247
	;;
#0:	if  c1 br	.BB10_17        ; vfprintf.c:247
	;;                              ; vfprintf.c:247
	       nop	2               ; vfprintf.c:247
	;;
; BB#13:                                ; %bb11.bb13_crit_edge
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       or	r0, 0 -> r0.23
	;;
.BB10_14:                               ; %bb13
                                        ;   in Loop: Header=BB10_6 Depth=1
#1:	       sub	r13, r12 -> r0  ; vfprintf.c:260
#0:	       add	r0.23, r12 -> r12 ; vfprintf.c:257
	;;
#0:	       stm.a	r0, r10, 2      ; vfprintf.c:260
	;;
#0:	       stm.a	r13, r10, 5     ; vfprintf.c:258
	;;
#0:	       stm.a	r0.23, r10, 4   ; vfprintf.c:256
	;;
#0:	       stm.a	r12, r10, 0     ; vfprintf.c:257
#1:	       or	r11, 0 -> r12
	;;
.BB10_15:                               ; %bb14
                                        ;   in Loop: Header=BB10_6 Depth=1
#0:	       ldm.f	r10, 0          ; vfprintf.c:264
#1:	       cmpult	r11, r12 -> c1  ; vfprintf.c:262
	;;
#0:	if  c1 or	r11, 0 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:264
#1:	       ldm.s	r14, 28         ; vfprintf.c:264
#2:	       or	r12, 0 -> r2    ; vfprintf.c:264
	;;
#0:	       callg	_memmove        ; vfprintf.c:264
#1:	       ldx	$mem, 0 -> r13  ; vfprintf.c:264
	;;
#0:	       or	r13, 0 -> r1    ; vfprintf.c:264
	;;                              ; vfprintf.c:264
	       nop	2               ; vfprintf.c:264
	;;
#0:	       ldm.f	r10, 8          ; vfprintf.c:265
#1:	       add	r13, r11 -> r13 ; vfprintf.c:268
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:265
#1:	       ldm.f	r10, 0          ; vfprintf.c:266
	;;
#0:	       sub	r0, r12 -> r0   ; vfprintf.c:265
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:266
#1:	       stm.a	r0, r10, 2      ; vfprintf.c:265
	;;
#0:	       add	r1, r12 -> r0   ; vfprintf.c:266
	;;
#0:	       stm.s	r13, r14, 7     ; vfprintf.c:266
	;;
#0:	       stm.a	r0, r10, 0      ; vfprintf.c:266
	;;
#0:	       ldm.s	r14, 20         ; vfprintf.c:270
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:270
	;;
#0:	       ldm.f	r1, 8           ; vfprintf.c:270
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:270
	;;
#0:	       cmpne	r0, r11 -> c1   ; vfprintf.c:270
#1:	       sub	r0, r11 -> r2   ; vfprintf.c:270
#2:	       ldi	0 -> r11
	;;
#0:	if  c1 br	.BB10_6
#1:	       stm.a	r2, r1, 2       ; vfprintf.c:270
	;;
	       nop	2
	;;
; BB#16:                                ; %bb17
#0:	       stm.a	0, r1, 2        ; vfprintf.c:272
#1:	       or	r14, 0 -> r15   ; vfprintf.c:280
#2:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:273
	;;
#0:	       ldm.s	r14, 32         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; vfprintf.c:280
#1:	       ldm.s	r14, 36         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r13  ; vfprintf.c:280
#1:	       ldm.s	r14, 40         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r12  ; vfprintf.c:280
#1:	       ldm.s	r14, 44         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r11  ; vfprintf.c:280
#1:	       ldm.s	r14, 48         ; vfprintf.c:280
	;;
#0:	       ldx	$mem, 0 -> r10  ; vfprintf.c:280
#1:	       ldm.s	r15, 8          ; vfprintf.c:280
	;;
#1:	       br	.BB10_4
#0:	       ldx	$mem, 0 -> r0.31 ; vfprintf.c:280
#2:	       ldm.s	r15, 4          ; vfprintf.c:280
	;;
#0:	       stx	r0.31 -> $ro    ; vfprintf.c:280
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; vfprintf.c:280
	;;
#1:	       stx	r1.31 -> $rb    ; vfprintf.c:280
	;;
.BB10_17:                               ; %bb12
#0:	       ldm.f	r10, 16         ; vfprintf.c:249
#1:	       ldga	_impure_data -> r0 ; vfprintf.c:249
	;;
#0:	       callg	__free_r        ; vfprintf.c:249
#1:	       ldx	$mem, 0 -> r1   ; vfprintf.c:249
	;;                              ; vfprintf.c:249
	       nop	3               ; vfprintf.c:249
	;;
.BB10_18:                               ; %err
#0:	       ldga	_impure_data -> r0
#1:	       ldi	64 -> r1
	;;
#0:	       stm.a	12, r0, 0
#1:	       ldga	___mem_emergency -> r0 ; vfprintf.c:277
	;;
#0:	       ldm.f	r10, 12         ; vfprintf.c:277
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; vfprintf.c:277
	;;
#2:	       stm.a	r2.31, r0, 0    ; vfprintf.c:277
	;;
#0:	       ldm.s	r14, 24         ; vfprintf.c:277
	;;
#0:	       ldx	$mem, 0 -> r0   ; vfprintf.c:277
#1:	       ldmg.d	___mem_emergency ; vfprintf.c:277
	;;
#0:	       ldx	$memhu, r0 -> r0 ; vfprintf.c:277
	;;
#0:	       or	r0, r1 -> r0    ; vfprintf.c:277
	;;
#0:	       stmh.a	r0, r10, 6      ; vfprintf.c:277
#1:	       ldi	-1 -> r0
	;;
#0:	       br	.BB10_3
#1:	       ldm.s	r14, 20         ; vfprintf.c:278
	;;
#0:	       ldx	$mem, 0 -> r1   ; vfprintf.c:278
	;;
#0:	       stm.a	0, r1, 2        ; vfprintf.c:278
	;;
#0:	       stm.a	0, r1, 1        ; vfprintf.c:279
	;;
	.align	4
___ssprint_r_end:

	.align	4
___swsetup_r:                           ; @__swsetup_r
	.size	___swsetup_r_end-___swsetup_r
___swsetup_r_start:
; BB#0:                                 ; %bb
#2:	       wb.s	r15, 7
#3:	       ldiu	28 -> r1
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r1 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 6
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 5
	;;
#0:	       stm.s	r12, r14, 4
	;;
#0:	       ldmg.d	_impure_data+56 ; wsetup.c:38
	;;
#0:	       ldx	$mem, 0 -> r0   ; wsetup.c:38
	;;
#0:	       cmpne	r0, 0 -> c1     ; wsetup.c:38
	;;
#0:	if  c1 br	.BB11_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_impure_data -> r0 ; wsetup.c:38
#1:	       callg	___sinit        ; wsetup.c:38
	;;                              ; wsetup.c:38
	       nop	3               ; wsetup.c:38
	;;
.BB11_2:                                ; %bb2
#0:	       ldm.f	r10, 12         ; wsetup.c:44
#1:	       add	r10, 12 -> r11  ; wsetup.c:44
	;;
#0:	       ldx	$memhu, r11 -> r2 ; wsetup.c:44
	;;
#0:	       btest	r2, 3 -> c1     ; wsetup.c:44
	;;
#0:	if  c1 br	.BB11_11
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb3
#0:	       btest	r2, 4 -> c1     ; wsetup.c:46
	;;
#0:	if !c1 br	.BB11_30        ; wsetup.c:46
	;;                              ; wsetup.c:46
	       nop	2               ; wsetup.c:46
	;;
; BB#4:                                 ; %bb5
#0:	       btest	r2, 2 -> c1     ; wsetup.c:48
	;;
#0:	if !c1 br	.BB11_10
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb6
#0:	       ldm.f	r10, 48         ; wsetup.c:51
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:51
	;;
#0:	       cmpne	r1, 0 -> c1     ; wsetup.c:51
	;;
#0:	if !c1 br	.BB11_9
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb7
#0:	       s2add	r10, 16 -> r0
	;;
#0:	       cmpne	r1, r0 -> c1    ; wsetup.c:52
	;;
#0:	if !c1 br	.BB11_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb8
#0:	       ldga	_impure_data -> r0 ; wsetup.c:52
#1:	       callg	__free_r        ; wsetup.c:52
	;;                              ; wsetup.c:52
	       nop	3               ; wsetup.c:52
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r11 -> r2
	;;
.BB11_8:                                ; %bb9
#0:	       stm.a	0, r10, 12      ; wsetup.c:52
	;;
.BB11_9:                                ; %bb10
#0:	       ldm.f	r10, 16         ; wsetup.c:55
#1:	       ldiu	2011 -> r0
	;;
#0:	       ldim	31 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:55
#1:	       and	r2, r0 -> r2    ; wsetup.c:53
	;;
#0:	       stm.a	r1, r10, 0      ; wsetup.c:55
	;;
#0:	       stmh.a	r2, r10, 6      ; wsetup.c:53
	;;
#0:	       stm.a	0, r10, 1       ; wsetup.c:54
	;;
.BB11_10:                               ; %bb11
#0:	       or	r2, 8 -> r2     ; wsetup.c:57
	;;
#0:	       stmh.a	r2, r10, 6      ; wsetup.c:57
	;;
.BB11_11:                               ; %bb12
#0:	       ldm.f	r10, 16         ; wsetup.c:65
	;;
#0:	       ldx	$mem, 0 -> r0   ; wsetup.c:65
	;;
#0:	       cmpeq	r0, 0 -> c1     ; wsetup.c:65
	;;
#0:	if !c1 br	.BB11_21
	;;
	       nop	2
	;;
; BB#12:                                ; %bb13
#0:	       btest	r2, 9 -> c1     ; wsetup.c:65
	;;
#0:	if  c1 ldi	128 -> r0
	;;
#0:	if  c1 and	r2, r0 -> r0    ; wsetup.c:65
	;;
#0:	if  c1 cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB11_21
	;;
	       nop	2
	;;
; BB#13:                                ; %bb15
#0:	       mask	r2, 4 -> r0
	;;
#0:	       btest	r0, 1 -> c1     ; makebuf.c:50[ wsetup.c:67 ]
	;;
#0:	if !c1 br	.BB11_15        ; makebuf.c:50[ wsetup.c:67 ]
	;;                              ; makebuf.c:50[ wsetup.c:67 ]
	       nop	2               ; makebuf.c:50[ wsetup.c:67 ]
	;;
; BB#14:                                ; %bb.i
#0:	       stm.a	1, r10, 5       ; makebuf.c:53[ wsetup.c:67 ]
#1:	       br	.BB11_21
#2:	       ldi	67 -> r11
	;;
#0:	       add	r10, r11 -> r11
	;;
#0:	       stm.a	r11, r10, 0     ; makebuf.c:52[ wsetup.c:67 ]
	;;
#0:	       stm.a	r11, r10, 4     ; makebuf.c:52[ wsetup.c:67 ]
	;;
.BB11_15:                               ; %bb1.i
#0:	       ldm.f	r10, 14         ; makebuf.c:59[ wsetup.c:67 ]
#1:	       add	r10, 14 -> r0   ; makebuf.c:59[ wsetup.c:67 ]
#2:	       ldi	-1 -> r1
	;;
#0:	       ldx	$memhs, r0 -> r0 ; makebuf.c:59[ wsetup.c:67 ]
	;;
#0:	       cmplt	r1, r0 -> c1    ; makebuf.c:59[ wsetup.c:67 ]
	;;
#0:	if !c1 br	.BB11_17
	;;
	       nop	2
	;;
; BB#16:                                ; %_fstat_r.exit.i
#0:	       ldga	_errno.b -> r2
#1:	       ldi	88 -> r0
#2:	       ldga	_impure_data -> r1 ; fstatr.c:63[ makebuf.c:59[ wsetup.c:67 ] ]
	;;
#0:	       stmb.a	1, r2, 0
	;;
#0:	       stm.a	r0, r1, 0       ; fstatr.c:63[ makebuf.c:59[ wsetup.c:67 ] ]
	;;
#0:	       ldm.f	r10, 12
	;;
#0:	       ldx	$memhu, r11 -> r2
	;;
.BB11_17:                               ; %bb11.i
#0:	       btest	r2, 7 -> c1
#1:	       callg	__malloc_r      ; makebuf.c:95[ wsetup.c:67 ]
#2:	       ldga	2048 -> r0
#3:	       ldi	64 -> r12
	;;
#0:	       or	r2, r0 -> r0    ; makebuf.c:69[ wsetup.c:67 ]
#1:	       ldiu	1024 -> r2
	;;
#0:	if !c1 or	r2, 0 -> r12
#1:	       stmh.a	r0, r10, 6      ; makebuf.c:69[ wsetup.c:67 ]
	;;
#0:	       or	r12, 0 -> r0    ; makebuf.c:95[ wsetup.c:67 ]
	;;                              ; makebuf.c:95[ wsetup.c:67 ]
	       nop	0               ; makebuf.c:95[ wsetup.c:67 ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; makebuf.c:95[ wsetup.c:67 ]
	;;
#0:	if  c1 br	.BB11_20        ; makebuf.c:95[ wsetup.c:67 ]
	;;                              ; makebuf.c:95[ wsetup.c:67 ]
	       nop	2               ; makebuf.c:95[ wsetup.c:67 ]
	;;
; BB#18:                                ; %bb12.i
#0:	       ldm.f	r10, 12         ; makebuf.c:97[ wsetup.c:67 ]
	;;
#0:	       ldx	$memhu, r11 -> r2 ; makebuf.c:97[ wsetup.c:67 ]
	;;
#0:	       btest	r2, 9 -> c1     ; makebuf.c:97[ wsetup.c:67 ]
	;;
#0:	if  c1 br	.BB11_21
	;;
	       nop	2
	;;
; BB#19:                                ; %bb13.i
#0:	       stm.a	1, r10, 5       ; makebuf.c:101[ wsetup.c:67 ]
#1:	       ldi	67 -> r11
#2:	       or	r2, 2 -> r2     ; makebuf.c:99[ wsetup.c:67 ]
	;;
#0:	       br	.BB11_21
#1:	       add	r10, r11 -> r11
	;;
#0:	       stm.a	r11, r10, 4     ; makebuf.c:100[ wsetup.c:67 ]
	;;
#0:	       stmh.a	r2, r10, 6      ; makebuf.c:99[ wsetup.c:67 ]
	;;
#0:	       stm.a	r11, r10, 0     ; makebuf.c:100[ wsetup.c:67 ]
	;;
.BB11_20:                               ; %bb14.i
#0:	       ldga	__cleanup_r -> r2 ; makebuf.c:106[ wsetup.c:67 ]
#1:	       ldga	_impure_data -> r1 ; makebuf.c:106[ wsetup.c:67 ]
	;;
#0:	       stm.a	r2, r1, 15      ; makebuf.c:106[ wsetup.c:67 ]
#1:	       ldi	128 -> r1
	;;
#0:	       ldm.f	r10, 12         ; makebuf.c:107[ wsetup.c:67 ]
	;;
#0:	       ldx	$memhu, r11 -> r2 ; makebuf.c:107[ wsetup.c:67 ]
#1:	       stm.a	r12, r10, 5     ; makebuf.c:109[ wsetup.c:67 ]
	;;
#0:	       or	r2, r1 -> r2    ; makebuf.c:107[ wsetup.c:67 ]
	;;
#0:	       stm.a	r0, r10, 4      ; makebuf.c:108[ wsetup.c:67 ]
	;;
#0:	       stmh.a	r2, r10, 6      ; makebuf.c:107[ wsetup.c:67 ]
	;;
#0:	       stm.a	r0, r10, 0      ; makebuf.c:108[ wsetup.c:67 ]
	;;
.BB11_21:                               ; %bb16
#0:	       btest	r2, 0 -> c1     ; wsetup.c:69
#1:	       mask	r2, 4 -> r0
	;;
#0:	if !c1 br	.BB11_23        ; wsetup.c:69
	;;                              ; wsetup.c:69
	       nop	2               ; wsetup.c:69
	;;
; BB#22:                                ; %bb17
#0:	       ldm.f	r10, 20         ; wsetup.c:77
#1:	       ldi	0 -> r2
	;;
#0:	       br	.BB11_27
#1:	       ldx	$mem, 0 -> r1   ; wsetup.c:77
	;;
#0:	       sub	r2, r1 -> r1    ; wsetup.c:77
	;;
#0:	       stm.a	r1, r10, 6      ; wsetup.c:77
	;;
#0:	       stm.a	0, r10, 2       ; wsetup.c:76
	;;
.BB11_23:                               ; %bb18
#0:	       btest	r0, 1 -> c1     ; wsetup.c:80
	;;
#0:	if !c1 br	.BB11_25        ; wsetup.c:80
	;;                              ; wsetup.c:80
	       nop	2               ; wsetup.c:80
	;;
; BB#24:                                ; %bb18.bb21_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB11_26
	;;
	       nop	2
	;;
.BB11_25:                               ; %bb19
#0:	       ldm.f	r10, 20         ; wsetup.c:80
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:80
	;;
.BB11_26:                               ; %bb21
#0:	       stm.a	r1, r10, 2      ; wsetup.c:80
	;;
.BB11_27:                               ; %bb22
#0:	       ldm.f	r10, 16         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r1   ; wsetup.c:82
	;;
#0:	       cmpne	r1, 0 -> c1     ; wsetup.c:82
	;;
#0:	if  c1 br	.BB11_29        ; wsetup.c:82
	;;                              ; wsetup.c:82
	       nop	2               ; wsetup.c:82
	;;
; BB#28:                                ; %bb23
#0:	       sr	r0, 7 -> r0
#1:	       br	.BB11_31
#2:	       ldi	-1 -> r1
	;;
#0:	       cmpne	r0, 0 -> c1
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r1, 0 -> r0
	;;
	       nop	0
	;;
.BB11_29:                               ; %bb25
#0:	       ldm.s	r14, 16         ; wsetup.c:82
#1:	       or	r14, 0 -> r15   ; wsetup.c:82
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r12  ; wsetup.c:82
#1:	       ldm.s	r14, 20         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r11  ; wsetup.c:82
#1:	       ldm.s	r14, 24         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r10  ; wsetup.c:82
#1:	       ldm.s	r15, 8          ; wsetup.c:82
	;;
#1:	       br	.BB11_32
#0:	       ldx	$mem, 0 -> r0.31 ; wsetup.c:82
#2:	       ldm.s	r15, 4          ; wsetup.c:82
	;;
#0:	       stx	r0.31 -> $ro    ; wsetup.c:82
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; wsetup.c:82
	;;
#1:	       stx	r1.31 -> $rb    ; wsetup.c:82
	;;
.BB11_30:                               ; %bb27
#0:	       ldi	-1 -> r0
	;;
.BB11_31:                               ; %bb27
#0:	       ldm.s	r14, 16         ; wsetup.c:82
#1:	       or	r14, 0 -> r15   ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r12  ; wsetup.c:82
#1:	       ldm.s	r14, 20         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r11  ; wsetup.c:82
#1:	       ldm.s	r14, 24         ; wsetup.c:82
	;;
#0:	       ldx	$mem, 0 -> r10  ; wsetup.c:82
#1:	       ldm.s	r15, 8          ; wsetup.c:82
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; wsetup.c:82
#0:	       ldm.s	r15, 4          ; wsetup.c:82
	;;
#2:	       stx	r2.31 -> $ro    ; wsetup.c:82
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; wsetup.c:82
	;;
#3:	       stx	r3.31 -> $rb    ; wsetup.c:82
	;;
.BB11_32:                               ; %bb27
#0:	       ldm.s	r15, 0          ; wsetup.c:82
#1:	       s2add	r15, 7 -> r15   ; wsetup.c:82
	;;
#0:	       ret                      ; wsetup.c:82
#1:	       ldx	$mem, 0 -> r14  ; wsetup.c:82
	;;                              ; wsetup.c:82
	       nop	3               ; wsetup.c:82
	;;
	.align	4
___swsetup_r_end:

	.align	4
__dtoa_r:                               ; @_dtoa_r
	.size	__dtoa_r_end-__dtoa_r
__dtoa_r_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 88
#3:	       ldiu	352 -> r4
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r4 -> r15
#1:	       ldiu	256 -> r4
#2:	       ldiu	252 -> r5
#3:	       stx	r0 -> $f0
	;;
#2:	       ldx	$f10 -> r2.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       fop	fmov	f0 -> f2
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       add	r14, r4 -> r4
#2:	       add	r14, r5 -> r5
#3:	       fop	fmov	f2 -> f0
	;;
#1:	       stm.s	r1.31, r15, 2
#3:	       ldx	$f11 -> r3.31
	;;
#1:	       stm.s	r10, r4, 23
#0:	       ldx	$f12 -> r0.31
	;;
#0:	       stm.s	r11, r4, 22
#1:	       ldx	$f13 -> r1.31
	;;
#0:	       stm.s	r12, r4, 21
#1:	       ldx	$f0 -> r0
	;;
#0:	       stm.s	r13, r4, 20
#1:	       stx	r1 -> $f1
	;;
#2:	       stm.s	r2.31, r4, 19
#0:	       fop	fmov	f1 -> f3
	;;
#3:	       stm.s	r3.31, r4, 18
#2:	       ldx	$f14 -> r2.31
	;;
#0:	       stm.s	r0.31, r4, 17
#3:	       ldx	$f15 -> r3.31
	;;
#1:	       stm.s	r1.31, r4, 16
#0:	       ldx	$f10 -> r0.31
	;;
#2:	       stm.s	r2.31, r4, 15
#1:	       ldx	$f12 -> r1.31
	;;
#3:	       stm.s	r3.31, r4, 14
#2:	       ldx	$f14 -> r2.31
	;;
#0:	       stm.s	r0.31, r4, 12
#1:	       ldiu	252 -> r4
	;;
#1:	       add	r14, r4 -> r4
#0:	       ldx	$f11 -> r0.31
	;;
#0:	       stm.s	r0.31, r4, 13
#1:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#1:	       stm.s	r1.31, r4, 10
#0:	       ldiu	252 -> r4
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldx	$f13 -> r1.31
	;;
#1:	       stm.s	r1.31, r4, 11
#0:	       ldiu	256 -> r4
	;;
#0:	       add	r14, r4 -> r4
	;;
#2:	       stm.s	r2.31, r4, 8
#0:	       ldx	$f3 -> r4
	;;
#2:	       ldx	$f15 -> r2.31
	;;
#2:	       stm.s	r2.31, r5, 9
#0:	       ldiu	256 -> r5
	;;
#0:	       stm.s	r3, r14, 12
#1:	       add	r14, r5 -> r5
	;;
#0:	       stm.s	r2, r14, 27
#1:	       add	r5, 24 -> r2
#2:	       ldiu	352 -> r5
	;;
#0:	       stm.a	r0, r2, 0
#1:	       add	r14, r5 -> r5
	;;
#0:	       add	r5, 0 -> r0
#1:	       add	r5, 4 -> r1
#2:	       add	r5, 8 -> r3
	;;
#0:	       stm.a	r4, r2, 1
	;;
#0:	       ldmg.d	_impure_data+64 ; dtoa.c:239
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:239
#1:	       ldm.f	r0, 0
	;;
#0:	       cmpeq	r4, 0 -> c1     ; dtoa.c:239
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 8
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r3, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 11
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	if  c1 br	.BB12_4
#1:	       stm.s	r1, r14, 25
	;;
#0:	       ldm.f	r2, 4
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 24     ; dtoa.c:239
	;;
; BB#1:                                 ; %bb
#0:	       ldmg.d	_impure_data+68 ; dtoa.c:241
#1:	       ldi	1 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:241
	;;
#0:	       stm.a	r1, r4, 1       ; dtoa.c:241
	;;
#0:	       ldmg.d	_impure_data+68 ; dtoa.c:242
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:242
#1:	       ldmg.d	_impure_data+64 ; dtoa.c:242
	;;
#0:	       sl	r2, r1 -> r1    ; dtoa.c:242
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:242
	;;
#0:	       stm.a	r1, r3, 2       ; dtoa.c:242
	;;
#0:	       ldmg.d	_impure_data+64 ; dtoa.c:243
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:243
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:139[ dtoa.c:243 ]
	;;
#0:	if  c1 br	.BB12_3
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.i
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:243 ]
#1:	       ldm.f	r1, 4           ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       s2add	r2, r3 -> r2    ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       ldm.f	r2, 0           ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       stm.a	r2, r1, 0       ; mprec.c:141[ dtoa.c:243 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:243 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:142[ dtoa.c:243 ]
	;;
#0:	       s2add	r2, r3 -> r2    ; mprec.c:142[ dtoa.c:243 ]
	;;
#0:	       stm.a	r1, r2, 0       ; mprec.c:142[ dtoa.c:243 ]
	;;
.BB12_3:                                ; %_Bfree.exit
#0:	       ldga	_impure_data -> r1 ; dtoa.c:244
	;;
#0:	       stm.a	0, r1, 16       ; dtoa.c:244
	;;
.BB12_4:                                ; %bb1
#0:	       ldm.s	r14, 96         ; dtoa.c:247
#1:	       ldi	-1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:247
	;;
#0:	       cmplt	r1, r2 -> c1    ; dtoa.c:247
	;;
#0:	if  c1 br	.BB12_6         ; dtoa.c:247
	;;                              ; dtoa.c:247
	       nop	2               ; dtoa.c:247
	;;
; BB#5:                                 ; %bb2
#0:	       ldiu	2047 -> r1
	;;
#0:	       ldim	1023 -> r1
	;;
#0:	       br	.BB12_7
#1:	       ldih	1023 -> r1
	;;
#0:	       and	r2, r1 -> r2
	;;
#0:	       stm.s	r2, r14, 24     ; dtoa.c:250
	;;
#0:	       stm.a	1, r0, 0        ; dtoa.c:250
	;;
.BB12_6:                                ; %bb3
#0:	       stm.a	0, r0, 0        ; dtoa.c:254
	;;
.BB12_7:                                ; %bb4
#0:	       ldm.s	r14, 96
#1:	       ldga	1048576 -> r0
	;;
#0:	       ldih	1023 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       and	r1, r0 -> r1
	;;
#0:	       cmpne	r1, r0 -> c1    ; dtoa.c:258
#1:	       stm.s	r1, r14, 4      ; dtoa.c:258
	;;
#0:	if  c1 br	.BB12_12        ; dtoa.c:258
	;;                              ; dtoa.c:258
	       nop	2               ; dtoa.c:258
	;;
; BB#8:                                 ; %bb5
#0:	       ldm.s	r14, 96
#1:	       ldiu	2047 -> r0
#2:	       ldga	._.str59 -> r2
	;;
#0:	       ldim	511 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 100        ; dtoa.c:265
	;;
#0:	       and	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:265
#1:	       ldm.s	r14, 32         ; dtoa.c:264
	;;
#0:	       or	r1, r0 -> r0    ; dtoa.c:265
#1:	       ldiu	1807 -> r1
	;;
#0:	       cmpeq	r0, 0 -> c1
#1:	       ldga	._.str160 -> r0
#2:	       ldim	4 -> r1
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:264
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:264
	;;
#0:	       ldm.s	r14, 44         ; dtoa.c:270
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:270
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:270
	;;
#0:	if !c1 br	.BB12_526
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb10
#0:	       ldm.f	r0, 3           ; dtoa.c:271
#1:	       add	r0, 3 -> r1     ; dtoa.c:271
	;;
#0:	       ldx	$membu, r1 -> r2 ; dtoa.c:271
#1:	       ldm.s	r14, 44         ; dtoa.c:271
	;;
#0:	       cmpne	r2, 0 -> c1     ; dtoa.c:271
	;;
#0:	if  c1 add	r0, 8 -> r1     ; dtoa.c:271
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:271
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:271
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -736        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f14   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -724        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f12   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -720        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f13   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -716        ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $f10   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#3:	       stx	r3.31 -> $f15   ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $f11   ; dtoa.c:861
	;;
.BB12_10:                               ; %bb13
#0:	       ldm.s	r14, 312        ; dtoa.c:861
#1:	       or	r14, 0 -> r15   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 316        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f15      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 320        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f14      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 324        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f13      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 328        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f12      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 332        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f11      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 336        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f10      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:861
#1:	       ldm.s	r14, 340        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:861
#1:	       ldm.s	r14, 344        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:861
#1:	       ldm.s	r14, 348        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:861
#1:	       ldm.s	r15, 8          ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r15, 4          ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $ro    ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $rb    ; dtoa.c:861
	;;
.BB12_11:                               ; %bb13
#0:	       ldm.s	r15, 0          ; dtoa.c:861
#1:	       ldiu	352 -> r1       ; dtoa.c:861
	;;
#0:	       add	r15, r1 -> r15  ; dtoa.c:861
	;;
#0:	       ret                      ; dtoa.c:861
#1:	       ldx	$mem, 0 -> r14  ; dtoa.c:861
	;;                              ; dtoa.c:861
	       nop	3               ; dtoa.c:861
	;;
.BB12_12:                               ; %bb15
#0:	       ldiu	256 -> r2
#1:	       ldm.s	r14, 100
#2:	       fop	dzero -> d0
	;;
#0:	       add	r14, r2 -> r2
	;;
#0:	       add	r2, 16 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 0
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f10
	;;
#0:	       stx	r0 -> $f3
	;;
#0:	       fop	fmov	f3 -> f11
	;;
#0:	       fop	dcmp	d5, d0 -> f0 ; dtoa.c:282
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:282
	;;
#0:	       btest	r0, 9 -> c1     ; dtoa.c:282
	;;
#0:	if  c1 br	.BB12_16        ; dtoa.c:282
	;;                              ; dtoa.c:282
	       nop	2               ; dtoa.c:282
	;;
; BB#13:                                ; %bb16
#0:	       ldm.s	r14, 44         ; dtoa.c:286
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:286
#1:	       ldm.s	r14, 32         ; dtoa.c:284
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:286
	;;
#0:	if  c1 br	.BB12_15        ; dtoa.c:286
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:284
	;;
#0:	       stm.a	1, r0, 0        ; dtoa.c:284
	;;                              ; dtoa.c:286
	       nop	1               ; dtoa.c:286
	;;
; BB#14:                                ; %bb16.bb215_crit_edge
#0:	       ldga	._.str834 -> r0
#1:	       br	.BB12_526
	;;
	       nop	2
	;;
.BB12_15:                               ; %bb17
#0:	       ldm.s	r14, 44         ; dtoa.c:287
#1:	       ldga	._.str834 -> r0 ; dtoa.c:287
	;;
#0:	       add	r0, 1 -> r1     ; dtoa.c:287
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:287
	;;
#0:	       stm.a	r1, r2, 0       ; dtoa.c:287
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -736        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f14   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f15   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f12   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#1:	       br	.BB12_527
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#2:	       ldm.s	r1, -716        ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $f10   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#3:	       stx	r3.31 -> $f13   ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $f11   ; dtoa.c:861
	;;
.BB12_16:                               ; %bb19
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:103[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:103[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	if !c1 br	.BB12_29
	;;
	       nop	2
	;;
; BB#17:                                ; %bb.i.i
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_528       ; mallocr.c:3209[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#18:                                ; %bb1.i.i
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_27        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#19:                                ; %bb2.i1.i
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_21        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#20:                                ; %bb2.i1.i.bb6.i5.i_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB12_26
	;;
	       nop	2
	;;
.BB12_21:                               ; %bb3.i2.i
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_23        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#22:                                ; %bb3.i2.i.bb6.i5.i_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB12_26
	;;
	       nop	2
	;;
.BB12_23:                               ; %bb4.i3.i
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_25        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#24:                                ; %bb4.i3.i.bb6.i5.i_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB12_26
	;;
	       nop	2
	;;
.BB12_25:                               ; %bb5.i4.i
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
.BB12_26:                               ; %bb6.i5.i
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       br	.BB12_28
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
	       nop	0
	;;
.BB12_27:                               ; %bb7.i6.i
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
.BB12_28:                               ; %_calloc_r.exit.i.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	r10, r0, 19     ; mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ]
	;;
.BB12_29:                               ; %bb2.i.i
#0:	       ldm.f	r10, 4          ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
#1:	       stm.s	r0, r14, 26     ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	if  c1 br	.BB12_31        ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	;;                              ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:785[ dtoa.c:291 ] ]
	;;
; BB#30:                                ; %bb3.i.i
#0:	       ldm.s	r14, 104        ; mprec.c:117[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       br	.BB12_44
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	r0, r10, 1      ; mprec.c:117[ mprec.c:785[ dtoa.c:291 ] ]
	;;
.BB12_31:                               ; %bb4.i.i
#0:	       ldi	28 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_33        ; mallocr.c:3209[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#32:                                ; %bb4.i.i._Balloc.exit.i_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB12_45
	;;
#0:	       stm.s	r0, r14, 26
	;;
	       nop	1
	;;
.BB12_33:                               ; %bb1.i7.i
#0:	       stm.s	r0, r14, 26     ; mallocr.c:3233[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r0, -4          ; mallocr.c:3233[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_42        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#34:                                ; %bb2.i8.i
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_36        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#35:                                ; %bb2.i8.i.bb6.i13.i_crit_edge
#0:	       ldm.s	r14, 104
#1:	       br	.BB12_41
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_36:                               ; %bb3.i9.i
#0:	       ldm.s	r14, 104        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_38        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       stm.a	0, r2, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       stm.a	0, r2, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	0               ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#37:                                ; %bb3.i9.i.bb6.i13.i_crit_edge
#0:	       ldm.s	r14, 104
#1:	       br	.BB12_41
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
.BB12_38:                               ; %bb4.i10.i
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r2, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	if  c1 br	.BB12_40        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       stm.a	0, r2, 3        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
; BB#39:                                ; %bb4.i10.i.bb6.i13.i_crit_edge
#0:	       ldm.s	r14, 104
#1:	       br	.BB12_41
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 16 -> r0
	;;
	       nop	0
	;;
.BB12_40:                               ; %bb5.i11.i
#0:	       or	r2, 0 -> r1
	;;
#0:	       stm.a	0, r1, 4        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       add	r1, 24 -> r0
	;;
#0:	       stm.a	0, r1, 5        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
.BB12_41:                               ; %bb6.i13.i
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       br	.BB12_43
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
	       nop	0
	;;
.BB12_42:                               ; %bb7.i14.i
#0:	       ldm.s	r14, 104        ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
#0:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:785[ dtoa.c:291 ] ] ]
	;;
.BB12_43:                               ; %bb6.i.i
#0:	       ldm.s	r14, 104        ; mprec.c:128[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:128[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:785[ dtoa.c:291 ] ]
	;;
.BB12_44:                               ; %bb7.i.i
#0:	       ldm.s	r14, 104        ; mprec.c:131[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:131[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:785[ dtoa.c:291 ] ]
	;;
.BB12_45:                               ; %_Balloc.exit.i
#0:	       ldm.s	r14, 96
#1:	       ldiu	2047 -> r0
#2:	       ldiu	2047 -> r3
#3:	       ldiu	0 -> r4
	;;
#0:	       ldim	511 -> r3
#1:	       ldim	512 -> r4
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sr	r1, 20 -> r2
#1:	       and	r1, r3 -> r1    ; mprec.c:791[ dtoa.c:291 ]
	;;
#0:	       and	r2, r0 -> r0
#1:	       stm.s	r2, r14, 22
	;;
#0:	       stm.s	r0, r14, 23     ; mprec.c:791[ dtoa.c:291 ]
#1:	       cmpeq	r0, 0 -> c1     ; mprec.c:799[ dtoa.c:291 ]
#2:	       or	r1, r4 -> r0    ; mprec.c:800[ dtoa.c:291 ]
	;;
#0:	       ldm.s	r14, 100        ; mprec.c:804[ dtoa.c:291 ]
#1:	if  c1 or	r1, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:804[ dtoa.c:291 ]
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:804[ dtoa.c:291 ]
	;;
#0:	if  c2 br	.BB12_60        ; mprec.c:804[ dtoa.c:291 ]
	;;                              ; mprec.c:804[ dtoa.c:291 ]
	       nop	2               ; mprec.c:804[ dtoa.c:291 ]
	;;
; BB#46:                                ; %bb2.i15
#0:	       ldm.s	r14, 100        ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       and	r1, 7 -> r1     ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 br	.BB12_52        ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;                              ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:274[ mprec.c:807[ dtoa.c:291 ] ]
	;;
; BB#47:                                ; %bb.i45.i
#0:	       ldm.s	r14, 100        ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       btest	r1, 0 -> c2     ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if !c2 br	.BB12_49        ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	;;                              ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:276[ mprec.c:807[ dtoa.c:291 ] ]
	;;
; BB#48:                                ; %bb.i45.i.bb17.i63.i_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB12_56
	;;
	       nop	2
	;;
.BB12_49:                               ; %bb2.i46.i
#0:	       btest	r1, 1 -> c2     ; mprec.c:278[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if !c2 br	.BB12_51        ; mprec.c:278[ mprec.c:807[ dtoa.c:291 ] ]
	;;                              ; mprec.c:278[ mprec.c:807[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:278[ mprec.c:807[ dtoa.c:291 ] ]
	;;
; BB#50:                                ; %bb3.i47.i
#0:	       ldm.s	r14, 100        ; mprec.c:280[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       br	.BB12_58
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:280[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       sr	r1, 1 -> r2     ; mprec.c:280[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       ldi	1 -> r1
	;;
	       nop	0
	;;
.BB12_51:                               ; %bb4.i48.i
#0:	       sr	r1, 2 -> r2     ; mprec.c:283[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       br	.BB12_58
#2:	       ldi	2 -> r1
	;;
	       nop	2
	;;
.BB12_52:                               ; %bb5.i57.i
#0:	       ldm.s	r14, 100        ; mprec.c:287[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:287[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       mask	r1, 4 -> r2     ; mprec.c:287[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       sr	r1, 16 -> r3    ; mprec.c:290[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:287[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       or	r1, 0 -> r2
	;;
#0:	if  c2 or	r3, 0 -> r2
#1:	       ldx	$c2 -> r3
	;;
#0:	       mask	r2, 0 -> r1     ; mprec.c:292[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:292[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       sr	r2, 8 -> r1     ; mprec.c:295[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r1, 0 -> r2
#1:	       sl	r3, 4 -> r1
	;;
#0:	       or	r1, 8 -> r3
#1:	       and	r2, 15 -> r4    ; mprec.c:297[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r3, 0 -> r1
#1:	       cmpeq	r4, 0 -> c2     ; mprec.c:297[ mprec.c:807[ dtoa.c:291 ] ]
#2:	       sr	r2, 4 -> r3     ; mprec.c:300[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r3, 0 -> r2
#1:	       or	r1, 4 -> r3
	;;
#0:	if  c2 or	r3, 0 -> r1
#1:	       and	r2, 3 -> r3     ; mprec.c:302[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r3, 0 -> c2     ; mprec.c:302[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       sr	r2, 2 -> r3     ; mprec.c:305[ mprec.c:807[ dtoa.c:291 ] ]
#2:	       or	r1, 2 -> r4
	;;
#0:	if  c2 or	r3, 0 -> r2
#1:	if  c2 or	r4, 0 -> r1
	;;
#0:	       btest	r2, 0 -> c2     ; mprec.c:307[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 br	.BB12_57
	;;
	       nop	2
	;;
; BB#53:                                ; %bb14.i58.i
#0:	       sr	r2, 1 -> r2     ; mprec.c:310[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:311[ mprec.c:807[ dtoa.c:291 ] ]
	;;
#0:	if  c2 br	.BB12_55        ; mprec.c:311[ mprec.c:807[ dtoa.c:291 ] ]
	;;                              ; mprec.c:311[ mprec.c:807[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:311[ mprec.c:807[ dtoa.c:291 ] ]
	;;
; BB#54:                                ; %bb14.i58.i.__lo0bits.exit64.i_crit_edge
#0:	       add	r1, 1 -> r1     ; mprec.c:309[ mprec.c:807[ dtoa.c:291 ] ]
#1:	       br	.BB12_57
	;;
	       nop	2
	;;
.BB12_55:                               ; %bb14.i58.i.bb17.i63.i_crit_edge
#0:	       ldi	32 -> r1
	;;
.BB12_56:                               ; %bb17.i63.i
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
.BB12_57:                               ; %__lo0bits.exit64.i
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:808[ dtoa.c:291 ]
	;;
#0:	if  c2 br	.BB12_59
	;;
	       nop	2
	;;
.BB12_58:                               ; %bb3.i16
#0:	       ldi	32 -> r3
	;;
#0:	       sub	r3, r1 -> r3    ; mprec.c:810[ dtoa.c:291 ]
	;;
#0:	       sl	r0, r3 -> r3    ; mprec.c:810[ dtoa.c:291 ]
#1:	       sr	r0, r1 -> r0    ; mprec.c:811[ dtoa.c:291 ]
	;;
#0:	       or	r3, r2 -> r2    ; mprec.c:810[ dtoa.c:291 ]
	;;
.BB12_59:                               ; %bb4.i
#0:	       ldm.s	r14, 104        ; mprec.c:814[ dtoa.c:291 ]
#1:	       cmpeq	r0, 0 -> c2     ; mprec.c:815[ dtoa.c:291 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:814[ dtoa.c:291 ]
	;;
#0:	       stm.a	r2, r3, 5       ; mprec.c:814[ dtoa.c:291 ]
#1:	       ldi	1 -> r2
#2:	       ldi	2 -> r3
	;;
#0:	if  c2 or	r2, 0 -> r3
	;;
#0:	       br	.BB12_72
#1:	       ldm.s	r14, 104        ; mprec.c:815[ dtoa.c:291 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:815[ dtoa.c:291 ]
	;;
#0:	       stm.a	r0, r2, 6       ; mprec.c:815[ dtoa.c:291 ]
	;;
#0:	       stm.a	r3, r2, 4       ; mprec.c:815[ dtoa.c:291 ]
	;;
.BB12_60:                               ; %bb9.i17
#0:	       and	r0, 7 -> r1     ; mprec.c:274[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:274[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 br	.BB12_66        ; mprec.c:274[ mprec.c:824[ dtoa.c:291 ] ]
	;;                              ; mprec.c:274[ mprec.c:824[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:274[ mprec.c:824[ dtoa.c:291 ] ]
	;;
; BB#61:                                ; %bb.i36.i
#0:	       btest	r0, 0 -> c2     ; mprec.c:276[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if !c2 br	.BB12_63        ; mprec.c:276[ mprec.c:824[ dtoa.c:291 ] ]
	;;                              ; mprec.c:276[ mprec.c:824[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:276[ mprec.c:824[ dtoa.c:291 ] ]
	;;
; BB#62:                                ; %bb.i36.i.bb17.i.i_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB12_71
	;;
	       nop	2
	;;
.BB12_63:                               ; %bb2.i37.i
#0:	       btest	r0, 1 -> c2     ; mprec.c:278[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if !c2 br	.BB12_65        ; mprec.c:278[ mprec.c:824[ dtoa.c:291 ] ]
	;;                              ; mprec.c:278[ mprec.c:824[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:278[ mprec.c:824[ dtoa.c:291 ] ]
	;;
; BB#64:                                ; %bb3.i38.i
#0:	       sr	r0, 1 -> r0     ; mprec.c:280[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       br	.BB12_71
#2:	       ldi	1 -> r1
	;;
	       nop	2
	;;
.BB12_65:                               ; %bb4.i39.i
#0:	       sr	r0, 2 -> r0     ; mprec.c:283[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       br	.BB12_71
#2:	       ldi	2 -> r1
	;;
	       nop	2
	;;
.BB12_66:                               ; %bb5.i.i
#0:	       mask	r0, 4 -> r1     ; mprec.c:287[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       or	r0, 0 -> r3
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:287[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       sr	r0, 16 -> r1    ; mprec.c:290[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r1, 0 -> r3
#1:	       ldx	$c2 -> r2
	;;
#0:	       mask	r3, 0 -> r1     ; mprec.c:292[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r1, 0 -> c2     ; mprec.c:292[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       sr	r3, 8 -> r1     ; mprec.c:295[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r1, 0 -> r3
#1:	       sl	r2, 4 -> r1
	;;
#0:	       or	r1, 8 -> r2
#1:	       and	r3, 15 -> r4    ; mprec.c:297[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r2, 0 -> r1
#1:	       cmpeq	r4, 0 -> c2     ; mprec.c:297[ mprec.c:824[ dtoa.c:291 ] ]
#2:	       sr	r3, 4 -> r2     ; mprec.c:300[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 or	r2, 0 -> r3
#1:	       or	r1, 4 -> r2
	;;
#0:	if  c2 or	r2, 0 -> r1
#1:	       and	r3, 3 -> r2     ; mprec.c:302[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r2, 0 -> c2     ; mprec.c:302[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       sr	r3, 2 -> r2     ; mprec.c:305[ mprec.c:824[ dtoa.c:291 ] ]
#2:	       or	r1, 2 -> r4
	;;
#0:	if  c2 or	r2, 0 -> r3
#1:	if  c2 or	r4, 0 -> r1
	;;
#0:	       btest	r3, 0 -> c2     ; mprec.c:307[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if !c2 br	.BB12_68        ; mprec.c:307[ mprec.c:824[ dtoa.c:291 ] ]
	;;                              ; mprec.c:307[ mprec.c:824[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:307[ mprec.c:824[ dtoa.c:291 ] ]
	;;
; BB#67:                                ; %bb5.i.i.__lo0bits.exit.i_crit_edge
#0:	       or	r3, 0 -> r0
#1:	       br	.BB12_71
	;;
	       nop	2
	;;
.BB12_68:                               ; %bb14.i.i
#0:	       sr	r3, 1 -> r3     ; mprec.c:310[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	       cmpeq	r3, 0 -> c2     ; mprec.c:311[ mprec.c:824[ dtoa.c:291 ] ]
	;;
#0:	if  c2 br	.BB12_70        ; mprec.c:311[ mprec.c:824[ dtoa.c:291 ] ]
	;;                              ; mprec.c:311[ mprec.c:824[ dtoa.c:291 ] ]
	       nop	2               ; mprec.c:311[ mprec.c:824[ dtoa.c:291 ] ]
	;;
; BB#69:                                ; %bb14.i.i.__lo0bits.exit.i_crit_edge
#0:	       add	r1, 1 -> r1     ; mprec.c:309[ mprec.c:824[ dtoa.c:291 ] ]
#1:	       br	.BB12_71
#2:	       or	r3, 0 -> r0
	;;
	       nop	2
	;;
.BB12_70:                               ; %bb14.i.i.bb17.i.i_crit_edge
#0:	       ldi	32 -> r1
	;;
.BB12_71:                               ; %__lo0bits.exit.i
#0:	       ldm.s	r14, 104        ; mprec.c:825[ dtoa.c:291 ]
#1:	       s2add	r1, 8 -> r1     ; mprec.c:828[ dtoa.c:291 ]
#2:	       ldi	1 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:825[ dtoa.c:291 ]
	;;
#0:	       stm.a	r0, r2, 5       ; mprec.c:825[ dtoa.c:291 ]
	;;
#0:	       stm.a	1, r2, 4        ; mprec.c:826[ dtoa.c:291 ]
	;;
.BB12_72:                               ; %bb10.i
#0:	if  c1 br	.BB12_74        ; mprec.c:886[ dtoa.c:291 ]
	;;                              ; mprec.c:886[ dtoa.c:291 ]
	       nop	2               ; mprec.c:886[ dtoa.c:291 ]
	;;
; BB#73:                                ; %bb11.i
#0:	       ldm.s	r14, 92
#1:	       ldiu	973 -> r3
#2:	       ldi	53 -> r0
	;;
#0:	       br	.BB12_77
#1:	       ldim	2047 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, r3 -> r2
#1:	       sub	r0, r1 -> r3    ; mprec.c:894[ dtoa.c:291 ]
	;;
#0:	       stm.s	r3, r14, 9      ; mprec.c:894[ dtoa.c:291 ]
	;;
.BB12_74:                               ; %bb12.i
#0:	       ldm.s	r14, 104
#1:	       ldiu	974 -> r6
	;;
#0:	       ldim	2047 -> r6
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       s2add	r2, r3 -> r2
#1:	       sl	r3, 5 -> r3
	;;
#0:	       ldm.f	r2, 16          ; mprec.c:902[ dtoa.c:291 ]
#1:	       ldga	65536 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:902[ dtoa.c:291 ]
#1:	       ldm.s	r14, 92
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 16 -> r4    ; mprec.c:242[ mprec.c:902[ dtoa.c:291 ] ]
	;;
#0:	       ldx	$c1 -> r2
#1:	if  c1 or	r4, 0 -> r0
	;;
#0:	       sl	r2, 4 -> r5
#1:	       ldga	0 -> r2
	;;
#0:	       ldih	8 -> r2
#1:	       or	r5, 8 -> r4
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 8 -> r2     ; mprec.c:247[ mprec.c:902[ dtoa.c:291 ] ]
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r4, 0 -> r5
	;;
#0:	       ldih	128 -> r2
#1:	       or	r5, 4 -> r4
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 4 -> r2     ; mprec.c:252[ mprec.c:902[ dtoa.c:291 ] ]
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r4, 0 -> r5
	;;
#0:	       ldih	512 -> r2
#1:	       or	r5, 2 -> r4
#2:	       sl	r0, 2 -> r7     ; mprec.c:257[ mprec.c:902[ dtoa.c:291 ] ]
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	if  c1 or	r4, 0 -> r5
#1:	if  c1 or	r7, 0 -> r0
#2:	       ldi	-1 -> r4
#3:	       add	r2, r6 -> r2
	;;
#0:	       cmplt	r4, r0 -> c1
	;;
#0:	if !c1 br	.BB12_76
	;;
	       nop	2
	;;
; BB#75:                                ; %bb8.i35.i
#0:	       btest	r0, 30 -> c1
#1:	       ldi	32 -> r0
#2:	       add	r5, 1 -> r5     ; mprec.c:261[ mprec.c:902[ dtoa.c:291 ] ]
	;;
#0:	if !c1 or	r0, 0 -> r5
	;;
.BB12_76:                               ; %__hi0bits.exit.i
#0:	       sub	r3, r5 -> r0    ; mprec.c:902[ dtoa.c:291 ]
	;;
#0:	       stm.s	r0, r14, 9
	;;
.BB12_77:                               ; %__d2b.exit
#0:	       ldm.s	r14, 88         ; dtoa.c:295
#1:	       ldiu	2047 -> r0
#2:	       add	r2, r1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:295
#1:	       stm.s	r1, r14, 6      ; dtoa.c:295
	;;
#0:	       and	r3, r0 -> r3    ; dtoa.c:295
	;;
#0:	       cmpeq	r3, 0 -> c1     ; dtoa.c:295
	;;
#0:	if  c1 br	.BB12_79        ; dtoa.c:295
	;;                              ; dtoa.c:295
	       nop	2               ; dtoa.c:295
	;;
; BB#78:                                ; %bb20
#0:	       ldi	-1023 -> r1
#1:	       ldm.s	r14, 96
#2:	       ldim	511 -> r0
	;;
#0:	       add	r3, r1 -> r1
#1:	       ldi	0 -> r3
	;;
#0:	       br	.BB12_83
#1:	       ldx	$mem, 0 -> r2
#2:	       stm.s	r3, r14, 5      ; dtoa.c:300
	;;
#0:	       and	r2, r0 -> r0
#1:	       ldga	1048576 -> r2
#2:	       ldm.s	r14, 100
	;;
#0:	       ldih	511 -> r2
	;;
#0:	       or	r0, r2 -> r0    ; dtoa.c:300
#1:	       ldx	$mem, 0 -> r2
	;;
.BB12_79:                               ; %bb21
#0:	       ldm.s	r14, 36         ; dtoa.c:340
#1:	       ldiu	1074 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:340
	;;
#0:	       add	r1, r2 -> r1    ; dtoa.c:340
#1:	       ldi	33 -> r2
	;;
#0:	       add	r1, r0 -> r0    ; dtoa.c:340
	;;
#0:	       cmplt	r0, r2 -> c1    ; dtoa.c:344
	;;
#0:	if  c1 br	.BB12_81        ; dtoa.c:344
	;;                              ; dtoa.c:344
	       nop	2               ; dtoa.c:344
	;;
; BB#80:                                ; %bb22
#0:	       ldm.s	r14, 96         ; dtoa.c:344
#1:	       ldi	-1010 -> r0
#2:	       ldiu	1042 -> r2
	;;
#0:	       sub	r0, r1 -> r0
#1:	       add	r1, r2 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:344
#1:	       ldm.s	r14, 100        ; dtoa.c:344
	;;
#0:	       br	.BB12_82
#1:	       sl	r3, r0 -> r0    ; dtoa.c:344
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:344
	;;
#0:	       sr	r3, r2 -> r2    ; dtoa.c:344
	;;
#0:	       or	r0, r2 -> r0    ; dtoa.c:344
	;;
.BB12_81:                               ; %bb23
#0:	       ldiu	1006 -> r0
#1:	       ldm.s	r14, 100        ; dtoa.c:344
	;;
#0:	       ldim	2047 -> r0
	;;
#0:	       sub	r0, r1 -> r0
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:344
	;;
#0:	       sl	r2, r0 -> r0    ; dtoa.c:344
	;;
.BB12_82:                               ; %bb24
#0:	       ldiu	256 -> r5
#1:	       ldga	1048576 -> r3
#2:	       ldiu	0 -> r4
#3:	       sub	r1, 1 -> r1
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldih	537 -> r3
#2:	       ldim	0 -> r4
	;;
#0:	       add	r5, 0 -> r2
#1:	       ldih	0 -> r4
#2:	       ldiu	256 -> r5
	;;
#0:	       stm.a	r0, r2, 0       ; dtoa.c:347
#1:	       add	r14, r5 -> r5
	;;
#0:	       stm.a	r3, r2, 1       ; dtoa.c:347
#1:	       ldiu	0 -> r3
	;;
#0:	       ldim	512 -> r3
	;;
#0:	       ldih	537 -> r3
	;;
#0:	       ldm.f	r2, 0           ; dtoa.c:347
#1:	       stx	r3 -> $f4
#2:	       ldga	1048576 -> r3
	;;
#0:	       ldih	2032 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:347
#1:	       ldm.f	r2, 4           ; dtoa.c:347
	;;
#0:	       stx	r0 -> $f0       ; dtoa.c:347
#1:	       add	r5, 8 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:347
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:347
	;;
#0:	       stx	r2 -> $f1       ; dtoa.c:347
#1:	       ldi	1 -> r2
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:347
#1:	       stm.s	r2, r14, 5
	;;
#0:	       stx	r4 -> $f0
	;;
#0:	       fop	fmov	f4 -> f1
	;;
#0:	       fop	dsub	d1, d0 -> d0 ; dtoa.c:347
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r2
	;;
#0:	       stm.a	r2, r0, 0
#1:	       ldx	$f1 -> r2
	;;
#0:	       stm.a	r2, r0, 1
	;;
#0:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       ldm.f	r0, 0
	;;
#0:	       add	r4, r3 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
.BB12_83:                               ; %bb25
#0:	       ldiu	224 -> r5
#1:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldim	0 -> r4
	;;
#0:	       add	r5, 24 -> r3
#1:	       ldih	0 -> r4
	;;
#0:	       stm.a	r2, r3, 0
	;;
#0:	       stm.a	r0, r3, 1
#1:	       ldiu	0 -> r0
	;;
#0:	       ldim	768 -> r0
	;;
#0:	       ldih	1535 -> r0
	;;
#0:	       ldm.f	r3, 0
#1:	       stx	r0 -> $f4
#2:	       ldiu	865 -> r0
	;;
#0:	       ldim	488 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r3, 4
#2:	       ldih	795 -> r0
	;;
#0:	       stx	r2 -> $f0
#1:	       ldiu	1959 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       fop	fmov	f0 -> f2
#2:	       ldim	592 -> r2
	;;
#0:	       stx	r3 -> $f1
#1:	       ldiu	179 -> r3
#2:	       ldih	510 -> r2
	;;
#0:	       stx	r4 -> $f0
#1:	       ldiu	552 -> r4
#2:	       ldim	25 -> r3
	;;
#0:	       fop	fmov	f1 -> f3
#1:	       ldim	209 -> r4
#2:	       ldih	1115 -> r3
	;;
#0:	       fop	fmov	f4 -> f1
#1:	       ldih	510 -> r4
	;;
#0:	       fop	dadd	d1, d0 -> d0
	;;
#0:	       stx	r0 -> $f2
#1:	       ldiu	507 -> r0
	;;
#0:	       fop	fmov	f2 -> f4
#1:	       ldim	1007 -> r0
	;;
#0:	       stx	r2 -> $f2
#1:	       ldiu	1043 -> r2
#2:	       ldih	644 -> r0
	;;
#0:	       stx	r3 -> $f3
#1:	       ldim	616 -> r2
	;;
#0:	       fop	fmov	f2 -> f5
#1:	       ldih	510 -> r2
	;;
#0:	       fop	fmov	f3 -> f2
	;;
	       nop	0
	;;
#0:	       stx	r4 -> $f6
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:356
	;;
#0:	       stx	r1 -> $f0       ; dtoa.c:356
	;;
#0:	       fop	si2df	f0 -> d0 ; dtoa.c:356
	;;
#0:	       stx	r2 -> $f6
	;;
	       nop	0
	;;
#0:	       stx	r0 -> $f4
	;;
#0:	       fop	fmov	f6 -> f5
	;;
	       nop	0
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:356
	;;
#0:	       fop	dzero -> d0
	;;
	       nop	5
	;;
#0:	       fop	df2si	d1 -> f4 ; dtoa.c:358
	;;
#0:	       fop	dcmp	d1, d0 -> f0 ; dtoa.c:359
	;;
	       nop	1
	;;
#0:	       ldx	$f4 -> r0       ; dtoa.c:358
	;;
#0:	       stm.s	r0, r14, 16     ; dtoa.c:359
#1:	       ldx	$f0 -> r0       ; dtoa.c:359
	;;
#0:	       btest	r0, 2 -> c1     ; dtoa.c:359
	;;
#0:	if !c1 br	.BB12_85
	;;
	       nop	2
	;;
; BB#84:                                ; %bb26
#0:	       ldm.s	r14, 64         ; dtoa.c:359
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:359
	;;
#0:	       stx	r0 -> $f0       ; dtoa.c:359
	;;
#0:	       fop	si2df	f0 -> d0 ; dtoa.c:359
	;;
	       nop	1
	;;
#0:	       fop	dcmp	d0, d1 -> f0 ; dtoa.c:359
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:359
	;;
#0:	       btest	r0, 0 -> c1     ; dtoa.c:359
	;;
#0:	if !c1 ldm.s	r14, 64
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 sub	r0, 1 -> r0
	;;
#0:	if !c1 stm.s	r0, r14, 16
	;;
.BB12_85:                               ; %bb28
#0:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpult	r0, 23 -> c1
	;;
#0:	if  c1 br	.BB12_87        ; dtoa.c:362
	;;                              ; dtoa.c:362
	       nop	2               ; dtoa.c:362
	;;
; BB#86:                                ; %bb28.bb32_crit_edge
#0:	       ldi	1 -> r0
#1:	       br	.BB12_88
	;;
#0:	       stm.s	r0, r14, 7
	;;
	       nop	1
	;;
.BB12_87:                               ; %bb29
#0:	       ldm.s	r14, 64         ; dtoa.c:364
#1:	       ldga	___mprec_tens -> r0 ; dtoa.c:364
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:364
	;;
#0:	       sl	r2, 3 -> r3     ; dtoa.c:364
	;;
#0:	       add	r0, r3 -> r0    ; dtoa.c:364
	;;
#0:	       ldm.f	r0, 0           ; dtoa.c:364
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:364
#1:	       ldm.f	r0, 4           ; dtoa.c:364
	;;
#0:	       stx	r3 -> $f0       ; dtoa.c:364
#1:	       ldi	0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:364
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:364
	;;
#0:	       stx	r0 -> $f1       ; dtoa.c:364
#1:	       sub	r2, 1 -> r0
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:364
	;;
#0:	       fop	dcmp	d5, d1 -> f0 ; dtoa.c:364
#1:	       stm.s	r3, r14, 7      ; dtoa.c:364
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r3       ; dtoa.c:364
	;;
#0:	       btest	r3, 2 -> c1     ; dtoa.c:364
	;;
#0:	if  c1 or	r0, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 16
	;;
.BB12_88:                               ; %bb32
#0:	       ldm.s	r14, 36         ; dtoa.c:368
#1:	       ldi	1 -> r2
#2:	       ldi	-1 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:368
	;;
#0:	       sub	r0, r1 -> r0    ; dtoa.c:368
	;;
#0:	       sub	r0, 1 -> r4
#1:	       sub	r2, r0 -> r0
#2:	       ldi	0 -> r2
	;;
#0:	       cmplt	r3, r4 -> c1
#1:	       stm.s	r2, r14, 10
	;;
#0:	if  c1 or	r2, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 21
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r4, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 19     ; dtoa.c:379
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:379
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:379
	;;
#0:	       cmplt	r0, 0 -> c1     ; dtoa.c:379
	;;
#0:	if  c1 br	.BB12_90        ; dtoa.c:379
	;;                              ; dtoa.c:379
	       nop	2               ; dtoa.c:379
	;;
; BB#89:                                ; %bb36
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 22     ; dtoa.c:383
	;;
#0:	       ldm.s	r14, 76         ; dtoa.c:383
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:383
#1:	       ldm.s	r14, 64         ; dtoa.c:383
	;;
#0:	       br	.BB12_91
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:383
	;;
#0:	       add	r2, r0 -> r2    ; dtoa.c:383
	;;
#0:	       stm.s	r2, r14, 19
	;;
#0:	       stm.s	r0, r14, 10
	;;
.BB12_90:                               ; %bb37
#0:	       ldm.s	r14, 84         ; dtoa.c:387
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:387
#1:	       ldm.s	r14, 64         ; dtoa.c:387
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:387
	;;
#0:	       sub	r2, r0 -> r2    ; dtoa.c:387
	;;
#0:	       stm.s	r2, r14, 21     ; dtoa.c:388
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:388
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:388
	;;
#0:	       sub	r2, r0 -> r0    ; dtoa.c:388
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB12_91:                               ; %bb38
#0:	       ldm.s	r14, 108        ; dtoa.c:391
#1:	       ldi	9 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:391
	;;
#0:	       cmpult	r0, r2 -> c1    ; dtoa.c:391
#1:	       ldi	0 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r2
#1:	       ldi	5 -> r0
	;;
#0:	       cmplt	r0, r2 -> c1    ; dtoa.c:394
#1:	       sub	r2, 4 -> r3
#2:	       stm.s	r2, r14, 27
	;;
#0:	if  c1 or	r3, 0 -> r2
	;;
#0:	       cmpult	r0, r2 -> c1    ; dtoa.c:401
#1:	       stm.s	r2, r14, 14     ; dtoa.c:401
	;;
#0:	if  c1 br	.BB12_102       ; dtoa.c:401
	;;                              ; dtoa.c:401
	       nop	2               ; dtoa.c:401
	;;
; BB#92:                                ; %bb38
#0:	       ldm.s	r14, 56
#1:	       ldga	.JTI12_0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       s2add	r1, r0 -> r1
	;;
#0:	       ldm.d	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       br	r1
	;;
	       nop	3
	;;
.BB12_93:                               ; %bb38.bb49_crit_edge
#0:	       ldi	1 -> r1
#1:	       br	.BB12_100
	;;
	       nop	2
	;;
.BB12_94:                               ; %bb38.bb45_crit_edge
#0:	       ldi	1 -> r1
#1:	       br	.BB12_98
	;;
	       nop	2
	;;
.BB12_95:                               ; %bb38.bb51.thread_crit_edge
#0:	       ldi	0 -> r1
#1:	       ldi	1 -> r0
	;;
#0:	       stm.s	r1, r14, 12
#1:	       ldi	-1 -> r1
	;;
#0:	       stm.s	r1, r14, 20
	;;
#0:	       stm.s	r0, r14, 15
	;;
#0:	       stm.s	r1, r14, 13
	;;
.BB12_96:                               ; %bb51.thread
#0:	       ldga	_impure_data -> r1 ; dtoa.c:427
#1:	       br	.BB12_107
#2:	       ldi	0 -> r10
	;;
#0:	       stm.a	0, r1, 17       ; dtoa.c:427
	;;
	       nop	1
	;;
.BB12_97:                               ; %bb44
#0:	       ldi	0 -> r1
	;;
.BB12_98:                               ; %bb44
#0:	       stm.s	r1, r14, 15
#1:	       ldi	1 -> r0
	;;
#0:	       ldm.s	r14, 48
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r1, 1 -> c1
	;;
#0:	       br	.BB12_103
#1:	if  c1 or	r0, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 12
	;;
#0:	       stm.s	r1, r14, 13
	;;
#0:	       stm.s	r1, r14, 20
	;;
.BB12_99:                               ; %bb48
#0:	       ldi	0 -> r1
	;;
.BB12_100:                              ; %bb48
#0:	       stm.s	r1, r14, 15
	;;
#0:	       ldm.s	r14, 64         ; dtoa.c:420
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:420
#1:	       ldm.s	r14, 48         ; dtoa.c:420
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:420
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:420
	;;
#0:	       stm.s	r1, r14, 13     ; dtoa.c:420
#1:	       add	r1, 1 -> r1     ; dtoa.c:420
	;;
#0:	       cmplt	r1, 1 -> c1
#1:	       stm.s	r1, r14, 20
	;;
#0:	if  c1 br	.BB12_96
	;;
	       nop	2
	;;
; BB#101:                               ; %bb49.bb51_crit_edge
#0:	       ldm.s	r14, 80
#1:	       br	.BB12_103
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	1
	;;
.BB12_102:                              ; %bb38.bb51_crit_edge
#0:	       ldi	1 -> r0
	;;
#0:	       stm.s	r0, r14, 15
#1:	       ldi	-1 -> r0
	;;
#0:	       stm.s	r0, r14, 13
	;;
#0:	       stm.s	r0, r14, 20
	;;
.BB12_103:                              ; %bb51
#0:	       cmpult	r1, 24 -> c1    ; dtoa.c:427
#1:	       ldga	_impure_data -> r0 ; dtoa.c:427
	;;
#0:	if  c1 br	.BB12_529       ; dtoa.c:427
#1:	       stm.a	0, r0, 17       ; dtoa.c:427
	;;                              ; dtoa.c:427
	       nop	2               ; dtoa.c:427
	;;
; BB#104:                               ; %bb51.bb52_crit_edge
#0:	       ldi	0 -> r10
#1:	       ldi	4 -> r0
	;;
.BB12_105:                              ; %bb52
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r0, 1 -> r0     ; dtoa.c:428
#1:	       add	r10, 1 -> r10   ; dtoa.c:429
	;;
#0:	       add	r0, 20 -> r2    ; dtoa.c:427
	;;
#0:	       cmpule	r2, r1 -> c1    ; dtoa.c:427
	;;
#0:	if  c1 br	.BB12_105       ; dtoa.c:427
	;;                              ; dtoa.c:427
	       nop	2               ; dtoa.c:427
	;;
; BB#106:                               ; %bb53.bb54_crit_edge
#0:	       ldga	_impure_data -> r0
	;;
#0:	       stm.a	r10, r0, 17
	;;
.BB12_107:                              ; %bb54
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ dtoa.c:430 ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:103[ dtoa.c:430 ]
	;;
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:103[ dtoa.c:430 ]
	;;
#0:	if !c1 br	.BB12_120
	;;
	       nop	2
	;;
; BB#108:                               ; %bb.i18
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_530       ; mallocr.c:3209[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ dtoa.c:430 ] ]
	;;
; BB#109:                               ; %bb1.i204
#0:	       or	r0, 0 -> r11    ; mallocr.c:3207[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r11, -4         ; mallocr.c:3233[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_118       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
; BB#110:                               ; %bb2.i205
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_112       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
; BB#111:                               ; %bb2.i205.bb6.i210_crit_edge
#0:	       or	r11, 0 -> r0
#1:	       br	.BB12_117
	;;
	       nop	2
	;;
.BB12_112:                              ; %bb3.i206
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r11, 0       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_114       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       stm.a	0, r11, 1       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
; BB#113:                               ; %bb3.i206.bb6.i210_crit_edge
#0:	       add	r11, 8 -> r0
#1:	       br	.BB12_117
	;;
	       nop	2
	;;
.BB12_114:                              ; %bb4.i207
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r11, 2       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_116       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       stm.a	0, r11, 3       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
; BB#115:                               ; %bb4.i207.bb6.i210_crit_edge
#0:	       add	r11, 16 -> r0
#1:	       br	.BB12_117
	;;
	       nop	2
	;;
.BB12_116:                              ; %bb5.i208
#0:	       stm.a	0, r11, 4       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       add	r11, 24 -> r0
	;;
#0:	       stm.a	0, r11, 5       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
.BB12_117:                              ; %bb6.i210
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       br	.BB12_119
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
	       nop	0
	;;
.BB12_118:                              ; %bb7.i211
#0:	       or	r11, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:430 ] ]
	;;
.BB12_119:                              ; %_calloc_r.exit213.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ dtoa.c:430 ]
	;;
#0:	       stm.a	r11, r0, 19     ; mprec.c:106[ dtoa.c:430 ]
	;;
.BB12_120:                              ; %bb2.i19
#0:	       s2add	r11, r10 -> r0  ; mprec.c:115[ dtoa.c:430 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:115[ dtoa.c:430 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:115[ dtoa.c:430 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:115[ dtoa.c:430 ]
#1:	       stm.s	r1, r14, 17     ; mprec.c:115[ dtoa.c:430 ]
	;;
#0:	if  c1 br	.BB12_122       ; mprec.c:115[ dtoa.c:430 ]
	;;                              ; mprec.c:115[ dtoa.c:430 ]
	       nop	2               ; mprec.c:115[ dtoa.c:430 ]
	;;
; BB#121:                               ; %bb3.i20
#0:	       ldm.s	r14, 68         ; mprec.c:117[ dtoa.c:430 ]
	;;
#0:	       br	.BB12_135
#1:	       ldx	$mem, 0 -> r10  ; mprec.c:117[ dtoa.c:430 ]
	;;
#0:	       ldm.f	r10, 0          ; mprec.c:117[ dtoa.c:430 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:117[ dtoa.c:430 ]
	;;
#0:	       stm.a	r10, r0, 0      ; mprec.c:117[ dtoa.c:430 ]
	;;
.BB12_122:                              ; %bb4.i21
#0:	       ldi	1 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       sl	r0, r10 -> r11  ; mprec.c:121[ dtoa.c:430 ]
#1:	       ldi	20 -> r0
	;;
#0:	       s2add	r0, r11 -> r0   ; mprec.c:123[ dtoa.c:430 ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_124       ; mallocr.c:3209[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ dtoa.c:430 ] ]
	;;
; BB#123:                               ; %bb4.i21._Balloc.exit_crit_edge
#0:	       ldi	0 -> r10
#1:	       br	.BB12_136
	;;
#0:	       stm.s	r10, r14, 17
	;;
	       nop	1
	;;
.BB12_124:                              ; %bb1.i23
#0:	       stm.s	r0, r14, 17     ; mallocr.c:3233[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r0, -4          ; mallocr.c:3233[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_133       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
; BB#125:                               ; %bb2.i24
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_127       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
; BB#126:                               ; %bb2.i24.bb6.i28_crit_edge
#0:	       ldm.s	r14, 68
#1:	       br	.BB12_132
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_127:                              ; %bb3.i25
#0:	       ldm.s	r14, 68         ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_129       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       stm.a	0, r2, 0        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       stm.a	0, r2, 1        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	0               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
; BB#128:                               ; %bb3.i25.bb6.i28_crit_edge
#0:	       ldm.s	r14, 68
#1:	       br	.BB12_132
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
.BB12_129:                              ; %bb4.i26
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r2, 2        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	if  c1 br	.BB12_131       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       stm.a	0, r2, 3        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
; BB#130:                               ; %bb4.i26.bb6.i28_crit_edge
#0:	       ldm.s	r14, 68
#1:	       br	.BB12_132
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 16 -> r0
	;;
	       nop	0
	;;
.BB12_131:                              ; %bb5.i27
#0:	       or	r2, 0 -> r1
	;;
#0:	       stm.a	0, r1, 4        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       add	r1, 24 -> r0
	;;
#0:	       stm.a	0, r1, 5        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
.BB12_132:                              ; %bb6.i28
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       br	.BB12_134
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
	       nop	0
	;;
.BB12_133:                              ; %bb7.i29
#0:	       ldm.s	r14, 68         ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
#0:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:430 ] ]
	;;
.BB12_134:                              ; %bb6.i
#0:	       ldm.s	r14, 68         ; mprec.c:128[ dtoa.c:430 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:128[ dtoa.c:430 ]
	;;
#0:	       stm.a	r10, r0, 1      ; mprec.c:128[ dtoa.c:430 ]
	;;
#0:	       stm.a	r11, r0, 2      ; mprec.c:129[ dtoa.c:430 ]
	;;
.BB12_135:                              ; %bb7.i22
#0:	       ldm.s	r14, 68         ; mprec.c:131[ dtoa.c:430 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:131[ dtoa.c:430 ]
	;;
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ dtoa.c:430 ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ dtoa.c:430 ]
	;;
.BB12_136:                              ; %_Balloc.exit
#0:	       ldm.s	r14, 80
#1:	       ldi	14 -> r0
#2:	       ldga	_impure_data -> r1 ; dtoa.c:430
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 68         ; dtoa.c:430
	;;
#0:	       cmpult	r0, r2 -> c1
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:430
	;;
#0:	       stm.a	r0, r1, 16      ; dtoa.c:430
#1:	if !c1 ldi	5 -> r0
	;;
#0:	if !c1 ldm.s	r14, 108
	;;
#0:	if !c1 ldx	$mem, 0 -> r1
	;;
#0:	if !c1 cmplt	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB12_205
	;;
	       nop	2
	;;
; BB#137:                               ; %bb56
#0:	       ldm.s	r14, 64         ; dtoa.c:442
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:442
	;;
#0:	       cmplt	r0, 1 -> c1     ; dtoa.c:442
	;;
#0:	if  c1 br	.BB12_147       ; dtoa.c:442
	;;                              ; dtoa.c:442
	       nop	2               ; dtoa.c:442
	;;
; BB#138:                               ; %bb57
#0:	       and	r0, 15 -> r1    ; dtoa.c:444
#1:	       ldga	___mprec_tens -> r2 ; dtoa.c:444
#2:	       sra	r0, 4 -> r10    ; dtoa.c:445
	;;
#0:	       sl	r1, 3 -> r1     ; dtoa.c:444
#1:	       btest	r10, 4 -> c1    ; dtoa.c:446
	;;
#0:	       add	r2, r1 -> r1    ; dtoa.c:444
	;;
#0:	       ldm.f	r1, 0           ; dtoa.c:444
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:444
#1:	       ldm.f	r1, 4           ; dtoa.c:444
	;;
#0:	if  c1 br	.BB12_140       ; dtoa.c:446
#1:	       stx	r2 -> $f0       ; dtoa.c:444
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:444
#1:	       fop	fmov	f0 -> f12 ; dtoa.c:444
	;;
#0:	       stx	r1 -> $f1       ; dtoa.c:444
	;;
#0:	       fop	fmov	f1 -> f13 ; dtoa.c:444
	;;
; BB#139:                               ; %bb57.bb62.preheader_crit_edge
#0:	       ldm.s	r14, 100
#1:	       br	.BB12_141
#2:	       ldi	2 -> r11
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
	       nop	0
	;;
.BB12_140:                              ; %bb58
#0:	       ldiu	1852 -> r0
#1:	       ldiu	2013 -> r1
#2:	       ldiu	224 -> r12
#3:	       fop	fmov	f10 -> f0 ; dtoa.c:450
	;;
#0:	       ldim	631 -> r0
#1:	       ldim	681 -> r1
#2:	       add	r14, r12 -> r12
#3:	       fop	fmov	f11 -> f1 ; dtoa.c:450
	;;
#0:	       ldih	1019 -> r0
#1:	       ldih	936 -> r1
#2:	       add	r12, 16 -> r11
	;;
#0:	       stx	r1 -> $f4
	;;
#0:	       stx	r0 -> $f2
	;;
#0:	       fop	fmov	f4 -> f3
	;;
#0:	       callg	___divdf3       ; dtoa.c:450
#1:	       fop	fmov	f2 -> f4 ; dtoa.c:450
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:450
	;;
#0:	       ldx	$f1 -> r1       ; dtoa.c:450
	;;
#0:	       ldx	$f4 -> r2       ; dtoa.c:450
	;;
#0:	       ldx	$f3 -> r3       ; dtoa.c:450
	;;
#0:	       ldx	$f0 -> r0
#1:	       and	r10, 15 -> r10  ; dtoa.c:449
	;;
#0:	       stm.a	r0, r11, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       stm.a	r0, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r11, 4
#2:	       ldi	3 -> r11
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
.BB12_141:                              ; %bb62.preheader
#0:	       cmpeq	r10, 0 -> c1    ; dtoa.c:453
	;;
#0:	if  c1 br	.BB12_146
	;;
	       nop	2
	;;
; BB#142:                               ; %bb62.preheader.bb59_crit_edge
#0:	       ldga	___mprec_bigtens -> r2
	;;
.BB12_143:                              ; %bb59
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:454
	;;
#0:	if !c1 br	.BB12_145
	;;
	       nop	2
	;;
; BB#144:                               ; %bb60
                                        ;   in Loop: Header=BB12_143 Depth=1
#0:	       ldm.f	r2, 0           ; dtoa.c:457
#1:	       add	r11, 1 -> r11   ; dtoa.c:456
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:457
#1:	       ldm.f	r2, 4           ; dtoa.c:457
	;;
#0:	       stx	r3 -> $f0       ; dtoa.c:457
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:457
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:457
	;;
#0:	       stx	r4 -> $f1       ; dtoa.c:457
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:457
	;;
#0:	       fop	dmul	d1, d6 -> d6 ; dtoa.c:457
	;;
	       nop	6
	;;
.BB12_145:                              ; %bb61
                                        ;   in Loop: Header=BB12_143 Depth=1
#0:	       sra	r10, 1 -> r10   ; dtoa.c:453
#1:	       add	r2, 8 -> r2
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:453
	;;
#0:	if  c1 br	.BB12_143
	;;
	       nop	2
	;;
.BB12_146:                              ; %bb63
#0:	       ldiu	224 -> r12
#1:	       ldiu	224 -> r13
#2:	       fop	fmov	f12 -> f0 ; dtoa.c:459
	;;
#0:	       add	r14, r12 -> r12
#1:	       add	r14, r13 -> r13
#2:	       ldx	$f13 -> r3      ; dtoa.c:459
	;;
#0:	       add	r12, 8 -> r2
#1:	       add	r13, 0 -> r10
	;;
#0:	       stm.a	r0, r2, 0
	;;
#0:	       stm.a	r1, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r2, 4
#2:	       ldx	$f0 -> r2       ; dtoa.c:459
	;;
#0:	       stx	r0 -> $f1
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       fop	fmov	f1 -> f4
	;;
#0:	       callg	___divdf3       ; dtoa.c:459
#1:	       stx	r1 -> $f2
	;;
#0:	       fop	fmov	f2 -> f5
	;;
#0:	       fop	fmov	f4 -> f1 ; dtoa.c:459
	;;
#0:	       ldx	$f1 -> r0       ; dtoa.c:459
	;;
#0:	       ldx	$f5 -> r1       ; dtoa.c:459
	;;
#0:	       ldx	$f0 -> r0
	;;
#0:	       stm.a	r0, r10, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       br	.BB12_154
#1:	       stm.a	r0, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_147:                              ; %bb64
#0:	       ldm.s	r14, 64         ; dtoa.c:461
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:461
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:461
	;;
#0:	if  c1 br	.BB12_149       ; dtoa.c:461
	;;                              ; dtoa.c:461
	       nop	2               ; dtoa.c:461
	;;
; BB#148:                               ; %bb64.bb71_crit_edge
#0:	       ldm.s	r14, 100
#1:	       br	.BB12_154
#2:	       ldi	2 -> r11
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
	       nop	0
	;;
.BB12_149:                              ; %bb65
#0:	       ldm.s	r14, 64         ; dtoa.c:461
#1:	       ldi	0 -> r10
#2:	       ldga	___mprec_tens -> r0 ; dtoa.c:463
#3:	       ldiu	192 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:461
	;;
#0:	       sub	r10, r11 -> r10 ; dtoa.c:461
	;;
#0:	       and	r10, 15 -> r11  ; dtoa.c:463
	;;
#0:	       sl	r11, 3 -> r11   ; dtoa.c:463
	;;
#0:	       add	r0, r11 -> r11  ; dtoa.c:463
#1:	       sra	r10, 4 -> r0    ; dtoa.c:464
	;;
#0:	       ldm.f	r11, 0          ; dtoa.c:463
#1:	       cmpeq	r0, 0 -> c1     ; dtoa.c:464
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:463
#1:	       ldm.f	r11, 4          ; dtoa.c:463
	;;
#0:	       stx	r12 -> $f0      ; dtoa.c:463
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:463
#1:	       fop	fmov	f0 -> f2 ; dtoa.c:463
	;;
#0:	       stx	r11 -> $f1      ; dtoa.c:463
#1:	       add	r1, 24 -> r11
	;;
#0:	       fop	fmov	f1 -> f3 ; dtoa.c:463
	;;
#0:	       fop	dmul	d5, d1 -> d0 ; dtoa.c:463
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r10
	;;
#0:	       stm.a	r10, r11, 0
#1:	       ldx	$f1 -> r10
	;;
#0:	if  c1 br	.BB12_531       ; dtoa.c:464
#1:	       stm.a	r10, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r11, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
; BB#150:                               ; %bb65.bb66_crit_edge
#0:	       ldga	___mprec_bigtens -> r1
#1:	       ldi	2 -> r11
	;;
.BB12_151:                              ; %bb66
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:465
	;;
#0:	if !c1 br	.BB12_153
	;;
	       nop	2
	;;
; BB#152:                               ; %bb68
                                        ;   in Loop: Header=BB12_151 Depth=1
#0:	       ldiu	192 -> r4
#1:	       add	r11, 1 -> r11   ; dtoa.c:467
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 16 -> r2
	;;
#0:	       stm.a	r12, r2, 0
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r1, 0           ; dtoa.c:468
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:468
#1:	       ldm.f	r2, 0
	;;
#0:	       stx	r10 -> $f2      ; dtoa.c:468
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r2, 4
#2:	       fop	fmov	f2 -> f6 ; dtoa.c:468
	;;
#0:	       stx	r12 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r1, 4           ; dtoa.c:468
#2:	       fop	fmov	f0 -> f4
	;;
#0:	       stx	r2 -> $f1
#1:	       ldiu	192 -> r2
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:468
#1:	       fop	fmov	f1 -> f5
#2:	       add	r14, r2 -> r2
	;;
#0:	       stx	r3 -> $f3       ; dtoa.c:468
#1:	       add	r2, 8 -> r10
	;;
#0:	       fop	fmov	f3 -> f7 ; dtoa.c:468
	;;
#0:	       fop	dmul	d2, d3 -> d0 ; dtoa.c:468
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r12
	;;
#0:	       stm.a	r12, r10, 0
#1:	       ldx	$f1 -> r12
	;;
#0:	       stm.a	r12, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_153:                              ; %bb69
                                        ;   in Loop: Header=BB12_151 Depth=1
#0:	       sra	r0, 1 -> r0     ; dtoa.c:464
#1:	       add	r1, 8 -> r1
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:464
	;;
#0:	if  c1 br	.BB12_151
	;;
	       nop	2
	;;
.BB12_154:                              ; %bb71
#0:	       ldm.s	r14, 28         ; dtoa.c:471
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:471
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:471
	;;
#0:	if  c1 br	.BB12_156       ; dtoa.c:471
	;;                              ; dtoa.c:471
	       nop	2               ; dtoa.c:471
	;;
.BB12_155:                              ; %bb71.bb76_crit_edge
#0:	       ldm.s	r14, 64
#1:	       br	.BB12_159
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 18
	;;
#0:	       ldm.s	r14, 80
	;;
.BB12_156:                              ; %bb72
#0:	       ldiu	192 -> r4
#1:	       ldiu	0 -> r1
#2:	       ldiu	0 -> r3
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldim	512 -> r1
#2:	       ldim	0 -> r3
	;;
#0:	       add	r4, 0 -> r0
#1:	       ldih	511 -> r1
#2:	       ldih	0 -> r3
	;;
#0:	       stm.a	r12, r0, 0
#1:	       stx	r3 -> $f2
	;;
#0:	       stm.a	r10, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f0 -> f4
	;;
#0:	       stx	r0 -> $f1
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       fop	fmov	f1 -> f5
	;;
#0:	       fop	fmov	f0 -> f3
	;;
#0:	       fop	dcmp	d2, d1 -> f0 ; dtoa.c:471
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:471
	;;
#0:	       btest	r0, 13 -> c1    ; dtoa.c:471
	;;
#0:	if !c1 ldm.s	r14, 80
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB12_155
	;;
	       nop	2
	;;
; BB#157:                               ; %bb74
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       cmplt	r10, 1 -> c1
	;;
#0:	if  c1 br	.BB12_205
	;;
	       nop	2
	;;
; BB#158:                               ; %bb75
#0:	       ldiu	0 -> r10
#1:	       ldiu	0 -> r12
#2:	       ldm.s	r14, 64
#3:	       ldiu	160 -> r1
	;;
#0:	       ldim	128 -> r10
#1:	       ldim	0 -> r12
#2:	       add	r14, r1 -> r1
#3:	       add	r11, 1 -> r11   ; dtoa.c:478
	;;
#0:	       ldih	513 -> r10
#1:	       ldih	0 -> r12
	;;
#0:	       stx	r10 -> $f2
#1:	       add	r1, 24 -> r10
	;;
#0:	       stx	r12 -> $f0
#1:	       ldx	$mem, 0 -> r12
	;;
#0:	       fop	fmov	f2 -> f1
#1:	       sub	r12, 1 -> r12
	;;
#0:	       fop	dmul	d2, d0 -> d0 ; dtoa.c:477
#1:	       stm.s	r12, r14, 18    ; dtoa.c:478
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r12
	;;
#0:	       stm.a	r12, r10, 0
#1:	       ldx	$f1 -> r12
	;;
#0:	       stm.a	r12, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 52
	;;
.BB12_159:                              ; %bb75
#0:	       ldiu	160 -> r5
#1:	       ldx	$mem, 0 -> r0
#2:	       ldiu	0 -> r4
#3:	       stx	r11 -> $f0      ; dtoa.c:480
	;;
#0:	       add	r14, r5 -> r5
#1:	       stm.s	r0, r14, 23
#2:	       ldiu	0 -> r3
#3:	       ldim	896 -> r4
	;;
#0:	       add	r5, 16 -> r0
#1:	       ldim	0 -> r3
#2:	       ldih	512 -> r4
#3:	       fop	si2df	f0 -> d0 ; dtoa.c:480
	;;
#0:	       stm.a	r12, r0, 0
#1:	       ldih	0 -> r3
#2:	       stx	r4 -> $f6
#3:	       ldiu	160 -> r5
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldiu	0 -> r1
	;;
#0:	       stm.a	r10, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r2 -> $f2
#1:	       ldga	0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f4
#2:	       ldm.s	r14, 92         ; dtoa.c:482
#3:	       ldih	2022 -> r2
	;;
#0:	       stx	r0 -> $f3
#1:	       add	r5, 8 -> r0
	;;
#0:	       fop	fmov	f3 -> f5
#1:	       ldx	$mem, 0 -> r4   ; dtoa.c:482
	;;
#0:	       stx	r3 -> $f2
#1:	       cmpne	r4, 0 -> c1     ; dtoa.c:482
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dmac	d0, d2 -> d1 ; dtoa.c:480
	;;
	       nop	6
	;;
#0:	       fop	fmov	f2 -> f0
	;;
#0:	       ldx	$f0 -> r4
	;;
#0:	       stm.a	r4, r0, 0
#1:	       ldx	$f3 -> r4
	;;
#0:	       stm.a	r4, r0, 1
	;;
#0:	if  c1 br	.BB12_166       ; dtoa.c:482
#1:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       ldm.f	r0, 0
	;;
#0:	       add	r4, r2 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
; BB#160:                               ; %bb77
#0:	       ldiu	160 -> r4
#1:	       ldim	640 -> r1
#2:	       stx	r3 -> $f0
	;;
#0:	       add	r14, r4 -> r4
#1:	       ldih	1536 -> r1
	;;
#0:	       add	r4, 0 -> r10
#1:	       stx	r1 -> $f2
	;;
#0:	       stm.a	r0, r10, 0
#1:	       fop	fmov	f2 -> f1
	;;
#0:	       fop	dadd	d2, d0 -> d2
	;;
	       nop	0
	;;
#0:	       stm.a	r2, r10, 1
	;;
	       nop	1
	;;
#0:	       ldm.f	r10, 0
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r10, 4
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       fop	fmov	f0 -> f2
	;;
#0:	       stx	r2 -> $f1
	;;
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       fop	dcmp	d2, d1 -> f0 ; dtoa.c:486
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:486
	;;
#0:	       btest	r0, 11 -> c1    ; dtoa.c:486
	;;
#0:	if  c1 br	.BB12_164       ; dtoa.c:486
	;;                              ; dtoa.c:486
	       nop	2               ; dtoa.c:486
	;;
; BB#161:                               ; %bb77.one_digit_crit_edge
#0:	       ldi	0 -> r0
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB12_162:                              ; %bb77.one_digit_crit_edge
#0:	       stm.s	r0, r14, 22
	;;
.BB12_163:                              ; %one_digit
#0:	       ldm.s	r14, 72         ; dtoa.c:735
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:735
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:735
	;;
#0:	       stm.s	r10, r14, 16
#1:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 21    ; dtoa.c:734
	;;
#0:	       ldm.s	r14, 68         ; dtoa.c:734
	;;
#0:	       br	.BB12_514
#1:	       ldx	$mem, 0 -> r10  ; dtoa.c:734
	;;
#0:	       add	r10, 1 -> r0    ; dtoa.c:734
	;;
#0:	       stm.s	r0, r14, 27
#1:	       ldi	49 -> r0
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:734
	;;
.BB12_164:                              ; %bb78
#0:	       fop	dabs	d1 -> d0 ; dtoa.c:488
	;;
#0:	       fop	dcmp	d2, d0 -> f0 ; dtoa.c:488
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:488
	;;
#0:	       btest	r0, 13 -> c1    ; dtoa.c:488
	;;
#0:	if  c1 br	.BB12_205
	;;
	       nop	2
	;;
.BB12_165:                              ; %bb78.no_digits_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB12_331
	;;
#0:	       stm.s	r0, r14, 23
	;;
	       nop	1
	;;
.BB12_166:                              ; %bb79
#0:	       ldm.s	r14, 60         ; dtoa.c:493
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:493
	;;
#0:	       cmpeq	r1, 0 -> c1     ; dtoa.c:493
	;;
#0:	if  c1 br	.BB12_177       ; dtoa.c:493
	;;                              ; dtoa.c:493
	       nop	2               ; dtoa.c:493
	;;
; BB#167:                               ; %bb80
#0:	       ldiu	128 -> r5
#2:	       ldm.s	r14, 92
#1:	       ldga	___mprec_tens -> r1.16 ; dtoa.c:498
#3:	       ldiu	0 -> r4
	;;
#0:	       add	r14, r5 -> r5
#1:	       ldim	0 -> r4
	;;
#0:	       add	r5, 24 -> r1
#1:	       ldx	$mem, 0 -> r3
#2:	       or	r4, 0 -> r11
#3:	       ldih	511 -> r4
	;;
#0:	       stm.a	r0, r1, 0
#1:	       sl	r3, 3 -> r3
#2:	       ldih	0 -> r11
	;;
#1:	       add	r3, r1.16 -> r3 ; dtoa.c:498
#0:	       stx	r11 -> $f2
	;;
#0:	       stm.a	r2, r1, 1
	;;
#0:	       ldm.f	r3, -8          ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:498
#1:	       ldm.f	r1, 0
	;;
#0:	       stx	r0 -> $f0       ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.f	r3, -4          ; dtoa.c:498
#2:	       fop	fmov	f0 -> f4 ; dtoa.c:498
	;;
#0:	       stx	r4 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:498
#1:	       ldm.f	r1, 4
#2:	       fop	fmov	f0 -> f3
	;;
#0:	       stx	r3 -> $f1       ; dtoa.c:498
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       fop	fmov	f1 -> f5 ; dtoa.c:498
	;;
#0:	       fop	fmov	f2 -> f0 ; dtoa.c:498
#1:	       stm.s	r1, r14, 27
	;;
#0:	       fop	fmov	f4 -> f1 ; dtoa.c:498
	;;
#0:	       callg	___divdf3       ; dtoa.c:498
#1:	       stx	r2 -> $f12
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:498
	;;
#0:	       ldx	$f3 -> r1       ; dtoa.c:498
	;;
#0:	       ldx	$f1 -> r2       ; dtoa.c:498
	;;
#0:	       ldx	$f5 -> r3       ; dtoa.c:498
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 68
	;;
#0:	       stx	r1 -> $f2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f13
	;;
#0:	       add	r0, 1 -> r0
#1:	       fop	dsub	d0, d6 -> d2 ; dtoa.c:498
	;;
#0:	       stm.s	r0, r14, 27
#1:	       ldi	1 -> r0
	;;
	       nop	5
	;;
.BB12_168:                              ; %bb81
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldiu	128 -> r1
	;;
#0:	       add	r14, r1 -> r1
	;;
#0:	       add	r1, 16 -> r2
	;;
#0:	       stm.a	r12, r2, 0
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r2, 0
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r2, 4
	;;
#0:	       stx	r12 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       fop	fmov	f0 -> f2
	;;
#0:	       stx	r2 -> $f1
	;;
#0:	       fop	fmov	f1 -> f3
	;;
#0:	       fop	df2si	d1 -> f0 ; dtoa.c:501
	;;
	       nop	1
	;;
#0:	       fop	si2df	f0 -> d3 ; dtoa.c:502
	;;
#0:	       ldx	$f0 -> r2       ; dtoa.c:501
	;;
#0:	       s2add	r2, 12 -> r2    ; dtoa.c:503
	;;
#0:	       fop	dsub	d1, d3 -> d0 ; dtoa.c:502
#1:	       stmb.a	r2, r10, 0      ; dtoa.c:503
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d0, d2 -> f2 ; dtoa.c:504
	;;
	       nop	1
	;;
#0:	       ldx	$f2 -> r2       ; dtoa.c:504
	;;
#0:	       btest	r2, 13 -> c1    ; dtoa.c:504
	;;
#0:	if  c1 br	.BB12_170       ; dtoa.c:504
	;;                              ; dtoa.c:504
	       nop	2               ; dtoa.c:504
	;;
; BB#169:                               ; %bb81.ret1_crit_edge
#0:	       ldm.s	r14, 72
#1:	       br	.BB12_522
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 16
	;;
	       nop	0
	;;
.BB12_170:                              ; %bb82
                                        ;   in Loop: Header=BB12_168 Depth=1
#0:	       ldiu	0 -> r2
#1:	       stx	r11 -> $f2
	;;
#0:	       ldim	512 -> r2
	;;
#0:	       ldih	511 -> r2
	;;
#0:	       stx	r2 -> $f6
	;;
#0:	       fop	fmov	f6 -> f3
	;;
#0:	       fop	dsub	d1, d0 -> d1 ; dtoa.c:506
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d2 -> f2 ; dtoa.c:506
	;;
	       nop	1
	;;
#0:	       ldx	$f2 -> r2       ; dtoa.c:506
	;;
#0:	       btest	r2, 13 -> c1    ; dtoa.c:506
	;;
#0:	if  c1 br	.BB12_175       ; dtoa.c:506
	;;                              ; dtoa.c:506
	       nop	2               ; dtoa.c:506
	;;
; BB#171:                               ; %bb82.bb106.preheader_crit_edge
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_172:                              ; %bb106.preheader
#0:	       ldi	57 -> r11
	;;
.BB12_173:                              ; %bb106
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r10, 0 -> r12
	;;
#0:	       stm.s	r12, r14, 27
#1:	       sub	r12, 1 -> r10
	;;
#0:	       ldm.f	r12, -1         ; dtoa.c:579
	;;
#0:	       ldx	$membu, r10 -> r12 ; dtoa.c:579
	;;
#0:	       cmpeq	r12, r11 -> c1  ; dtoa.c:579
	;;
#0:	if  c1 br	.BB12_200
	;;
	       nop	2
	;;
; BB#174:                               ; %bb107.loopexit
#0:	       ldm.s	r14, 72
#1:	       br	.BB12_522
#2:	       add	r12, 1 -> r11
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
#0:	       stm.s	r12, r14, 16
	;;
#0:	       stmb.a	r11, r10, 0     ; dtoa.c:586
	;;
.BB12_175:                              ; %bb83
                                        ;   in Loop: Header=BB12_168 Depth=1
#0:	       ldm.s	r14, 92         ; dtoa.c:508
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:508
	;;
#0:	       cmple	r10, r0 -> c1   ; dtoa.c:508
	;;
#0:	if  c1 br	.BB12_205
	;;
	       nop	2
	;;
; BB#176:                               ; %bb84
                                        ;   in Loop: Header=BB12_168 Depth=1
#0:	       ldiu	0 -> r10
#1:	       stx	r11 -> $f2
#2:	       ldm.s	r14, 108
#3:	       ldiu	128 -> r1
	;;
#0:	       ldim	128 -> r10
#1:	       add	r14, r1 -> r1
#2:	       add	r0, 1 -> r0
	;;
#0:	       ldih	513 -> r10
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       stx	r10 -> $f6
#1:	       add	r2, 1 -> r2
#2:	       add	r1, 8 -> r10
	;;
#0:	       fop	fmov	f6 -> f3
#1:	       stm.s	r2, r14, 27
	;;
#0:	       fop	dmul	d0, d1 -> d0 ; dtoa.c:511
	;;
#0:	       fop	dmul	d2, d1 -> d2 ; dtoa.c:510
	;;
	       nop	6
	;;
#0:	       fop	fmov	f0 -> f2
	;;
#0:	       ldx	$f2 -> r2
	;;
#0:	       stm.a	r2, r10, 0
#1:	       ldx	$f1 -> r2
	;;
#0:	       br	.BB12_168
#1:	       stm.a	r2, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.f	r10, 4
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
.BB12_177:                              ; %bb85
#0:	       ldiu	128 -> r4
#1:	       fop	df2si	d2 -> f0 ; dtoa.c:521
	;;
#0:	       add	r14, r4 -> r4
	;;
#0:	       add	r4, 0 -> r10
	;;
#0:	       stm.a	r0, r10, 0
#1:	       fop	si2df	f0 -> d1 ; dtoa.c:522
	;;
	       nop	1
	;;
#0:	       stm.a	r2, r10, 1
#1:	       ldga	___mprec_tens -> r2 ; dtoa.c:518
#2:	       fop	dsub	d2, d1 -> d1 ; dtoa.c:522
	;;
	       nop	1
	;;
#0:	       ldm.s	r14, 92
	;;
	       nop	0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r10, 0
	;;
#0:	       sl	r0, 3 -> r1
#1:	       cmpne	r0, 1 -> c1     ; dtoa.c:524
	;;
#0:	       add	r1, r2 -> r1    ; dtoa.c:518
#1:	       ldx	$mem, 0 -> r2
	;;
#0:	       ldm.f	r1, -8          ; dtoa.c:518
#1:	       stx	r2 -> $f1
	;;
#0:	       fop	fmov	f1 -> f12
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:518
#1:	       ldm.f	r10, 4
	;;
#0:	       stx	r3 -> $f7       ; dtoa.c:518
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r1, -4          ; dtoa.c:518
#2:	       fop	fmov	f7 -> f14 ; dtoa.c:518
	;;
#0:	       stx	r10 -> $f6
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:518
#1:	       ldm.s	r14, 68         ; dtoa.c:523
#2:	       ldx	$f0 -> r10      ; dtoa.c:521
	;;
#0:	       stx	r1 -> $f8       ; dtoa.c:518
#1:	       s2add	r10, 12 -> r10  ; dtoa.c:523
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:523
#1:	       fop	fmov	f6 -> f13
	;;
#0:	       fop	fmov	f8 -> f15 ; dtoa.c:518
#1:	       stmb.a	r10, r1, 0      ; dtoa.c:523
	;;
#0:	       fop	dmul	d6, d7 -> d2 ; dtoa.c:518
	;;
	       nop	2
	;;
#0:	if  c1 br	.BB12_185       ; dtoa.c:524
	;;
	       nop	2
	;;
; BB#178:                               ; %bb85.bb87_crit_edge
#0:	       or	r1, 0 -> r10    ; dtoa.c:523
#1:	       br	.BB12_180
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:523
	;;
	       nop	1
	;;
.BB12_179:                              ; %bb86.bb87_crit_edge
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, r0 -> r10
	;;
.BB12_180:                              ; %bb87
#0:	       ldiu	0 -> r0
	;;
#0:	       ldim	0 -> r0
	;;
#0:	       or	r0, 0 -> r1
#1:	       ldih	511 -> r0
	;;
#0:	       ldih	0 -> r1
#1:	       stx	r0 -> $f6
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dadd	d2, d0 -> d0 ; dtoa.c:526
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d0 -> f0 ; dtoa.c:526
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r2       ; dtoa.c:526
	;;
#0:	       btest	r2, 11 -> c1    ; dtoa.c:526
	;;
#0:	if !c1 br	.BB12_172
	;;
	       nop	2
	;;
; BB#181:                               ; %bb88
#0:	       stx	r0 -> $f6
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dsub	d0, d2 -> d2 ; dtoa.c:528
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d2 -> f0 ; dtoa.c:528
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:528
	;;
#0:	       btest	r0, 13 -> c1    ; dtoa.c:528
	;;
#0:	if  c1 br	.BB12_205
	;;
	       nop	2
	;;
; BB#182:                               ; %bb89.preheader
#0:	       add	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 27
#1:	       ldi	48 -> r10
	;;
.BB12_183:                              ; %bb89
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       ldm.f	r0, -2          ; dtoa.c:530
#1:	       sub	r0, 2 -> r1
#2:	       sub	r0, 1 -> r0
	;;
#0:	       ldx	$membu, r1 -> r1 ; dtoa.c:530
#1:	       stm.s	r0, r14, 27     ; dtoa.c:530
	;;
#0:	       cmpeq	r1, r10 -> c1   ; dtoa.c:530
	;;
#0:	if  c1 br	.BB12_183       ; dtoa.c:530
	;;                              ; dtoa.c:530
	       nop	2               ; dtoa.c:530
	;;
; BB#184:                               ; %bb89.ret1_crit_edge
#0:	       ldm.s	r14, 72
#1:	       br	.BB12_522
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 16
	;;
	       nop	0
	;;
.BB12_185:                              ; %bb91.preheader
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 68
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 1 -> r0
	;;
.BB12_186:                              ; %bb91
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldiu	0 -> r2
#1:	       ldiu	0 -> r1
#2:	       sub	r10, 1 -> r10
	;;
#0:	       ldim	128 -> r2
#1:	       ldim	0 -> r1
#2:	       cmpeq	r10, 0 -> c1
	;;
#0:	       ldih	513 -> r2
#1:	       ldih	0 -> r1
	;;
#0:	       stx	r2 -> $f6
	;;
#0:	       stx	r1 -> $f0
#1:	       add	r0, 1 -> r1
	;;
#0:	       fop	fmov	f6 -> f1
	;;
#0:	       fop	dmul	d1, d0 -> d1 ; dtoa.c:519
	;;
	       nop	6
	;;
#0:	       fop	df2si	d1 -> f0 ; dtoa.c:521
	;;
	       nop	1
	;;
#0:	       fop	si2df	f0 -> d3 ; dtoa.c:522
	;;
#0:	       ldx	$f0 -> r2       ; dtoa.c:521
	;;
#0:	       s2add	r2, 12 -> r2    ; dtoa.c:523
	;;
#0:	       stmb.a	r2, r0, 0       ; dtoa.c:523
#1:	       fop	dsub	d1, d3 -> d1 ; dtoa.c:522
#2:	       or	r1, 0 -> r0
	;;
	       nop	2
	;;
#0:	if !c1 br	.BB12_186
	;;
	       nop	2
	;;
#0:	       br	.BB12_179
	;;
	       nop	2
	;;
.BB12_187:                              ; %bb94
#0:	       ldm.s	r14, 64         ; dtoa.c:552
#1:	       ldga	___mprec_tens -> r0 ; dtoa.c:552
#2:	       ldi	-1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:552
	;;
#0:	       sl	r10, 3 -> r10   ; dtoa.c:552
	;;
#0:	       add	r0, r10 -> r10  ; dtoa.c:552
	;;
#0:	       ldm.f	r10, 0          ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:552
#1:	       ldm.f	r10, 4          ; dtoa.c:552
	;;
#0:	       stx	r0 -> $f0       ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:552
#1:	       ldm.s	r14, 48         ; dtoa.c:553
#2:	       fop	fmov	f0 -> f12 ; dtoa.c:552
	;;
#0:	       stx	r10 -> $f1      ; dtoa.c:552
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:553
#1:	       fop	fmov	f1 -> f13 ; dtoa.c:552
	;;
#0:	       cmplt	r1, r10 -> c1   ; dtoa.c:553
	;;
#0:	if  c1 br	.BB12_189
	;;
	       nop	2
	;;
; BB#188:                               ; %bb94
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       cmplt	r10, 1 -> c1
	;;
#0:	if  c1 br	.BB12_193
	;;
	       nop	2
	;;
.BB12_189:                              ; %bb99.preheader
#0:	       ldm.s	r14, 68
#1:	       ldiu	0 -> r12
#2:	       fop	dzero -> d5
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 80
	;;
#0:	       add	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r11
	;;
.BB12_190:                              ; %bb99
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 100
#1:	       s2add	r14, 24 -> r4
#2:	       fop	fmov	f12 -> f0 ; dtoa.c:562
#3:	       sub	r10, 1 -> r13
	;;
#0:	       add	r4, 24 -> r0
#1:	       fop	fmov	f13 -> f1 ; dtoa.c:562
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldx	$f0 -> r2       ; dtoa.c:562
	;;
#0:	       stm.a	r1, r0, 0
#1:	       ldx	$f1 -> r3       ; dtoa.c:562
	;;
#0:	       ldm.s	r14, 96
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       fop	fmov	f2 -> f14
	;;
#0:	       stx	r0 -> $f3
	;;
#0:	       callg	___divdf3       ; dtoa.c:562
#1:	       fop	fmov	f3 -> f15
	;;
#0:	       fop	fmov	f14 -> f2 ; dtoa.c:562
	;;
#0:	       fop	fmov	f15 -> f3 ; dtoa.c:562
	;;
#0:	       ldx	$f2 -> r0       ; dtoa.c:562
	;;
#0:	       ldx	$f3 -> r1       ; dtoa.c:562
	;;
#0:	       fop	df2si	d0 -> f0 ; dtoa.c:562
#1:	       cmpne	r11, 0 -> c1    ; dtoa.c:573
	;;
	       nop	1
	;;
#0:	       fop	si2df	f0 -> d1 ; dtoa.c:563
	;;
#0:	       ldx	$f0 -> r0       ; dtoa.c:562
	;;
#0:	       s2add	r0, 12 -> r0    ; dtoa.c:572
	;;
#0:	       fop	dmul	d1, d6 -> d1 ; dtoa.c:563
#1:	       stmb.a	r0, r13, 0      ; dtoa.c:572
	;;
	       nop	6
	;;
#0:	       fop	dsub	d7, d1 -> d1 ; dtoa.c:563
	;;
	       nop	2
	;;
#0:	if  c1 br	.BB12_202
	;;
	       nop	2
	;;
; BB#191:                               ; %bb100
#0:	       fop	dadd	d1, d1 -> d1 ; dtoa.c:575
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d1, d6 -> f1 ; dtoa.c:576
	;;
	       nop	1
	;;
#0:	       ldx	$f1 -> r11      ; dtoa.c:576
	;;
#0:	       btest	r11, 11 -> c1   ; dtoa.c:576
	;;
#0:	if  c1 br	.BB12_196
	;;
	       nop	2
	;;
.BB12_192:                              ; %bb100.bb106.preheader_crit_edge
#0:	       ldm.s	r14, 64
#1:	       br	.BB12_172
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       stm.s	r11, r14, 18
	;;
	       nop	0
	;;
.BB12_193:                              ; %bb96
#0:	       cmplt	r10, 0 -> c1    ; dtoa.c:556
	;;
#0:	if  c1 br	.BB12_165
	;;
	       nop	2
	;;
; BB#194:                               ; %bb97
#0:	       ldiu	0 -> r10
#1:	       ldiu	0 -> r11
	;;
#0:	       ldim	640 -> r10
#1:	       ldim	0 -> r11
	;;
#0:	       ldih	512 -> r10
#1:	       ldih	0 -> r11
	;;
#0:	       stx	r10 -> $f2
	;;
#0:	       stx	r11 -> $f0
	;;
#0:	       fop	fmov	f2 -> f1
	;;
#0:	       fop	dmul	d6, d0 -> d6 ; dtoa.c:556
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d5, d6 -> f0 ; dtoa.c:556
	;;
	       nop	1
	;;
#0:	       ldx	$f0 -> r10      ; dtoa.c:556
	;;
#0:	       btest	r10, 3 -> c1    ; dtoa.c:556
	;;
#0:	if  c1 br	.BB12_165
	;;
	       nop	2
	;;
; BB#195:                               ; %bb97.one_digit_crit_edge
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 23
	;;
#0:	       br	.BB12_163
#1:	       ldm.s	r14, 64
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       stm.s	r11, r14, 18
	;;
#0:	       stm.s	r10, r14, 22
	;;
.BB12_196:                              ; %bb101
#0:	       fop	dcmp	d1, d6 -> f1 ; dtoa.c:576
	;;
	       nop	1
	;;
#0:	       ldx	$f1 -> r11      ; dtoa.c:576
	;;
#0:	       btest	r11, 0 -> c1    ; dtoa.c:576
	;;
#0:	if  c1 br	.BB12_198       ; dtoa.c:576
	;;                              ; dtoa.c:576
	       nop	2               ; dtoa.c:576
	;;
; BB#197:                               ; %bb101.ret1_crit_edge
#0:	       stm.s	r10, r14, 27
#1:	       br	.BB12_522
	;;
	       nop	2
	;;
.BB12_198:                              ; %bb102
#0:	       ldx	$f0 -> r11      ; dtoa.c:562
	;;
#0:	       btest	r11, 0 -> c1    ; dtoa.c:576
	;;
#0:	if  c1 br	.BB12_192
	;;
	       nop	2
	;;
; BB#199:                               ; %bb102.ret1_crit_edge
#0:	       stm.s	r10, r14, 27
#1:	       br	.BB12_522
	;;
	       nop	2
	;;
.BB12_200:                              ; %bb104
                                        ;   in Loop: Header=BB12_173 Depth=1
#0:	       ldm.s	r14, 68         ; dtoa.c:580
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:580
	;;
#0:	       cmpne	r12, r10 -> c1  ; dtoa.c:580
	;;
#0:	if  c1 br	.BB12_173
	;;
	       nop	2
	;;
; BB#201:                               ; %bb105
#0:	       ldm.s	r14, 72         ; dtoa.c:582
#1:	       ldi	48 -> r12
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:582
	;;
#0:	       br	.BB12_522
#1:	       add	r11, 1 -> r11   ; dtoa.c:582
	;;
#0:	       stm.s	r11, r14, 16
#1:	       ldi	49 -> r11
	;;
#0:	       stmb.a	r12, r10, 0     ; dtoa.c:583
	;;
#0:	       stmb.a	r11, r10, 0     ; dtoa.c:586
	;;
.BB12_202:                              ; %bb108
                                        ;   in Loop: Header=BB12_190 Depth=1
#0:	       or	r12, 0 -> r1
#1:	       or	r12, 0 -> r0
	;;
#0:	       ldim	128 -> r1
#1:	       ldim	0 -> r0
	;;
#0:	       ldih	513 -> r1
#1:	       ldih	0 -> r0
	;;
#0:	       stx	r1 -> $f4
	;;
#0:	       stx	r0 -> $f0
	;;
#0:	       fop	fmov	f4 -> f1
	;;
#0:	       fop	dmul	d1, d0 -> d0 ; dtoa.c:590
	;;
	       nop	6
	;;
#0:	       fop	dcmp	d0, d5 -> f2 ; dtoa.c:590
	;;
	       nop	1
	;;
#0:	       ldx	$f2 -> r0       ; dtoa.c:590
	;;
#0:	       btest	r0, 9 -> c1     ; dtoa.c:590
	;;
#0:	if  c1 br	.BB12_204       ; dtoa.c:590
	;;                              ; dtoa.c:590
	       nop	2               ; dtoa.c:590
	;;
; BB#203:                               ; %bb108.ret1_crit_edge
#0:	       stm.s	r10, r14, 27
#1:	       br	.BB12_522
	;;
	       nop	2
	;;
.BB12_204:                              ; %bb109
                                        ;   in Loop: Header=BB12_190 Depth=1
#0:	       s2add	r14, 24 -> r2
#1:	       fop	fmov	f0 -> f2
#2:	       add	r10, 1 -> r10
#3:	       sub	r11, 1 -> r11
	;;
#0:	       add	r2, 16 -> r0
#1:	       ldx	$f2 -> r1
	;;
#0:	       stm.a	r1, r0, 0
#1:	       ldx	$f1 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       br	.BB12_190
#1:	       stm.s	r1, r14, 25
	;;
#0:	       ldm.f	r0, 4
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 24
	;;
.BB12_205:                              ; %bb92
#0:	       ldm.s	r14, 24         ; dtoa.c:549
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:549
	;;
#0:	       cmplt	r10, 0 -> c1    ; dtoa.c:549
	;;
#0:	if !c1 ldm.s	r14, 64
#1:	if !c1 ldi	14 -> r10
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmplt	r10, r0 -> c1
	;;
#0:	if !c1 br	.BB12_187
	;;
	       nop	2
	;;
; BB#206:                               ; %bb110
#0:	       ldm.s	r14, 60         ; dtoa.c:599
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:599
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:599
	;;
#0:	if  c1 br	.BB12_208       ; dtoa.c:599
#1:	       ldx	$c1, 0 -> r1    ; dtoa.c:599
	;;
#0:	       stm.s	r1, r14, 27     ; dtoa.c:599
	;;                              ; dtoa.c:599
	       nop	1               ; dtoa.c:599
	;;
; BB#207:                               ; %bb110.bb122_crit_edge
#0:	       ldi	0 -> r0
	;;
#0:	       br	.BB12_249
#1:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 84
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
.BB12_208:                              ; %bb111
#0:	       ldm.s	r14, 56         ; dtoa.c:601
#1:	       ldi	1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:601
	;;
#0:	       cmplt	r10, r11 -> c1  ; dtoa.c:601
	;;
#0:	if  c1 br	.BB12_213       ; dtoa.c:601
	;;                              ; dtoa.c:601
	       nop	2               ; dtoa.c:601
	;;
; BB#209:                               ; %bb112
#0:	       ldm.s	r14, 20         ; dtoa.c:603
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:603
	;;
#0:	       cmpeq	r10, 0 -> c1    ; dtoa.c:603
	;;
#0:	if  c1 br	.BB12_212       ; dtoa.c:603
	;;                              ; dtoa.c:603
	       nop	2               ; dtoa.c:603
	;;
; BB#210:                               ; %bb113
#0:	       ldm.s	r14, 24         ; dtoa.c:603
#1:	       ldiu	1075 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:603
	;;
#0:	       add	r11, r10 -> r0  ; dtoa.c:603
	;;
.BB12_211:                              ; %bb113
#0:	       ldm.s	r14, 84
#1:	       br	.BB12_219
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
	       nop	0
	;;
.BB12_212:                              ; %bb114
#0:	       ldm.s	r14, 36         ; dtoa.c:603
#1:	       br	.BB12_211
#2:	       ldi	54 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:603
	;;
#0:	       sub	r0, r10 -> r0   ; dtoa.c:603
	;;
	       nop	0
	;;
.BB12_213:                              ; %bb116
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 88         ; dtoa.c:616
	;;
#0:	       sub	r0, 1 -> r11
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:616
	;;
#0:	       cmplt	r0, r11 -> c1   ; dtoa.c:616
	;;
#0:	if  c1 br	.BB12_215       ; dtoa.c:616
	;;                              ; dtoa.c:616
	       nop	2               ; dtoa.c:616
	;;
; BB#214:                               ; %bb117
#0:	       ldm.s	r14, 88         ; dtoa.c:617
#1:	       br	.BB12_216
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:617
	;;
#0:	       sub	r0, r11 -> r1   ; dtoa.c:617
#1:	       or	r0, 0 -> r11
	;;
	       nop	0
	;;
.BB12_215:                              ; %bb118
#0:	       ldm.s	r14, 40
#1:	       or	r0, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, r1 -> r0
#1:	       ldi	0 -> r1
	;;
#0:	       add	r0, r11 -> r0   ; dtoa.c:620
	;;
#0:	       stm.s	r0, r14, 10
	;;
.BB12_216:                              ; %bb119
#0:	       ldm.s	r14, 80         ; dtoa.c:624
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:624
#1:	       ldm.s	r14, 84
	;;
#0:	       cmplt	r0, 0 -> c1     ; dtoa.c:624
#1:	       sra	r0, 31 -> r10   ; dtoa.c:624
	;;
#0:	if  c1 br	.BB12_218       ; dtoa.c:624
#1:	       and	r10, r0 -> r10
#2:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, r10 -> r10
	;;                              ; dtoa.c:624
	       nop	1               ; dtoa.c:624
	;;
; BB#217:                               ; %bb119.bb121_crit_edge
#0:	       or	r1, 0 -> r0
#1:	       br	.BB12_219
	;;
#0:	       stm.s	r0, r14, 22
	;;
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_218:                              ; %bb120
#0:	       ldi	0 -> r0
#1:	       stm.s	r1, r14, 22
	;;
.BB12_219:                              ; %bb121
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:103[ mprec.c:323[ dtoa.c:632 ] ]
#1:	       ldm.s	r14, 84         ; dtoa.c:630
	;;
#0:	       cmpeq	r12, 0 -> c1    ; mprec.c:103[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:630
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:630
	;;
#0:	       stm.s	r1, r14, 21     ; dtoa.c:631
	;;
#0:	if !c1 br	.BB12_232
#1:	       ldm.s	r14, 76         ; dtoa.c:631
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:631
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:631
	;;
#0:	       stm.s	r1, r14, 19     ; mprec.c:103[ mprec.c:323[ dtoa.c:632 ] ]
	;;
; BB#220:                               ; %bb.i.i31
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_532       ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#221:                               ; %bb1.i214
#0:	       or	r0, 0 -> r12    ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r12, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_230       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#222:                               ; %bb2.i215
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_224       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#223:                               ; %bb2.i215.bb6.i220_crit_edge
#0:	       or	r12, 0 -> r0
#1:	       br	.BB12_229
	;;
	       nop	2
	;;
.BB12_224:                              ; %bb3.i216
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r12, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_226       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       stm.a	0, r12, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#225:                               ; %bb3.i216.bb6.i220_crit_edge
#0:	       add	r12, 8 -> r0
#1:	       br	.BB12_229
	;;
	       nop	2
	;;
.BB12_226:                              ; %bb4.i217
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r12, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_228       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       stm.a	0, r12, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#227:                               ; %bb4.i217.bb6.i220_crit_edge
#0:	       add	r12, 16 -> r0
#1:	       br	.BB12_229
	;;
	       nop	2
	;;
.BB12_228:                              ; %bb5.i218
#0:	       stm.a	0, r12, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       add	r12, 24 -> r0
	;;
#0:	       stm.a	0, r12, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
.BB12_229:                              ; %bb6.i220
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       br	.BB12_231
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
	       nop	0
	;;
.BB12_230:                              ; %bb7.i221
#0:	       or	r12, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
.BB12_231:                              ; %_calloc_r.exit223.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	r12, r0, 19     ; mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ]
	;;
.BB12_232:                              ; %bb2.i.i32
#0:	       ldm.f	r12, 4          ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
#1:	       stm.s	r0, r14, 23     ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	if  c1 br	.BB12_234       ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	;;                              ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:323[ dtoa.c:632 ] ]
	;;
; BB#233:                               ; %bb3.i.i33
#0:	       ldm.s	r14, 92         ; mprec.c:117[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       br	.BB12_247
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	r0, r12, 1      ; mprec.c:117[ mprec.c:323[ dtoa.c:632 ] ]
	;;
.BB12_234:                              ; %bb4.i.i34
#0:	       ldi	28 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_236       ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#235:                               ; %bb4.i.i34.__i2b.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB12_248
	;;
#0:	       stm.s	r0, r14, 23
	;;
	       nop	1
	;;
.BB12_236:                              ; %bb1.i39
#0:	       stm.s	r0, r14, 23     ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r0, -4          ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_245       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#237:                               ; %bb2.i40
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_239       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#238:                               ; %bb2.i40.bb6.i45_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB12_244
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_239:                              ; %bb3.i41
#0:	       ldm.s	r14, 92         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_241       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       stm.a	0, r2, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       stm.a	0, r2, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	0               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#240:                               ; %bb3.i41.bb6.i45_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB12_244
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
.BB12_241:                              ; %bb4.i42
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r2, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	if  c1 br	.BB12_243       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       stm.a	0, r2, 3        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
; BB#242:                               ; %bb4.i42.bb6.i45_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB12_244
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 16 -> r0
	;;
	       nop	0
	;;
.BB12_243:                              ; %bb5.i43
#0:	       or	r2, 0 -> r1
	;;
#0:	       stm.a	0, r1, 4        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       add	r1, 24 -> r0
	;;
#0:	       stm.a	0, r1, 5        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
.BB12_244:                              ; %bb6.i45
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       br	.BB12_246
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
	       nop	0
	;;
.BB12_245:                              ; %bb7.i46
#0:	       ldm.s	r14, 92         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
#0:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:632 ] ] ]
	;;
.BB12_246:                              ; %bb6.i.i35
#0:	       ldm.s	r14, 92         ; mprec.c:128[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:128[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:323[ dtoa.c:632 ] ]
	;;
.BB12_247:                              ; %bb7.i.i37
#0:	       ldm.s	r14, 92         ; mprec.c:131[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:131[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:323[ dtoa.c:632 ] ]
	;;
.BB12_248:                              ; %__i2b.exit
#0:	       ldm.s	r14, 92         ; mprec.c:324[ dtoa.c:632 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:324[ dtoa.c:632 ]
	;;
#0:	       stm.a	1, r0, 5        ; mprec.c:324[ dtoa.c:632 ]
	;;
#0:	       stm.a	1, r0, 4        ; mprec.c:325[ dtoa.c:632 ]
	;;
.BB12_249:                              ; %bb122
#0:	       cmplt	r10, 1 -> c1    ; dtoa.c:634
	;;
#0:	if  c1 br	.BB12_252
	;;
	       nop	2
	;;
; BB#250:                               ; %bb122
#0:	       ldm.s	r14, 76
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB12_252
	;;
	       nop	2
	;;
; BB#251:                               ; %bb124
#0:	       or	r1, 0 -> r0     ; dtoa.c:636
#1:	       ldm.s	r14, 84         ; dtoa.c:637
#2:	       or	r10, 0 -> r1    ; dtoa.c:636
	;;
#0:	       cmple	r0, r10 -> c1   ; dtoa.c:636
	;;
#0:	if  c1 or	r0, 0 -> r1     ; dtoa.c:636
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:637
	;;
#0:	       sub	r2, r1 -> r2    ; dtoa.c:637
#1:	       sub	r0, r1 -> r0    ; dtoa.c:639
#2:	       sub	r10, r1 -> r10  ; dtoa.c:638
	;;
#0:	       stm.s	r2, r14, 21     ; dtoa.c:638
	;;
#0:	       stm.s	r0, r14, 19
	;;
.BB12_252:                              ; %bb125
#0:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r11 -> c1   ; dtoa.c:641
	;;
#0:	if !c1 br	.BB12_262
	;;
	       nop	2
	;;
; BB#253:                               ; %bb126
#0:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_260       ; dtoa.c:643
	;;                              ; dtoa.c:643
	       nop	2               ; dtoa.c:643
	;;
; BB#254:                               ; %bb127
#0:	       ldm.s	r14, 88         ; dtoa.c:645
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:645
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:645
	;;
#0:	if !c1 br	.BB12_258
	;;
	       nop	2
	;;
; BB#255:                               ; %bb128
#0:	       ldm.s	r14, 104        ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	       cmpne	r12, 0 -> c1    ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	       ldx	$c1, 0 -> r13   ; dtoa.c:647
	;;
#0:	       stm.s	r13, r14, 18    ; dtoa.c:647
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:647
	;;
#0:	       callg	___pow5mult     ; dtoa.c:647
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:647
	;;                              ; dtoa.c:647
	       nop	3               ; dtoa.c:647
	;;
#0:	       stm.s	r0, r14, 23     ; dtoa.c:647
#1:	       or	r12, 0 -> r1    ; dtoa.c:648
	;;
#0:	       callg	___multiply     ; dtoa.c:648
	;;                              ; dtoa.c:648
	       nop	3               ; dtoa.c:648
	;;
#0:	       ldm.s	r14, 72         ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	       stx	r1 -> $c1       ; mprec.c:139[ dtoa.c:649 ]
	;;
#0:	if !c1 br	.BB12_257
	;;
	       nop	2
	;;
; BB#256:                               ; %bb.i49
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:649 ]
#1:	       ldm.s	r14, 104        ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldm.f	r2, 4           ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       s2add	r1, r3 -> r1    ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       stm.a	r1, r2, 0       ; mprec.c:141[ dtoa.c:649 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:649 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:142[ dtoa.c:649 ]
	;;
#0:	       s2add	r1, r3 -> r1    ; mprec.c:142[ dtoa.c:649 ]
	;;
#0:	       stm.a	r2, r1, 0       ; mprec.c:142[ dtoa.c:649 ]
	;;
.BB12_257:                              ; %bb.i49
#0:	       stm.s	r0, r14, 26
	;;
.BB12_258:                              ; %bb129
#0:	       ldm.s	r14, 88         ; dtoa.c:652
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:652
	;;
#0:	       cmpne	r11, r0 -> c1   ; dtoa.c:652
	;;
#0:	if !c1 br	.BB12_262
	;;
	       nop	2
	;;
; BB#259:                               ; %bb130
#0:	       ldm.s	r14, 88         ; dtoa.c:652
#1:	       br	.BB12_261
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:652
#1:	       ldm.s	r14, 104        ; dtoa.c:653
	;;
#0:	       sub	r11, r0 -> r1   ; dtoa.c:652
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:653
	;;
.BB12_260:                              ; %bb131
#0:	       ldm.s	r14, 104        ; dtoa.c:656
#1:	       or	r11, 0 -> r1    ; dtoa.c:656
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:656
	;;
.BB12_261:                              ; %bb131
#0:	       callg	___pow5mult     ; dtoa.c:656
	;;                              ; dtoa.c:656
	       nop	3               ; dtoa.c:656
	;;
#0:	       stm.s	r0, r14, 26
	;;
.BB12_262:                              ; %bb132
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:103[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:103[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	if !c1 br	.BB12_275
	;;
	       nop	2
	;;
; BB#263:                               ; %bb.i.i52
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_533       ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#264:                               ; %bb1.i87
#0:	       or	r0, 0 -> r11    ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r11, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_273       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#265:                               ; %bb2.i88
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_267       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#266:                               ; %bb2.i88.bb6.i93_crit_edge
#0:	       or	r11, 0 -> r0
#1:	       br	.BB12_272
	;;
	       nop	2
	;;
.BB12_267:                              ; %bb3.i89
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r11, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_269       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       stm.a	0, r11, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#268:                               ; %bb3.i89.bb6.i93_crit_edge
#0:	       add	r11, 8 -> r0
#1:	       br	.BB12_272
	;;
	       nop	2
	;;
.BB12_269:                              ; %bb4.i90
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r11, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_271       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       stm.a	0, r11, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#270:                               ; %bb4.i90.bb6.i93_crit_edge
#0:	       add	r11, 16 -> r0
#1:	       br	.BB12_272
	;;
	       nop	2
	;;
.BB12_271:                              ; %bb5.i91
#0:	       stm.a	0, r11, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       add	r11, 24 -> r0
	;;
#0:	       stm.a	0, r11, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
.BB12_272:                              ; %bb6.i93
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       br	.BB12_274
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
	       nop	0
	;;
.BB12_273:                              ; %bb7.i94
#0:	       or	r11, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
.BB12_274:                              ; %_calloc_r.exit96.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	r11, r0, 19     ; mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ]
	;;
.BB12_275:                              ; %bb2.i.i53
#0:	       ldm.f	r11, 4          ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
#1:	       stm.s	r0, r14, 22     ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	if  c1 br	.BB12_277       ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	;;                              ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:323[ dtoa.c:658 ] ]
	;;
; BB#276:                               ; %bb3.i.i54
#0:	       ldm.s	r14, 88         ; mprec.c:117[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       br	.BB12_290
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:117[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	r0, r11, 1      ; mprec.c:117[ mprec.c:323[ dtoa.c:658 ] ]
	;;
.BB12_277:                              ; %bb4.i.i55
#0:	       ldi	28 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_279       ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#278:                               ; %bb4.i.i55.__i2b.exit60_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB12_291
	;;
#0:	       stm.s	r0, r14, 22
	;;
	       nop	1
	;;
.BB12_279:                              ; %bb1.i61
#0:	       stm.s	r0, r14, 22     ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r0, -4          ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_288       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#280:                               ; %bb2.i62
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_282       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#281:                               ; %bb2.i62.bb6.i67_crit_edge
#0:	       ldm.s	r14, 88
#1:	       br	.BB12_287
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_282:                              ; %bb3.i63
#0:	       ldm.s	r14, 88         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_284       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       stm.a	0, r2, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       stm.a	0, r2, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	0               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#283:                               ; %bb3.i63.bb6.i67_crit_edge
#0:	       ldm.s	r14, 88
#1:	       br	.BB12_287
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
.BB12_284:                              ; %bb4.i64
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r2, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	if  c1 br	.BB12_286       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       stm.a	0, r2, 3        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
; BB#285:                               ; %bb4.i64.bb6.i67_crit_edge
#0:	       ldm.s	r14, 88
#1:	       br	.BB12_287
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 16 -> r0
	;;
	       nop	0
	;;
.BB12_286:                              ; %bb5.i65
#0:	       or	r2, 0 -> r1
	;;
#0:	       stm.a	0, r1, 4        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       add	r1, 24 -> r0
	;;
#0:	       stm.a	0, r1, 5        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
.BB12_287:                              ; %bb6.i67
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       br	.BB12_289
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
	       nop	0
	;;
.BB12_288:                              ; %bb7.i68
#0:	       ldm.s	r14, 88         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
#0:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ dtoa.c:658 ] ] ]
	;;
.BB12_289:                              ; %bb6.i.i56
#0:	       ldm.s	r14, 88         ; mprec.c:128[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:128[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	1, r0, 1        ; mprec.c:128[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	2, r0, 2        ; mprec.c:129[ mprec.c:323[ dtoa.c:658 ] ]
	;;
.BB12_290:                              ; %bb7.i.i58
#0:	       ldm.s	r14, 88         ; mprec.c:131[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:131[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:323[ dtoa.c:658 ] ]
	;;
.BB12_291:                              ; %__i2b.exit60
#0:	       ldm.s	r14, 88         ; mprec.c:324[ dtoa.c:658 ]
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:324[ dtoa.c:658 ]
	;;
#0:	       stm.a	1, r1, 5        ; mprec.c:324[ dtoa.c:658 ]
	;;
#0:	       stm.a	1, r1, 4        ; mprec.c:325[ dtoa.c:658 ]
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:659
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:659
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:659
	;;
#0:	if !c1 br	.BB12_293
	;;
	       nop	2
	;;
; BB#292:                               ; %bb133
#0:	       ldm.s	r14, 88         ; dtoa.c:660
	;;
#0:	       callg	___pow5mult     ; dtoa.c:660
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:660
	;;                              ; dtoa.c:660
	       nop	3               ; dtoa.c:660
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB12_293:                              ; %bb134
#0:	       ldm.s	r14, 56
#1:	       ldi	1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmplt	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB12_295
	;;
	       nop	2
	;;
; BB#294:                               ; %bb134
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 96
#1:	if !c1 ldiu	2047 -> r0
	;;
#0:	if !c1 ldim	511 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r1
	;;
#0:	if !c1 and	r1, r0 -> r0
	;;
#0:	if !c1 cmpne	r0, 0 -> c1
	;;
#0:	if !c1 br	.BB12_296
	;;
	       nop	2
	;;
.BB12_295:                              ; %bb134.bb139_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB12_298
	;;
	       nop	2
	;;
.BB12_296:                              ; %bb136
#0:	       ldm.s	r14, 16
#1:	       ldi	0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r1, r0 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_295
	;;
	       nop	2
	;;
; BB#297:                               ; %bb138
#0:	       ldm.s	r14, 84         ; dtoa.c:674
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:674
	;;
#0:	       add	r0, 1 -> r0     ; dtoa.c:674
	;;
#0:	       stm.s	r0, r14, 21     ; dtoa.c:675
	;;
#0:	       ldm.s	r14, 76         ; dtoa.c:675
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:675
	;;
#0:	       add	r0, 1 -> r0     ; dtoa.c:675
	;;
#0:	       stm.s	r0, r14, 19
#1:	       ldi	1 -> r0
	;;
.BB12_298:                              ; %bb138
#0:	       stm.s	r0, r14, 24
	;;
#0:	       ldm.s	r14, 40         ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:689
	;;
#0:	if  c1 br	.BB12_300       ; dtoa.c:689
	;;                              ; dtoa.c:689
	       nop	2               ; dtoa.c:689
	;;
; BB#299:                               ; %bb139.bb142_crit_edge
#0:	       ldi	1 -> r0
#1:	       br	.BB12_303
	;;
	       nop	2
	;;
.BB12_300:                              ; %bb140
#0:	       ldm.s	r14, 88         ; dtoa.c:689
#1:	       ldga	65536 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;
#0:	       ldm.f	r0, 16          ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:689
	;;
#0:	       s2add	r0, r1 -> r0
	;;
#0:	       ldm.f	r0, 16          ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:689
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 16 -> r2    ; mprec.c:242[ dtoa.c:689 ]
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	       ldx	$c1 -> r1
	;;
#0:	       ldih	8 -> r2
#1:	       sl	r1, 4 -> r1
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 8 -> r2     ; mprec.c:247[ dtoa.c:689 ]
#2:	       or	r1, 8 -> r3
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r3, 0 -> r1
	;;
#0:	       ldih	128 -> r2
#1:	       or	r1, 4 -> r3
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 4 -> r2     ; mprec.c:252[ dtoa.c:689 ]
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldga	0 -> r2
#2:	if  c1 or	r3, 0 -> r1
	;;
#0:	       ldih	512 -> r2
#1:	       or	r1, 2 -> r3
	;;
#0:	       cmpult	r0, r2 -> c1
#1:	       sl	r0, 2 -> r2     ; mprec.c:257[ dtoa.c:689 ]
	;;
#0:	if  c1 or	r2, 0 -> r0
#1:	       ldi	-1 -> r2
#2:	if  c1 or	r3, 0 -> r1
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if !c1 br	.BB12_302
	;;
	       nop	2
	;;
; BB#301:                               ; %bb8.i72
#0:	       btest	r0, 30 -> c1
#1:	       ldi	32 -> r0
#2:	       add	r1, 1 -> r1     ; mprec.c:261[ dtoa.c:689 ]
	;;
#0:	if !c1 or	r0, 0 -> r1
	;;
.BB12_302:                              ; %__hi0bits.exit
#0:	       ldi	32 -> r0
	;;
#0:	       sub	r0, r1 -> r0    ; dtoa.c:689
	;;
.BB12_303:                              ; %bb142
#0:	       ldm.s	r14, 76         ; dtoa.c:689
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:689
	;;
#0:	       add	r0, r1 -> r0    ; dtoa.c:689
#1:	       ldi	32 -> r1
	;;
#0:	       and	r0, 31 -> r0    ; dtoa.c:689
	;;
#0:	       cmpeq	r0, 0 -> c1     ; dtoa.c:689
#1:	       sub	r1, r0 -> r1    ; dtoa.c:690
	;;
#0:	if  c1 or	r0, 0 -> r1
	;;
#0:	       cmpult	r1, 5 -> c1     ; dtoa.c:695
	;;
#0:	if  c1 br	.BB12_305       ; dtoa.c:695
	;;                              ; dtoa.c:695
	       nop	2               ; dtoa.c:695
	;;
; BB#304:                               ; %bb145
#0:	       ldm.s	r14, 84         ; dtoa.c:698
#1:	       sub	r1, 4 -> r1
	;;
#0:	       add	r1, r10 -> r10  ; dtoa.c:699
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:698
	;;
#0:	       add	r1, r0 -> r0    ; dtoa.c:698
	;;
#0:	       stm.s	r0, r14, 21     ; dtoa.c:699
	;;
#0:	       br	.BB12_307
#1:	       ldm.s	r14, 76         ; dtoa.c:700
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:700
	;;
#0:	       add	r1, r0 -> r0    ; dtoa.c:700
	;;
#0:	       stm.s	r0, r14, 19     ; dtoa.c:700
	;;
.BB12_305:                              ; %bb146
#0:	       cmpult	r1, 4 -> c1
	;;
#0:	if !c1 br	.BB12_307
	;;
	       nop	2
	;;
; BB#306:                               ; %bb147
#0:	       ldm.s	r14, 84         ; dtoa.c:705
#1:	       add	r1, 28 -> r0    ; dtoa.c:704
	;;
#0:	       add	r0, r10 -> r10  ; dtoa.c:706
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:705
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:705
	;;
#0:	       stm.s	r1, r14, 21     ; dtoa.c:706
	;;
#0:	       ldm.s	r14, 76         ; dtoa.c:707
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:707
	;;
#0:	       add	r0, r1 -> r1    ; dtoa.c:707
	;;
#0:	       stm.s	r1, r14, 19
	;;
.BB12_307:                              ; %bb148
#0:	       ldm.s	r14, 84         ; dtoa.c:709
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:709
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:709
	;;
#0:	if !c1 br	.BB12_309
	;;
	       nop	2
	;;
; BB#308:                               ; %bb149
#0:	       ldm.s	r14, 104        ; dtoa.c:710
	;;
#0:	       callg	___lshift       ; dtoa.c:710
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:710
	;;                              ; dtoa.c:710
	       nop	3               ; dtoa.c:710
	;;
#0:	       stm.s	r0, r14, 26
	;;
.BB12_309:                              ; %bb150
#0:	       ldm.s	r14, 76         ; dtoa.c:711
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:711
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:711
	;;
#0:	if !c1 br	.BB12_311
	;;
	       nop	2
	;;
; BB#310:                               ; %bb151
#0:	       ldm.s	r14, 88         ; dtoa.c:712
	;;
#0:	       callg	___lshift       ; dtoa.c:712
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:712
	;;                              ; dtoa.c:712
	       nop	3               ; dtoa.c:712
	;;
#0:	       stm.s	r0, r14, 22
	;;
.BB12_311:                              ; %bb152
#0:	       ldm.s	r14, 28         ; dtoa.c:713
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:713
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:713
	;;
#0:	if !c1 br	.BB12_321
	;;
	       nop	2
	;;
; BB#312:                               ; %bb153
#0:	       ldm.s	r14, 104        ; mprec.c:527[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:527[ dtoa.c:715 ]
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:527[ dtoa.c:715 ]
#1:	       ldm.s	r14, 88         ; mprec.c:528[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:715 ]
	;;
#0:	       ldm.f	r1, 16          ; mprec.c:528[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:715 ]
	;;
#0:	       cmpeq	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB12_314       ; mprec.c:535[ dtoa.c:715 ]
	;;                              ; mprec.c:535[ dtoa.c:715 ]
	       nop	2               ; mprec.c:535[ dtoa.c:715 ]
	;;
; BB#313:                               ; %bb.i74
#0:	       sub	r0, r1 -> r1    ; mprec.c:535[ dtoa.c:715 ]
#1:	       br	.BB12_317
	;;
	       nop	2
	;;
.BB12_314:                              ; %bb1.i75
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 104
	;;
#0:	       s2add	r0, r1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       add	r0, 16 -> r0
	;;
#0:	       s2add	r2, r1 -> r1
#1:	       add	r2, 20 -> r2
	;;
#0:	       add	r1, 20 -> r1
	;;
.BB12_315:                              ; %bb2.i80
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, -4          ; mprec.c:543[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543[ dtoa.c:715 ]
#1:	       ldm.f	r0, 0           ; mprec.c:543[ dtoa.c:715 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:543[ dtoa.c:715 ]
	;;
#0:	       cmpeq	r3, r4 -> c1    ; mprec.c:543[ dtoa.c:715 ]
	;;
#0:	if  c1 br	.BB12_534       ; mprec.c:543[ dtoa.c:715 ]
	;;                              ; mprec.c:543[ dtoa.c:715 ]
	       nop	2               ; mprec.c:543[ dtoa.c:715 ]
	;;
; BB#316:                               ; %bb3.i82
#0:	       cmpult	r3, r4 -> c1    ; mprec.c:544[ dtoa.c:715 ]
#1:	       ldi	-1 -> r0
#2:	       ldi	1 -> r1
	;;
#0:	if  c1 or	r0, 0 -> r1
	;;
.BB12_317:                              ; %__mcmp.exit86
#0:	       ldi	-1 -> r0
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:715
	;;
#0:	if  c1 br	.BB12_321
	;;
	       nop	2
	;;
; BB#318:                               ; %bb154
#0:	       ldm.s	r14, 64
#1:	       ldi	10 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       stm.s	r0, r14, 16     ; dtoa.c:718
	;;
#0:	       ldm.s	r14, 104        ; dtoa.c:718
	;;
#0:	       callg	___multadd      ; dtoa.c:718
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:718
	;;                              ; dtoa.c:718
	       nop	3               ; dtoa.c:718
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:718
	;;
#0:	       ldm.s	r14, 108        ; dtoa.c:719
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:719
	;;
#0:	       stx	r1 -> $c1       ; dtoa.c:719
	;;
#0:	if  c1 br	.BB12_320       ; dtoa.c:719
	;;                              ; dtoa.c:719
	       nop	2               ; dtoa.c:719
	;;
; BB#319:                               ; %bb154.bb157_crit_edge
#0:	       ldm.s	r14, 52
#1:	       br	.BB12_321
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.s	r0, r14, 20
	;;
	       nop	0
	;;
.BB12_320:                              ; %bb155
#0:	       ldm.s	r14, 92         ; dtoa.c:720
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:720
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:720
	;;                              ; dtoa.c:720
	       nop	3               ; dtoa.c:720
	;;
#0:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.s	r1, r14, 20
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB12_321:                              ; %bb157
#0:	       ldm.s	r14, 80         ; dtoa.c:724
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:724
	;;
#0:	       cmplt	r0, r1 -> c1    ; dtoa.c:724
	;;
#0:	if !c1 ldm.s	r14, 56
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 cmplt	r0, 3 -> c1
	;;
#0:	if  c1 br	.BB12_333
	;;
	       nop	2
	;;
; BB#322:                               ; %bb159
#0:	       ldi	-1 -> r10
#1:	       or	r1, 0 -> r0     ; dtoa.c:726
	;;
#0:	       cmplt	r10, r0 -> c1   ; dtoa.c:726
	;;
#0:	if !c1 br	.BB12_332
	;;
	       nop	2
	;;
; BB#323:                               ; %bb160
#0:	       ldm.s	r14, 88         ; dtoa.c:726
#1:	       ldi	5 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:726
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:726
	;;                              ; dtoa.c:726
	       nop	3               ; dtoa.c:726
	;;
#0:	       ldm.s	r14, 104        ; mprec.c:527[ dtoa.c:726 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ dtoa.c:726 ]
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:527[ dtoa.c:726 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ dtoa.c:726 ]
#1:	       ldm.f	r0, 16          ; mprec.c:528[ dtoa.c:726 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:726 ]
	;;
#0:	       cmpeq	r10, r1 -> c1
	;;
#0:	if  c1 br	.BB12_327       ; mprec.c:535[ dtoa.c:726 ]
	;;                              ; mprec.c:535[ dtoa.c:726 ]
	       nop	2               ; mprec.c:535[ dtoa.c:726 ]
	;;
; BB#324:                               ; %bb.i97
#0:	       sub	r10, r1 -> r1   ; mprec.c:535[ dtoa.c:726 ]
	;;
.BB12_325:                              ; %__mcmp.exit109
#0:	       cmplt	r1, 1 -> c1
	;;
#0:	if  c1 br	.BB12_331
	;;
	       nop	2
	;;
; BB#326:                               ; %__mcmp.exit109.one_digit_crit_edge
#0:	       ldm.s	r14, 64
#1:	       br	.BB12_162
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 18
	;;
	       nop	0
	;;
.BB12_327:                              ; %bb1.i98
#0:	       ldm.s	r14, 104
#1:	       sl	r1, 2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 20 -> r10
	;;
.BB12_328:                              ; %bb2.i103
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 104
#1:	       add	r0, r1 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, r1 -> r2
	;;
#0:	       ldm.f	r2, 16          ; mprec.c:543[ dtoa.c:726 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:543[ dtoa.c:726 ]
#1:	       ldm.f	r3, 16          ; mprec.c:543[ dtoa.c:726 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543[ dtoa.c:726 ]
	;;
#0:	       cmpeq	r2, r3 -> c1    ; mprec.c:543[ dtoa.c:726 ]
	;;
#0:	if  c1 br	.BB12_330       ; mprec.c:543[ dtoa.c:726 ]
	;;                              ; mprec.c:543[ dtoa.c:726 ]
	       nop	2               ; mprec.c:543[ dtoa.c:726 ]
	;;
; BB#329:                               ; %bb3.i105
#0:	       cmpult	r2, r3 -> c1    ; mprec.c:544[ dtoa.c:726 ]
#1:	       br	.BB12_325
#2:	       ldi	-1 -> r10
#3:	       ldi	1 -> r1
	;;
#0:	if  c1 or	r10, 0 -> r1
	;;
	       nop	1
	;;
.BB12_330:                              ; %bb7.i107
                                        ;   in Loop: Header=BB12_328 Depth=1
#0:	       sub	r1, 4 -> r1
	;;
#0:	       add	r10, r1 -> r2
	;;
#0:	       cmpult	r10, r2 -> c1   ; mprec.c:545[ dtoa.c:726 ]
	;;
#0:	if  c1 br	.BB12_328
	;;
	       nop	2
	;;
.BB12_331:                              ; %bb7.i107.no_digits_crit_edge
#0:	       stm.s	r0, r14, 22
	;;
.BB12_332:                              ; %no_digits
#0:	       ldm.s	r14, 48         ; dtoa.c:730
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:730
	;;
#0:	       xor	r10, -1 -> r10  ; dtoa.c:730
	;;
#0:	       stm.s	r10, r14, 16
#1:	       ldi	0 -> r10
	;;
#0:	       br	.BB12_514
#1:	       stm.s	r10, r14, 21
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 27    ; dtoa.c:730
	;;
.BB12_333:                              ; %bb161
#0:	       ldm.s	r14, 108        ; dtoa.c:738
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:738
	;;
#0:	       stx	r0 -> $c1       ; dtoa.c:738
	;;
#0:	if  c1 br	.BB12_336       ; dtoa.c:738
	;;                              ; dtoa.c:738
	       nop	2               ; dtoa.c:738
	;;
; BB#334:                               ; %bb197.preheader
#0:	       ldm.s	r14, 104        ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:820
#1:	       ldm.s	r14, 88         ; dtoa.c:820
	;;
#0:	       callg	_quorem         ; dtoa.c:820
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:820
	;;                              ; dtoa.c:820
	       nop	3               ; dtoa.c:820
	;;
#0:	       s2add	r0, 12 -> r10   ; dtoa.c:820
#1:	       ldi	1 -> r0
	;;
#0:	       stm.s	r10, r14, 18
	;;
#0:	       ldm.s	r14, 68         ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:820
	;;
#0:	       stmb.a	r10, r1, 0      ; dtoa.c:820
	;;
#0:	       ldm.s	r14, 80         ; dtoa.c:821
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:821
	;;
#0:	       cmplt	r0, r10 -> c1   ; dtoa.c:821
	;;
#0:	if  c1 br	.BB12_498       ; dtoa.c:821
	;;                              ; dtoa.c:821
	       nop	2               ; dtoa.c:821
	;;
; BB#335:                               ; %bb197.preheader.bb199_crit_edge
#0:	       ldm.s	r14, 68         ; dtoa.c:820
#1:	       br	.BB12_501
#2:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:820
#1:	       stm.s	r0, r14, 21
	;;
#0:	       ldm.s	r14, 104
#1:	       add	r10, 1 -> r10   ; dtoa.c:820
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_336:                              ; %bb162
#0:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; dtoa.c:740
	;;
#0:	if  c1 br	.BB12_338       ; dtoa.c:740
	;;                              ; dtoa.c:740
	       nop	2               ; dtoa.c:740
	;;
; BB#337:                               ; %bb162.bb164_crit_edge
#0:	       ldm.s	r14, 92
#1:	       br	.BB12_339
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 21
	;;
	       nop	0
	;;
.BB12_338:                              ; %bb163
#0:	       ldm.s	r14, 92         ; dtoa.c:741
#1:	       or	r10, 0 -> r1    ; dtoa.c:741
	;;
#0:	       callg	___lshift       ; dtoa.c:741
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:741
	;;                              ; dtoa.c:741
	       nop	3               ; dtoa.c:741
	;;
#0:	       stm.s	r0, r14, 21
	;;
.BB12_339:                              ; %bb164
#0:	       ldm.s	r14, 96         ; dtoa.c:748
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:748
	;;
#0:	       cmpne	r10, 0 -> c1    ; dtoa.c:748
	;;
#0:	if  c1 br	.BB12_341       ; dtoa.c:748
	;;                              ; dtoa.c:748
	       nop	2               ; dtoa.c:748
	;;
; BB#340:                               ; %bb164.bb167.preheader_crit_edge
#0:	       ldm.s	r14, 84
#1:	       br	.BB12_371
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB12_341:                              ; %bb165
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ dtoa.c:750 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:103[ dtoa.c:750 ]
#1:	       ldm.s	r14, 84         ; dtoa.c:750
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:103[ dtoa.c:750 ]
	;;
#0:	if !c1 br	.BB12_354
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:750
	;;
#0:	       ldm.f	r0, 4           ; dtoa.c:750
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:750
	;;
	       nop	0
	;;
; BB#342:                               ; %bb.i110
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_535       ; mallocr.c:3209[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ dtoa.c:750 ] ]
	;;
; BB#343:                               ; %bb1.i224
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_352       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
; BB#344:                               ; %bb2.i225
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_346       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
; BB#345:                               ; %bb2.i225.bb6.i230_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB12_351
	;;
	       nop	2
	;;
.BB12_346:                              ; %bb3.i226
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_348       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
; BB#347:                               ; %bb3.i226.bb6.i230_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB12_351
	;;
	       nop	2
	;;
.BB12_348:                              ; %bb4.i227
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_350       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
; BB#349:                               ; %bb4.i227.bb6.i230_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB12_351
	;;
	       nop	2
	;;
.BB12_350:                              ; %bb5.i228
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
.BB12_351:                              ; %bb6.i230
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       br	.BB12_353
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
	       nop	0
	;;
.BB12_352:                              ; %bb7.i231
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ dtoa.c:750 ] ]
	;;
.BB12_353:                              ; %_calloc_r.exit233.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ dtoa.c:750 ]
	;;
#0:	       stm.a	r10, r0, 19     ; mprec.c:106[ dtoa.c:750 ]
	;;
.BB12_354:                              ; %bb2.i111
#0:	       s2add	r10, r11 -> r0  ; mprec.c:115[ dtoa.c:750 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:115[ dtoa.c:750 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:115[ dtoa.c:750 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:115[ dtoa.c:750 ]
	;;
#0:	if  c1 br	.BB12_356       ; mprec.c:115[ dtoa.c:750 ]
	;;                              ; mprec.c:115[ dtoa.c:750 ]
	       nop	2               ; mprec.c:115[ dtoa.c:750 ]
	;;
; BB#355:                               ; %bb3.i112
#0:	       ldm.f	r10, 0          ; mprec.c:117[ dtoa.c:750 ]
#1:	       br	.BB12_369
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:117[ dtoa.c:750 ]
	;;
#0:	       stm.a	r11, r0, 0      ; mprec.c:117[ dtoa.c:750 ]
	;;
	       nop	0
	;;
.BB12_356:                              ; %bb4.i113
#0:	       ldi	1 -> r10
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       sl	r10, r11 -> r12 ; mprec.c:121[ dtoa.c:750 ]
#1:	       ldi	20 -> r10
	;;
#0:	       s2add	r10, r12 -> r0  ; mprec.c:123[ dtoa.c:750 ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_358       ; mallocr.c:3209[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ dtoa.c:750 ] ]
	;;
; BB#357:                               ; %bb4.i113._Balloc.exit118_crit_edge
#0:	       ldi	0 -> r10
#1:	       br	.BB12_370
	;;
	       nop	2
	;;
.BB12_358:                              ; %bb1.i119
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_367       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
; BB#359:                               ; %bb2.i120
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_361       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
; BB#360:                               ; %bb2.i120.bb6.i125_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_361:                              ; %bb3.i121
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_363       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
; BB#362:                               ; %bb3.i121.bb6.i125_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_363:                              ; %bb4.i122
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	if  c1 br	.BB12_365       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
; BB#364:                               ; %bb4.i122.bb6.i125_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB12_366
	;;
	       nop	2
	;;
.BB12_365:                              ; %bb5.i123
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
.BB12_366:                              ; %bb6.i125
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       br	.BB12_368
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
	       nop	0
	;;
.BB12_367:                              ; %bb7.i126
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ dtoa.c:750 ] ]
	;;
.BB12_368:                              ; %bb6.i114
#0:	       stm.a	r11, r10, 1     ; mprec.c:128[ dtoa.c:750 ]
	;;
#0:	       stm.a	r12, r10, 2     ; mprec.c:129[ dtoa.c:750 ]
	;;
.BB12_369:                              ; %bb7.i116
#0:	       stm.a	0, r10, 4       ; mprec.c:131[ dtoa.c:750 ]
	;;
#0:	       stm.a	0, r10, 3       ; mprec.c:131[ dtoa.c:750 ]
	;;
.BB12_370:                              ; %_Balloc.exit118
#0:	       ldm.s	r14, 84         ; dtoa.c:751
#1:	       ldi	8 -> r3
#2:	       add	r10, 12 -> r0   ; dtoa.c:751
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:751
	;;
#0:	       ldm.f	r1, 16          ; dtoa.c:751
#1:	       add	r1, 12 -> r1    ; dtoa.c:751
	;;
#0:	       callg	_memcpy         ; dtoa.c:751
#1:	       ldx	$mem, 0 -> r2   ; dtoa.c:751
	;;
#0:	       s2add	r3, r2 -> r2    ; dtoa.c:751
	;;                              ; dtoa.c:751
	       nop	2               ; dtoa.c:751
	;;
#0:	       callg	___lshift       ; dtoa.c:752
#1:	       ldi	1 -> r1
#2:	       or	r10, 0 -> r0    ; dtoa.c:752
	;;                              ; dtoa.c:752
	       nop	3               ; dtoa.c:752
	;;
.BB12_371:                              ; %bb167.preheader
#0:	       ldm.s	r14, 88
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 20 -> r10
	;;
#0:	       stm.s	r10, r14, 24
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 27
	;;
#0:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 15
	;;
#0:	       ldm.s	r14, 100
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       and	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 13
	;;
#0:	       stm.s	r0, r14, 23
	;;
.BB12_372:                              ; %bb167
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB12_453 Depth 2
                                        ;     Child Loop BB12_447 Depth 2
                                        ;     Child Loop BB12_382 Depth 2
                                        ;     Child Loop BB12_375 Depth 2
                                        ;     Child Loop BB12_449 Depth 2
                                        ;     Child Loop BB12_459 Depth 2
#0:	       ldm.s	r14, 104        ; dtoa.c:757
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:757
#1:	       ldm.s	r14, 88         ; dtoa.c:757
	;;
#0:	       or	r10, 0 -> r0    ; dtoa.c:757
	;;
#0:	       callg	_quorem         ; dtoa.c:757
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:757
	;;                              ; dtoa.c:757
	       nop	3               ; dtoa.c:757
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:527[ dtoa.c:761 ]
#1:	       s2add	r0, 12 -> r2    ; dtoa.c:757
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ dtoa.c:761 ]
#1:	       ldm.s	r14, 84         ; mprec.c:528[ dtoa.c:761 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:761 ]
	;;
#0:	       ldm.f	r1, 16          ; mprec.c:528[ dtoa.c:761 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:761 ]
#1:	       stm.s	r2, r14, 18     ; dtoa.c:757
	;;
#0:	       cmpeq	r10, r1 -> c1
#1:	       stm.s	r0, r14, 12     ; dtoa.c:757
	;;
#0:	if  c1 br	.BB12_374       ; mprec.c:535[ dtoa.c:761 ]
	;;                              ; mprec.c:535[ dtoa.c:761 ]
	       nop	2               ; mprec.c:535[ dtoa.c:761 ]
	;;
; BB#373:                               ; %bb.i129
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       sub	r10, r1 -> r1   ; mprec.c:535[ dtoa.c:761 ]
#1:	       br	.BB12_380
	;;
#0:	       stm.s	r1, r14, 20
	;;
	       nop	1
	;;
.BB12_374:                              ; %bb1.i130
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 84
	;;
#0:	       add	r10, 20 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       s2add	r0, r1 -> r0
#1:	       s2add	r10, r1 -> r1
	;;
#0:	       add	r0, 16 -> r0
	;;
.BB12_375:                              ; %bb2.i135
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r1, -4          ; mprec.c:543[ dtoa.c:761 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:543[ dtoa.c:761 ]
#1:	       ldm.f	r0, 0           ; mprec.c:543[ dtoa.c:761 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543[ dtoa.c:761 ]
	;;
#0:	       cmpeq	r2, r3 -> c1    ; mprec.c:543[ dtoa.c:761 ]
	;;
#0:	if  c1 br	.BB12_377       ; mprec.c:543[ dtoa.c:761 ]
	;;                              ; mprec.c:543[ dtoa.c:761 ]
	       nop	2               ; mprec.c:543[ dtoa.c:761 ]
	;;
; BB#376:                               ; %bb3.i137
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmpult	r2, r3 -> c1    ; mprec.c:544[ dtoa.c:761 ]
#1:	       br	.BB12_379
#2:	       ldi	1 -> r10
#3:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10
	;;
	       nop	1
	;;
.BB12_377:                              ; %bb7.i139
                                        ;   in Loop: Header=BB12_375 Depth=2
#0:	       sub	r1, 4 -> r1
#1:	       sub	r0, 4 -> r0
	;;
#0:	       cmpult	r10, r1 -> c1   ; mprec.c:545[ dtoa.c:761 ]
	;;
#0:	if  c1 br	.BB12_375
	;;
	       nop	2
	;;
; BB#378:                               ; %bb7.i139.__mcmp.exit141_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	0 -> r10
	;;
.BB12_379:                              ; %bb7.i139.__mcmp.exit141_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.s	r10, r14, 20
	;;
.BB12_380:                              ; %__mcmp.exit141
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 88         ; mprec.c:527[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:527[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ mprec.c:563[ dtoa.c:762 ] ]
#1:	       ldm.s	r14, 92         ; mprec.c:528[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:528[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:528[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:528[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       cmpne	r10, r0 -> c1   ; mprec.c:535[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	if  c1 br	.BB12_385       ; mprec.c:535[ mprec.c:563[ dtoa.c:762 ] ]
	;;                              ; mprec.c:535[ mprec.c:563[ dtoa.c:762 ] ]
	       nop	2               ; mprec.c:535[ mprec.c:563[ dtoa.c:762 ] ]
	;;
; BB#381:                               ; %bb2.i.i144.preheader
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 96
	;;
#0:	       s2add	r10, r0 -> r10
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       add	r10, 16 -> r10
	;;
#0:	       s2add	r1, r0 -> r0
	;;
.BB12_382:                              ; %bb2.i.i144
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, -4          ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
#1:	       ldm.f	r10, 0          ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       cmpeq	r1, r2 -> c1    ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	if  c1 br	.BB12_384       ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;                              ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	       nop	2               ; mprec.c:543[ mprec.c:563[ dtoa.c:762 ] ]
	;;
; BB#383:                               ; %bb3.i.i145
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmpult	r1, r2 -> c1    ; mprec.c:544[ mprec.c:563[ dtoa.c:762 ] ]
#1:	       br	.BB12_386
#2:	       ldi	1 -> r10
#3:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10
	;;
	       nop	1
	;;
.BB12_384:                              ; %bb7.i.i146
                                        ;   in Loop: Header=BB12_382 Depth=2
#0:	       ldm.s	r14, 96         ; mprec.c:545[ mprec.c:563[ dtoa.c:762 ] ]
#1:	       sub	r0, 4 -> r0
#2:	       sub	r10, 4 -> r10
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:545[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	       cmpult	r1, r0 -> c1    ; mprec.c:545[ mprec.c:563[ dtoa.c:762 ] ]
	;;
#0:	if  c1 br	.BB12_382
	;;
	       nop	2
	;;
#0:	       br	.BB12_387
	;;
	       nop	2
	;;
.BB12_385:                              ; %bb.i.i142
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       sub	r10, r0 -> r10  ; mprec.c:535[ mprec.c:563[ dtoa.c:762 ] ]
	;;
.BB12_386:                              ; %__mcmp.exit.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:564[ dtoa.c:762 ]
	;;
#0:	if  c1 br	.BB12_417       ; mprec.c:564[ dtoa.c:762 ]
	;;                              ; mprec.c:564[ dtoa.c:762 ]
	       nop	2               ; mprec.c:564[ dtoa.c:762 ]
	;;
.BB12_387:                              ; %bb.i147
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:103[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:103[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	if !c1 br	.BB12_400
	;;
	       nop	2
	;;
; BB#388:                               ; %bb.i17.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_536       ; mallocr.c:3209[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#389:                               ; %bb1.i1.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_398       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#390:                               ; %bb2.i2.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_392       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#391:                               ; %bb2.i2.i.bb6.i5.i150_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r10, 0 -> r0
#1:	       br	.BB12_397
	;;
	       nop	2
	;;
.BB12_392:                              ; %bb3.i3.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_394       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#393:                               ; %bb3.i3.i.bb6.i5.i150_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r10, 8 -> r0
#1:	       br	.BB12_397
	;;
	       nop	2
	;;
.BB12_394:                              ; %bb4.i4.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_396       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#395:                               ; %bb4.i4.i.bb6.i5.i150_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r10, 16 -> r0
#1:	       br	.BB12_397
	;;
	       nop	2
	;;
.BB12_396:                              ; %bb5.i.i148
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
.BB12_397:                              ; %bb6.i5.i150
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       br	.BB12_399
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
	       nop	0
	;;
.BB12_398:                              ; %bb7.i6.i151
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
.BB12_399:                              ; %_calloc_r.exit.i153.thread
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r10, r0, 19     ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
	;;
.BB12_400:                              ; %bb2.i18.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.f	r10, 0          ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	if  c1 br	.BB12_402       ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	;;                              ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:566[ dtoa.c:762 ] ]
	;;
; BB#401:                               ; %bb3.i19.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.f	r11, 0          ; mprec.c:117[ mprec.c:566[ dtoa.c:762 ] ]
#1:	       br	.BB12_415
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r0, r10, 0      ; mprec.c:117[ mprec.c:566[ dtoa.c:762 ] ]
	;;
	       nop	0
	;;
.BB12_402:                              ; %bb4.i20.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	24 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_404       ; mallocr.c:3209[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#403:                               ; %bb4.i20.i._Balloc.exit25.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	0 -> r11
#1:	       br	.BB12_416
	;;
	       nop	2
	;;
.BB12_404:                              ; %bb1.i7.i154
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r0, 0 -> r11    ; mallocr.c:3207[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       ldi	-4 -> r0
	;;
#0:	       ldm.f	r11, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:3233[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       sub	r10, 4 -> r10
	;;
#0:	       and	r10, r0 -> r1
#1:	       ldi	36 -> r10
	;;
#0:	       cmpult	r10, r1 -> c1   ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_413       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#405:                               ; %bb2.i8.i155
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	19 -> r10
	;;
#0:	       cmpult	r10, r1 -> c1   ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_407       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#406:                               ; %bb2.i8.i155.bb6.i13.i160_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r11, 0 -> r10
#1:	       br	.BB12_412
	;;
	       nop	2
	;;
.BB12_407:                              ; %bb3.i9.i156
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	27 -> r10
#1:	       stm.a	0, r11, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r10, r1 -> c1   ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_409       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r11, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#408:                               ; %bb3.i9.i156.bb6.i13.i160_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r11, 8 -> r10
#1:	       br	.BB12_412
	;;
	       nop	2
	;;
.BB12_409:                              ; %bb4.i10.i157
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	35 -> r10
#1:	       stm.a	0, r11, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r10, r1 -> c1   ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_411       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r11, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
; BB#410:                               ; %bb4.i10.i157.bb6.i13.i160_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r11, 16 -> r10
#1:	       br	.BB12_412
	;;
	       nop	2
	;;
.BB12_411:                              ; %bb5.i11.i158
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       add	r11, 24 -> r10
	;;
#0:	       stm.a	0, r11, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
.BB12_412:                              ; %bb6.i13.i160
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       br	.BB12_414
	;;
#0:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
#0:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
	       nop	0
	;;
.BB12_413:                              ; %bb7.i14.i161
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r11, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:566[ dtoa.c:762 ] ] ]
	;;
.BB12_414:                              ; %bb6.i21.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 1       ; mprec.c:128[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	1, r11, 2       ; mprec.c:129[ mprec.c:566[ dtoa.c:762 ] ]
	;;
.BB12_415:                              ; %bb7.i23.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 4       ; mprec.c:131[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	0, r11, 3       ; mprec.c:131[ mprec.c:566[ dtoa.c:762 ] ]
	;;
.BB12_416:                              ; %_Balloc.exit25.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	1, r11, 4       ; mprec.c:567[ dtoa.c:762 ]
#1:	       br	.BB12_455
#2:	       ldi	1 -> r10
	;;
#0:	       stm.a	0, r11, 5       ; mprec.c:568[ dtoa.c:762 ]
	;;
	       nop	1
	;;
.BB12_417:                              ; %bb1.i164
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 88
#1:	       cmplt	r10, 0 -> c1    ; mprec.c:571[ dtoa.c:762 ]
#2:	       sr	r10, 31 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 92
	;;
#0:	       or	r11, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	if  c1 or	r1, 0 -> r0
#1:	       or	r1, 0 -> r13
	;;
#0:	       stm.s	r0, r14, 25     ; mprec.c:103[ mprec.c:580[ dtoa.c:762 ] ]
#1:	if  c1 or	r11, 0 -> r13
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:103[ mprec.c:580[ dtoa.c:762 ] ]
#1:	       ldm.f	r0, 4           ; mprec.c:580[ dtoa.c:762 ]
	;;
#0:	       cmpeq	r12, 0 -> c1    ; mprec.c:103[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	if !c1 br	.BB12_430
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:580[ dtoa.c:762 ]
	;;
#0:	       stm.s	r0, r14, 19
	;;
	       nop	1
	;;
; BB#418:                               ; %bb.i13.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_537       ; mallocr.c:3209[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#419:                               ; %bb1.i17.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r0, 0 -> r12    ; mallocr.c:3207[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       ldi	-4 -> r0
	;;
#0:	       ldm.f	r12, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:3233[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       sub	r11, 4 -> r11
	;;
#0:	       and	r11, r0 -> r1
#1:	       ldi	36 -> r11
	;;
#0:	       cmpult	r11, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_428       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#420:                               ; %bb2.i19.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	19 -> r11
	;;
#0:	       cmpult	r11, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_422       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#421:                               ; %bb2.i19.i.bb6.i24.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r12, 0 -> r11
#1:	       br	.BB12_427
	;;
	       nop	2
	;;
.BB12_422:                              ; %bb3.i20.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	27 -> r11
#1:	       stm.a	0, r12, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r11, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_424       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r12, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#423:                               ; %bb3.i20.i.bb6.i24.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r12, 8 -> r11
#1:	       br	.BB12_427
	;;
	       nop	2
	;;
.BB12_424:                              ; %bb4.i21.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	35 -> r11
#1:	       stm.a	0, r12, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r11, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_426       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r12, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#425:                               ; %bb4.i21.i.bb6.i24.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r12, 16 -> r11
#1:	       br	.BB12_427
	;;
	       nop	2
	;;
.BB12_426:                              ; %bb5.i22.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r12, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       add	r12, 24 -> r11
	;;
#0:	       stm.a	0, r12, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
.BB12_427:                              ; %bb6.i24.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       br	.BB12_429
	;;
#0:	       stm.a	0, r11, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       stm.a	0, r11, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
	       nop	0
	;;
.BB12_428:                              ; %bb7.i25.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r12, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
.BB12_429:                              ; %_calloc_r.exit27.i.thread
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r12, r0, 19     ; mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ]
	;;
.BB12_430:                              ; %bb2.i14.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 76         ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       s2add	r12, r11 -> r0  ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	if  c1 br	.BB12_432       ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;                              ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:580[ dtoa.c:762 ] ]
	;;
; BB#431:                               ; %bb3.i15.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.f	r11, 0          ; mprec.c:117[ mprec.c:580[ dtoa.c:762 ] ]
#1:	       br	.BB12_445
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:117[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:117[ mprec.c:580[ dtoa.c:762 ] ]
	;;
	       nop	0
	;;
.BB12_432:                              ; %bb4.i.i165
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 76         ; mprec.c:121[ mprec.c:580[ dtoa.c:762 ] ]
#1:	       ldi	1 -> r11
	;;
#0:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:121[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       sl	r11, r0 -> r12  ; mprec.c:121[ mprec.c:580[ dtoa.c:762 ] ]
#1:	       ldi	20 -> r11
	;;
#0:	       s2add	r11, r12 -> r0  ; mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_434       ; mallocr.c:3209[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#433:                               ; %bb4.i.i165._Balloc.exit.i168_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	0 -> r11
#1:	       br	.BB12_446
	;;
	       nop	2
	;;
.BB12_434:                              ; %bb1.i28.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r0, 0 -> r11    ; mallocr.c:3207[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r11, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_443       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#435:                               ; %bb2.i29.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_437       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#436:                               ; %bb2.i29.i.bb6.i34.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r11, 0 -> r0
#1:	       br	.BB12_442
	;;
	       nop	2
	;;
.BB12_437:                              ; %bb3.i30.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r11, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_439       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r11, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#438:                               ; %bb3.i30.i.bb6.i34.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r11, 8 -> r0
#1:	       br	.BB12_442
	;;
	       nop	2
	;;
.BB12_439:                              ; %bb4.i31.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r11, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	if  c1 br	.BB12_441       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       stm.a	0, r11, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
; BB#440:                               ; %bb4.i31.i.bb6.i34.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       add	r11, 16 -> r0
#1:	       br	.BB12_442
	;;
	       nop	2
	;;
.BB12_441:                              ; %bb5.i32.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       add	r11, 24 -> r0
	;;
#0:	       stm.a	0, r11, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
.BB12_442:                              ; %bb6.i34.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       br	.BB12_444
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
	       nop	0
	;;
.BB12_443:                              ; %bb7.i35.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r11, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:580[ dtoa.c:762 ] ] ]
	;;
.BB12_444:                              ; %bb6.i.i166
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 76         ; mprec.c:128[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:128[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r0, r11, 1      ; mprec.c:128[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	r12, r11, 2     ; mprec.c:129[ mprec.c:580[ dtoa.c:762 ] ]
	;;
.BB12_445:                              ; %bb7.i16.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	0, r11, 4       ; mprec.c:131[ mprec.c:580[ dtoa.c:762 ] ]
	;;
#0:	       stm.a	0, r11, 3       ; mprec.c:131[ mprec.c:580[ dtoa.c:762 ] ]
	;;
.BB12_446:                              ; %_Balloc.exit.i168
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	r10, r11, 3     ; mprec.c:581[ dtoa.c:762 ]
#1:	       ldi	20 -> r1
#2:	       ldi	0 -> r2
	;;
#0:	       ldm.f	r13, 16         ; mprec.c:585[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:585[ dtoa.c:762 ]
#1:	       ldm.s	r14, 100        ; mprec.c:582[ dtoa.c:762 ]
	;;
#0:	       s2add	r13, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:582[ dtoa.c:762 ]
#1:	       add	r0, 20 -> r0
	;;
#0:	       ldm.f	r10, 16         ; mprec.c:582[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:582[ dtoa.c:762 ]
	;;
.BB12_447:                              ; %bb5.i169
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.s	r14, 100
#1:	       add	r13, r1 -> r4
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, r1 -> r3
	;;
#0:	       ldm.f	r3, 0           ; mprec.c:593[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:593[ dtoa.c:762 ]
#1:	       ldm.f	r4, 0           ; mprec.c:593[ dtoa.c:762 ]
	;;
#0:	       mask	r3, 4 -> r5     ; mprec.c:593[ dtoa.c:762 ]
#1:	       sr	r3, 16 -> r3    ; mprec.c:596[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:593[ dtoa.c:762 ]
	;;
#0:	       mask	r4, 4 -> r6     ; mprec.c:593[ dtoa.c:762 ]
#1:	       sr	r4, 16 -> r4    ; mprec.c:596[ dtoa.c:762 ]
	;;
#0:	       sub	r5, r6 -> r5    ; mprec.c:593[ dtoa.c:762 ]
#1:	       sub	r3, r4 -> r3    ; mprec.c:596[ dtoa.c:762 ]
#2:	       add	r1, 4 -> r6
#3:	       add	r11, r1 -> r1
	;;
#0:	       add	r5, r2 -> r2    ; mprec.c:593[ dtoa.c:762 ]
	;;
#0:	       sra	r2, 16 -> r4    ; mprec.c:594[ dtoa.c:762 ]
#1:	       mask	r2, 4 -> r5     ; mprec.c:599[ dtoa.c:762 ]
	;;
#0:	       add	r3, r4 -> r3    ; mprec.c:596[ dtoa.c:762 ]
	;;
#0:	       sl	r3, 16 -> r4    ; mprec.c:599[ dtoa.c:762 ]
#1:	       sra	r3, 16 -> r2    ; mprec.c:597[ dtoa.c:762 ]
	;;
#0:	       or	r4, r5 -> r3    ; mprec.c:599[ dtoa.c:762 ]
#1:	       add	r13, r6 -> r4
	;;
#0:	       cmpult	r4, r0 -> c1    ; mprec.c:601[ dtoa.c:762 ]
#1:	       stm.a	r3, r1, 0       ; mprec.c:599[ dtoa.c:762 ]
#2:	       or	r6, 0 -> r1
	;;
#0:	if  c1 br	.BB12_447       ; mprec.c:601[ dtoa.c:762 ]
	;;                              ; mprec.c:601[ dtoa.c:762 ]
	       nop	2               ; mprec.c:601[ dtoa.c:762 ]
	;;
; BB#448:                               ; %bb7.preheader.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 100
#1:	       add	r11, r6 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       s2add	r0, r10 -> r1
#1:	       add	r0, r6 -> r0
	;;
#0:	       add	r1, 20 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1    ; mprec.c:602[ dtoa.c:762 ]
	;;
#0:	if !c1 br	.BB12_451
	;;
	       nop	2
	;;
.BB12_449:                              ; %bb6.i170
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 0           ; mprec.c:604[ dtoa.c:762 ]
#1:	       add	r0, 4 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mprec.c:602[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:604[ dtoa.c:762 ]
	;;
#0:	       mask	r4, 4 -> r5     ; mprec.c:604[ dtoa.c:762 ]
#1:	       sr	r4, 16 -> r6    ; mprec.c:607[ dtoa.c:762 ]
	;;
#0:	       add	r5, r2 -> r5    ; mprec.c:604[ dtoa.c:762 ]
#1:	       add	r4, r2 -> r2
	;;
#0:	       sra	r5, 16 -> r5    ; mprec.c:605[ dtoa.c:762 ]
	;;
#0:	if  c1 br	.BB12_449       ; mprec.c:602[ dtoa.c:762 ]
#1:	       add	r5, r6 -> r5    ; mprec.c:607[ dtoa.c:762 ]
#2:	       mask	r2, 4 -> r6
	;;
#0:	       sl	r5, 16 -> r4    ; mprec.c:610[ dtoa.c:762 ]
#1:	       sra	r5, 16 -> r2    ; mprec.c:608[ dtoa.c:762 ]
#2:	       add	r3, 4 -> r5
	;;
#0:	       or	r4, r6 -> r4    ; mprec.c:610[ dtoa.c:762 ]
	;;
#0:	       stm.a	r4, r3, 0
#1:	       or	r5, 0 -> r3
	;;
; BB#450:                               ; %bb6.i170.bb9.preheader.i_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       or	r5, 0 -> r3
	;;
.BB12_451:                              ; %bb9.preheader.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.f	r3, -4          ; mprec.c:629[ dtoa.c:762 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:629[ dtoa.c:762 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:629[ dtoa.c:762 ]
	;;
#0:	if !c1 br	.BB12_454
	;;
	       nop	2
	;;
; BB#452:                               ; %bb.nph.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       sub	r3, 8 -> r0
	;;
.BB12_453:                              ; %bb8.i173
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r0, 0           ; mprec.c:629[ dtoa.c:762 ]
#1:	       sub	r10, 1 -> r10
#2:	       sub	r0, 4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:629[ dtoa.c:762 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:629[ dtoa.c:762 ]
	;;
#0:	if  c1 br	.BB12_453       ; mprec.c:629[ dtoa.c:762 ]
	;;                              ; mprec.c:629[ dtoa.c:762 ]
	       nop	2               ; mprec.c:629[ dtoa.c:762 ]
	;;
.BB12_454:                              ; %bb10.i174
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.a	r10, r11, 4     ; mprec.c:631[ dtoa.c:762 ]
	;;
.BB12_455:                              ; %__mdiff.exit
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.f	r11, 12         ; dtoa.c:763
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:763
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:763
	;;
#0:	if  c1 br	.BB12_463       ; dtoa.c:763
	;;                              ; dtoa.c:763
	       nop	2               ; dtoa.c:763
	;;
; BB#456:                               ; %bb168
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 104        ; mprec.c:527[ dtoa.c:763 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:527[ dtoa.c:763 ]
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527[ dtoa.c:763 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:527[ dtoa.c:763 ]
	;;
#0:	       cmpeq	r0, r10 -> c1
	;;
#0:	if  c1 br	.BB12_458       ; mprec.c:535[ dtoa.c:763 ]
	;;                              ; mprec.c:535[ dtoa.c:763 ]
	       nop	2               ; mprec.c:535[ dtoa.c:763 ]
	;;
; BB#457:                               ; %bb.i175
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       sub	r0, r10 -> r10  ; mprec.c:535[ dtoa.c:763 ]
#1:	       br	.BB12_465
	;;
	       nop	2
	;;
.BB12_458:                              ; %bb1.i176
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 104
#1:	       s2add	r11, r10 -> r1
	;;
#0:	       add	r1, 16 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 20 -> r0
	;;
#0:	       s2add	r0, r10 -> r10
	;;
.BB12_459:                              ; %bb2.i181
                                        ;   Parent Loop BB12_372 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r10, -4         ; mprec.c:543[ dtoa.c:763 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:543[ dtoa.c:763 ]
#1:	       ldm.f	r1, 0           ; mprec.c:543[ dtoa.c:763 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543[ dtoa.c:763 ]
	;;
#0:	       cmpeq	r2, r3 -> c1    ; mprec.c:543[ dtoa.c:763 ]
	;;
#0:	if  c1 br	.BB12_461       ; mprec.c:543[ dtoa.c:763 ]
	;;                              ; mprec.c:543[ dtoa.c:763 ]
	       nop	2               ; mprec.c:543[ dtoa.c:763 ]
	;;
; BB#460:                               ; %bb3.i183
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmpult	r2, r3 -> c1    ; mprec.c:544[ dtoa.c:763 ]
#1:	       br	.BB12_465
#2:	       ldi	1 -> r10
#3:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r0, 0 -> r10
	;;
	       nop	1
	;;
.BB12_461:                              ; %bb7.i185
                                        ;   in Loop: Header=BB12_459 Depth=2
#0:	       sub	r10, 4 -> r10
#1:	       sub	r1, 4 -> r1
	;;
#0:	       cmpult	r0, r10 -> c1   ; mprec.c:545[ dtoa.c:763 ]
	;;
#0:	if  c1 br	.BB12_459
	;;
	       nop	2
	;;
; BB#462:                               ; %bb7.i185.bb.i188_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	0 -> r10
#1:	       br	.BB12_465
	;;
	       nop	2
	;;
.BB12_463:                              ; %bb170
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:139[ dtoa.c:764 ]
	;;
#0:	if  c1 br	.BB12_538       ; mprec.c:139[ dtoa.c:764 ]
	;;                              ; mprec.c:139[ dtoa.c:764 ]
	       nop	2               ; mprec.c:139[ dtoa.c:764 ]
	;;
; BB#464:                               ; %bb170.bb.i188_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	1 -> r10
	;;
.BB12_465:                              ; %bb.i188
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:764 ]
#1:	       ldm.f	r11, 4          ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       stm.a	r0, r11, 0      ; mprec.c:141[ dtoa.c:764 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:764 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ dtoa.c:764 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:142[ dtoa.c:764 ]
	;;
#0:	       stm.a	r11, r0, 0      ; mprec.c:142[ dtoa.c:764 ]
	;;
.BB12_466:                              ; %_Bfree.exit190
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       or	r10, r2 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 52
#1:	if !c1 ldi	0 -> r1
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 or	r0, r1 -> r0
	;;
#0:	if !c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_469
	;;
	       nop	2
	;;
; BB#467:                               ; %bb173
#0:	       ldm.s	r14, 72         ; dtoa.c:768
#1:	       ldi	57 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:768
	;;
#0:	       cmpne	r0, r10 -> c1   ; dtoa.c:768
	;;
#0:	if !c1 br	.BB12_486
	;;
	       nop	2
	;;
; BB#468:                               ; %bb174
#0:	       ldm.s	r14, 80         ; dtoa.c:770
#1:	       ldi	0 -> r10
#2:	       ldi	49 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:770
#1:	       ldm.s	r14, 48         ; dtoa.c:771
	;;
#0:	       cmplt	r10, r1 -> c1   ; dtoa.c:770
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:771
#1:	       ldm.s	r14, 72
	;;
#0:	       add	r10, r0 -> r10  ; dtoa.c:771
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 108
	;;
#0:	       br	.BB12_514
#1:	if  c1 or	r10, 0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:772
	;;
.BB12_469:                              ; %bb177
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 80         ; dtoa.c:776
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:776
	;;
#0:	       cmplt	r0, 0 -> c1     ; dtoa.c:776
	;;
#0:	if  c1 br	.BB12_471
	;;
	       nop	2
	;;
; BB#470:                               ; %bb178
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       or	r0, r2 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 52
#1:	if !c1 ldi	0 -> r1
	;;
#0:	if !c1 ldx	$mem, 0 -> r0
	;;
#0:	if !c1 or	r0, r1 -> r0
	;;
#0:	if !c1 cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB12_484
	;;
	       nop	2
	;;
.BB12_471:                              ; %bb181
#0:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; dtoa.c:782
	;;
#0:	if !c1 br	.BB12_483
	;;
	       nop	2
	;;
; BB#472:                               ; %bb182
#0:	       ldm.s	r14, 104        ; dtoa.c:784
#1:	       ldi	1 -> r1
	;;
#0:	       callg	___lshift       ; dtoa.c:784
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:784
	;;                              ; dtoa.c:784
	       nop	3               ; dtoa.c:784
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527[ dtoa.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:527[ dtoa.c:785 ]
#1:	       ldm.s	r14, 88         ; mprec.c:528[ dtoa.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:785 ]
	;;
#0:	       ldm.f	r1, 16          ; mprec.c:528[ dtoa.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:528[ dtoa.c:785 ]
	;;
#0:	       cmpeq	r10, r1 -> c1
	;;
#0:	if  c1 br	.BB12_474       ; mprec.c:535[ dtoa.c:785 ]
	;;                              ; mprec.c:535[ dtoa.c:785 ]
	       nop	2               ; mprec.c:535[ dtoa.c:785 ]
	;;
; BB#473:                               ; %bb.i191
#0:	       sub	r10, r1 -> r10  ; mprec.c:535[ dtoa.c:785 ]
#1:	       br	.BB12_477
	;;
	       nop	2
	;;
.BB12_474:                              ; %bb1.i192
#0:	       ldm.s	r14, 88
#1:	       add	r0, 20 -> r2
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       s2add	r10, r1 -> r10
#1:	       s2add	r0, r1 -> r1
	;;
#0:	       add	r10, 16 -> r10
#1:	       add	r1, 20 -> r1
	;;
.BB12_475:                              ; %bb2.i197
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r1, -4          ; mprec.c:543[ dtoa.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:543[ dtoa.c:785 ]
#1:	       ldm.f	r10, 0          ; mprec.c:543[ dtoa.c:785 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:543[ dtoa.c:785 ]
	;;
#0:	       cmpeq	r3, r4 -> c1    ; mprec.c:543[ dtoa.c:785 ]
	;;
#0:	if  c1 br	.BB12_479       ; mprec.c:543[ dtoa.c:785 ]
	;;                              ; mprec.c:543[ dtoa.c:785 ]
	       nop	2               ; mprec.c:543[ dtoa.c:785 ]
	;;
; BB#476:                               ; %bb3.i199
#0:	       cmpult	r3, r4 -> c1    ; mprec.c:544[ dtoa.c:785 ]
#1:	       ldi	-1 -> r1
#2:	       ldi	1 -> r10
	;;
#0:	if  c1 or	r1, 0 -> r10
	;;
.BB12_477:                              ; %__mcmp.exit203
#0:	       ldi	0 -> r1
	;;
#0:	       cmplt	r1, r10 -> c1   ; dtoa.c:786
	;;
#0:	if  c1 br	.BB12_481
	;;
	       nop	2
	;;
; BB#478:                               ; %bb183
#0:	       cmpeq	r10, 0 -> c1    ; dtoa.c:786
	;;
#0:	if  c1 br	.BB12_480
	;;
	       nop	2
	;;
#0:	       br	.BB12_482
	;;
	       nop	2
	;;
.BB12_479:                              ; %bb7.i201
                                        ;   in Loop: Header=BB12_475 Depth=1
#0:	       sub	r1, 4 -> r1
#1:	       sub	r10, 4 -> r10
	;;
#0:	       cmpult	r2, r1 -> c1    ; mprec.c:545[ dtoa.c:785 ]
	;;
#0:	if  c1 br	.BB12_475
	;;
	       nop	2
	;;
.BB12_480:                              ; %bb184
#0:	       ldm.s	r14, 72         ; dtoa.c:786
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:786
	;;
#0:	       btest	r10, 0 -> c1    ; dtoa.c:786
	;;
#0:	if !c1 br	.BB12_482
	;;
	       nop	2
	;;
.BB12_481:                              ; %bb186
#0:	       ldm.s	r14, 48         ; dtoa.c:786
#1:	       ldi	49 -> r10
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:786
	;;
#0:	       add	r1, r10 -> r10  ; dtoa.c:786
#1:	       ldi	58 -> r1
	;;
#0:	       cmpeq	r10, r1 -> c1   ; dtoa.c:786
#1:	       stm.s	r10, r14, 18
	;;
#0:	if  c1 br	.BB12_539       ; dtoa.c:786
	;;                              ; dtoa.c:786
	       nop	2               ; dtoa.c:786
	;;
.BB12_482:                              ; %bb186.bb187_crit_edge
#0:	       stm.s	r0, r14, 26
	;;
.BB12_483:                              ; %bb187
#0:	       ldm.s	r14, 108
	;;
#0:	       br	.BB12_514
#1:	       ldx	$mem, 0 -> r10
#2:	       ldm.s	r14, 72         ; dtoa.c:790
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:790
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:790
	;;
.BB12_484:                              ; %bb188
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       cmplt	r10, 1 -> c1    ; dtoa.c:793
	;;
#0:	if  c1 br	.BB12_492       ; dtoa.c:793
	;;                              ; dtoa.c:793
	       nop	2               ; dtoa.c:793
	;;
; BB#485:                               ; %bb189
#0:	       ldm.s	r14, 72         ; dtoa.c:795
#1:	       ldi	57 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:795
	;;
#0:	       cmpne	r0, r10 -> c1   ; dtoa.c:795
	;;
#0:	if  c1 br	.BB12_491       ; dtoa.c:795
	;;                              ; dtoa.c:795
	       nop	2               ; dtoa.c:795
	;;
.BB12_486:                              ; %bb189.round_9_up_crit_edge
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 104
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_487:                              ; %round_9_up
#0:	       ldm.s	r14, 108
#1:	       ldi	57 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stmb.a	r1, r2, 0       ; dtoa.c:798
	;;
.BB12_488:                              ; %bb205.preheader
#0:	       add	r10, 1 -> r10
#1:	       ldi	0 -> r1
	;;
#0:	       stm.s	r10, r14, 27
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r1, r10 -> r10
#1:	       ldi	57 -> r1
	;;
.BB12_489:                              ; %bb205
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       ldm.f	r2, -2          ; dtoa.c:833
#1:	       sub	r2, 2 -> r3
	;;
#0:	       ldx	$membu, r3 -> r2 ; dtoa.c:833
	;;
#0:	       cmpeq	r2, r1 -> c1    ; dtoa.c:833
	;;
#0:	if  c1 br	.BB12_511
	;;
	       nop	2
	;;
; BB#490:                               ; %bb206
#0:	       ldm.s	r14, 108
	;;
#0:	       br	.BB12_513
#1:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 27    ; dtoa.c:840
#1:	       add	r2, 1 -> r10    ; dtoa.c:840
	;;
#0:	       stmb.a	r10, r3, 0      ; dtoa.c:840
	;;
.BB12_491:                              ; %bb190
#0:	       ldm.s	r14, 72         ; dtoa.c:801
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:801
#1:	       ldm.s	r14, 108
	;;
#0:	       br	.BB12_514
#1:	       add	r10, 1 -> r10   ; dtoa.c:801
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       sub	r0, 1 -> r0
	;;
#0:	       stmb.a	r10, r0, 0      ; dtoa.c:801
	;;
.BB12_492:                              ; %bb191
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r14, 60         ; dtoa.c:805
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:805
#1:	       ldm.s	r14, 72         ; dtoa.c:804
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:805
	;;
#0:	if  c1 br	.BB12_494       ; dtoa.c:805
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:804
	;;
#0:	       stmb.a	r0, r10, 0      ; dtoa.c:804
	;;                              ; dtoa.c:805
	       nop	1               ; dtoa.c:805
	;;
; BB#493:                               ; %bb191.bb199_crit_edge
#0:	       ldm.s	r14, 104
#1:	       br	.BB12_501
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
	       nop	0
	;;
.BB12_494:                              ; %bb192
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 104        ; dtoa.c:807
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:807
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:807
	;;                              ; dtoa.c:807
	       nop	3               ; dtoa.c:807
	;;
#0:	       stm.s	r0, r14, 26     ; dtoa.c:807
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:808
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:808
#1:	       ldm.s	r14, 84         ; dtoa.c:808
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:808
	;;
#0:	       cmpne	r10, r0 -> c1   ; dtoa.c:808
	;;
#0:	if  c1 br	.BB12_497       ; dtoa.c:808
	;;                              ; dtoa.c:808
	       nop	2               ; dtoa.c:808
	;;
; BB#495:                               ; %bb193
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	10 -> r1
#1:	       callg	___multadd      ; dtoa.c:809
	;;                              ; dtoa.c:809
	       nop	3               ; dtoa.c:809
	;;
#0:	       stm.s	r0, r14, 21
	;;
.BB12_496:                              ; %bb193
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       stm.s	r0, r14, 23
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 27
	;;
#0:	       br	.BB12_372
#1:	       ldm.s	r14, 60
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       sub	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 15
	;;
.BB12_497:                              ; %bb194
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldm.s	r14, 84         ; dtoa.c:812
#1:	       ldi	10 -> r1
	;;
#0:	       callg	___multadd      ; dtoa.c:812
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:812
	;;                              ; dtoa.c:812
	       nop	3               ; dtoa.c:812
	;;
#0:	       stm.s	r0, r14, 21     ; dtoa.c:812
#1:	       ldi	10 -> r1
	;;
#0:	       ldm.s	r14, 92         ; dtoa.c:813
	;;
#0:	       callg	___multadd      ; dtoa.c:813
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:813
	;;                              ; dtoa.c:813
	       nop	3               ; dtoa.c:813
	;;
#0:	       br	.BB12_496
	;;
	       nop	2
	;;
.BB12_498:                              ; %bb.nph489
#0:	       ldm.s	r14, 104
#1:	       or	r1, 0 -> r11
#2:	       sub	r10, 1 -> r10
	;;
#0:	       add	r11, 1 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_499:                              ; %bb198
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldi	10 -> r1
#1:	       callg	___multadd      ; dtoa.c:823
	;;                              ; dtoa.c:823
	       nop	3               ; dtoa.c:823
	;;
#0:	       ldm.s	r14, 88         ; dtoa.c:820
#1:	       or	r0, 0 -> r11    ; dtoa.c:823
#2:	       sub	r10, 1 -> r10
	;;
#0:	       callg	_quorem         ; dtoa.c:820
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:820
	;;                              ; dtoa.c:820
	       nop	3               ; dtoa.c:820
	;;
#0:	       cmpeq	r10, 0 -> c1
#1:	       s2add	r0, 12 -> r0    ; dtoa.c:820
#2:	       add	r12, 1 -> r1
	;;
#0:	if !c1 br	.BB12_499
#1:	       stm.s	r0, r14, 18
	;;
#0:	       stmb.a	r0, r12, 0      ; dtoa.c:820
#1:	       or	r1, 0 -> r12
#2:	       or	r11, 0 -> r0
	;;
	       nop	1
	;;
; BB#500:                               ; %bb197.bb199.loopexit427_crit_edge
#0:	       ldi	0 -> r10
	;;
#0:	       stm.s	r10, r14, 21
	;;
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 80
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       add	r0, r10 -> r10
#1:	       or	r11, 0 -> r0
	;;
.BB12_501:                              ; %bb199
#0:	       ldi	1 -> r1
#1:	       callg	___lshift       ; dtoa.c:828
	;;                              ; dtoa.c:828
	       nop	3               ; dtoa.c:828
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:527[ dtoa.c:829 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:527[ dtoa.c:829 ]
#1:	       ldm.s	r14, 88         ; mprec.c:528[ dtoa.c:829 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:528[ dtoa.c:829 ]
	;;
#0:	       ldm.f	r2, 16          ; mprec.c:528[ dtoa.c:829 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:528[ dtoa.c:829 ]
	;;
#0:	       cmpeq	r1, r2 -> c1
	;;
#0:	if  c1 br	.BB12_503       ; mprec.c:535[ dtoa.c:829 ]
	;;                              ; mprec.c:535[ dtoa.c:829 ]
	       nop	2               ; mprec.c:535[ dtoa.c:829 ]
	;;
; BB#502:                               ; %bb.i13
#0:	       sub	r1, r2 -> r2    ; mprec.c:535[ dtoa.c:829 ]
#1:	       br	.BB12_506
	;;
	       nop	2
	;;
.BB12_503:                              ; %bb1.i
#0:	       ldm.s	r14, 88
#1:	       add	r0, 20 -> r3
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       s2add	r1, r2 -> r1
#1:	       s2add	r0, r2 -> r2
	;;
#0:	       add	r1, 16 -> r1
#1:	       add	r2, 20 -> r2
	;;
.BB12_504:                              ; %bb2.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, -4          ; mprec.c:543[ dtoa.c:829 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mprec.c:543[ dtoa.c:829 ]
#1:	       ldm.f	r1, 0           ; mprec.c:543[ dtoa.c:829 ]
	;;
#0:	       ldx	$mem, 0 -> r5   ; mprec.c:543[ dtoa.c:829 ]
	;;
#0:	       cmpeq	r4, r5 -> c1    ; mprec.c:543[ dtoa.c:829 ]
	;;
#0:	if  c1 br	.BB12_540       ; mprec.c:543[ dtoa.c:829 ]
	;;                              ; mprec.c:543[ dtoa.c:829 ]
	       nop	2               ; mprec.c:543[ dtoa.c:829 ]
	;;
; BB#505:                               ; %bb3.i
#0:	       cmpult	r4, r5 -> c1    ; mprec.c:544[ dtoa.c:829 ]
#1:	       ldi	-1 -> r1
#2:	       ldi	1 -> r2
	;;
#0:	if  c1 or	r1, 0 -> r2
	;;
.BB12_506:                              ; %__mcmp.exit
#0:	       cmplt	r2, 1 -> c1     ; dtoa.c:830
	;;
#0:	if !c1 br	.BB12_488
	;;
	       nop	2
	;;
; BB#507:                               ; %bb200
#0:	       cmpne	r2, 0 -> c1     ; dtoa.c:830
	;;
#0:	if  c1 br	.BB12_509
	;;
	       nop	2
	;;
.BB12_508:                              ; %bb201
#0:	       ldm.s	r14, 72         ; dtoa.c:830
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:830
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:830
	;;
#0:	if  c1 br	.BB12_488
	;;
	       nop	2
	;;
.BB12_509:                              ; %bb207.preheader
#0:	       add	r10, 1 -> r10
	;;
#0:	       stm.s	r10, r14, 27
#1:	       ldi	48 -> r10
	;;
.BB12_510:                              ; %bb207
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       ldm.f	r1, -2          ; dtoa.c:844
#1:	       sub	r1, 2 -> r2
#2:	       sub	r1, 1 -> r1
	;;
#0:	       ldx	$membu, r2 -> r2 ; dtoa.c:844
#1:	       stm.s	r1, r14, 27     ; dtoa.c:844
	;;
#0:	       cmpeq	r2, r10 -> c1   ; dtoa.c:844
	;;
#0:	if  c1 br	.BB12_510
	;;
	       nop	2
	;;
#0:	       br	.BB12_513
	;;
	       nop	2
	;;
.BB12_511:                              ; %bb203
                                        ;   in Loop: Header=BB12_489 Depth=1
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.s	r2, r14, 27
#1:	       add	r2, r10 -> r2
	;;
#0:	       cmpne	r2, 1 -> c1     ; dtoa.c:834
	;;
#0:	if  c1 br	.BB12_489
	;;
	       nop	2
	;;
; BB#512:                               ; %bb204
#0:	       ldm.s	r14, 64         ; dtoa.c:836
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:836
	;;
#0:	       add	r10, 1 -> r10   ; dtoa.c:836
	;;
#0:	       stm.s	r10, r14, 16
#1:	       ldi	49 -> r10
	;;
#0:	       ldm.s	r14, 108
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sub	r1, 1 -> r1
	;;
#0:	       stmb.a	r10, r1, 0      ; dtoa.c:837
	;;
.BB12_513:                              ; %bb207.ret_crit_edge
#0:	       stm.s	r0, r14, 26
	;;
.BB12_514:                              ; %ret
#0:	       ldm.s	r14, 88         ; mprec.c:139[ dtoa.c:848 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:139[ dtoa.c:848 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:139[ dtoa.c:848 ]
	;;
#0:	if  c1 br	.BB12_516
	;;
	       nop	2
	;;
; BB#515:                               ; %bb.i10
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:848 ]
#1:	       ldm.f	r10, 4          ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       stm.a	r0, r10, 0      ; mprec.c:141[ dtoa.c:848 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:848 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ dtoa.c:848 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:142[ dtoa.c:848 ]
	;;
#0:	       stm.a	r10, r0, 0      ; mprec.c:142[ dtoa.c:848 ]
	;;
.BB12_516:                              ; %_Bfree.exit12
#0:	       ldm.s	r14, 92         ; dtoa.c:849
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:849
	;;
#0:	       cmpne	r0, 0 -> c1     ; dtoa.c:849
	;;
#0:	if !c1 br	.BB12_522
	;;
	       nop	2
	;;
; BB#517:                               ; %bb209
#0:	       ldm.s	r14, 84         ; dtoa.c:851
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:851
	;;
#0:	       cmpeq	r0, 0 -> c1     ; dtoa.c:851
	;;
#0:	if  c1 br	.BB12_521
	;;
	       nop	2
	;;
; BB#518:                               ; %bb209
#0:	       ldm.s	r14, 92
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       cmpeq	r0, r1 -> c2
	;;
#0:	if  c2 br	.BB12_521
	;;
	       nop	2
	;;
; BB#519:                               ; %bb209
#0:	if  c1 br	.BB12_521
	;;
	       nop	2
	;;
; BB#520:                               ; %bb.i7
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:852 ]
#1:	       ldm.s	r14, 84         ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldm.f	r1, 4           ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       stm.a	r0, r1, 0       ; mprec.c:141[ dtoa.c:852 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:852 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ dtoa.c:852 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:142[ dtoa.c:852 ]
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:142[ dtoa.c:852 ]
	;;
.BB12_521:                              ; %_Bfree.exit6
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:853 ]
#1:	       ldm.s	r14, 92         ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldm.f	r1, 4           ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       stm.a	r0, r1, 0       ; mprec.c:141[ dtoa.c:853 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:853 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ dtoa.c:853 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:142[ dtoa.c:853 ]
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:142[ dtoa.c:853 ]
	;;
.BB12_522:                              ; %ret1
#0:	       ldm.s	r14, 104        ; mprec.c:139[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:139[ dtoa.c:856 ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:139[ dtoa.c:856 ]
	;;
#0:	if  c1 br	.BB12_524
	;;
	       nop	2
	;;
; BB#523:                               ; %bb.i1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:856 ]
#1:	       ldm.s	r14, 104        ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldm.f	r1, 4           ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       stm.a	r0, r1, 0       ; mprec.c:141[ dtoa.c:856 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ dtoa.c:856 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ dtoa.c:856 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:142[ dtoa.c:856 ]
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:142[ dtoa.c:856 ]
	;;
.BB12_524:                              ; %_Bfree.exit3
#0:	       ldm.s	r14, 64         ; dtoa.c:858
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:858
#1:	       ldm.s	r14, 108        ; dtoa.c:857
	;;
#0:	       add	r0, 1 -> r0     ; dtoa.c:858
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:857
	;;
#0:	       stmb.a	0, r1, 0        ; dtoa.c:857
	;;
#0:	       ldm.s	r14, 44         ; dtoa.c:859
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:859
#1:	       ldm.s	r14, 32         ; dtoa.c:858
	;;
#0:	       cmpne	r1, 0 -> c1     ; dtoa.c:859
	;;
#0:	if  c1 br	.BB12_541       ; dtoa.c:859
#1:	       ldx	$mem, 0 -> r1   ; dtoa.c:858
	;;
#0:	       stm.a	r0, r1, 0       ; dtoa.c:858
	;;                              ; dtoa.c:859
	       nop	1               ; dtoa.c:859
	;;
; BB#525:                               ; %_Bfree.exit3.bb215_crit_edge
#0:	       ldm.s	r14, 68
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB12_526:                              ; %bb215
#0:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r1, -736        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -732        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f14   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#1:	       ldm.s	r1, -728        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#1:	       add	r14, r1 -> r1   ; dtoa.c:861
#0:	       stx	r0.31 -> $f15   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f12   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f13   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -716        ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $f10   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
	;;
#2:	       stx	r2.31 -> $f11   ; dtoa.c:861
	;;
.BB12_527:                              ; %bb215
#0:	       ldm.s	r14, 312        ; dtoa.c:861
#1:	       or	r14, 0 -> r15   ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 316        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f15      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 320        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f14      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 324        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f13      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 328        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f12      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 332        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f11      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:861
#1:	       ldm.s	r14, 336        ; dtoa.c:861
	;;
#0:	       stx	r1 -> $f10      ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:861
#1:	       ldm.s	r14, 340        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:861
#1:	       ldm.s	r14, 344        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:861
#1:	       ldm.s	r14, 348        ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:861
#1:	       ldm.s	r15, 8          ; dtoa.c:861
	;;
#1:	       br	.BB12_11
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:861
#2:	       ldm.s	r15, 4          ; dtoa.c:861
	;;
#0:	       stx	r0.31 -> $ro    ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
	;;
#1:	       stx	r1.31 -> $rb    ; dtoa.c:861
	;;
.BB12_528:                              ; %_calloc_r.exit.i
#0:	       ldi	0 -> r10
#1:	       br	.BB12_45
#2:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.s	r10, r14, 26    ; mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ]
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:785[ dtoa.c:291 ] ]
	;;
	       nop	0
	;;
.BB12_529:                              ; %bb51.bb54_crit_edge
#0:	       ldi	0 -> r10
#1:	       br	.BB12_107
	;;
	       nop	2
	;;
.BB12_530:                              ; %_calloc_r.exit213
#0:	       ldi	0 -> r10
#1:	       br	.BB12_136
#2:	       ldga	_impure_data -> r0 ; mprec.c:106[ dtoa.c:430 ]
	;;
#0:	       stm.s	r10, r14, 17    ; mprec.c:106[ dtoa.c:430 ]
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ dtoa.c:430 ]
	;;
	       nop	0
	;;
.BB12_531:                              ; %bb65.bb71_crit_edge
#0:	       ldi	2 -> r11
#1:	       br	.BB12_154
	;;
	       nop	2
	;;
.BB12_532:                              ; %_calloc_r.exit223
#0:	       ldi	0 -> r12
#1:	       br	.BB12_248
#2:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.s	r12, r14, 23    ; mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ]
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:323[ dtoa.c:632 ] ]
	;;
	       nop	0
	;;
.BB12_533:                              ; %_calloc_r.exit96
#0:	       ldi	0 -> r11
#1:	       br	.BB12_291
#2:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.s	r11, r14, 22    ; mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ]
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:323[ dtoa.c:658 ] ]
	;;
	       nop	0
	;;
.BB12_534:                              ; %bb7.i84
                                        ;   in Loop: Header=BB12_315 Depth=1
#0:	       sub	r1, 4 -> r1
#1:	       sub	r0, 4 -> r0
	;;
#0:	       cmpult	r2, r1 -> c1    ; mprec.c:545[ dtoa.c:715 ]
	;;
#0:	if  c1 br	.BB12_315
	;;
	       nop	2
	;;
#0:	       br	.BB12_321
	;;
	       nop	2
	;;
.BB12_535:                              ; %_calloc_r.exit233
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ dtoa.c:750 ]
#1:	       br	.BB12_370
#2:	       ldi	0 -> r10
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ dtoa.c:750 ]
	;;
	       nop	1
	;;
.BB12_536:                              ; %_calloc_r.exit.i153
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
#1:	       br	.BB12_416
#2:	       ldi	0 -> r11
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
	;;
	       nop	1
	;;
.BB12_537:                              ; %_calloc_r.exit27.i
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:566[ dtoa.c:762 ] ]
#1:	       br	.BB12_446
#2:	       ldi	0 -> r11
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:580[ dtoa.c:762 ] ]
	;;
	       nop	1
	;;
.BB12_538:                              ; %bb170._Bfree.exit190_crit_edge
                                        ;   in Loop: Header=BB12_372 Depth=1
#0:	       ldi	1 -> r10
#1:	       br	.BB12_466
	;;
	       nop	2
	;;
.BB12_539:                              ; %bb186.round_9_up_crit_edge
#0:	       ldm.s	r14, 108
#1:	       br	.BB12_487
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
	       nop	1
	;;
.BB12_540:                              ; %bb7.i
                                        ;   in Loop: Header=BB12_504 Depth=1
#0:	       sub	r2, 4 -> r2
#1:	       sub	r1, 4 -> r1
	;;
#0:	       cmpult	r3, r2 -> c1    ; mprec.c:545[ dtoa.c:829 ]
	;;
#0:	if  c1 br	.BB12_504
	;;
	       nop	2
	;;
#0:	       br	.BB12_508
	;;
	       nop	2
	;;
.BB12_541:                              ; %bb213
#0:	       ldm.s	r14, 108        ; dtoa.c:860
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:860
#1:	       ldm.s	r14, 44         ; dtoa.c:860
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:860
	;;
#0:	       stm.a	r1, r0, 0       ; dtoa.c:860
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#0:	       ldm.s	r14, 68         ; dtoa.c:861
	;;
#0:	       ldx	$mem, 0 -> r0   ; dtoa.c:861
#1:	       ldm.s	r1, -736        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -732        ; dtoa.c:861
#2:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f14   ; dtoa.c:861
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:861
#0:	       ldm.s	r1, -728        ; dtoa.c:861
#2:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#1:	       stx	r1.31 -> $f15   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -724        ; dtoa.c:861
#1:	       ldiu	1024 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f12   ; dtoa.c:861
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:861
#0:	       ldm.s	r1, -720        ; dtoa.c:861
#1:	       ldiu	1020 -> r1      ; dtoa.c:861
	;;
#0:	       add	r14, r1 -> r1   ; dtoa.c:861
#2:	       stx	r2.31 -> $f13   ; dtoa.c:861
	;;
#0:	       br	.BB12_10
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
#1:	       ldm.s	r1, -716        ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f10   ; dtoa.c:861
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:861
	;;
#3:	       stx	r3.31 -> $f11   ; dtoa.c:861
	;;
	.align	4
__dtoa_r_end:
	.section	.rodata,"a",@progbits
	.align	4
.JTI12_0:
	.long	.BB12_95-__dtoa_r_start
	.long	.BB12_95-__dtoa_r_start
	.long	.BB12_97-__dtoa_r_start
	.long	.BB12_99-__dtoa_r_start
	.long	.BB12_94-__dtoa_r_start
	.long	.BB12_93-__dtoa_r_start

	.text
	.align	4
_quorem:                                ; @quorem
	.size	_quorem_end-_quorem
_quorem_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 10
#2:	       ldiu	40 -> r2
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
	;;
#0:	       stm.s	r12, r14, 7
	;;
#0:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r0.23, r14, 5
	;;
#0:	       stm.s	r1, r14, 4
	;;
#0:	       ldm.f	r1, 16          ; dtoa.c:49
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:49
#1:	       ldm.f	r10, 16         ; dtoa.c:54
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:54
	;;
#0:	       cmple	r11, r12 -> c1  ; dtoa.c:54
	;;
#0:	if  c1 br	.BB13_3         ; dtoa.c:54
	;;                              ; dtoa.c:54
	       nop	2               ; dtoa.c:54
	;;
; BB#1:                                 ; %entry.bb19_crit_edge
#0:	       ldi	0 -> r0
	;;
.BB13_2:                                ; %bb19
#0:	       ldm.s	r14, 20         ; dtoa.c:141
#1:	       or	r14, 0 -> r15   ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; dtoa.c:141
#1:	       ldm.s	r14, 24         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:141
#1:	       ldm.s	r14, 28         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:141
#1:	       ldm.s	r14, 32         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:141
#1:	       ldm.s	r14, 36         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:141
#1:	       ldm.s	r15, 8          ; dtoa.c:141
	;;
#0:	       br	.BB13_28
#3:	       ldx	$mem, 0 -> r3.31 ; dtoa.c:141
#1:	       ldm.s	r15, 4          ; dtoa.c:141
	;;
#3:	       stx	r3.31 -> $ro    ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; dtoa.c:141
	;;
#0:	       stx	r0.31 -> $rb    ; dtoa.c:141
	;;
.BB13_3:                                ; %bb1
#0:	       ldm.s	r14, 16
#1:	       sub	r11, 1 -> r13
	;;
#0:	       s2add	r10, r13 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       s2add	r1, r13 -> r0.23
	;;
#0:	       ldm.f	r0.23, 20       ; dtoa.c:60
	;;
#0:	       ldx	$mem, 0 -> r1   ; dtoa.c:60
#1:	       ldm.f	r0, 20          ; dtoa.c:60
	;;
#0:	       add	r1, 1 -> r1     ; dtoa.c:60
	;;
#0:	       callg	___udivsi3      ; dtoa.c:60
#1:	       ldx	$mem, 0 -> r0   ; dtoa.c:60
	;;                              ; dtoa.c:60
	       nop	3               ; dtoa.c:60
	;;
#1:	       cmpne	r0, 0 -> c1     ; dtoa.c:65
#0:	       add	r0.23, 20 -> r1
	;;
#0:	if !c1 br	.BB13_13
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb2
#0:	       ldm.s	r14, 16
#1:	       ldi	0 -> r3
#2:	       add	r10, 20 -> r12
	;;
#0:	       or	r3, 0 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       add	r2, 20 -> r2
	;;
.BB13_5:                                ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, 0           ; dtoa.c:72
#1:	       add	r2, 4 -> r2
	;;
#0:	       cmpule	r2, r1 -> c1    ; dtoa.c:92
	;;
#0:	       ldx	$mem, 0 -> r5   ; dtoa.c:72
#1:	       ldm.f	r12, 0          ; dtoa.c:76
	;;
#0:	       mask	r5, 4 -> r7     ; dtoa.c:73
#1:	       sr	r5, 16 -> r5    ; dtoa.c:74
	;;
#0:	       mul	r7, r0 -> $mul0 ; dtoa.c:73
#1:	       mul	r5, r0 -> $mul1 ; dtoa.c:74
#2:	       ldx	$mem, 0 -> r6   ; dtoa.c:76
	;;
#0:	       ldx	$mul0, 0 -> r7  ; dtoa.c:73
#1:	       ldx	$mul1, 0 -> r8  ; dtoa.c:74
	;;
#0:	       add	r7, r3 -> r3    ; dtoa.c:73
#1:	       mask	r6, 4 -> r7     ; dtoa.c:76
	;;
#0:	       sr	r3, 16 -> r5    ; dtoa.c:74
#1:	       mask	r3, 4 -> r3     ; dtoa.c:76
	;;
#0:	       sub	r7, r3 -> r3    ; dtoa.c:76
#1:	       add	r5, r8 -> r5    ; dtoa.c:74
	;;
#0:	       add	r3, r4 -> r3    ; dtoa.c:76
#1:	       sr	r6, 16 -> r4    ; dtoa.c:79
#2:	       mask	r5, 4 -> r6     ; dtoa.c:79
	;;
#0:	       sub	r4, r6 -> r4    ; dtoa.c:79
#1:	       sra	r3, 16 -> r6    ; dtoa.c:77
#2:	       mask	r3, 4 -> r7     ; dtoa.c:82
#3:	       sr	r5, 16 -> r3    ; dtoa.c:75
	;;
#0:	if  c1 br	.BB13_5         ; dtoa.c:92
#1:	       add	r4, r6 -> r4    ; dtoa.c:79
#2:	       add	r12, 4 -> r5
	;;
#0:	       sl	r4, 16 -> r6    ; dtoa.c:82
#1:	       sra	r4, 16 -> r4    ; dtoa.c:80
	;;
#0:	       or	r6, r7 -> r6    ; dtoa.c:82
	;;
#0:	       stm.a	r6, r12, 0      ; dtoa.c:82
#1:	       or	r5, 0 -> r12
	;;
; BB#6:                                 ; %bb4
#0:	       s2add	r10, r11 -> r12
	;;
#0:	       ldm.f	r12, 16         ; dtoa.c:93
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:93
	;;
#0:	       cmpeq	r2, 0 -> c1     ; dtoa.c:93
	;;
#0:	if  c1 br	.BB13_8         ; dtoa.c:93
	;;                              ; dtoa.c:93
	       nop	2               ; dtoa.c:93
	;;
; BB#7:                                 ; %bb4.bb10_crit_edge
#0:	       ldm.f	r10, 16
#1:	       br	.BB13_13
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
	       nop	1
	;;
.BB13_8:                                ; %bb5
#0:	       add	r10, 20 -> r13
#1:	       br	.BB13_10
#2:	       add	r12, 12 -> r12
#3:	       ldi	-1 -> r2
	;;
	       nop	2
	;;
.BB13_9:                                ; %bb6
                                        ;   in Loop: Header=BB13_10 Depth=1
#0:	       sub	r12, 4 -> r12
#1:	       sub	r2, 1 -> r2
	;;
.BB13_10:                               ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpule	r12, r13 -> c1  ; dtoa.c:96
	;;
#0:	if  c1 br	.BB13_12
	;;
	       nop	2
	;;
; BB#11:                                ; %bb8
                                        ;   in Loop: Header=BB13_10 Depth=1
#0:	       ldm.f	r12, 0          ; dtoa.c:96
	;;
#0:	       ldx	$mem, 0 -> r3   ; dtoa.c:96
	;;
#0:	       cmpeq	r3, 0 -> c1     ; dtoa.c:96
	;;
#0:	if  c1 br	.BB13_9         ; dtoa.c:96
	;;                              ; dtoa.c:96
	       nop	2               ; dtoa.c:96
	;;
.BB13_12:                               ; %bb9
#0:	       add	r11, r2 -> r12
	;;
#0:	       or	r12, 0 -> r13
#1:	       stm.a	r12, r10, 4     ; dtoa.c:98
	;;
.BB13_13:                               ; %bb10
#0:	       ldm.s	r14, 16         ; mprec.c:528[ dtoa.c:101 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:528[ dtoa.c:101 ]
	;;
#0:	       ldm.f	r2, 16          ; mprec.c:528[ dtoa.c:101 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:528[ dtoa.c:101 ]
	;;
#0:	       cmpeq	r12, r2 -> c1
	;;
#0:	if  c1 br	.BB13_15        ; mprec.c:535[ dtoa.c:101 ]
	;;                              ; mprec.c:535[ dtoa.c:101 ]
	       nop	2               ; mprec.c:535[ dtoa.c:101 ]
	;;
; BB#14:                                ; %bb.i
#0:	       sub	r12, r2 -> r2   ; mprec.c:535[ dtoa.c:101 ]
#1:	       br	.BB13_18
	;;
	       nop	2
	;;
.BB13_15:                               ; %bb1.i
#0:	       ldm.s	r14, 16
#1:	       add	r10, 20 -> r4
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       s2add	r3, r2 -> r3
#1:	       s2add	r10, r2 -> r2
	;;
#0:	       add	r3, 16 -> r3
#1:	       add	r2, 20 -> r2
	;;
.BB13_16:                               ; %bb2.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r2, -4          ; mprec.c:543[ dtoa.c:101 ]
	;;
#0:	       ldx	$mem, 0 -> r5   ; mprec.c:543[ dtoa.c:101 ]
#1:	       ldm.f	r3, 0           ; mprec.c:543[ dtoa.c:101 ]
	;;
#0:	       ldx	$mem, 0 -> r6   ; mprec.c:543[ dtoa.c:101 ]
	;;
#0:	       cmpeq	r5, r6 -> c1    ; mprec.c:543[ dtoa.c:101 ]
	;;
#0:	if  c1 br	.BB13_19        ; mprec.c:543[ dtoa.c:101 ]
	;;                              ; mprec.c:543[ dtoa.c:101 ]
	       nop	2               ; mprec.c:543[ dtoa.c:101 ]
	;;
; BB#17:                                ; %bb3.i
#0:	       cmpult	r5, r6 -> c1    ; mprec.c:544[ dtoa.c:101 ]
#1:	       ldi	-1 -> r3
#2:	       ldi	1 -> r2
	;;
#0:	if  c1 or	r3, 0 -> r2
	;;
.BB13_18:                               ; %__mcmp.exit
#0:	       ldi	-1 -> r3
	;;
#0:	       cmplt	r3, r2 -> c1
	;;
#0:	if !c1 br	.BB13_2
	;;
	       nop	2
	;;
#0:	       br	.BB13_20
	;;
	       nop	2
	;;
.BB13_19:                               ; %bb7.i
                                        ;   in Loop: Header=BB13_16 Depth=1
#0:	       sub	r2, 4 -> r2
#1:	       sub	r3, 4 -> r3
	;;
#0:	       cmpult	r4, r2 -> c1    ; mprec.c:545[ dtoa.c:101 ]
	;;
#0:	if  c1 br	.BB13_16
	;;
	       nop	2
	;;
.BB13_20:                               ; %bb11
#0:	       ldm.s	r14, 16
#1:	       ldi	0 -> r4
#2:	       add	r10, 20 -> r2
	;;
#0:	       or	r4, 0 -> r5
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, 20 -> r3
	;;
.BB13_21:                               ; %bb12
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r3, 0           ; dtoa.c:111
#1:	       add	r3, 4 -> r3
	;;
#0:	       cmpule	r3, r1 -> c1    ; dtoa.c:131
	;;
#0:	       ldx	$mem, 0 -> r6   ; dtoa.c:111
#1:	       ldm.f	r2, 0           ; dtoa.c:115
	;;
#0:	       mask	r6, 4 -> r8     ; dtoa.c:112
	;;
#0:	       add	r8, r4 -> r8    ; dtoa.c:112
#1:	       add	r6, r4 -> r4
#2:	       ldx	$mem, 0 -> r7   ; dtoa.c:115
#3:	       sr	r6, 16 -> r6    ; dtoa.c:113
	;;
#0:	       sr	r8, 16 -> r8    ; dtoa.c:113
#1:	       mask	r7, 4 -> r9     ; dtoa.c:115
#2:	       mask	r4, 4 -> r4
	;;
#0:	       sub	r9, r4 -> r4    ; dtoa.c:115
#1:	       add	r8, r6 -> r6    ; dtoa.c:113
	;;
#0:	       add	r4, r5 -> r4    ; dtoa.c:115
#1:	       sr	r7, 16 -> r5    ; dtoa.c:118
#2:	       mask	r6, 4 -> r7     ; dtoa.c:118
	;;
#0:	       sub	r5, r7 -> r5    ; dtoa.c:118
#1:	       sra	r4, 16 -> r7    ; dtoa.c:116
#2:	       mask	r4, 4 -> r8     ; dtoa.c:121
#3:	       sr	r6, 16 -> r4    ; dtoa.c:114
	;;
#0:	if  c1 br	.BB13_21        ; dtoa.c:131
#1:	       add	r5, r7 -> r5    ; dtoa.c:118
#2:	       add	r2, 4 -> r6
	;;
#0:	       sl	r5, 16 -> r7    ; dtoa.c:121
#1:	       sra	r5, 16 -> r5    ; dtoa.c:119
	;;
#0:	       or	r7, r8 -> r7    ; dtoa.c:121
	;;
#0:	       stm.a	r7, r2, 0       ; dtoa.c:121
#1:	       or	r6, 0 -> r2
	;;
; BB#22:                                ; %bb13
#0:	       add	r10, 20 -> r1
#1:	       add	r0, 1 -> r0     ; dtoa.c:103
	;;
#0:	       s2add	r1, r13 -> r2
	;;
#0:	       ldm.f	r2, 0           ; dtoa.c:134
	;;
#0:	       ldx	$mem, 0 -> r2   ; dtoa.c:134
	;;
#0:	       cmpeq	r2, 0 -> c1     ; dtoa.c:134
	;;
#0:	if !c1 br	.BB13_2
	;;
	       nop	2
	;;
; BB#23:                                ; %bb15.preheader
#0:	       add	r10, 16 -> r2
#1:	       br	.BB13_25
#2:	       sl	r13, 2 -> r3
	;;
	       nop	2
	;;
.BB13_24:                               ; %bb14
                                        ;   in Loop: Header=BB13_25 Depth=1
#0:	       sub	r13, 1 -> r13
#1:	       sub	r3, 4 -> r3
	;;
.BB13_25:                               ; %bb15
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r2, r3 -> r4
	;;
#0:	       cmpule	r4, r1 -> c1    ; dtoa.c:136
	;;
#0:	if  c1 br	.BB13_27
	;;
	       nop	2
	;;
; BB#26:                                ; %bb16
                                        ;   in Loop: Header=BB13_25 Depth=1
#0:	       s2add	r2, r13 -> r4
	;;
#0:	       ldm.f	r4, 0           ; dtoa.c:136
	;;
#0:	       ldx	$mem, 0 -> r4   ; dtoa.c:136
	;;
#0:	       cmpeq	r4, 0 -> c1     ; dtoa.c:136
	;;
#0:	if  c1 br	.BB13_24        ; dtoa.c:136
	;;                              ; dtoa.c:136
	       nop	2               ; dtoa.c:136
	;;
.BB13_27:                               ; %bb17
#0:	       stm.a	r13, r10, 4     ; dtoa.c:138
#1:	       or	r14, 0 -> r15   ; dtoa.c:141
	;;
#0:	       ldm.s	r14, 20         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; dtoa.c:141
#1:	       ldm.s	r14, 24         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r13  ; dtoa.c:141
#1:	       ldm.s	r14, 28         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r12  ; dtoa.c:141
#1:	       ldm.s	r14, 32         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r11  ; dtoa.c:141
#1:	       ldm.s	r14, 36         ; dtoa.c:141
	;;
#0:	       ldx	$mem, 0 -> r10  ; dtoa.c:141
#1:	       ldm.s	r15, 8          ; dtoa.c:141
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; dtoa.c:141
#0:	       ldm.s	r15, 4          ; dtoa.c:141
	;;
#1:	       stx	r1.31 -> $ro    ; dtoa.c:141
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; dtoa.c:141
	;;
#2:	       stx	r2.31 -> $rb    ; dtoa.c:141
	;;
.BB13_28:                               ; %bb19
#0:	       ldm.s	r15, 0          ; dtoa.c:141
#1:	       s2add	r15, 10 -> r15  ; dtoa.c:141
	;;
#0:	       ret                      ; dtoa.c:141
#1:	       ldx	$mem, 0 -> r14  ; dtoa.c:141
	;;                              ; dtoa.c:141
	       nop	3               ; dtoa.c:141
	;;
	.align	4
_quorem_end:

	.align	4
__fflush_r:                             ; @_fflush_r
	.size	__fflush_r_end-__fflush_r
__fflush_r_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 10
#2:	       ldiu	40 -> r2
#0:	       ldx	$ro, 0 -> r0.31
#3:	       cmpeq	r0, 0 -> c1     ; fflush.c:224
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 8
	;;
#0:	       stm.s	r12, r14, 7
	;;
#0:	       stm.s	r13, r14, 6
	;;
#0:	       stm.s	r0, r14, 5
	;;
#0:	if !c1 ldm.f	r0, 56          ; fflush.c:224
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; fflush.c:224
	;;
#0:	if !c1 cmpne	r0, 0 -> c1     ; fflush.c:224
	;;
#0:	if  c1 br	.BB14_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldm.s	r14, 20         ; fflush.c:224
	;;
#0:	       callg	___sinit        ; fflush.c:224
#1:	       ldx	$mem, 0 -> r0   ; fflush.c:224
	;;                              ; fflush.c:224
	       nop	3               ; fflush.c:224
	;;
.BB14_2:                                ; %bb2
#0:	       add	r10, 12 -> r0   ; fflush.c:226
	;;
#0:	       stm.s	r0, r14, 4      ; fflush.c:226
	;;
#0:	       ldm.f	r10, 12         ; fflush.c:226
	;;
#0:	       ldx	$memhu, r0 -> r0 ; fflush.c:226
	;;
#0:	       cmpeq	r0, 0 -> c1     ; fflush.c:226
	;;
#0:	if  c1 br	.BB14_43
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb4
#0:	       mask	r0, 12 -> r1    ; fflush.c:80[ fflush.c:230 ]
	;;
#0:	       btest	r1, 3 -> c1     ; fflush.c:81[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_34        ; fflush.c:81[ fflush.c:230 ]
	;;                              ; fflush.c:81[ fflush.c:230 ]
	       nop	2               ; fflush.c:81[ fflush.c:230 ]
	;;
; BB#4:                                 ; %bb.i
#0:	       ldm.f	r10, 4          ; fflush.c:95[ fflush.c:230 ]
#1:	       ldi	0 -> r3
#2:	       ldga	2048 -> r2
	;;
#0:	       or	r0, r2 -> r0    ; fflush.c:86[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:95[ fflush.c:230 ]
#1:	       stmh.a	r0, r10, 6      ; fflush.c:86[ fflush.c:230 ]
	;;
#0:	       cmplt	r3, r1 -> c1    ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb1.i
#0:	       ldm.f	r10, 60         ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	       cmplt	r1, 1 -> c1     ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_43
	;;
	       nop	2
	;;
.BB14_6:                                ; %bb2.i
#0:	       ldm.f	r10, 40         ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fflush.c:95[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_43
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb3.i
#0:	       ldm.s	r14, 20         ; fflush.c:107[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:107[ fflush.c:230 ]
	;;
#0:	       ldm.f	r0, 0           ; fflush.c:107[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:107[ fflush.c:230 ]
#1:	       stm.a	0, r0, 0        ; fflush.c:108[ fflush.c:230 ]
	;;
#0:	       ldm.f	r10, 12
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stm.a	r1.31, r1, 0
	;;
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldmg.d	___mem_emergency
	;;
#0:	       ldx	$memhu, r1 -> r1
	;;
#0:	       btest	r1, 12 -> c1    ; fflush.c:110[ fflush.c:230 ]
	;;
#0:	if !c1 br	.BB14_11        ; fflush.c:110[ fflush.c:230 ]
	;;                              ; fflush.c:110[ fflush.c:230 ]
	       nop	2               ; fflush.c:110[ fflush.c:230 ]
	;;
; BB#8:                                 ; %bb4.i
#0:	       ldm.f	r10, 80         ; fflush.c:111[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:111[ fflush.c:230 ]
	;;
.BB14_9:                                ; %bb12.i
#0:	       ldm.f	r10, 12         ; fflush.c:135[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r1 ; fflush.c:135[ fflush.c:230 ]
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; fflush.c:135[ fflush.c:230 ]
	;;
#3:	       stm.a	r3.31, r1, 0    ; fflush.c:135[ fflush.c:230 ]
	;;
#0:	       ldm.s	r14, 16         ; fflush.c:135[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:135[ fflush.c:230 ]
#1:	       ldmg.d	___mem_emergency ; fflush.c:135[ fflush.c:230 ]
	;;
#0:	       ldx	$membu, r1 -> r1 ; fflush.c:135[ fflush.c:230 ]
	;;
#0:	       btest	r1, 2 -> c1     ; fflush.c:135[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_18
	;;
	       nop	2
	;;
; BB#10:                                ; %bb12.i.bb15.i_crit_edge
#0:	       or	r0, 0 -> r2
#1:	       br	.BB14_19
	;;
	       nop	2
	;;
.BB14_11:                               ; %bb5.i
#0:	       ldm.f	r10, 40         ; fflush.c:121[ fflush.c:230 ]
#1:	       ldi	0 -> r2
#2:	       ldi	1 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:121[ fflush.c:230 ]
#1:	       ldm.f	r10, 28         ; fflush.c:121[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:121[ fflush.c:230 ]
	;;
#0:	       call	r4              ; fflush.c:121[ fflush.c:230 ]
	;;                              ; fflush.c:121[ fflush.c:230 ]
	       nop	3               ; fflush.c:121[ fflush.c:230 ]
	;;
#0:	       cmpeq	r0, -1 -> c1    ; fflush.c:122[ fflush.c:230 ]
	;;
#0:	if !c1 br	.BB14_9
	;;
	       nop	2
	;;
; BB#12:                                ; %bb6.i
#0:	       ldm.s	r14, 20         ; fflush.c:122[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:122[ fflush.c:230 ]
	;;
#0:	       ldm.f	r1, 0           ; fflush.c:122[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:122[ fflush.c:230 ]
	;;
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB14_9
	;;
	       nop	2
	;;
; BB#13:                                ; %bb6.i
#0:	       ldi	22 -> r0
	;;
#0:	       cmpeq	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB14_15
	;;
	       nop	2
	;;
; BB#14:                                ; %bb6.i
#0:	       ldi	29 -> r0
	;;
#0:	       cmpne	r1, r0 -> c1
	;;
#0:	if  c1 br	.BB14_16
	;;
	       nop	2
	;;
.BB14_15:                               ; %bb9.i
#0:	       ldm.s	r14, 20         ; fflush.c:128[ fflush.c:230 ]
#1:	       br	.BB14_30
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:128[ fflush.c:230 ]
	;;
#0:	       stm.a	r11, r0, 0      ; fflush.c:128[ fflush.c:230 ]
	;;
	       nop	0
	;;
.BB14_16:                               ; %bb10.i
#0:	       ldm.f	r10, 12         ; fflush.c:131[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r1 ; fflush.c:131[ fflush.c:230 ]
#2:	       ldi	64 -> r11
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fflush.c:131[ fflush.c:230 ]
	;;
#2:	       stm.a	r2.31, r1, 0    ; fflush.c:131[ fflush.c:230 ]
	;;
#0:	       ldm.s	r14, 16         ; fflush.c:131[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:131[ fflush.c:230 ]
#1:	       ldmg.d	___mem_emergency ; fflush.c:131[ fflush.c:230 ]
	;;
#0:	       ldx	$memhu, r1 -> r1 ; fflush.c:131[ fflush.c:230 ]
	;;
#0:	       or	r1, r11 -> r1   ; fflush.c:131[ fflush.c:230 ]
	;;
.BB14_17:                               ; %bb10.i
#0:	       stmh.a	r1, r10, 6      ; fflush.c:131[ fflush.c:230 ]
#1:	       br	.BB14_44
#2:	       ldi	-1 -> r0
	;;
	       nop	2
	;;
.BB14_18:                               ; %bb13.i
#0:	       ldm.f	r10, 4          ; fflush.c:139[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:139[ fflush.c:230 ]
#1:	       ldm.f	r10, 48         ; fflush.c:140[ fflush.c:230 ]
	;;
#0:	       sub	r0, r1 -> r2    ; fflush.c:139[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; fflush.c:140[ fflush.c:230 ]
	;;
#0:	       cmpne	r3, 0 -> c1     ; fflush.c:140[ fflush.c:230 ]
	;;
#0:	if  c1 ldm.f	r10, 60         ; fflush.c:141[ fflush.c:230 ]
	;;
#0:	if  c1 ldx	$mem, 0 -> r1   ; fflush.c:141[ fflush.c:230 ]
	;;
#0:	if  c1 sub	r2, r1 -> r2    ; fflush.c:141[ fflush.c:230 ]
	;;
.BB14_19:                               ; %bb15.i
#0:	       ldm.f	r10, 40         ; fflush.c:149[ fflush.c:230 ]
#1:	       ldi	0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:149[ fflush.c:230 ]
#1:	       ldm.f	r10, 28         ; fflush.c:149[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:149[ fflush.c:230 ]
#1:	       ldm.s	r14, 20         ; fflush.c:149[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:149[ fflush.c:230 ]
	;;
#0:	       call	r4              ; fflush.c:149[ fflush.c:230 ]
	;;                              ; fflush.c:149[ fflush.c:230 ]
	       nop	3               ; fflush.c:149[ fflush.c:230 ]
	;;
#0:	       cmpne	r0, -1 -> c1    ; fflush.c:150[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_22
	;;
	       nop	2
	;;
; BB#20:                                ; %bb16.i
#0:	       ldm.s	r14, 20         ; fflush.c:150[ fflush.c:230 ]
#1:	       ldi	29 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:150[ fflush.c:230 ]
	;;
#0:	       ldm.f	r1, 0           ; fflush.c:150[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:150[ fflush.c:230 ]
	;;
#0:	       cmpult	r2, r1 -> c1
	;;
#0:	if  c1 br	.BB14_33
	;;
	       nop	2
	;;
; BB#21:                                ; %bb16.i
#0:	       ldiu	1 -> r2
#1:	       ldi	1 -> r3
	;;
#0:	       ldim	0 -> r2
#1:	       sl	r3, r1 -> r1
	;;
#0:	       ldih	258 -> r2
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if !c1 br	.BB14_33
	;;
	       nop	2
	;;
.BB14_22:                               ; %bb19.i
#0:	       ldm.f	r10, 12         ; fflush.c:155[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r2 ; fflush.c:155[ fflush.c:230 ]
#2:	       ldiu	2047 -> r1
	;;
#0:	       ldim	30 -> r1
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fflush.c:155[ fflush.c:230 ]
	;;
#1:	       stm.a	r1.31, r2, 0    ; fflush.c:155[ fflush.c:230 ]
	;;
#0:	       ldm.s	r14, 16         ; fflush.c:155[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; fflush.c:155[ fflush.c:230 ]
#1:	       ldmg.d	___mem_emergency ; fflush.c:155[ fflush.c:230 ]
	;;
#0:	       ldx	$memhu, r2 -> r2 ; fflush.c:155[ fflush.c:230 ]
#1:	       ldm.f	r10, 16         ; fflush.c:157[ fflush.c:230 ]
	;;
#0:	       and	r2, r1 -> r1    ; fflush.c:155[ fflush.c:230 ]
#1:	       btest	r2, 12 -> c1    ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	if !c1 br	.BB14_26
#1:	       ldx	$mem, 0 -> r3   ; fflush.c:157[ fflush.c:230 ]
	;;
#0:	       stm.a	r3, r10, 0      ; fflush.c:157[ fflush.c:230 ]
	;;
#0:	       stmh.a	r1, r10, 6      ; fflush.c:155[ fflush.c:230 ]
	;;
#0:	       stm.a	0, r10, 1       ; fflush.c:156[ fflush.c:230 ]
	;;
; BB#23:                                ; %bb20.i
#0:	       cmpne	r0, -1 -> c1    ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_25
	;;
	       nop	2
	;;
; BB#24:                                ; %bb21.i
#0:	       ldm.s	r14, 20         ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	       br	.BB14_26
#1:	       ldm.f	r1, 0           ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	       cmpne	r1, 0 -> c1     ; fflush.c:158[ fflush.c:230 ]
	;;
#0:	if !c1 stm.a	r0, r10, 20     ; fflush.c:159[ fflush.c:230 ]
	;;
.BB14_25:                               ; %bb22.i
#0:	       stm.a	r0, r10, 20     ; fflush.c:159[ fflush.c:230 ]
	;;
.BB14_26:                               ; %bb23.i
#0:	       ldm.s	r14, 20         ; fflush.c:160[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:160[ fflush.c:230 ]
	;;
#0:	       stm.a	r11, r0, 0      ; fflush.c:160[ fflush.c:230 ]
	;;
#0:	       ldm.f	r10, 48         ; fflush.c:161[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:161[ fflush.c:230 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fflush.c:161[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_43
	;;
	       nop	2
	;;
; BB#27:                                ; %bb24.i
#0:	       s2add	r10, 16 -> r0
	;;
#0:	       cmpeq	r1, r0 -> c1    ; fflush.c:162[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_29
	;;
	       nop	2
	;;
; BB#28:                                ; %bb25.i
#0:	       ldm.s	r14, 20         ; fflush.c:162[ fflush.c:230 ]
	;;
#0:	       callg	__free_r        ; fflush.c:162[ fflush.c:230 ]
#1:	       ldx	$mem, 0 -> r0   ; fflush.c:162[ fflush.c:230 ]
	;;                              ; fflush.c:162[ fflush.c:230 ]
	       nop	3               ; fflush.c:162[ fflush.c:230 ]
	;;
.BB14_29:                               ; %bb26.i
#0:	       stm.a	0, r10, 12      ; fflush.c:162[ fflush.c:230 ]
	;;
.BB14_30:                               ; %bb26.i
#0:	       ldi	0 -> r0
	;;
.BB14_31:                               ; %bb26.i
#0:	       ldm.s	r14, 24         ; fflush.c:232
#1:	       or	r14, 0 -> r15   ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r13  ; fflush.c:232
#1:	       ldm.s	r14, 28         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r12  ; fflush.c:232
#1:	       ldm.s	r14, 32         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:232
#1:	       ldm.s	r14, 36         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:232
#1:	       ldm.s	r15, 8          ; fflush.c:232
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; fflush.c:232
#0:	       ldm.s	r15, 4          ; fflush.c:232
	;;
#1:	       stx	r1.31 -> $ro    ; fflush.c:232
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fflush.c:232
	;;
#2:	       stx	r2.31 -> $rb    ; fflush.c:232
	;;
.BB14_32:                               ; %bb26.i
#0:	       ldm.s	r15, 0          ; fflush.c:232
#1:	       s2add	r15, 10 -> r15  ; fflush.c:232
	;;
#0:	       ret                      ; fflush.c:232
#1:	       ldx	$mem, 0 -> r14  ; fflush.c:232
	;;                              ; fflush.c:232
	       nop	3               ; fflush.c:232
	;;
.BB14_33:                               ; %bb27.i
#0:	       ldm.f	r10, 12         ; fflush.c:166[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r1 ; fflush.c:166[ fflush.c:230 ]
#2:	       ldi	64 -> r0
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fflush.c:166[ fflush.c:230 ]
	;;
#0:	       stm.a	r0.31, r1, 0    ; fflush.c:166[ fflush.c:230 ]
	;;
#0:	       br	.BB14_17
#1:	       ldm.s	r14, 16         ; fflush.c:166[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:166[ fflush.c:230 ]
#1:	       ldmg.d	___mem_emergency ; fflush.c:166[ fflush.c:230 ]
	;;
#0:	       ldx	$memhu, r1 -> r1 ; fflush.c:166[ fflush.c:230 ]
	;;
#0:	       or	r1, r0 -> r1    ; fflush.c:166[ fflush.c:230 ]
	;;
.BB14_34:                               ; %bb29.i
#0:	       ldm.f	r10, 16         ; fflush.c:172[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:172[ fflush.c:230 ]
	;;
#0:	       cmpeq	r11, 0 -> c1    ; fflush.c:172[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_43
	;;
	       nop	2
	;;
; BB#35:                                ; %bb31.i
#0:	       and	r1, 3 -> r1     ; fflush.c:185[ fflush.c:230 ]
#1:	       ldm.f	r10, 0          ; fflush.c:177[ fflush.c:230 ]
	;;
#0:	       cmpeq	r1, 0 -> c1     ; fflush.c:185[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_37        ; fflush.c:185[ fflush.c:230 ]
#1:	       ldx	$mem, 0 -> r0   ; fflush.c:177[ fflush.c:230 ]
#2:	       stm.a	r11, r10, 0     ; fflush.c:184[ fflush.c:230 ]
	;;
#0:	       sub	r0, r11 -> r12  ; fflush.c:177[ fflush.c:230 ]
	;;                              ; fflush.c:185[ fflush.c:230 ]
	       nop	1               ; fflush.c:185[ fflush.c:230 ]
	;;
; BB#36:                                ; %bb31.i.bb34.i_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB14_38
	;;
	       nop	2
	;;
.BB14_37:                               ; %bb32.i
#0:	       ldm.f	r10, 20         ; fflush.c:185[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:185[ fflush.c:230 ]
	;;
.BB14_38:                               ; %bb34.i
#0:	       stm.a	r0, r10, 2      ; fflush.c:185[ fflush.c:230 ]
#1:	       br	.BB14_42
#2:	       ldi	0 -> r13
	;;
	       nop	2
	;;
.BB14_39:                               ; %bb35.i
                                        ;   in Loop: Header=BB14_42 Depth=1
#0:	       ldm.f	r10, 36         ; fflush.c:189[ fflush.c:230 ]
#1:	       or	r11, 0 -> r2    ; fflush.c:189[ fflush.c:230 ]
#2:	       or	r12, 0 -> r3    ; fflush.c:189[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; fflush.c:189[ fflush.c:230 ]
#1:	       ldm.f	r10, 28         ; fflush.c:189[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; fflush.c:189[ fflush.c:230 ]
#1:	       ldm.s	r14, 20         ; fflush.c:189[ fflush.c:230 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; fflush.c:189[ fflush.c:230 ]
	;;
#0:	       call	r4              ; fflush.c:189[ fflush.c:230 ]
	;;                              ; fflush.c:189[ fflush.c:230 ]
	       nop	3               ; fflush.c:189[ fflush.c:230 ]
	;;
#0:	       cmplt	r13, r0 -> c1   ; fflush.c:190[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_41        ; fflush.c:190[ fflush.c:230 ]
	;;                              ; fflush.c:190[ fflush.c:230 ]
	       nop	2               ; fflush.c:190[ fflush.c:230 ]
	;;
; BB#40:                                ; %bb36.i
#0:	       ldm.f	r10, 12         ; fflush.c:192[ fflush.c:230 ]
#1:	       ldga	___mem_emergency -> r11 ; fflush.c:192[ fflush.c:230 ]
#2:	       ldi	64 -> r12
#3:	       ldi	-1 -> r0
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; fflush.c:192[ fflush.c:230 ]
	;;
#2:	       stm.a	r2.31, r11, 0   ; fflush.c:192[ fflush.c:230 ]
	;;
#0:	       ldm.s	r14, 16         ; fflush.c:192[ fflush.c:230 ]
	;;
#0:	       br	.BB14_31
#1:	       ldx	$mem, 0 -> r11  ; fflush.c:192[ fflush.c:230 ]
#2:	       ldmg.d	___mem_emergency ; fflush.c:192[ fflush.c:230 ]
	;;
#0:	       ldx	$memhu, r11 -> r11 ; fflush.c:192[ fflush.c:230 ]
	;;
#0:	       or	r11, r12 -> r11 ; fflush.c:192[ fflush.c:230 ]
	;;
#0:	       stmh.a	r11, r10, 6     ; fflush.c:192[ fflush.c:230 ]
	;;
.BB14_41:                               ; %bb37.i
                                        ;   in Loop: Header=BB14_42 Depth=1
#0:	       sub	r12, r0 -> r12  ; fflush.c:196[ fflush.c:230 ]
#1:	       add	r11, r0 -> r11  ; fflush.c:195[ fflush.c:230 ]
	;;
.BB14_42:                               ; %bb38.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmplt	r13, r12 -> c1  ; fflush.c:187[ fflush.c:230 ]
	;;
#0:	if  c1 br	.BB14_39        ; fflush.c:187[ fflush.c:230 ]
	;;                              ; fflush.c:187[ fflush.c:230 ]
	       nop	2               ; fflush.c:187[ fflush.c:230 ]
	;;
.BB14_43:                               ; %__sflush_r.exit
#0:	       ldi	0 -> r0
	;;
.BB14_44:                               ; %__sflush_r.exit
#0:	       ldm.s	r14, 24         ; fflush.c:232
#1:	       or	r14, 0 -> r15   ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r13  ; fflush.c:232
#1:	       ldm.s	r14, 28         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r12  ; fflush.c:232
#1:	       ldm.s	r14, 32         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r11  ; fflush.c:232
#1:	       ldm.s	r14, 36         ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r10  ; fflush.c:232
#1:	       ldm.s	r15, 8          ; fflush.c:232
	;;
#0:	       br	.BB14_32
#3:	       ldx	$mem, 0 -> r3.31 ; fflush.c:232
#1:	       ldm.s	r15, 4          ; fflush.c:232
	;;
#3:	       stx	r3.31 -> $ro    ; fflush.c:232
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; fflush.c:232
	;;
#0:	       stx	r0.31 -> $rb    ; fflush.c:232
	;;
	.align	4
__fflush_r_end:

	.align	4
__free_r:                               ; @_free_r
	.size	__free_r_end-__free_r
__free_r_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1     ; mallocr.c:2644
#1:	       ldiu	4 -> r0         ; mallocr.c:2644
#2:	       wb.s	r15, 1          ; mallocr.c:2644
	;;
#0:	if  c1 br	.BB15_15
#1:	       sub	r15, r0 -> r15  ; mallocr.c:2644
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       ldm.f	r1, -4          ; mallocr.c:2650
#1:	       ldi	-2 -> r2
#2:	       ldi	-4 -> r5
#3:	       sub	r1, 8 -> r7     ; mallocr.c:2649
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2650
	;;
#0:	       and	r0, r2 -> r2    ; mallocr.c:2663
	;;
#0:	       sub	r2, 4 -> r3
#1:	       sub	r2, 8 -> r6
	;;
#0:	       add	r1, r3 -> r3
#1:	       add	r1, r6 -> r8    ; mallocr.c:2664
	;;
#0:	       ldm.f	r3, 0           ; mallocr.c:2665
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2665
#1:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2667
	;;
#0:	       and	r4, r5 -> r4    ; mallocr.c:2665
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2667
	;;
#0:	       cmpne	r5, r8 -> c1    ; mallocr.c:2667
	;;
#0:	if  c1 br	.BB15_16        ; mallocr.c:2667
	;;                              ; mallocr.c:2667
	       nop	2               ; mallocr.c:2667
	;;
; BB#2:                                 ; %bb1
#0:	       btest	r0, 0 -> c1     ; mallocr.c:2671
#1:	       add	r4, r2 -> r2    ; mallocr.c:2669
	;;
#0:	if  c1 br	.BB15_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.f	r1, -8          ; mallocr.c:2673
#1:	       ldi	-8 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2673
	;;
#0:	       sub	r3, r0 -> r3
#1:	       add	r0, r2 -> r2    ; mallocr.c:2675
	;;
#0:	       add	r1, r3 -> r7    ; mallocr.c:2674
	;;
#0:	       ldm.f	r7, 8           ; mallocr.c:2676
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2676
#1:	       ldm.f	r7, 12          ; mallocr.c:2676
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2676
	;;
#0:	       stm.a	r4, r3, 3       ; mallocr.c:2676
	;;
#0:	       stm.a	r3, r4, 2       ; mallocr.c:2676
	;;
.BB15_4:                                ; %bb3
#0:	       ldga	131072 -> r3
#1:	       or	r2, 1 -> r0     ; mallocr.c:2679
#2:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2680
	;;
#0:	       cmpult	r2, r3 -> c1    ; mallocr.c:2681
#1:	       stm.a	r0, r7, 1       ; mallocr.c:2679
	;;
#0:	if  c1 br	.BB15_15
#1:	       stm.a	r7, r1, 2       ; mallocr.c:2680
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       ldm.f	r7, 4           ; mallocr.c:3319[ mallocr.c:2682 ]
#1:	       ldi	-4 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3319[ mallocr.c:2682 ]
	;;
#0:	       and	r0, r2 -> r0    ; mallocr.c:3319[ mallocr.c:2682 ]
#1:	       ldiu	0 -> r2
	;;
#0:	       sub	r0, 17 -> r3
#1:	       ldim	2046 -> r2
	;;
#0:	       and	r3, r2 -> r2
#1:	       ldga	4096 -> r3
	;;
#0:	       cmplt	r2, r3 -> c1    ; mallocr.c:3322[ mallocr.c:2682 ]
	;;
#0:	if  c1 br	.BB15_15
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb1.i
#0:	       ldmg.d	_heap_end.1081  ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
#1:	       ldga	_errno.b -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
#1:	       stmb.a	0, r1, 0
	;;
#0:	       cmpeq	r3, 0 -> c1     ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
#0:	if !c1 br	.BB15_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb.i.i.i
#0:	       ldga	_end -> r3      ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
#1:	       ldga	_heap_end.1081 -> r1 ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
#0:	       stm.a	r3, r1, 0       ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
.BB15_8:                                ; %_sbrk.exit.i.i
#0:	       add	r7, r0 -> r4    ; mallocr.c:3332[ mallocr.c:2682 ]
#1:	       ldga	_heap_end.1081 -> r1 ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
#0:	       cmpne	r4, r3 -> c1    ; mallocr.c:3332[ mallocr.c:2682 ]
#1:	       stm.a	r3, r1, 0       ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
#0:	if  c1 br	.BB15_15
	;;
	       nop	2
	;;
; BB#9:                                 ; %_sbrk.exit.i9.i
#0:	       cmpne	r3, -1 -> c1    ; sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ]
#1:	       ldga	_errno.b -> r1.16
#2:	       sub	r3, r2 -> r1    ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ] ]
	;;
#0:	if  c1 br	.BB15_14        ; sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ]
#1:	       stmb.a	0, r1.16, 0
	;;
#1:	       ldga	_heap_end.1081 -> r1.16 ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3331[ mallocr.c:2682 ] ] ]
	;;
#1:	       stm.a	r1, r1.16, 0    ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ] ]
	;;                              ; sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ]
	       nop	0               ; sbrkr.c:60[ mallocr.c:3340[ mallocr.c:2682 ] ]
	;;
; BB#10:                                ; %bb4.i
#0:	       cmpeq	r1, 0 -> c1     ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
#1:	       ldga	_errno.b -> r0
	;;
#0:	if !c1 br	.BB15_12
#1:	       stmb.a	0, r0, 0
	;;
	       nop	2
	;;
; BB#11:                                ; %bb.i.i1.i
#0:	       ldga	_end -> r1      ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
#1:	       ldga	_heap_end.1081 -> r0 ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
	;;
#0:	       stm.a	r1, r0, 0       ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
	;;
.BB15_12:                               ; %_sbrk.exit.i2.i
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:3346[ mallocr.c:2682 ]
#1:	       ldi	16 -> r4
#2:	       ldga	_heap_end.1081 -> r2 ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3346[ mallocr.c:2682 ]
#1:	       stm.a	r1, r2, 0       ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:3345[ mallocr.c:2682 ] ] ]
	;;
#0:	       sub	r1, r0 -> r3    ; mallocr.c:3346[ mallocr.c:2682 ]
	;;
#0:	       cmplt	r3, r4 -> c1    ; mallocr.c:3347[ mallocr.c:2682 ]
	;;
#0:	if  c1 br	.BB15_15
	;;
	       nop	2
	;;
; BB#13:                                ; %bb5.i
#0:	       ldmg.d	___malloc_sbrk_base ; mallocr.c:3349[ mallocr.c:2682 ]
#1:	       s2add	r15, 1 -> r15   ; mallocr.c:2722
	;;
#3:	       ldga	___malloc_current_mallinfo.0 -> r3.16 ; mallocr.c:3349[ mallocr.c:2682 ]
	;;
#0:	       ret                      ; mallocr.c:2722
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:3349[ mallocr.c:2682 ]
	;;
#0:	       sub	r1, r2 -> r2    ; mallocr.c:3349[ mallocr.c:2682 ]
	;;
#3:	       stm.a	r2, r3.16, 0    ; mallocr.c:3349[ mallocr.c:2682 ]
#0:	       or	r3, 1 -> r2     ; mallocr.c:3350[ mallocr.c:2682 ]
	;;
#0:	       stm.a	r2, r0, 1       ; mallocr.c:3350[ mallocr.c:2682 ]
	;;                              ; mallocr.c:2722
	       nop	0               ; mallocr.c:2722
	;;
.BB15_14:                               ; %bb7.i
#0:	       sub	r0, r2 -> r0    ; mallocr.c:3360[ mallocr.c:2682 ]
#1:	       ldga	___malloc_current_mallinfo.0 -> r3 ; mallocr.c:3361[ mallocr.c:2682 ]
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:3360[ mallocr.c:2682 ]
	;;
#0:	       stm.a	r0, r7, 1       ; mallocr.c:3360[ mallocr.c:2682 ]
	;;
#0:	       ldmg.d	___malloc_current_mallinfo.0 ; mallocr.c:3361[ mallocr.c:2682 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3361[ mallocr.c:2682 ]
	;;
#0:	       sub	r0, r2 -> r0    ; mallocr.c:3361[ mallocr.c:2682 ]
	;;
#0:	       stm.a	r0, r3, 0       ; mallocr.c:3361[ mallocr.c:2682 ]
	;;
.BB15_15:                               ; %bb5
#0:	       s2add	r15, 1 -> r15   ; mallocr.c:2722
#1:	       ret                      ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
.BB15_16:                               ; %bb6
#0:	       btest	r0, 0 -> c1     ; mallocr.c:2691
#1:	       stm.a	r4, r3, 0       ; mallocr.c:2687
	;;
#0:	if !c1 br	.BB15_18        ; mallocr.c:2691
	;;                              ; mallocr.c:2691
	       nop	2               ; mallocr.c:2691
	;;
; BB#17:                                ; %bb6.bb10_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB15_21
#2:	       or	r2, 0 -> r3
	;;
	       nop	2
	;;
.BB15_18:                               ; %bb7
#0:	       ldm.f	r1, -8          ; mallocr.c:2693
#2:	       ldi	-8 -> r3
#1:	       ldga	___malloc_av_ -> r1.16 ; mallocr.c:2697
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2693
	;;
#0:	       sub	r3, r0 -> r5
#2:	       add	r0, r2 -> r3    ; mallocr.c:2695
#1:	       add	r1.16, 8 -> r0  ; mallocr.c:2697
	;;
#0:	       add	r1, r5 -> r7    ; mallocr.c:2694
	;;
#0:	       ldm.f	r7, 8           ; mallocr.c:2697
	;;
#0:	       ldx	$mem, 0 -> r8   ; mallocr.c:2697
	;;
#0:	       cmpne	r8, r0 -> c1    ; mallocr.c:2697
	;;
#0:	if  c1 br	.BB15_20        ; mallocr.c:2697
	;;                              ; mallocr.c:2697
	       nop	2               ; mallocr.c:2697
	;;
; BB#19:                                ; %bb7.bb10_crit_edge
#0:	       ldi	1 -> r0
#1:	       br	.BB15_21
	;;
	       nop	2
	;;
.BB15_20:                               ; %bb9
#0:	       add	r5, r1 -> r0
	;;
#0:	       ldm.f	r0, 12          ; mallocr.c:2700
#1:	       ldi	0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2700
	;;
#0:	       stm.a	r5, r8, 3       ; mallocr.c:2700
	;;
#0:	       stm.a	r8, r5, 2       ; mallocr.c:2700
	;;
.BB15_21:                               ; %bb10
#0:	       add	r4, r6 -> r5
	;;
#0:	       add	r5, r1 -> r5
	;;
#0:	       ldm.f	r5, 4           ; mallocr.c:2703
#1:	       add	r5, 4 -> r6
	;;
#0:	       ldx	$membu, r6 -> r5 ; mallocr.c:2703
	;;
#0:	       btest	r5, 0 -> c1     ; mallocr.c:2703
	;;
#0:	if  c1 br	.BB15_25
	;;
	       nop	2
	;;
; BB#22:                                ; %bb11
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2707
#1:	       add	r1, r2 -> r5
#2:	       add	r3, r4 -> r3    ; mallocr.c:2705
	;;
#0:	if  c1 br	.BB15_24
#1:	       ldm.f	r5, 0           ; mallocr.c:2707
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2707
	;;
	       nop	1
	;;
; BB#23:                                ; %bb11
#0:	       ldga	___malloc_av_ -> r0.16
	;;
#0:	       add	r0.16, 8 -> r4
	;;
#0:	       cmpne	r5, r4 -> c1
	;;
#0:	if !c1 br	.BB15_46
	;;
	       nop	2
	;;
.BB15_24:                               ; %bb14
#0:	       add	r2, r1 -> r1
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2713
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2713
	;;
#0:	       stm.a	r1, r5, 3       ; mallocr.c:2713
	;;
#0:	       stm.a	r5, r1, 2       ; mallocr.c:2713
	;;
.BB15_25:                               ; %bb15
#0:	       or	r3, 1 -> r1     ; mallocr.c:2717
#1:	       cmpne	r0, 0 -> c1     ; mallocr.c:2719
#2:	       add	r7, r3 -> r2    ; mallocr.c:2718
	;;
#0:	       stm.a	r1, r7, 1       ; mallocr.c:2717
#1:	if  c1 s2add	r15, 1 -> r15   ; mallocr.c:2722
	;;
#0:	       stm.a	r3, r2, 0       ; mallocr.c:2718
	;;
#0:	if  c1 ret                      ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
; BB#26:                                ; %bb16
#0:	       ldi	511 -> r0
	;;
#0:	       cmpult	r0, r3 -> c1    ; mallocr.c:2720
	;;
#0:	if !c1 br	.BB15_47
	;;
	       nop	2
	;;
; BB#27:                                ; %bb20
#0:	       sr	r3, 9 -> r0     ; mallocr.c:2720
#1:	       ldi	4 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_29        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#28:                                ; %bb21
#0:	       sr	r3, 6 -> r0     ; mallocr.c:2720
#1:	       br	.BB15_38
	;;
#0:	       s2add	r0, 14 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB15_29:                               ; %bb22
#0:	       ldi	20 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_31        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#30:                                ; %bb23
#0:	       ldi	91 -> r1
#1:	       br	.BB15_38
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB15_31:                               ; %bb24
#0:	       ldi	84 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_33        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#32:                                ; %bb25
#0:	       sr	r3, 12 -> r0    ; mallocr.c:2720
#1:	       br	.BB15_38
#2:	       ldi	110 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB15_33:                               ; %bb26
#0:	       ldi	340 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_35        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#34:                                ; %bb27
#0:	       sr	r3, 15 -> r0    ; mallocr.c:2720
#1:	       br	.BB15_38
#2:	       ldi	119 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2720
	;;
	       nop	1
	;;
.BB15_35:                               ; %bb28
#0:	       ldiu	1365 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB15_37        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#36:                                ; %bb28.bb36_crit_edge
#0:	       ldi	126 -> r0
#1:	       br	.BB15_38
	;;
	       nop	2
	;;
.BB15_37:                               ; %bb29
#0:	       sr	r3, 18 -> r0    ; mallocr.c:2720
	;;
#0:	       s2add	r0, 31 -> r0    ; mallocr.c:2720
	;;
.BB15_38:                               ; %bb36
#0:	       ldga	___malloc_av_ -> r1
#1:	       sl	r0, 3 -> r2
	;;
#0:	       add	r1, r2 -> r2
	;;
#0:	       ldm.f	r2, 8           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2720
	;;
#0:	       cmpeq	r4, r2 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_40        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
; BB#39:                                ; %bb36.bb39_crit_edge
#0:	       ldi	-4 -> r0
#1:	       br	.BB15_42
	;;
	       nop	2
	;;
.BB15_40:                               ; %bb37
#0:	       sra	r0, 31 -> r3    ; mallocr.c:2720
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2720
	;;
#0:	       sr	r3, 30 -> r3    ; mallocr.c:2720
	;;
#0:	       add	r0, r3 -> r0    ; mallocr.c:2720
#1:	       ldi	1 -> r3
#2:	       ldx	$mem, 0 -> r5   ; mallocr.c:2720
	;;
#0:	       br	.BB15_45
#1:	       sra	r0, 2 -> r0     ; mallocr.c:2720
	;;
#0:	       sl	r3, r0 -> r0    ; mallocr.c:2720
	;;
#0:	       or	r0, r5 -> r0    ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r1, 1
	;;
.BB15_41:                               ; %bb38
                                        ;   in Loop: Header=BB15_42 Depth=1
#0:	       ldm.f	r4, 8           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2720
	;;
.BB15_42:                               ; %bb39
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r4, r2 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_44
	;;
	       nop	2
	;;
; BB#43:                                ; %bb40
                                        ;   in Loop: Header=BB15_42 Depth=1
#0:	       ldm.f	r4, 4           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2720
	;;
#0:	       and	r1, r0 -> r1    ; mallocr.c:2720
	;;
#0:	       cmpult	r3, r1 -> c1    ; mallocr.c:2720
	;;
#0:	if  c1 br	.BB15_41        ; mallocr.c:2720
	;;                              ; mallocr.c:2720
	       nop	2               ; mallocr.c:2720
	;;
.BB15_44:                               ; %bb41
#0:	       ldm.f	r4, 12          ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2720
	;;
.BB15_45:                               ; %bb42
#0:	       stm.a	r2, r7, 3       ; mallocr.c:2720
#1:	       s2add	r15, 1 -> r15   ; mallocr.c:2722
	;;
#0:	       stm.a	r4, r7, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r7, r2, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r7, r4, 3       ; mallocr.c:2720
	;;
#0:	       ret                      ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
.BB15_46:                               ; %bb15.thread
#0:	       stm.a	r7, r0.16, 5    ; mallocr.c:2710
#1:	       or	r3, 1 -> r0     ; mallocr.c:2717
#2:	       s2add	r15, 1 -> r15   ; mallocr.c:2722
	;;
#0:	       stm.a	r7, r0.16, 4    ; mallocr.c:2710
	;;
#0:	       stm.a	r0, r7, 1       ; mallocr.c:2717
#1:	       add	r7, r3 -> r0    ; mallocr.c:2718
	;;
#0:	       stm.a	r4, r7, 3       ; mallocr.c:2710
	;;
#0:	       stm.a	r4, r7, 2       ; mallocr.c:2710
	;;
#0:	       stm.a	r3, r0, 0       ; mallocr.c:2718
	;;
#0:	       ret                      ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
.BB15_47:                               ; %bb17
#0:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2720
#1:	       ldi	1 -> r0
#2:	       sr	r3, 5 -> r1
#3:	       s2add	r15, 1 -> r15   ; mallocr.c:2722
	;;
#0:	       sl	r0, r1 -> r0    ; mallocr.c:2720
#1:	       ldi	-8 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2720
#1:	       and	r3, r1 -> r3
	;;
#0:	       or	r2, r0 -> r0    ; mallocr.c:2720
#1:	       ldga	___malloc_av_ -> r2 ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r2, 1
#1:	       add	r2, r3 -> r3
	;;
#0:	       ldm.f	r3, 8           ; mallocr.c:2720
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2720
#1:	       stm.a	r3, r7, 3       ; mallocr.c:2720
	;;
#0:	       stm.a	r0, r7, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r7, r3, 2       ; mallocr.c:2720
	;;
#0:	       stm.a	r7, r0, 3       ; mallocr.c:2720
	;;
#0:	       ret                      ; mallocr.c:2722
	;;                              ; mallocr.c:2722
	       nop	3               ; mallocr.c:2722
	;;
	.align	4
__free_r_end:

	.align	4
__malloc_r:                             ; @_malloc_r
	.size	__malloc_r_end-__malloc_r
__malloc_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 10
#2:	       ldiu	40 -> r4
#1:	       ldx	$rb, 0 -> r1.31
#3:	       ldi	22 -> r1
	;;
#0:	       sub	r15, r4 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       add	r0, 11 -> r2    ; mallocr.c:2348
#3:	       ldi	-8 -> r3
	;;
#0:	       cmpult	r1, r2 -> c1    ; mallocr.c:2348
#1:	       and	r2, r3 -> r1    ; mallocr.c:2348
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#1:	       stm.s	r1.31, r15, 1
	;;
#2:	       stm.s	r2.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       ldi	16 -> r10
	;;
#0:	if  c1 or	r1, 0 -> r10
#1:	       stm.s	r11, r14, 8
	;;
#0:	       cmplt	r10, 0 -> c1    ; mallocr.c:2351
#1:	       stm.s	r12, r14, 7
	;;
#0:	if  c1 br	.BB16_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpule	r0, r10 -> c1
	;;
#0:	if  c1 br	.BB16_3
	;;
	       nop	2
	;;
.BB16_2:                                ; %bb4
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2353
#1:	       br	.BB16_33
	;;
#0:	       stm.a	12, r0, 0       ; mallocr.c:2353
#1:	       ldi	0 -> r0
	;;
	       nop	1
	;;
.BB16_3:                                ; %bb5
#0:	       ldi	503 -> r0
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2361
	;;
#0:	if  c1 br	.BB16_10        ; mallocr.c:2361
	;;                              ; mallocr.c:2361
	       nop	2               ; mallocr.c:2361
	;;
; BB#4:                                 ; %bb6
#0:	       ldi	-4 -> r0
#1:	       ldga	___malloc_av_ -> r1
#2:	       sr	r10, 3 -> r3    ; mallocr.c:2363
	;;
#0:	       and	r10, r0 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       ldm.f	r0, 12          ; mallocr.c:2368
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2368
	;;
#0:	       cmpeq	r2, r0 -> c1    ; mallocr.c:2372
	;;
#0:	if  c1 sr	r10, 2 -> r0
	;;
#0:	if  c1 s2add	r1, r0 -> r0
	;;
#0:	if  c1 ldm.f	r0, 20          ; mallocr.c:2375
#1:	if  c1 add	r0, 8 -> r0
	;;
#0:	if  c1 ldx	$mem, 0 -> r2   ; mallocr.c:2375
	;;
#0:	       cmpeq	r2, r0 -> c1    ; mallocr.c:2378
	;;
#0:	if  c1 br	.BB16_6         ; mallocr.c:2378
	;;                              ; mallocr.c:2378
	       nop	2               ; mallocr.c:2378
	;;
; BB#5:                                 ; %bb9
#0:	       ldm.f	r2, 4           ; mallocr.c:2380
#1:	       ldi	-4 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2380
#1:	       ldm.f	r2, 8           ; mallocr.c:2381
	;;
#0:	       add	r3, 4 -> r3
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2381
#1:	       ldm.f	r2, 12          ; mallocr.c:2381
#2:	       and	r3, r1 -> r3
	;;
#0:	       add	r2, r3 -> r3
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2381
	;;
#0:	       stm.a	r0, r10, 3      ; mallocr.c:2381
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2381
#1:	       add	r2, 8 -> r0     ; mallocr.c:2381
	;;
#0:	       br	.BB16_108
#1:	       ldm.f	r3, 0           ; mallocr.c:2382
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2382
	;;
#0:	       or	r10, 1 -> r10   ; mallocr.c:2382
	;;
#0:	       stm.a	r10, r3, 0      ; mallocr.c:2382
	;;
.BB16_6:                                ; %bb10
#0:	       add	r3, 2 -> r0     ; mallocr.c:2388
	;;
.BB16_7:                                ; %bb37
#0:	       ldmg.d	___malloc_av_+16 ; mallocr.c:2423
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2423
	;;
#0:	       add	r1, 8 -> r1     ; mallocr.c:2423
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2423
	;;
#0:	       cmpeq	r2, r1 -> c1    ; mallocr.c:2423
	;;
#0:	if  c1 br	.BB16_58
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb38
#0:	       ldm.f	r2, 4           ; mallocr.c:2425
#1:	       ldi	-4 -> r3
#2:	       ldi	16 -> r5
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2425
	;;
#0:	       and	r1, r3 -> r3    ; mallocr.c:2425
	;;
#0:	       sub	r3, r10 -> r4   ; mallocr.c:2426
	;;
#0:	       cmplt	r4, r5 -> c1    ; mallocr.c:2428
	;;
#0:	if  c1 br	.BB16_30
	;;
	       nop	2
	;;
; BB#9:                                 ; %bb39
#0:	       or	r10, 1 -> r0    ; mallocr.c:2431
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2432
#2:	       add	r2, r10 -> r5   ; mallocr.c:2430
	;;
#0:	       stm.a	r0, r2, 1       ; mallocr.c:2431
#1:	       or	r10, 4 -> r0
#2:	       or	r4, 1 -> r10    ; mallocr.c:2433
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       stm.a	r5, r1, 5       ; mallocr.c:2432
	;;
#0:	       stm.a	r5, r1, 4       ; mallocr.c:2432
#1:	       add	r1, 8 -> r1     ; mallocr.c:2432
	;;
#0:	       br	.BB16_108
#1:	       stm.a	r10, r0, 0      ; mallocr.c:2433
#2:	       add	r2, 8 -> r0
	;;
#0:	       stm.a	r1, r5, 3       ; mallocr.c:2432
	;;
#0:	       stm.a	r1, r5, 2       ; mallocr.c:2432
#1:	       add	r2, r3 -> r1    ; mallocr.c:2434
	;;
#0:	       stm.a	r4, r1, 0       ; mallocr.c:2434
	;;
.BB16_10:                               ; %bb11
#0:	       ldi	511 -> r0
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB16_12        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#11:                                ; %bb12
#0:	       sr	r10, 3 -> r0    ; mallocr.c:2393
#1:	       br	.BB16_23
	;;
	       nop	2
	;;
.BB16_12:                               ; %bb13
#0:	       sr	r10, 9 -> r0    ; mallocr.c:2393
#1:	       ldi	4 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB16_14        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#13:                                ; %bb14
#0:	       sr	r10, 6 -> r0    ; mallocr.c:2393
#1:	       br	.BB16_23
	;;
#0:	       s2add	r0, 14 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB16_14:                               ; %bb15
#0:	       ldi	20 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB16_16        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#15:                                ; %bb16
#0:	       ldi	91 -> r1
#1:	       br	.BB16_23
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB16_16:                               ; %bb17
#0:	       ldi	84 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB16_18        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#17:                                ; %bb18
#0:	       sr	r10, 12 -> r0   ; mallocr.c:2393
#1:	       br	.BB16_23
#2:	       ldi	110 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB16_18:                               ; %bb19
#0:	       ldi	340 -> r1
	;;
#0:	       cmpult	r1, r0 -> c1    ; mallocr.c:2393
	;;
#0:	if  c1 br	.BB16_20        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#19:                                ; %bb20
#0:	       sr	r10, 15 -> r0   ; mallocr.c:2393
#1:	       br	.BB16_23
#2:	       ldi	119 -> r1
	;;
#0:	       add	r0, r1 -> r0    ; mallocr.c:2393
	;;
	       nop	1
	;;
.BB16_20:                               ; %bb21
#0:	       ldiu	1365 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB16_22        ; mallocr.c:2393
	;;                              ; mallocr.c:2393
	       nop	2               ; mallocr.c:2393
	;;
; BB#21:                                ; %bb21.bb29_crit_edge
#0:	       ldi	126 -> r0
#1:	       br	.BB16_23
	;;
	       nop	2
	;;
.BB16_22:                               ; %bb22
#0:	       sr	r10, 18 -> r0   ; mallocr.c:2393
	;;
#0:	       s2add	r0, 31 -> r0    ; mallocr.c:2393
	;;
.BB16_23:                               ; %bb29
#0:	       ldga	___malloc_av_ -> r1
#1:	       sl	r0, 3 -> r2
#2:	       ldi	-4 -> r3
#3:	       ldi	16 -> r4
	;;
#0:	       add	r1, r2 -> r1
	;;
#0:	       ldm.f	r1, 12          ; mallocr.c:2396
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2396
	;;
.BB16_24:                               ; %bb35
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r2, 0 -> r5
	;;
#0:	       cmpne	r5, r1 -> c1    ; mallocr.c:2396
	;;
#0:	if !c1 br	.BB16_27
	;;
	       nop	2
	;;
; BB#25:                                ; %bb30
                                        ;   in Loop: Header=BB16_24 Depth=1
#0:	       ldm.f	r5, 4           ; mallocr.c:2398
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2398
	;;
#0:	       and	r2, r3 -> r6    ; mallocr.c:2398
	;;
#0:	       sub	r6, r10 -> r7   ; mallocr.c:2399
	;;
#0:	       cmplt	r7, r4 -> c1    ; mallocr.c:2401
	;;
#0:	if  c1 br	.BB16_28        ; mallocr.c:2401
	;;                              ; mallocr.c:2401
	       nop	2               ; mallocr.c:2401
	;;
; BB#26:                                ; %bb31
#0:	       sub	r0, 1 -> r0
	;;
.BB16_27:                               ; %bb36
#0:	       add	r0, 1 -> r0     ; mallocr.c:2417
#1:	       br	.BB16_7
	;;
	       nop	2
	;;
.BB16_28:                               ; %bb32
                                        ;   in Loop: Header=BB16_24 Depth=1
#0:	       cmplt	r7, 0 -> c1     ; mallocr.c:2407
#1:	       ldm.f	r5, 12          ; mallocr.c:2409
	;;
#0:	if  c1 br	.BB16_24
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2409
	;;
	       nop	2
	;;
; BB#29:                                ; %bb33
#0:	       ldm.f	r5, 8           ; mallocr.c:2409
#1:	       add	r6, r5 -> r1    ; mallocr.c:2409
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2409
	;;
#0:	       stm.a	r2, r0, 3       ; mallocr.c:2409
	;;
#0:	       br	.BB16_32
#1:	       stm.a	r0, r2, 2       ; mallocr.c:2409
#2:	       add	r5, 8 -> r0     ; mallocr.c:2409
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2410
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2410
	;;
#0:	       or	r2, 1 -> r2     ; mallocr.c:2410
	;;
.BB16_30:                               ; %bb40
#2:	       ldga	___malloc_av_ -> r2.16 ; mallocr.c:2440
#0:	       cmplt	r4, 0 -> c1     ; mallocr.c:2442
	;;
#0:	if  c1 br	.BB16_35        ; mallocr.c:2442
#2:	       add	r2.16, 8 -> r5  ; mallocr.c:2440
	;;
#2:	       stm.a	r5, r2.16, 5    ; mallocr.c:2440
	;;
#2:	       stm.a	r5, r2.16, 4    ; mallocr.c:2440
	;;                              ; mallocr.c:2442
	       nop	0               ; mallocr.c:2442
	;;
; BB#31:                                ; %bb41
#0:	       add	r3, r2 -> r1    ; mallocr.c:2444
#1:	       add	r2, 8 -> r0
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2444
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2444
	;;
#0:	       or	r3, 1 -> r2     ; mallocr.c:2444
	;;
.BB16_32:                               ; %bb41
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2444
	;;
.BB16_33:                               ; %bb41
#0:	       ldm.s	r14, 28         ; mallocr.c:2590
#1:	       or	r14, 0 -> r15   ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2590
#1:	       ldm.s	r14, 32         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2590
#1:	       ldm.s	r14, 36         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2590
#1:	       ldm.s	r15, 8          ; mallocr.c:2590
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:2590
#0:	       ldm.s	r15, 4          ; mallocr.c:2590
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:2590
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:2590
	;;
.BB16_34:                               ; %bb41
#0:	       ldm.s	r15, 0          ; mallocr.c:2590
#1:	       s2add	r15, 10 -> r15  ; mallocr.c:2590
	;;
#0:	       ret                      ; mallocr.c:2590
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:2590
	;;                              ; mallocr.c:2590
	       nop	3               ; mallocr.c:2590
	;;
.BB16_35:                               ; %bb42
#0:	       ldi	511 -> r4
	;;
#0:	       cmpult	r4, r3 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_37        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#36:                                ; %bb43
#0:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2452
#1:	       ldi	1 -> r3
#2:	       sr	r1, 5 -> r4
	;;
#0:	       sl	r3, r4 -> r3    ; mallocr.c:2452
#1:	       ldga	___malloc_av_ -> r1.16 ; mallocr.c:2452
#2:	       ldi	-8 -> r4
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
#1:	       and	r1, r4 -> r1
	;;
#0:	       or	r5, r3 -> r3    ; mallocr.c:2452
#1:	       add	r1.16, r1 -> r1
	;;
#1:	       stm.a	r3, r1.16, 1
	;;
#0:	       ldm.f	r1, 8           ; mallocr.c:2452
	;;
#0:	       br	.BB16_58
#1:	       ldx	$mem, 0 -> r3   ; mallocr.c:2452
#2:	       stm.a	r1, r2, 3       ; mallocr.c:2452
	;;
#0:	       stm.a	r3, r2, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r1, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r3, 3       ; mallocr.c:2452
	;;
.BB16_37:                               ; %bb44
#0:	       cmpult	r4, r1 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_39        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#38:                                ; %bb45
#0:	       sr	r1, 3 -> r1     ; mallocr.c:2452
#1:	       br	.BB16_50
	;;
	       nop	2
	;;
.BB16_39:                               ; %bb46
#0:	       sr	r1, 9 -> r4     ; mallocr.c:2452
#1:	       ldi	4 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_41        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#40:                                ; %bb47
#0:	       sr	r1, 6 -> r1     ; mallocr.c:2452
#1:	       br	.BB16_50
	;;
#0:	       s2add	r1, 14 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB16_41:                               ; %bb48
#0:	       ldi	20 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_43        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#42:                                ; %bb49
#0:	       ldi	91 -> r1
#1:	       br	.BB16_50
	;;
#0:	       add	r4, r1 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB16_43:                               ; %bb50
#0:	       ldi	84 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_45        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#44:                                ; %bb51
#0:	       sr	r1, 12 -> r1    ; mallocr.c:2452
#1:	       br	.BB16_50
#2:	       ldi	110 -> r4
	;;
#0:	       add	r1, r4 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB16_45:                               ; %bb52
#0:	       ldi	340 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_47        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#46:                                ; %bb53
#0:	       sr	r1, 15 -> r1    ; mallocr.c:2452
#1:	       br	.BB16_50
#2:	       ldi	119 -> r4
	;;
#0:	       add	r1, r4 -> r1    ; mallocr.c:2452
	;;
	       nop	1
	;;
.BB16_47:                               ; %bb54
#0:	       ldiu	1365 -> r5
	;;
#0:	       cmpult	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB16_49        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#48:                                ; %bb54.bb62_crit_edge
#0:	       ldi	126 -> r1
#1:	       br	.BB16_50
	;;
	       nop	2
	;;
.BB16_49:                               ; %bb55
#0:	       sr	r1, 18 -> r1    ; mallocr.c:2452
	;;
#0:	       s2add	r1, 31 -> r1    ; mallocr.c:2452
	;;
.BB16_50:                               ; %bb62
#3:	       ldga	___malloc_av_ -> r3.16
#0:	       sl	r1, 3 -> r4
	;;
#3:	       add	r3.16, r4 -> r4
	;;
#0:	       ldm.f	r4, 8           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
	;;
#0:	       cmpeq	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_52        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
; BB#51:                                ; %bb62.bb65_crit_edge
#0:	       ldi	-4 -> r1
#1:	       br	.BB16_54
	;;
	       nop	2
	;;
.BB16_52:                               ; %bb63
#0:	       sra	r1, 31 -> r3    ; mallocr.c:2452
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2452
	;;
#0:	       sr	r3, 30 -> r3    ; mallocr.c:2452
	;;
#0:	       add	r1, r3 -> r1    ; mallocr.c:2452
#1:	       ldi	1 -> r3
#2:	       ldx	$mem, 0 -> r6   ; mallocr.c:2452
	;;
#0:	       br	.BB16_57
#1:	       sra	r1, 2 -> r1     ; mallocr.c:2452
	;;
#0:	       sl	r3, r1 -> r1    ; mallocr.c:2452
	;;
#0:	       or	r1, r6 -> r1    ; mallocr.c:2452
	;;
#3:	       stm.a	r1, r3.16, 1
	;;
.BB16_53:                               ; %bb64
                                        ;   in Loop: Header=BB16_54 Depth=1
#0:	       ldm.f	r5, 8           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2452
	;;
.BB16_54:                               ; %bb65
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r5, r4 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_56
	;;
	       nop	2
	;;
; BB#55:                                ; %bb66
                                        ;   in Loop: Header=BB16_54 Depth=1
#0:	       ldm.f	r5, 4           ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2452
	;;
#0:	       and	r6, r1 -> r6    ; mallocr.c:2452
	;;
#0:	       cmpult	r3, r6 -> c1    ; mallocr.c:2452
	;;
#0:	if  c1 br	.BB16_53        ; mallocr.c:2452
	;;                              ; mallocr.c:2452
	       nop	2               ; mallocr.c:2452
	;;
.BB16_56:                               ; %bb67
#0:	       ldm.f	r5, 12          ; mallocr.c:2452
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2452
	;;
.BB16_57:                               ; %bb68
#0:	       stm.a	r4, r2, 3       ; mallocr.c:2452
	;;
#0:	       stm.a	r5, r2, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r4, 2       ; mallocr.c:2452
	;;
#0:	       stm.a	r2, r5, 3       ; mallocr.c:2452
	;;
.BB16_58:                               ; %bb69
#0:	       sra	r0, 31 -> r1    ; mallocr.c:2460
#1:	       ldmg.d	___malloc_av_+4 ; mallocr.c:2460
#2:	       ldi	1 -> r3
	;;
#0:	       sr	r1, 30 -> r1    ; mallocr.c:2460
	;;
#0:	       add	r0, r1 -> r1    ; mallocr.c:2460
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2460
	;;
#0:	       sra	r1, 2 -> r1     ; mallocr.c:2460
	;;
#0:	       sl	r3, r1 -> r1    ; mallocr.c:2460
	;;
#0:	       cmpult	r2, r1 -> c1    ; mallocr.c:2460
	;;
#0:	if  c1 br	.BB16_78
	;;
	       nop	2
	;;
; BB#59:                                ; %bb70
#0:	       and	r2, r1 -> r3    ; mallocr.c:2465
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2465
	;;
#0:	if  c1 add	r0, 4 -> r0
#1:	if  c1 ldi	-4 -> r3
#2:	if  c1 sl	r1, 1 -> r1
	;;
#0:	if  c1 and	r0, r3 -> r0
#1:	if  c1 and	r2, r1 -> r3    ; mallocr.c:2470
	;;
#0:	if  c1 cmpeq	r3, 0 -> c1     ; mallocr.c:2470
	;;
#0:	if !c1 br	.BB16_61
	;;
	       nop	2
	;;
.BB16_60:                               ; %bb72
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r1, 1 -> r1
#1:	       add	r0, 4 -> r0
	;;
#0:	       and	r2, r1 -> r3    ; mallocr.c:2470
	;;
#0:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2470
	;;
#0:	if  c1 br	.BB16_60        ; mallocr.c:2470
	;;                              ; mallocr.c:2470
	       nop	2               ; mallocr.c:2470
	;;
.BB16_61:                               ; %bb72.bb74_crit_edge
#0:	       or	r2, 0 -> r3
	;;
.BB16_62:                               ; %bb74
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB16_76 Depth 2
                                        ;     Child Loop BB16_71 Depth 2
                                        ;     Child Loop BB16_63 Depth 2
                                        ;       Child Loop BB16_64 Depth 3
#3:	       ldga	___malloc_av_ -> r3.16
#0:	       sl	r0, 3 -> r4
#1:	       add	r0, 1 -> r5
#2:	       ldi	-4 -> r7
	;;
#3:	       add	r3.16, r4 -> r6
#0:	       ldi	16 -> r8
	;;
.BB16_63:                               ; %bb75
                                        ;   Parent Loop BB16_62 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB16_64 Depth 3
#0:	       or	r6, 0 -> r9
	;;
.BB16_64:                               ; %bb81
                                        ;   Parent Loop BB16_62 Depth=1
                                        ;     Parent Loop BB16_63 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
#0:	       ldm.f	r9, 12
	;;
#0:	       ldx	$mem, 0 -> r9
	;;
#0:	       cmpne	r6, r9 -> c1    ; mallocr.c:2488
	;;
#0:	if !c1 br	.BB16_69
	;;
	       nop	2
	;;
; BB#65:                                ; %bb76
                                        ;   in Loop: Header=BB16_64 Depth=3
#0:	       ldm.f	r9, 4           ; mallocr.c:2490
	;;
#0:	       ldx	$mem, 0 -> r0.16 ; mallocr.c:2490
	;;
#0:	       and	r0.16, r7 -> r11 ; mallocr.c:2490
	;;
#0:	       sub	r11, r10 -> r12 ; mallocr.c:2491
	;;
#0:	       cmplt	r12, r8 -> c1   ; mallocr.c:2493
	;;
#0:	if  c1 br	.BB16_67        ; mallocr.c:2493
	;;                              ; mallocr.c:2493
	       nop	2               ; mallocr.c:2493
	;;
; BB#66:                                ; %bb77
#0:	       ldm.f	r9, 8           ; mallocr.c:2497
#1:	       or	r10, 1 -> r0    ; mallocr.c:2496
#2:	       add	r9, r10 -> r3   ; mallocr.c:2495
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2497
#1:	       ldm.f	r9, 12          ; mallocr.c:2497
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2497
#1:	       stm.a	r0, r9, 1       ; mallocr.c:2496
#2:	       ldga	___malloc_av_ -> r0 ; mallocr.c:2498
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2497
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2497
#1:	       or	r10, 4 -> r1
#2:	       or	r12, 1 -> r2    ; mallocr.c:2499
	;;
#0:	       add	r9, r1 -> r1
	;;
#0:	       stm.a	r3, r0, 5       ; mallocr.c:2498
	;;
#0:	       stm.a	r3, r0, 4       ; mallocr.c:2498
#1:	       add	r0, 8 -> r0     ; mallocr.c:2498
	;;
#0:	       br	.BB16_108
#1:	       stm.a	r2, r1, 0       ; mallocr.c:2499
#2:	       add	r9, r11 -> r1   ; mallocr.c:2500
	;;
#0:	       stm.a	r0, r3, 3       ; mallocr.c:2498
	;;
#0:	       stm.a	r0, r3, 2       ; mallocr.c:2498
#1:	       add	r9, 8 -> r0     ; mallocr.c:2497
	;;
#0:	       stm.a	r12, r1, 0      ; mallocr.c:2500
	;;
.BB16_67:                               ; %bb78
                                        ;   in Loop: Header=BB16_64 Depth=3
#0:	       cmplt	r12, 0 -> c1    ; mallocr.c:2506
	;;
#0:	if  c1 br	.BB16_64
	;;
	       nop	2
	;;
; BB#68:                                ; %bb79
#0:	       add	r11, r9 -> r1   ; mallocr.c:2508
#1:	       add	r9, 8 -> r0     ; mallocr.c:2509
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2508
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2508
	;;
#0:	       or	r2, 1 -> r2     ; mallocr.c:2508
	;;
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2508
	;;
#0:	       ldm.f	r9, 8           ; mallocr.c:2509
	;;
#0:	       br	.BB16_33
#1:	       ldx	$mem, 0 -> r1   ; mallocr.c:2509
#2:	       ldm.f	r9, 12          ; mallocr.c:2509
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2509
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2509
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2509
	;;
.BB16_69:                               ; %bb82
                                        ;   in Loop: Header=BB16_63 Depth=2
#0:	       add	r5, 1 -> r9
#1:	       and	r5, 3 -> r5     ; mallocr.c:2526
#2:	       add	r6, 8 -> r6
	;;
#0:	       cmpne	r5, 0 -> c1     ; mallocr.c:2526
#1:	       or	r9, 0 -> r5
	;;
#0:	if  c1 br	.BB16_63
	;;
	       nop	2
	;;
; BB#70:                                ; %bb83.loopexit
                                        ;   in Loop: Header=BB16_62 Depth=1
#3:	       ldga	___malloc_av_ -> r3.16
#0:	       sub	r9, 1 -> r5
	;;
#3:	       add	r3.16, r4 -> r4
	;;
.BB16_71:                               ; %bb83
                                        ;   Parent Loop BB16_62 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       and	r0, 3 -> r6     ; mallocr.c:2532
	;;
#0:	       cmpne	r6, 0 -> c1     ; mallocr.c:2532
	;;
#0:	if  c1 br	.BB16_73        ; mallocr.c:2532
	;;                              ; mallocr.c:2532
	       nop	2               ; mallocr.c:2532
	;;
; BB#72:                                ; %bb84
                                        ;   in Loop: Header=BB16_62 Depth=1
#0:	       xor	r1, -1 -> r0    ; mallocr.c:2534
#1:	       br	.BB16_74
	;;
#0:	       and	r3, r0 -> r2    ; mallocr.c:2534
#1:	       ldga	___malloc_av_ -> r0
	;;
#0:	       stm.a	r2, r0, 1
#1:	       or	r2, 0 -> r3
	;;
	       nop	0
	;;
.BB16_73:                               ; %bb86
                                        ;   in Loop: Header=BB16_71 Depth=2
#0:	       ldm.f	r4, 0           ; mallocr.c:2539
#1:	       sub	r4, 8 -> r6
#2:	       sub	r0, 1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2539
	;;
#0:	       cmpeq	r6, r4 -> c1    ; mallocr.c:2539
#1:	       or	r6, 0 -> r4
	;;
#0:	if  c1 br	.BB16_71
	;;
	       nop	2
	;;
.BB16_74:                               ; %bb87
                                        ;   in Loop: Header=BB16_62 Depth=1
#0:	       sl	r1, 1 -> r1     ; mallocr.c:2543
	;;
#0:	       cmpult	r3, r1 -> c1    ; mallocr.c:2543
	;;
#0:	if !c1 cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB16_78
	;;
	       nop	2
	;;
; BB#75:                                ; %bb90.preheader
                                        ;   in Loop: Header=BB16_62 Depth=1
#0:	       and	r3, r1 -> r0    ; mallocr.c:2545
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2545
#1:	       or	r5, 0 -> r0
	;;
#0:	if  c1 br	.BB16_62
	;;
	       nop	2
	;;
.BB16_76:                               ; %bb89
                                        ;   Parent Loop BB16_62 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       sl	r1, 1 -> r1     ; mallocr.c:2548
#1:	       add	r5, 4 -> r5
	;;
#0:	       and	r2, r1 -> r0    ; mallocr.c:2545
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:2545
	;;
#0:	if  c1 br	.BB16_76
	;;
	       nop	2
	;;
; BB#77:                                ;   in Loop: Header=BB16_62 Depth=1
#0:	       or	r2, 0 -> r3
#1:	       br	.BB16_62
#2:	       or	r5, 0 -> r0
	;;
	       nop	2
	;;
.BB16_78:                               ; %bb91
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2560
#1:	       ldi	-4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2560
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2560
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2560
	;;
#0:	       and	r2, r0 -> r0    ; mallocr.c:2560
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2561
#1:	       stm.s	r0, r14, 5      ; mallocr.c:2561
	;;
#0:	if !c1 ldi	16 -> r2
#1:	if !c1 sub	r0, r10 -> r0   ; mallocr.c:2560
	;;
#0:	if !c1 cmplt	r0, r2 -> c1
	;;
#0:	if !c1 br	.BB16_109
	;;
	       nop	2
	;;
; BB#79:                                ; %bb93
#0:	       ldmg.d	___malloc_sbrk_base ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2162[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 20         ; mallocr.c:2151[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r0, -1 -> c1    ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_81        ; mallocr.c:2162[ mallocr.c:2575 ]
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2151[ mallocr.c:2575 ]
	;;
#0:	       add	r1, r2 -> r2    ; mallocr.c:2151[ mallocr.c:2575 ]
	;;
#0:	       stm.s	r2, r14, 4      ; mallocr.c:2162[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2162[ mallocr.c:2575 ]
	       nop	0               ; mallocr.c:2162[ mallocr.c:2575 ]
	;;
; BB#80:                                ; %bb93.bb1.i_crit_edge
#0:	       add	r10, 16 -> r0   ; mallocr.c:2155[ mallocr.c:2575 ]
#1:	       br	.BB16_82
	;;
	       nop	2
	;;
.BB16_81:                               ; %bb.i
#0:	       ldiu	15 -> r0
#1:	       ldiu	0 -> r2
	;;
#0:	       ldim	2 -> r0
#1:	       ldim	2046 -> r2
	;;
#0:	       add	r10, r0 -> r0
	;;
#0:	       and	r0, r2 -> r0    ; mallocr.c:2163[ mallocr.c:2575 ]
	;;
.BB16_82:                               ; %bb.i
#0:	       stm.s	r0, r14, 6
#1:	       ldga	_errno.b -> r2
	;;
#0:	       ldmg.d	_heap_end.1081  ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
#1:	       stmb.a	0, r2, 0
	;;
#0:	       cmpeq	r0, 0 -> c2     ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	if !c2 br	.BB16_84
	;;
	       nop	2
	;;
; BB#83:                                ; %bb.i.i
#0:	       ldga	_end -> r0      ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
#1:	       ldga	_heap_end.1081 -> r2 ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	       stm.a	r0, r2, 0       ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
.BB16_84:                               ; %_sbrk.exit.i
#0:	       ldm.s	r14, 24         ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
#1:	       cmpeq	r0, -1 -> c2    ; sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ]
#2:	       ldga	_heap_end.1081 -> r3 ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	if  c2 br	.BB16_106
#1:	       ldx	$mem, 0 -> r2   ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	       add	r0, r2 -> r2    ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
#0:	       stm.a	r2, r3, 0       ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2165[ mallocr.c:2575 ] ] ]
	;;
	       nop	0
	;;
; BB#85:                                ; %bb2.i
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       cmpule	r3, r0 -> c2
	;;
#0:	if  c2 br	.BB16_87
	;;
	       nop	2
	;;
; BB#86:                                ; %bb2.i
#0:	       ldga	___malloc_av_ -> r3
	;;
#0:	       cmpne	r1, r3 -> c2
	;;
#0:	if  c2 br	.BB16_106
	;;
	       nop	2
	;;
.BB16_87:                               ; %bb4.i
#0:	       ldmg.d	___malloc_current_mallinfo.0 ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#3:	       ldga	___malloc_current_mallinfo.0 -> r3.16 ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2172[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 24         ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       add	r3, r4 -> r3    ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#3:	       stm.a	r3, r3.16, 0    ; mallocr.c:2172[ mallocr.c:2575 ]
	;;
#0:	       ldm.s	r14, 16         ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r0, r4 -> c2    ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if !c2 ldm.s	r14, 16         ; mallocr.c:2174[ mallocr.c:2575 ]
#1:	if !c2 ldiu	2047 -> r4
	;;
#0:	if !c2 ldim	1 -> r4
	;;
#0:	if !c2 ldx	$mem, 0 -> r5   ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if !c2 and	r5, r4 -> r4    ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if !c2 cmpne	r4, 0 -> c2     ; mallocr.c:2174[ mallocr.c:2575 ]
	;;
#0:	if  c2 br	.BB16_89
	;;
	       nop	2
	;;
; BB#88:                                ; %bb6.i
#0:	       ldm.s	r14, 24         ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2178[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 20         ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       br	.BB16_102
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       add	r2, r0 -> r0    ; mallocr.c:2178[ mallocr.c:2575 ]
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2179[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r0, r1, 1       ; mallocr.c:2179[ mallocr.c:2575 ]
	;;
.BB16_89:                               ; %bb7.i
#0:	if  c1 br	.BB16_91        ; mallocr.c:2183[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2183[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2183[ mallocr.c:2575 ]
	;;
; BB#90:                                ; %bb8.i
#0:	       ldga	___malloc_sbrk_base -> r0.16 ; mallocr.c:2184[ mallocr.c:2575 ]
#1:	       br	.BB16_92
	;;
#0:	       stm.a	r0, r0.16, 0    ; mallocr.c:2184[ mallocr.c:2575 ]
	;;
	       nop	1
	;;
.BB16_91:                               ; %bb9.i
#0:	       ldm.s	r14, 16
#1:	       ldga	___malloc_current_mallinfo.0 -> r1.16 ; mallocr.c:2186[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       sub	r0, r4 -> r4
	;;
#0:	       add	r4, r3 -> r3    ; mallocr.c:2186[ mallocr.c:2575 ]
	;;
#1:	       stm.a	r3, r1.16, 0    ; mallocr.c:2186[ mallocr.c:2575 ]
	;;
.BB16_92:                               ; %bb10.i
#0:	       add	r0, 8 -> r4     ; mallocr.c:2189[ mallocr.c:2575 ]
	;;
#0:	       and	r4, 7 -> r4     ; mallocr.c:2189[ mallocr.c:2575 ]
	;;
#0:	       cmpne	r4, 0 -> c1     ; mallocr.c:2190[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_94        ; mallocr.c:2190[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2190[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2190[ mallocr.c:2575 ]
	;;
; BB#93:                                ; %bb10.i.bb13.i_crit_edge
#0:	       ldi	0 -> r4
#1:	       br	.BB16_95
	;;
	       nop	2
	;;
.BB16_94:                               ; %bb11.i
#0:	       ldi	8 -> r5
	;;
#0:	       sub	r5, r4 -> r4    ; mallocr.c:2192[ mallocr.c:2575 ]
	;;
#0:	       add	r0, r4 -> r0    ; mallocr.c:2193[ mallocr.c:2575 ]
	;;
.BB16_95:                               ; %bb13.i
#0:	       ldm.s	r14, 24         ; mallocr.c:2199[ mallocr.c:2575 ]
#1:	       ldiu	2047 -> r5
#2:	       cmpeq	r2, 0 -> c1     ; sbrk.c:14[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
#0:	       ldim	1 -> r5
#1:	       ldga	4096 -> r1.16
#2:	       ldga	_errno.b -> r2.16
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2199[ mallocr.c:2575 ]
#2:	       stmb.a	0, r2.16, 0
	;;
#0:	if !c1 br	.BB16_97
#1:	       add	r0, r6 -> r6    ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       and	r6, r5 -> r5    ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#1:	       sub	r1.16, r5 -> r5 ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
#0:	       add	r5, r4 -> r4    ; mallocr.c:2199[ mallocr.c:2575 ]
	;;
; BB#96:                                ; %bb.i.i4
#0:	       ldga	_end -> r2      ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
#2:	       ldga	_heap_end.1081 -> r2.16 ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
#2:	       stm.a	r2, r2.16, 0    ; sbrk.c:15[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
.BB16_97:                               ; %_sbrk.exit.i5
#0:	       cmpeq	r2, -1 -> c1    ; sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ]
#1:	       or	r2, 0 -> r6
#2:	       add	r2, r4 -> r2    ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
#3:	       ldi	0 -> r5
	;;
#1:	       stm.s	r2, r14, 6      ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
#2:	       ldga	___malloc_av_ -> r2
#3:	       or	r4, 0 -> r7
#0:	       ldga	_heap_end.1081 -> r0.16 ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
#0:	       stm.a	r0, r2, 2       ; mallocr.c:2212[ mallocr.c:2575 ]
#1:	if  c1 or	r5, 0 -> r7
#2:	if  c1 or	r0, 0 -> r6
	;;
#0:	       add	r7, r3 -> r3    ; mallocr.c:2210[ mallocr.c:2575 ]
#1:	       sub	r6, r0 -> r5
	;;
#3:	       ldga	___malloc_current_mallinfo.0 -> r3.16 ; mallocr.c:2210[ mallocr.c:2575 ]
#0:	       add	r5, r7 -> r4    ; mallocr.c:2213[ mallocr.c:2575 ]
	;;
#0:	       ldm.s	r14, 24         ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
	;;
#0:	       stm.a	r2, r0.16, 0    ; sbrk.c:18[ sbrkr.c:60[ mallocr.c:2202[ mallocr.c:2575 ] ] ]
#1:	       or	r4, 1 -> r2     ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
#3:	       stm.a	r3, r3.16, 0    ; mallocr.c:2210[ mallocr.c:2575 ]
	;;
#0:	       stm.s	r2, r14, 6      ; mallocr.c:2216[ mallocr.c:2575 ]
#1:	       ldga	___malloc_av_ -> r2
	;;
#0:	       cmpne	r1, r2 -> c1    ; mallocr.c:2216[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 24         ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
#0:	if !c1 br	.BB16_102
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r2, r0, 1       ; mallocr.c:2214[ mallocr.c:2575 ]
	;;
	       nop	1
	;;
; BB#98:                                ; %bb16.i
#0:	       ldm.s	r14, 20         ; mallocr.c:2223[ mallocr.c:2575 ]
#1:	       ldi	15 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
#0:	       cmpult	r0, r2 -> c1    ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_100       ; mallocr.c:2223[ mallocr.c:2575 ]
	;;                              ; mallocr.c:2223[ mallocr.c:2575 ]
	       nop	2               ; mallocr.c:2223[ mallocr.c:2575 ]
	;;
; BB#99:                                ; %bb17.i
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2225[ mallocr.c:2575 ]
#1:	       br	.BB16_106
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2225[ mallocr.c:2575 ]
	;;
#0:	       stm.a	1, r0, 1        ; mallocr.c:2225[ mallocr.c:2575 ]
	;;
	       nop	0
	;;
.BB16_100:                              ; %bb18.i
#0:	       ldm.f	r1, 4           ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       ldi	-8 -> r4
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       ldm.s	r14, 20
	;;
#0:	       and	r0, 1 -> r0     ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 12 -> r2
	;;
#0:	       and	r2, r4 -> r4    ; mallocr.c:2230[ mallocr.c:2575 ]
#1:	       or	r2, 4 -> r2
	;;
#0:	       or	r0, r4 -> r0    ; mallocr.c:2231[ mallocr.c:2575 ]
#1:	       add	r1, r2 -> r2
#2:	       cmpult	r4, 16 -> c1    ; mallocr.c:2237[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_102
#1:	       stm.a	r0, r1, 1       ; mallocr.c:2231[ mallocr.c:2575 ]
	;;
#0:	       stm.a	5, r2, 0        ; mallocr.c:2232[ mallocr.c:2575 ]
	;;
#0:	       stm.a	5, r2, 1        ; mallocr.c:2234[ mallocr.c:2575 ]
	;;
	       nop	0
	;;
; BB#101:                               ; %bb19.i
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2238[ mallocr.c:2575 ]
#1:	       callg	__free_r        ; mallocr.c:2238[ mallocr.c:2575 ]
#2:	       add	r1, 8 -> r1
	;;                              ; mallocr.c:2238[ mallocr.c:2575 ]
	       nop	3               ; mallocr.c:2238[ mallocr.c:2575 ]
	;;
#0:	       ldmg.d	___malloc_current_mallinfo.0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
.BB16_102:                              ; %bb20.i
#0:	       ldmg.d	___malloc_max_sbrked_mem ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	       cmpule	r3, r0 -> c1    ; mallocr.c:2242[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_104
	;;
	       nop	2
	;;
; BB#103:                               ; %bb21.i
#0:	       ldga	___malloc_max_sbrked_mem -> r0 ; mallocr.c:2243[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r3, r0, 0       ; mallocr.c:2243[ mallocr.c:2575 ]
	;;
.BB16_104:                              ; %bb22.i
#0:	       ldmg.d	___malloc_max_total_mem ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	       cmpule	r3, r0 -> c1    ; mallocr.c:2248[ mallocr.c:2575 ]
	;;
#0:	if  c1 br	.BB16_106
	;;
	       nop	2
	;;
; BB#105:                               ; %bb23.i
#0:	       ldga	___malloc_max_total_mem -> r0 ; mallocr.c:2249[ mallocr.c:2575 ]
	;;
#0:	       stm.a	r3, r0, 0       ; mallocr.c:2249[ mallocr.c:2575 ]
	;;
.BB16_106:                              ; %malloc_extend_top.exit
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2576
#1:	       ldi	-4 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2576
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2576
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2576
	;;
#0:	       and	r2, r0 -> r0    ; mallocr.c:2576
	;;
#0:	       cmpult	r0, r10 -> c1   ; mallocr.c:2577
	;;
#0:	if !c1 sub	r0, r10 -> r0   ; mallocr.c:2576
#1:	if !c1 ldi	16 -> r2
	;;
#0:	if !c1 cmplt	r0, r2 -> c1
	;;
#0:	if !c1 br	.BB16_109
	;;
	       nop	2
	;;
; BB#107:                               ; %bb95
#0:	       ldi	0 -> r0
	;;
.BB16_108:                              ; %bb95
#0:	       ldm.s	r14, 28         ; mallocr.c:2590
#1:	       or	r14, 0 -> r15   ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2590
#1:	       ldm.s	r14, 32         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2590
#1:	       ldm.s	r14, 36         ; mallocr.c:2590
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2590
#1:	       ldm.s	r15, 8          ; mallocr.c:2590
	;;
#0:	       br	.BB16_34
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:2590
#2:	       ldm.s	r15, 4          ; mallocr.c:2590
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:2590
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:2590
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:2590
	;;
.BB16_109:                              ; %bb96
#1:	       or	r10, 1 -> r2    ; mallocr.c:2585
#2:	       add	r1, r10 -> r4   ; mallocr.c:2586
#0:	       ldga	___malloc_av_ -> r0.16 ; mallocr.c:2586
#3:	       or	r10, 4 -> r3
	;;
#0:	       br	.BB16_33
#1:	       stm.a	r2, r1, 1       ; mallocr.c:2585
#2:	       or	r0, 1 -> r0     ; mallocr.c:2587
#3:	       add	r1, r3 -> r2
	;;
#0:	       stm.a	r4, r0.16, 2    ; mallocr.c:2586
	;;
#0:	       stm.a	r0, r2, 0       ; mallocr.c:2587
#1:	       add	r1, 8 -> r0
	;;
	       nop	0
	;;
	.align	4
__malloc_r_end:

	.align	4
__realloc_r:                            ; @_realloc_r
	.size	__realloc_r_end-__realloc_r
__realloc_r_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 16         ; mallocr.c:2806
#2:	       ldiu	64 -> r2        ; mallocr.c:2806
#1:	       ldx	$rb, 0 -> r1.31 ; mallocr.c:2806
#3:	       cmpne	r0, 0 -> c1     ; mallocr.c:2806
	;;
#0:	       sub	r15, r2 -> r15  ; mallocr.c:2806
#2:	       ldx	$ro, 0 -> r2.31 ; mallocr.c:2806
	;;
#0:	       stm.s	r14, r15, 0     ; mallocr.c:2806
#1:	       or	r15, 0 -> r14   ; mallocr.c:2806
	;;
#1:	       stm.s	r1.31, r15, 1   ; mallocr.c:2806
	;;
#2:	       stm.s	r2.31, r15, 2   ; mallocr.c:2806
	;;
#0:	       stm.s	r10, r14, 15    ; mallocr.c:2806
	;;
#0:	if  c1 br	.BB17_2         ; mallocr.c:2806
#1:	       stm.s	r11, r14, 14    ; mallocr.c:2806
	;;
#0:	       stm.s	r12, r14, 13    ; mallocr.c:2806
	;;
#0:	       stm.s	r13, r14, 12    ; mallocr.c:2806
	;;
#1:	       stm.s	r1.23, r14, 11  ; mallocr.c:2806
	;;
; BB#1:                                 ; %bb
#0:	       or	r1, 0 -> r0     ; mallocr.c:2806
#1:	       callg	__malloc_r      ; mallocr.c:2806
	;;                              ; mallocr.c:2806
	       nop	3               ; mallocr.c:2806
	;;
#0:	       br	.BB17_56
	;;
	       nop	2
	;;
.BB17_2:                                ; %bb1
#0:	       ldi	22 -> r2
#1:	       add	r1, 11 -> r3    ; mallocr.c:2814
#2:	       ldi	-8 -> r4
#3:	       or	r0, 0 -> r10
	;;
#0:	       cmpult	r2, r3 -> c1    ; mallocr.c:2814
#1:	       and	r3, r4 -> r2    ; mallocr.c:2814
#2:	       ldi	16 -> r3
#3:	       ldm.f	r10, -4         ; mallocr.c:2811
	;;
#0:	if  c1 or	r2, 0 -> r3
	;;
#0:	       cmplt	r3, 0 -> c1     ; mallocr.c:2817
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2811
#2:	       stm.s	r3, r14, 10     ; mallocr.c:2817
	;;
#0:	if  c1 br	.BB17_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb1
#0:	       or	r3, 0 -> r2
	;;
#0:	       cmpule	r1, r2 -> c1
	;;
#0:	if  c1 br	.BB17_7
	;;
	       nop	2
	;;
.BB17_4:                                ; %bb6
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2819
	;;
#0:	       stm.a	12, r0, 0       ; mallocr.c:2819
#1:	       ldi	0 -> r0
	;;
.BB17_5:                                ; %bb6
#0:	       ldm.s	r14, 44         ; mallocr.c:2996
#1:	       or	r14, 0 -> r15   ; mallocr.c:2996
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; mallocr.c:2996
#0:	       ldm.s	r14, 48         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2996
#1:	       ldm.s	r14, 52         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2996
#1:	       ldm.s	r14, 56         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2996
#1:	       ldm.s	r14, 60         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2996
#1:	       ldm.s	r15, 8          ; mallocr.c:2996
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mallocr.c:2996
#0:	       ldm.s	r15, 4          ; mallocr.c:2996
	;;
#1:	       stx	r1.31 -> $ro    ; mallocr.c:2996
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mallocr.c:2996
	;;
#2:	       stx	r2.31 -> $rb    ; mallocr.c:2996
	;;
.BB17_6:                                ; %bb6
#0:	       ldm.s	r15, 0          ; mallocr.c:2996
#1:	       s2add	r15, 16 -> r15  ; mallocr.c:2996
	;;
#0:	       ret                      ; mallocr.c:2996
#1:	       ldx	$mem, 0 -> r14  ; mallocr.c:2996
	;;                              ; mallocr.c:2996
	       nop	3               ; mallocr.c:2996
	;;
.BB17_7:                                ; %bb7
#0:	       sub	r10, 8 -> r3    ; mallocr.c:2810
#1:	       ldi	-4 -> r2
	;;
#0:	       stm.s	r3, r14, 9      ; mallocr.c:2811
#1:	       and	r0, r2 -> r11   ; mallocr.c:2811
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2856
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2856
	;;
#0:	       cmplt	r11, r2 -> c1   ; mallocr.c:2856
	;;
#0:	if !c1 br	.BB17_22
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb8
#0:	       ldmg.d	___malloc_av_+8 ; mallocr.c:2862
#1:	       add	r11, r10 -> r3  ; mallocr.c:2861
#2:	       sub	r11, 4 -> r12
	;;
#0:	       sub	r3, 8 -> r3     ; mallocr.c:2861
#1:	       add	r10, r12 -> r2
	;;
#0:	       ldx	$mem, 0 -> r4   ; mallocr.c:2862
#1:	       ldm.f	r2, 0           ; mallocr.c:2864
	;;
#0:	       cmpeq	r4, r3 -> c1    ; mallocr.c:2862
	;;
#0:	if  c1 br	.BB17_18        ; mallocr.c:2862
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2864
	;;                              ; mallocr.c:2862
	       nop	2               ; mallocr.c:2862
	;;
; BB#9:                                 ; %bb9
#0:	       ldi	-2 -> r5
	;;
#0:	       and	r2, r5 -> r5    ; mallocr.c:2862
	;;
#0:	       add	r12, r5 -> r5
	;;
#0:	       add	r10, r5 -> r5
	;;
#0:	       ldm.f	r5, 0           ; mallocr.c:2862
	;;
#0:	       ldx	$membu, r5 -> r5 ; mallocr.c:2862
	;;
#0:	       btest	r5, 0 -> c1     ; mallocr.c:2862
	;;
#0:	if !c1 br	.BB17_20        ; mallocr.c:2862
	;;                              ; mallocr.c:2862
	       nop	2               ; mallocr.c:2862
	;;
; BB#10:                                ; %bb9.bb16_crit_edge
#0:	       ldi	0 -> r2
	;;
#0:	       stm.s	r2, r14, 8
#1:	       or	r2, 0 -> r3
	;;
.BB17_11:                               ; %bb16
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2896
	;;
#0:	if  c1 br	.BB17_54
	;;
	       nop	2
	;;
; BB#12:                                ; %bb17
#0:	       ldm.f	r10, -8         ; mallocr.c:2898
#1:	       ldi	-4 -> r2
#2:	       cmpeq	r3, 0 -> c1     ; mallocr.c:2903
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2898
	;;
#0:	       sub	r2, r0 -> r5
	;;
#0:	       add	r10, r5 -> r13
#1:	       ldi	-8 -> r5
	;;
#0:	if  c1 br	.BB17_53
#1:	       ldm.f	r13, 0          ; mallocr.c:2899
#2:	       sub	r5, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r6   ; mallocr.c:2899
#1:	       stm.s	r0, r14, 6      ; mallocr.c:2898
#2:	       add	r10, r0 -> r0   ; mallocr.c:2898
	;;
#0:	       stm.s	r0, r14, 7      ; mallocr.c:2899
#1:	       and	r6, r2 -> r0    ; mallocr.c:2899
	;;
#0:	       stm.s	r0, r14, 5      ; mallocr.c:2903
	;;
; BB#13:                                ; %bb18
#0:	       ldm.s	r14, 32         ; mallocr.c:2908
#1:	       cmpne	r4, r3 -> c1    ; mallocr.c:2906
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2908
#1:	       ldm.s	r14, 20         ; mallocr.c:2908
	;;
#0:	if  c1 br	.BB17_32
#1:	       add	r0, r11 -> r0   ; mallocr.c:2908
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2908
	;;
#0:	       add	r0, r2 -> r0    ; mallocr.c:2908
	;;
#0:	       stm.s	r0, r14, 4      ; mallocr.c:2906
	;;
; BB#14:                                ; %bb19
#0:	       ldm.s	r14, 40         ; mallocr.c:2908
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2908
	;;
#0:	       add	r3, 16 -> r3    ; mallocr.c:2908
	;;
#0:	       cmplt	r0, r3 -> c1    ; mallocr.c:2908
	;;
#0:	if  c1 br	.BB17_53
	;;
	       nop	2
	;;
; BB#15:                                ; %bb20
#0:	       ldm.s	r14, 24
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, 12 -> r0
#1:	       add	r3, r10 -> r3
	;;
#0:	       ldm.f	r3, 8           ; mallocr.c:2910
#2:	       add	r10, r0 -> r0
#1:	       add	r3, 8 -> r1.23
	;;
#0:	if  c1 br	.BB17_30
#1:	       ldx	$mem, 0 -> r1   ; mallocr.c:2910
#2:	       ldm.f	r0, 0           ; mallocr.c:2910
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2910
	;;
#0:	       stm.a	r2, r1, 3       ; mallocr.c:2910
	;;
#0:	       stm.a	r1, r2, 2       ; mallocr.c:2910
	;;
; BB#16:                                ; %bb21
#0:	       ldi	19 -> r1
	;;
#0:	       cmpult	r1, r12 -> c1   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB17_24
	;;
	       nop	2
	;;
; BB#17:                                ; %bb21.bb25_crit_edge
#0:	       or	r10, 0 -> r0
#2:	       br	.BB17_29
#1:	       or	r1.23, 0 -> r1
	;;
	       nop	2
	;;
.BB17_18:                               ; %bb11
#0:	       ldi	-4 -> r5
	;;
#0:	       and	r2, r5 -> r2    ; mallocr.c:2864
	;;
#0:	       stm.s	r2, r14, 8      ; mallocr.c:2869
#1:	       add	r2, r11 -> r2   ; mallocr.c:2869
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2869
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2869
	;;
#0:	       add	r5, 16 -> r5    ; mallocr.c:2869
	;;
#0:	       cmple	r5, r2 -> c1    ; mallocr.c:2869
	;;
#0:	if !c1 br	.BB17_11
	;;
	       nop	2
	;;
; BB#19:                                ; %bb12
#0:	       ldm.s	r14, 40         ; mallocr.c:2872
#1:	       ldga	___malloc_av_ -> r1 ; mallocr.c:2872
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2872
#1:	       ldm.s	r14, 32
	;;
#0:	       add	r0, r10 -> r2   ; mallocr.c:2872
#1:	       sub	r11, r0 -> r3
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       add	r3, r4 -> r3
#1:	       sub	r2, 8 -> r4     ; mallocr.c:2872
#2:	       sub	r2, 4 -> r2
	;;
#0:	       stm.a	r4, r1, 2       ; mallocr.c:2872
#1:	       or	r3, 1 -> r3     ; mallocr.c:2873
	;;
#0:	       stm.a	r3, r2, 0       ; mallocr.c:2873
#1:	       sub	r10, 4 -> r3
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:2874
	;;
#0:	       br	.BB17_56
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2874
	;;
#0:	       and	r2, 1 -> r2     ; mallocr.c:2874
	;;
#0:	       or	r2, r0 -> r0    ; mallocr.c:2874
	;;
#0:	       stm.a	r0, r3, 0       ; mallocr.c:2874
#1:	       or	r10, 0 -> r0    ; mallocr.c:2996
	;;
.BB17_20:                               ; %bb13
#0:	       ldi	-4 -> r5
	;;
#0:	       and	r2, r5 -> r2    ; mallocr.c:2864
	;;
#0:	       stm.s	r2, r14, 8      ; mallocr.c:2869
#1:	       add	r2, r11 -> r2   ; mallocr.c:2869
	;;
#0:	       ldm.s	r14, 40         ; mallocr.c:2881
	;;
#0:	       ldx	$mem, 0 -> r5   ; mallocr.c:2881
	;;
#0:	       cmple	r5, r2 -> c1    ; mallocr.c:2881
	;;
#0:	if !c1 br	.BB17_11
	;;
	       nop	2
	;;
; BB#21:                                ; %bb14
#0:	       add	r10, r11 -> r0
#1:	       or	r2, 0 -> r11
	;;
#0:	       ldm.f	r0, 0           ; mallocr.c:2883
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2883
#1:	       ldm.f	r0, 4           ; mallocr.c:2883
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2883
	;;
#0:	       stm.a	r0, r3, 3       ; mallocr.c:2883
	;;
#0:	       stm.a	r3, r0, 2       ; mallocr.c:2883
	;;
.BB17_22:                               ; %split
#0:	       ldm.s	r14, 40         ; mallocr.c:2978
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2978
	;;
#0:	       sub	r11, r0 -> r0   ; mallocr.c:2978
	;;
#0:	       cmpult	r0, 16 -> c1    ; mallocr.c:2980
	;;
#0:	if  c1 br	.BB17_70
	;;
	       nop	2
	;;
; BB#23:                                ; %bb66
#0:	       ldm.s	r14, 36         ; mallocr.c:2983
#1:	       or	r0, 1 -> r0     ; mallocr.c:2984
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2983
	;;
#0:	       ldm.f	r1, 4           ; mallocr.c:2983
#1:	       add	r11, r1 -> r11  ; mallocr.c:2982
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2983
#1:	       ldm.s	r14, 40
	;;
#0:	       and	r2, 1 -> r2     ; mallocr.c:2983
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       or	r2, r3 -> r2    ; mallocr.c:2983
#1:	       or	r3, 4 -> r4
	;;
#0:	       stm.a	r2, r1, 1       ; mallocr.c:2983
#1:	       add	r1, r4 -> r4
#2:	       add	r3, r1 -> r1    ; mallocr.c:2982
	;;
#0:	       add	r1, 8 -> r1     ; mallocr.c:2986
	;;
#0:	       stm.a	r0, r4, 0       ; mallocr.c:2984
	;;
#0:	       ldm.f	r11, 4          ; mallocr.c:2985
	;;
#0:	       callg	__free_r        ; mallocr.c:2986
#1:	       ldx	$mem, 0 -> r0   ; mallocr.c:2985
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2985
	;;
#0:	       stm.a	r0, r11, 1      ; mallocr.c:2985
#1:	       ldga	_impure_data -> r0 ; mallocr.c:2986
	;;                              ; mallocr.c:2986
	       nop	1               ; mallocr.c:2986
	;;
#0:	       br	.BB17_71
	;;
	       nop	2
	;;
.BB17_24:                               ; %bb22
#0:	       ldm.f	r10, 0          ; mallocr.c:2914
#1:	       ldi	27 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB17_26        ; mallocr.c:2914
#1:	       stm.a	r1, r1.23, 0    ; mallocr.c:2914
#2:	       add	r3, 16 -> r1
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2914
	;;
#0:	       stm.a	r2, r0, 0       ; mallocr.c:2914
	;;
; BB#25:                                ; %bb22.bb25_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB17_29
	;;
	       nop	2
	;;
.BB17_26:                               ; %bb23
#0:	       ldm.f	r10, 8          ; mallocr.c:2914
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	if  c1 br	.BB17_28        ; mallocr.c:2914
#1:	       stm.a	r0, r1, 0       ; mallocr.c:2914
#2:	       add	r3, 24 -> r1
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	       stm.a	r0, r3, 5       ; mallocr.c:2914
	;;
; BB#27:                                ; %bb23.bb25_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB17_29
	;;
	       nop	2
	;;
.BB17_28:                               ; %bb24
#0:	       ldm.f	r10, 16         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2914
	;;
#0:	       stm.a	r0, r1, 0       ; mallocr.c:2914
#1:	       s2add	r3, 8 -> r1
#2:	       add	r10, 24 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2914
	;;
#0:	       stm.a	r12, r3, 7      ; mallocr.c:2914
	;;
.BB17_29:                               ; %bb25
#0:	       ldm.f	r0, 0           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       stm.a	r3, r1, 0       ; mallocr.c:2914
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       br	.BB17_31
#1:	       stm.a	r3, r1, 1       ; mallocr.c:2914
	;;
#0:	       ldm.f	r0, 8           ; mallocr.c:2914
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2914
	;;
#0:	       stm.a	r3, r1, 2       ; mallocr.c:2914
	;;
.BB17_30:                               ; %bb26
#1:	       or	r1.23, 0 -> r0  ; mallocr.c:2914
#0:	       callg	_memmove        ; mallocr.c:2914
#2:	       or	r10, 0 -> r1    ; mallocr.c:2914
#3:	       or	r12, 0 -> r2    ; mallocr.c:2914
	;;                              ; mallocr.c:2914
	       nop	3               ; mallocr.c:2914
	;;
.BB17_31:                               ; %bb27
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 32         ; mallocr.c:2912
	;;
#0:	       sub	r11, r3 -> r11
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2912
#1:	       ldm.s	r14, 24
	;;
#0:	       add	r11, r12 -> r11 ; mallocr.c:2912
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 20
	;;
#0:	       add	r12, r3 -> r12
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       add	r10, r12 -> r10 ; mallocr.c:2915
	;;
#0:	       add	r11, r0 -> r11
#1:	       ldga	___malloc_av_ -> r0 ; mallocr.c:2915
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2915
#2:	       or	r11, 1 -> r11   ; mallocr.c:2916
#1:	       or	r1.23, 0 -> r0  ; mallocr.c:2996
	;;
#0:	       stm.a	r11, r10, 1     ; mallocr.c:2916
	;;
#0:	       ldm.f	r13, 0          ; mallocr.c:2917
	;;
#0:	       br	.BB17_5
#1:	       ldx	$mem, 0 -> r10  ; mallocr.c:2917
	;;
#0:	       and	r10, 1 -> r10   ; mallocr.c:2917
	;;
#0:	       or	r10, r3 -> r3   ; mallocr.c:2917
	;;
#0:	       stm.a	r3, r13, 0      ; mallocr.c:2917
	;;
.BB17_32:                               ; %bb28
#0:	       ldm.s	r14, 16         ; mallocr.c:2924
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2924
#1:	       ldm.s	r14, 40         ; mallocr.c:2924
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2924
	;;
#0:	       cmplt	r2, r0 -> c1    ; mallocr.c:2924
	;;
#0:	if  c1 br	.BB17_53
	;;
	       nop	2
	;;
; BB#33:                                ; %bb29
#0:	       ldm.f	r3, 8           ; mallocr.c:2926
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2926
#1:	       ldm.f	r3, 12          ; mallocr.c:2926
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2926
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       stm.a	r0, r11, 3      ; mallocr.c:2926
	;;
#0:	       add	r1, 12 -> r2
#1:	       add	r1, r10 -> r1
	;;
#0:	       stm.a	r11, r0, 2      ; mallocr.c:2926
#1:	       add	r10, r2 -> r11
#2:	       add	r1, 8 -> r0
	;;
#0:	       ldm.f	r1, 8           ; mallocr.c:2927
	;;
#0:	if  c1 br	.BB17_41        ; mallocr.c:2931
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2927
#2:	       ldm.f	r11, 0          ; mallocr.c:2927
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2927
	;;
#0:	       stm.a	r3, r2, 3       ; mallocr.c:2927
	;;
#0:	       stm.a	r2, r3, 2       ; mallocr.c:2927
	;;
; BB#34:                                ; %bb31
#0:	       ldi	19 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2931
	;;
#0:	if !c1 br	.BB17_40
	;;
	       nop	2
	;;
; BB#35:                                ; %bb34
#0:	       ldm.f	r10, 0          ; mallocr.c:2931
#1:	       ldi	27 -> r3
	;;
#0:	       cmpult	r3, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2931
	;;
#0:	if  c1 br	.BB17_37        ; mallocr.c:2931
#1:	       stm.a	r2, r0, 0       ; mallocr.c:2931
#2:	       add	r1, 16 -> r0
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2931
	;;
#0:	       stm.a	r2, r11, 0      ; mallocr.c:2931
	;;
; BB#36:                                ; %bb34.bb37_crit_edge
#0:	       add	r10, 8 -> r10
#1:	       br	.BB17_40
	;;
	       nop	2
	;;
.BB17_37:                               ; %bb35
#0:	       ldm.f	r10, 8          ; mallocr.c:2931
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	if  c1 br	.BB17_39        ; mallocr.c:2931
#1:	       stm.a	r11, r0, 0      ; mallocr.c:2931
#2:	       add	r1, 24 -> r0
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r1, 5      ; mallocr.c:2931
	;;
; BB#38:                                ; %bb35.bb37_crit_edge
#0:	       add	r10, 16 -> r10
#1:	       br	.BB17_40
	;;
	       nop	2
	;;
.BB17_39:                               ; %bb36
#0:	       ldm.f	r10, 16         ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2931
#1:	       s2add	r1, 8 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2931
#1:	       add	r10, 24 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r1, 7      ; mallocr.c:2931
	;;
.BB17_40:                               ; %bb37
#0:	       ldm.f	r10, 0          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2931
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2931
	;;
#0:	       br	.BB17_42
#1:	       stm.a	r11, r0, 1      ; mallocr.c:2931
	;;
#0:	       ldm.f	r10, 8          ; mallocr.c:2931
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2931
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2931
	;;
.BB17_41:                               ; %bb38
#0:	       or	r10, 0 -> r1    ; mallocr.c:2931
#1:	       callg	_memmove        ; mallocr.c:2931
#2:	       or	r12, 0 -> r2    ; mallocr.c:2931
	;;                              ; mallocr.c:2931
	       nop	3               ; mallocr.c:2931
	;;
.BB17_42:                               ; %bb38
#0:	       ldm.s	r14, 16
	;;
.BB17_43:                               ; %bb38
#0:	       ldx	$mem, 0 -> r11
#1:	       br	.BB17_22
#2:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.s	r10, r14, 9     ; mallocr.c:2931
	;;
	       nop	0
	;;
.BB17_44:                               ; %bb41
#0:	       ldm.s	r14, 24
#1:	       ldi	36 -> r4
	;;
#0:	       cmpult	r4, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       add	r11, 12 -> r0
#1:	       add	r11, r10 -> r11
	;;
#0:	       ldm.f	r11, 8          ; mallocr.c:2939
#1:	       add	r10, r0 -> r1
#2:	       add	r11, 8 -> r0
	;;
#0:	if  c1 br	.BB17_52        ; mallocr.c:2943
#1:	       ldx	$mem, 0 -> r2   ; mallocr.c:2939
#2:	       ldm.f	r1, 0           ; mallocr.c:2939
	;;
#0:	       ldx	$mem, 0 -> r3   ; mallocr.c:2939
	;;
#0:	       stm.a	r3, r2, 3       ; mallocr.c:2939
	;;
#0:	       stm.a	r2, r3, 2       ; mallocr.c:2939
	;;
; BB#45:                                ; %bb43
#0:	       ldi	19 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2943
	;;
#0:	if !c1 br	.BB17_51
	;;
	       nop	2
	;;
; BB#46:                                ; %bb46
#0:	       ldm.f	r10, 0          ; mallocr.c:2943
#1:	       ldi	27 -> r3
	;;
#0:	       cmpult	r3, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2943
	;;
#0:	if  c1 br	.BB17_48        ; mallocr.c:2943
#1:	       stm.a	r2, r0, 0       ; mallocr.c:2943
#2:	       add	r11, 16 -> r0
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r2   ; mallocr.c:2943
	;;
#0:	       stm.a	r2, r1, 0       ; mallocr.c:2943
	;;
; BB#47:                                ; %bb46.bb49_crit_edge
#0:	       add	r10, 8 -> r10
#1:	       br	.BB17_51
	;;
	       nop	2
	;;
.BB17_48:                               ; %bb47
#0:	       ldm.f	r10, 8          ; mallocr.c:2943
#1:	       ldi	35 -> r2
	;;
#0:	       cmpult	r2, r12 -> c1   ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2943
	;;
#0:	if  c1 br	.BB17_50        ; mallocr.c:2943
#1:	       stm.a	r1, r0, 0       ; mallocr.c:2943
#2:	       add	r11, 24 -> r0
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2943
	;;
#0:	       stm.a	r1, r11, 5      ; mallocr.c:2943
	;;
; BB#49:                                ; %bb47.bb49_crit_edge
#0:	       add	r10, 16 -> r10
#1:	       br	.BB17_51
	;;
	       nop	2
	;;
.BB17_50:                               ; %bb48
#0:	       ldm.f	r10, 16         ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2943
	;;
#0:	       stm.a	r12, r0, 0      ; mallocr.c:2943
#1:	       s2add	r11, 8 -> r0
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2943
#1:	       add	r10, 24 -> r10
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2943
	;;
#0:	       stm.a	r12, r11, 7     ; mallocr.c:2943
	;;
.BB17_51:                               ; %bb49
#0:	       ldm.f	r10, 0          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2943
	;;
#0:	       stm.a	r11, r0, 0      ; mallocr.c:2943
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2943
	;;
#0:	       stm.a	r11, r0, 1      ; mallocr.c:2943
	;;
#0:	       br	.BB17_43
#1:	       ldm.f	r10, 8          ; mallocr.c:2943
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2943
	;;
#0:	       stm.a	r10, r0, 2      ; mallocr.c:2943
	;;
#0:	       ldm.s	r14, 32
	;;
.BB17_52:                               ; %bb50
#0:	       or	r10, 0 -> r1    ; mallocr.c:2943
#1:	       callg	_memmove        ; mallocr.c:2943
#2:	       or	r12, 0 -> r2    ; mallocr.c:2943
	;;                              ; mallocr.c:2943
	       nop	3               ; mallocr.c:2943
	;;
#0:	       br	.BB17_43
#1:	       ldm.s	r14, 32
	;;
	       nop	2
	;;
.BB17_53:                               ; %bb39
#0:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 20         ; mallocr.c:2937
	;;
#0:	if !c1 ldx	$mem, 0 -> r0   ; mallocr.c:2937
	;;
#0:	if !c1 add	r0, r11 -> r0   ; mallocr.c:2937
	;;
#0:	if !c1 stm.s	r0, r14, 8      ; mallocr.c:2937
	;;
#0:	if !c1 ldm.s	r14, 40         ; mallocr.c:2937
	;;
#0:	if !c1 ldx	$mem, 0 -> r2   ; mallocr.c:2937
	;;
#0:	if !c1 cmplt	r0, r2 -> c1    ; mallocr.c:2937
	;;
#0:	if !c1 br	.BB17_44
	;;
	       nop	2
	;;
.BB17_54:                               ; %bb51
#0:	       or	r1, 0 -> r0     ; mallocr.c:2950
#1:	       callg	__malloc_r      ; mallocr.c:2950
	;;                              ; mallocr.c:2950
	       nop	3               ; mallocr.c:2950
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:2952
	;;
#0:	if  c1 br	.BB17_57        ; mallocr.c:2952
	;;                              ; mallocr.c:2952
	       nop	2               ; mallocr.c:2952
	;;
; BB#55:                                ; %bb52
#0:	       ldi	0 -> r0
	;;
.BB17_56:                               ; %bb52
#0:	       ldm.s	r14, 44         ; mallocr.c:2996
#1:	       or	r14, 0 -> r15   ; mallocr.c:2996
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; mallocr.c:2996
#0:	       ldm.s	r14, 48         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r13  ; mallocr.c:2996
#1:	       ldm.s	r14, 52         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:2996
#1:	       ldm.s	r14, 56         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2996
#1:	       ldm.s	r14, 60         ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2996
#1:	       ldm.s	r15, 8          ; mallocr.c:2996
	;;
#0:	       br	.BB17_6
#3:	       ldx	$mem, 0 -> r3.31 ; mallocr.c:2996
#1:	       ldm.s	r15, 4          ; mallocr.c:2996
	;;
#3:	       stx	r3.31 -> $ro    ; mallocr.c:2996
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mallocr.c:2996
	;;
#0:	       stx	r0.31 -> $rb    ; mallocr.c:2996
	;;
.BB17_57:                               ; %bb53
#0:	       ldm.f	r10, -4         ; mallocr.c:2961
#1:	       or	r0, 0 -> r13    ; mallocr.c:2950
#2:	       ldi	-2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2961
	;;
#0:	       sub	r0, 8 -> r0
	;;
#0:	       and	r0, r1 -> r0
#1:	       sub	r13, 8 -> r1    ; mallocr.c:2961
	;;
#0:	       add	r10, r0 -> r0   ; mallocr.c:2961
	;;
#0:	       cmpne	r1, r0 -> c1    ; mallocr.c:2961
	;;
#0:	if  c1 br	.BB17_59        ; mallocr.c:2961
	;;                              ; mallocr.c:2961
	       nop	2               ; mallocr.c:2961
	;;
; BB#58:                                ; %bb54
#0:	       ldm.f	r13, -4         ; mallocr.c:2963
#1:	       br	.BB17_22
#2:	       ldi	-4 -> r12
	;;
#0:	       ldx	$mem, 0 -> r10  ; mallocr.c:2963
	;;
#0:	       and	r10, r12 -> r10 ; mallocr.c:2963
	;;
#0:	       add	r10, r11 -> r11 ; mallocr.c:2963
	;;
.BB17_59:                               ; %bb55
#0:	       ldi	36 -> r11
	;;
#0:	       cmpult	r11, r12 -> c1  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB17_68        ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	2               ; mallocr.c:2969
	;;
; BB#60:                                ; %bb57
#0:	       ldi	19 -> r11
	;;
#0:	       cmpult	r11, r12 -> c1  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB17_62        ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	2               ; mallocr.c:2969
	;;
; BB#61:                                ; %bb57.bb63_crit_edge
#0:	       or	r10, 0 -> r11
#1:	       br	.BB17_67
#2:	       or	r13, 0 -> r12
	;;
	       nop	2
	;;
.BB17_62:                               ; %bb60
#0:	       ldm.f	r10, 0          ; mallocr.c:2969
#1:	       ldi	27 -> r0
	;;
#0:	       cmpult	r0, r12 -> c1   ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB17_64        ; mallocr.c:2969
#1:	       stm.a	r11, r13, 0     ; mallocr.c:2969
	;;
#0:	       ldm.f	r10, 4          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 1     ; mallocr.c:2969
	;;
; BB#63:                                ; %bb60.bb63_crit_edge
#0:	       add	r13, 8 -> r12
#1:	       br	.BB17_67
#2:	       add	r10, 8 -> r11
	;;
	       nop	2
	;;
.BB17_64:                               ; %bb61
#0:	       ldm.f	r10, 8          ; mallocr.c:2969
#1:	       ldi	35 -> r0
	;;
#0:	       cmpult	r0, r12 -> c1   ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	if  c1 br	.BB17_66        ; mallocr.c:2969
#1:	       stm.a	r11, r13, 2     ; mallocr.c:2969
	;;
#0:	       ldm.f	r10, 12         ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 3     ; mallocr.c:2969
	;;
; BB#65:                                ; %bb61.bb63_crit_edge
#0:	       add	r13, 16 -> r12
#1:	       br	.BB17_67
#2:	       add	r10, 16 -> r11
	;;
	       nop	2
	;;
.BB17_66:                               ; %bb62
#0:	       ldm.f	r10, 16         ; mallocr.c:2969
#1:	       add	r13, 24 -> r12
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r13, 4     ; mallocr.c:2969
#1:	       add	r10, 24 -> r11
	;;
#0:	       ldm.f	r10, 20         ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       stm.a	r0, r13, 5      ; mallocr.c:2969
	;;
.BB17_67:                               ; %bb63
#0:	       ldm.f	r11, 0          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       stm.a	r0, r12, 0      ; mallocr.c:2969
	;;
#0:	       ldm.f	r11, 4          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2969
	;;
#0:	       br	.BB17_69
#1:	       stm.a	r0, r12, 1      ; mallocr.c:2969
	;;
#0:	       ldm.f	r11, 8          ; mallocr.c:2969
	;;
#0:	       ldx	$mem, 0 -> r11  ; mallocr.c:2969
	;;
#0:	       stm.a	r11, r12, 2     ; mallocr.c:2969
	;;
.BB17_68:                               ; %bb64
#0:	       or	r13, 0 -> r0    ; mallocr.c:2969
#1:	       callg	_memmove        ; mallocr.c:2969
#2:	       or	r10, 0 -> r1    ; mallocr.c:2969
#3:	       or	r12, 0 -> r2    ; mallocr.c:2969
	;;                              ; mallocr.c:2969
	       nop	3               ; mallocr.c:2969
	;;
.BB17_69:                               ; %bb65
#0:	       ldga	_impure_data -> r0 ; mallocr.c:2970
#1:	       callg	__free_r        ; mallocr.c:2970
#2:	       or	r10, 0 -> r1    ; mallocr.c:2970
	;;                              ; mallocr.c:2970
	       nop	3               ; mallocr.c:2970
	;;
#0:	       br	.BB17_5
#1:	       or	r13, 0 -> r0    ; mallocr.c:2996
	;;
	       nop	2
	;;
.BB17_70:                               ; %bb67
#0:	       ldm.s	r14, 36         ; mallocr.c:2990
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2990
	;;
#0:	       ldm.f	r0, 4           ; mallocr.c:2990
#1:	       add	r11, r0 -> r2   ; mallocr.c:2990
	;;
#0:	       ldx	$mem, 0 -> r1   ; mallocr.c:2990
	;;
#0:	       and	r1, 1 -> r1     ; mallocr.c:2990
	;;
#0:	       or	r1, r11 -> r1   ; mallocr.c:2990
	;;
#0:	       stm.a	r1, r0, 1       ; mallocr.c:2990
	;;
#0:	       ldm.f	r2, 4           ; mallocr.c:2991
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:2991
	;;
#0:	       or	r0, 1 -> r0     ; mallocr.c:2991
	;;
#0:	       stm.a	r0, r2, 1       ; mallocr.c:2991
	;;
.BB17_71:                               ; %bb68
#0:	       ldm.s	r14, 36
#1:	       br	.BB17_56
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r0, 8 -> r0
	;;
	       nop	0
	;;
	.align	4
__realloc_r_end:

	.align	4
_memchr:                                ; @memchr
	.size	_memchr_end-_memchr
_memchr_start:
; BB#0:                                 ; %entry
#0:	       ldiu	4 -> r3         ; memchr.c:78
#1:	       br	.BB18_6
#2:	       wb.s	r15, 1          ; memchr.c:78
	;;
#0:	       sub	r15, r3 -> r15  ; memchr.c:78
	;;
	       nop	1
	;;
.BB18_1:                                ; %bb
                                        ;   in Loop: Header=BB18_6 Depth=1
#0:	       cmpne	r2, 0 -> c1     ; memchr.c:87
	;;
#0:	if  c1 br	.BB18_4         ; memchr.c:87
	;;                              ; memchr.c:87
	       nop	2               ; memchr.c:87
	;;
.BB18_2:                                ; %bb.bb20_crit_edge
#0:	       ldi	0 -> r0
	;;
.BB18_3:                                ; %bb20
#0:	       s2add	r15, 1 -> r15   ; memchr.c:133
#1:	       ret                      ; memchr.c:133
	;;                              ; memchr.c:133
	       nop	3               ; memchr.c:133
	;;
.BB18_4:                                ; %bb2
                                        ;   in Loop: Header=BB18_6 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:89
#1:	       mask	r1, 0 -> r4
	;;
#0:	       ldx	$membu, r0 -> r3 ; memchr.c:89
	;;
#0:	       cmpne	r3, r4 -> c1    ; memchr.c:89
	;;
#0:	if !c1 br	.BB18_3
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
                                        ;   in Loop: Header=BB18_6 Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       add	r0, 1 -> r0
	;;
.BB18_6:                                ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r0, 3 -> r3     ; memchr.c:85
	;;
#0:	       cmpne	r3, 0 -> c1     ; memchr.c:85
	;;
#0:	if  c1 br	.BB18_1         ; memchr.c:85
	;;                              ; memchr.c:85
	       nop	2               ; memchr.c:85
	;;
; BB#7:                                 ; %bb6
#0:	       ldi	3 -> r3
	;;
#0:	       cmpult	r3, r2 -> c1    ; memchr.c:94
	;;
#0:	if !c1 br	.BB18_14
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb7
#1:	       sl	r1, 8 -> r4
#2:	       mask	r1, 0 -> r5
#0:	       ldga	32896 -> r0.16
	;;
#1:	       mask	r4, 25 -> r4
#0:	       ldih	1028 -> r0.16
	;;
#0:	       br	.BB18_11
#1:	       or	r4, r5 -> r4    ; memchr.c:105
	;;
#0:	       sl	r4, 16 -> r5    ; memchr.c:106
	;;
#0:	       or	r5, r4 -> r4    ; memchr.c:106
	;;
#0:	       xor	r4, r0.16 -> r5 ; memchr.c:112
	;;
.BB18_9:                                ; %bb10
                                        ;   in Loop: Header=BB18_11 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:112
#1:	       ldiu	1791 -> r7
	;;
#0:	       ldim	991 -> r7
	;;
#0:	       ldx	$mem, 0 -> r6   ; memchr.c:112
#1:	       ldih	2039 -> r7
	;;
#0:	       xor	r6, r4 -> r8    ; memchr.c:112
#1:	       xor	r5, r6 -> r6    ; memchr.c:112
	;;
#0:	       add	r8, r7 -> r7
	;;
#0:	       and	r6, r7 -> r6    ; memchr.c:112
	;;
#0:	       and	r6, r0.16 -> r6 ; memchr.c:112
	;;
#0:	       cmpeq	r6, 0 -> c1     ; memchr.c:112
	;;
#0:	if !c1 br	.BB18_14
	;;
	       nop	2
	;;
; BB#10:                                ; %bb12
                                        ;   in Loop: Header=BB18_11 Depth=1
#0:	       sub	r2, 4 -> r2
#1:	       add	r0, 4 -> r0
	;;
.BB18_11:                               ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpult	r3, r2 -> c1    ; memchr.c:110
	;;
#0:	if  c1 br	.BB18_9
	;;
	       nop	2
	;;
#0:	       br	.BB18_14
	;;
	       nop	2
	;;
.BB18_12:                               ; %bb15
                                        ;   in Loop: Header=BB18_14 Depth=1
#0:	       ldm.f	r0, 0           ; memchr.c:128
#1:	       mask	r1, 0 -> r4
	;;
#0:	       ldx	$membu, r0 -> r3 ; memchr.c:128
	;;
#0:	       cmpne	r3, r4 -> c1    ; memchr.c:128
	;;
#0:	if !c1 ret                      ; memchr.c:133
#1:	if !c1 s2add	r15, 1 -> r15   ; memchr.c:133
	;;                              ; memchr.c:133
	       nop	3               ; memchr.c:133
	;;
; BB#13:                                ; %bb17
                                        ;   in Loop: Header=BB18_14 Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       add	r0, 1 -> r0
	;;
.BB18_14:                               ; %bb18
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpeq	r2, 0 -> c1     ; memchr.c:126
	;;
#0:	if !c1 br	.BB18_12
	;;
	       nop	2
	;;
#0:	       br	.BB18_2
	;;
	       nop	2
	;;
	.align	4
_memchr_end:

	.align	4
_memcpy:                                ; @memcpy
	.size	_memcpy_end-_memcpy
_memcpy_start:
; BB#0:                                 ; %entry
#0:	       ldi	15 -> r3
#1:	       wb.s	r15, 2
#2:	       ldiu	8 -> r4
	;;
#0:	       cmpult	r3, r2 -> c1    ; memcpy.c:78
#1:	       sub	r15, r4 -> r15
	;;
#0:	if !c1 br	.BB19_9
#1:	       stm.s	r10, r15, 1
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb
#0:	       or	r1, r0 -> r3    ; memcpy.c:78
	;;
#0:	       and	r3, 3 -> r3     ; memcpy.c:78
	;;
#0:	       cmpeq	r3, 0 -> c1     ; memcpy.c:78
	;;
#0:	if !c1 br	.BB19_10
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.bb2_crit_edge
#0:	       ldi	0 -> r3
#1:	       ldi	15 -> r4
	;;
.BB19_3:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r3, 0 -> r5
	;;
#0:	       sub	r1, r5 -> r6
#1:	       sub	r0, r5 -> r7
	;;
#0:	       ldm.f	r6, 0           ; memcpy.c:86
	;;
#0:	       ldx	$mem, 0 -> r3   ; memcpy.c:86
	;;
#0:	       stm.a	r3, r7, 0       ; memcpy.c:86
#1:	       sub	r5, 16 -> r3
	;;
#0:	       ldm.f	r6, 4           ; memcpy.c:87
	;;
#0:	       ldx	$mem, 0 -> r8   ; memcpy.c:87
	;;
#0:	       stm.a	r8, r7, 1       ; memcpy.c:87
	;;
#0:	       ldm.f	r6, 8           ; memcpy.c:88
	;;
#0:	       ldx	$mem, 0 -> r8   ; memcpy.c:88
	;;
#0:	       stm.a	r8, r7, 2       ; memcpy.c:88
#1:	       add	r2, r3 -> r8
	;;
#0:	       cmpult	r4, r8 -> c1    ; memcpy.c:84
	;;
#0:	if  c1 br	.BB19_3         ; memcpy.c:84
#1:	       ldm.f	r6, 12          ; memcpy.c:89
	;;
#0:	       ldx	$mem, 0 -> r6   ; memcpy.c:89
	;;
#0:	       stm.a	r6, r7, 3       ; memcpy.c:89
	;;                              ; memcpy.c:84
	       nop	0               ; memcpy.c:84
	;;
; BB#4:                                 ; %bb5.preheader
#0:	       ldi	3 -> r4
	;;
#0:	       cmpult	r4, r8 -> c1    ; memcpy.c:94
	;;
#0:	if  c1 br	.BB19_6         ; memcpy.c:94
	;;                              ; memcpy.c:94
	       nop	2               ; memcpy.c:94
	;;
; BB#5:                                 ; %bb5.preheader.bb6_crit_edge
#0:	       sub	r0, r3 -> r0
#1:	       br	.BB19_9
#2:	       sub	r1, r3 -> r1
#3:	       or	r8, 0 -> r2
	;;
	       nop	2
	;;
.BB19_6:                                ; %bb.nph16
#0:	       ldi	0 -> r6
#1:	       add	r2, r3 -> r2
	;;
#0:	       or	r6, 0 -> r7
	;;
.BB19_7:                                ; %bb4
                                        ; =>This Inner Loop Header: Depth=1
#1:	       sub	r2, r6 -> r1.16
#0:	       add	r1, r6 -> r8
#2:	       add	r0, r6 -> r9
#3:	       sub	r7, 4 -> r7
	;;
#1:	       sub	r1.16, 4 -> r10
#0:	       sub	r8, r5 -> r8
#2:	       sub	r9, r5 -> r9
#3:	       add	r6, 4 -> r6
	;;
#0:	       cmpult	r4, r10 -> c1   ; memcpy.c:94
#1:	       ldm.f	r8, 16          ; memcpy.c:96
	;;
#0:	if  c1 br	.BB19_7         ; memcpy.c:94
#1:	       ldx	$mem, 0 -> r8   ; memcpy.c:96
	;;
#0:	       stm.a	r8, r9, 4       ; memcpy.c:96
	;;                              ; memcpy.c:94
	       nop	1               ; memcpy.c:94
	;;
; BB#8:                                 ; %bb5.bb6_crit_edge
#0:	       add	r1, r6 -> r1
#1:	       add	r0, r6 -> r0
#2:	       sub	r2, r6 -> r2
	;;
#0:	       sub	r1, r3 -> r1
#1:	       sub	r0, r3 -> r0
	;;
.BB19_9:                                ; %bb8.preheader
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB19_11
	;;
	       nop	2
	;;
.BB19_10:                               ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       ldm.f	r1, 0           ; memcpy.c:106
#2:	       add	r0, 1 -> r4
	;;
#0:	       cmpne	r2, 0 -> c1     ; memcpy.c:105
	;;
#0:	if  c1 br	.BB19_10        ; memcpy.c:105
#1:	       ldx	$membu, r1 -> r3 ; memcpy.c:106
#2:	       add	r1, 1 -> r1
	;;
#0:	       stmb.a	r3, r0, 0       ; memcpy.c:106
#1:	       or	r4, 0 -> r0
	;;                              ; memcpy.c:105
	       nop	1               ; memcpy.c:105
	;;
.BB19_11:                               ; %bb9
#0:	       ldm.s	r15, 4
#1:	       s2add	r15, 2 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r10
	;;
	       nop	3
	;;
	.align	4
_memcpy_end:

	.align	4
_memmove:                               ; @memmove
	.size	_memmove_end-_memmove
_memmove_start:
; BB#0:                                 ; %entry
#0:	       ldiu	8 -> r3         ; memmove.c:92
#1:	       cmpule	r0, r1 -> c1    ; memmove.c:92
#2:	       wb.s	r15, 2          ; memmove.c:92
	;;
#0:	       sub	r15, r3 -> r15  ; memmove.c:92
#1:	if !c1 add	r1, r2 -> r3    ; memmove.c:92
	;;
#0:	if !c1 cmpule	r3, r0 -> c1    ; memmove.c:92
	;;
#0:	if  c1 br	.BB20_4
#1:	       stm.s	r10, r15, 1     ; memmove.c:92
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB20_15
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb.nph34
#0:	       ldi	0 -> r3
	;;
#0:	       sub	r3, r2 -> r2
	;;
.BB20_3:                                ; %bb2
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, r2 -> r3
#1:	       sub	r0, r2 -> r5
#2:	       add	r2, 1 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
#1:	       ldm.f	r3, -1          ; memmove.c:99
#2:	       sub	r3, 1 -> r4
	;;
#0:	if !c1 br	.BB20_3
#1:	       ldx	$membu, r4 -> r3 ; memmove.c:99
#2:	       sub	r5, 1 -> r4
	;;
#0:	       stmb.a	r3, r4, 0       ; memmove.c:99
	;;
	       nop	1
	;;
#0:	       br	.BB20_15
	;;
	       nop	2
	;;
.BB20_4:                                ; %bb4
#0:	       ldi	15 -> r3
	;;
#0:	       cmpult	r3, r2 -> c1    ; memmove.c:107
	;;
#0:	if !c1 br	.BB20_13
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       or	r1, r0 -> r3    ; memmove.c:107
	;;
#0:	       and	r3, 3 -> r3     ; memmove.c:107
	;;
#0:	       cmpeq	r3, 0 -> c1     ; memmove.c:107
	;;
#0:	if !c1 br	.BB20_14
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb5.bb7_crit_edge
#0:	       ldi	0 -> r3
#1:	       ldi	15 -> r4
	;;
.BB20_7:                                ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       or	r3, 0 -> r5
	;;
#0:	       sub	r1, r5 -> r6
#1:	       sub	r0, r5 -> r7
	;;
#0:	       ldm.f	r6, 0           ; memmove.c:115
	;;
#0:	       ldx	$mem, 0 -> r3   ; memmove.c:115
	;;
#0:	       stm.a	r3, r7, 0       ; memmove.c:115
#1:	       sub	r5, 16 -> r3
	;;
#0:	       ldm.f	r6, 4           ; memmove.c:116
	;;
#0:	       ldx	$mem, 0 -> r8   ; memmove.c:116
	;;
#0:	       stm.a	r8, r7, 1       ; memmove.c:116
	;;
#0:	       ldm.f	r6, 8           ; memmove.c:117
	;;
#0:	       ldx	$mem, 0 -> r8   ; memmove.c:117
	;;
#0:	       stm.a	r8, r7, 2       ; memmove.c:117
#1:	       add	r2, r3 -> r8
	;;
#0:	       cmpult	r4, r8 -> c1    ; memmove.c:113
	;;
#0:	if  c1 br	.BB20_7         ; memmove.c:113
#1:	       ldm.f	r6, 12          ; memmove.c:118
	;;
#0:	       ldx	$mem, 0 -> r6   ; memmove.c:118
	;;
#0:	       stm.a	r6, r7, 3       ; memmove.c:118
	;;                              ; memmove.c:113
	       nop	0               ; memmove.c:113
	;;
; BB#8:                                 ; %bb10.preheader
#0:	       ldi	3 -> r4
	;;
#0:	       cmpult	r4, r8 -> c1    ; memmove.c:123
	;;
#0:	if  c1 br	.BB20_10        ; memmove.c:123
	;;                              ; memmove.c:123
	       nop	2               ; memmove.c:123
	;;
; BB#9:                                 ; %bb10.preheader.bb11_crit_edge
#0:	       sub	r0, r3 -> r0
#1:	       br	.BB20_13
#2:	       sub	r1, r3 -> r1
#3:	       or	r8, 0 -> r2
	;;
	       nop	2
	;;
.BB20_10:                               ; %bb.nph22
#0:	       ldi	0 -> r6
#1:	       add	r2, r3 -> r2
	;;
#0:	       or	r6, 0 -> r7
	;;
.BB20_11:                               ; %bb9
                                        ; =>This Inner Loop Header: Depth=1
#3:	       sub	r2, r6 -> r3.16
#0:	       add	r1, r6 -> r8
#1:	       add	r0, r6 -> r9
#2:	       sub	r7, 4 -> r7
	;;
#3:	       sub	r3.16, 4 -> r10
#0:	       sub	r8, r5 -> r8
#1:	       sub	r9, r5 -> r9
#2:	       add	r6, 4 -> r6
	;;
#0:	       cmpult	r4, r10 -> c1   ; memmove.c:123
#1:	       ldm.f	r8, 16          ; memmove.c:125
	;;
#0:	if  c1 br	.BB20_11        ; memmove.c:123
#1:	       ldx	$mem, 0 -> r8   ; memmove.c:125
	;;
#0:	       stm.a	r8, r9, 4       ; memmove.c:125
	;;                              ; memmove.c:123
	       nop	1               ; memmove.c:123
	;;
; BB#12:                                ; %bb10.bb11_crit_edge
#0:	       add	r1, r6 -> r1
#1:	       add	r0, r6 -> r0
#2:	       sub	r2, r6 -> r2
	;;
#0:	       sub	r1, r3 -> r1
#1:	       sub	r0, r3 -> r0
	;;
.BB20_13:                               ; %bb13.preheader
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB20_15
	;;
	       nop	2
	;;
.BB20_14:                               ; %bb12
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r2, 1 -> r2
#1:	       ldm.f	r1, 0           ; memmove.c:136
#2:	       add	r0, 1 -> r4
	;;
#0:	       cmpne	r2, 0 -> c1     ; memmove.c:134
	;;
#0:	if  c1 br	.BB20_14        ; memmove.c:134
#1:	       ldx	$membu, r1 -> r3 ; memmove.c:136
#2:	       add	r1, 1 -> r1
	;;
#0:	       stmb.a	r3, r0, 0       ; memmove.c:136
#1:	       or	r4, 0 -> r0
	;;                              ; memmove.c:134
	       nop	1               ; memmove.c:134
	;;
.BB20_15:                               ; %bb14
#0:	       ldm.s	r15, 4
#1:	       s2add	r15, 2 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r10
	;;
	       nop	3
	;;
	.align	4
_memmove_end:

	.align	4
___lshift:                              ; @__lshift
	.size	___lshift_end-___lshift
___lshift_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 12         ; mprec.c:474
#2:	       ldiu	48 -> r4        ; mprec.c:474
#1:	       ldx	$rb, 0 -> r1.31 ; mprec.c:474
	;;
#0:	       sub	r15, r4 -> r15  ; mprec.c:474
#2:	       ldx	$ro, 0 -> r2.31 ; mprec.c:474
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:474
#1:	       or	r15, 0 -> r14   ; mprec.c:474
	;;
#1:	       stm.s	r1.31, r15, 1   ; mprec.c:474
	;;
#2:	       stm.s	r2.31, r15, 2   ; mprec.c:474
	;;
#0:	       stm.s	r10, r14, 11    ; mprec.c:474
#1:	       sra	r1, 5 -> r10    ; mprec.c:469
	;;
#0:	       stm.s	r11, r14, 10    ; mprec.c:474
	;;
#0:	       stm.s	r12, r14, 9     ; mprec.c:474
	;;
#0:	       stm.s	r13, r14, 8     ; mprec.c:474
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:474
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:474
	;;
#0:	       add	r2, r10 -> r2   ; mprec.c:474
	;;
#0:	       stm.s	r2, r14, 5      ; mprec.c:473
#1:	       add	r2, 1 -> r12    ; mprec.c:474
	;;
#0:	       ldm.f	r0, 4           ; mprec.c:473
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:473
#1:	       ldm.f	r0, 8           ; mprec.c:475
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:475
#1:	       stm.s	r0, r14, 7
	;;
#0:	       cmplt	r3, r12 -> c1   ; mprec.c:475
#1:	       stm.s	r1, r14, 6
	;;
#0:	if !c1 br	.BB21_2
	;;
	       nop	2
	;;
.BB21_1:                                ; %bb
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r3, 1 -> r3     ; mprec.c:475
#1:	       add	r11, 1 -> r11
	;;
#0:	       cmplt	r3, r12 -> c1   ; mprec.c:475
	;;
#0:	if  c1 br	.BB21_1         ; mprec.c:475
	;;                              ; mprec.c:475
	       nop	2               ; mprec.c:475
	;;
.BB21_2:                                ; %bb2
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	       cmpeq	r13, 0 -> c1    ; mprec.c:103[ mprec.c:477 ]
	;;
#0:	if !c1 br	.BB21_15
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb.i
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:477 ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_43        ; mallocr.c:3209[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:477 ] ]
	;;
; BB#4:                                 ; %bb1.i
#0:	       or	r0, 0 -> r13    ; mallocr.c:3207[ mprec.c:106[ mprec.c:477 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r13, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_13        ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
; BB#5:                                 ; %bb2.i1
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_7         ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
; BB#6:                                 ; %bb2.i1.bb6.i4_crit_edge
#0:	       or	r13, 0 -> r0
#1:	       br	.BB21_12
	;;
	       nop	2
	;;
.BB21_7:                                ; %bb3.i2
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r13, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_9         ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
#1:	       stm.a	0, r13, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
; BB#8:                                 ; %bb3.i2.bb6.i4_crit_edge
#0:	       add	r13, 8 -> r0
#1:	       br	.BB21_12
	;;
	       nop	2
	;;
.BB21_9:                                ; %bb4.i3
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r13, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_11        ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
#1:	       stm.a	0, r13, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
; BB#10:                                ; %bb4.i3.bb6.i4_crit_edge
#0:	       add	r13, 16 -> r0
#1:	       br	.BB21_12
	;;
	       nop	2
	;;
.BB21_11:                               ; %bb5.i
#0:	       stm.a	0, r13, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
#1:	       add	r13, 24 -> r0
	;;
#0:	       stm.a	0, r13, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
.BB21_12:                               ; %bb6.i4
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
#1:	       br	.BB21_14
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
	       nop	0
	;;
.BB21_13:                               ; %bb7.i5
#0:	       or	r13, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:477 ] ]
	;;
.BB21_14:                               ; %_calloc_r.exit.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:477 ]
	;;
#0:	       stm.a	r13, r0, 19     ; mprec.c:106[ mprec.c:477 ]
	;;
.BB21_15:                               ; %bb2.i
#0:	       s2add	r13, r11 -> r0  ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	       cmpeq	r13, 0 -> c1    ; mprec.c:115[ mprec.c:477 ]
	;;
#0:	if  c1 br	.BB21_17        ; mprec.c:115[ mprec.c:477 ]
	;;                              ; mprec.c:115[ mprec.c:477 ]
	       nop	2               ; mprec.c:115[ mprec.c:477 ]
	;;
; BB#16:                                ; %bb3.i
#0:	       ldm.f	r13, 0          ; mprec.c:117[ mprec.c:477 ]
#1:	       br	.BB21_30
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:117[ mprec.c:477 ]
	;;
#0:	       stm.a	r11, r0, 0      ; mprec.c:117[ mprec.c:477 ]
	;;
	       nop	0
	;;
.BB21_17:                               ; %bb4.i
#0:	       ldi	1 -> r13
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:477 ] ]
#2:	       ldi	20 -> r0
	;;
#0:	       sl	r13, r11 -> r13 ; mprec.c:121[ mprec.c:477 ]
	;;
#0:	       stm.s	r13, r14, 4
#1:	       s2add	r0, r13 -> r0   ; mprec.c:123[ mprec.c:477 ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:477 ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_19        ; mallocr.c:3209[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:477 ] ]
	;;
; BB#18:                                ; %bb4.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r13
#1:	       br	.BB21_31
	;;
	       nop	2
	;;
.BB21_19:                               ; %bb1.i6
#0:	       or	r0, 0 -> r13    ; mallocr.c:3207[ mprec.c:123[ mprec.c:477 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r13, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_28        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
; BB#20:                                ; %bb2.i7
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_22        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
; BB#21:                                ; %bb2.i7.bb6.i12_crit_edge
#0:	       or	r13, 0 -> r0
#1:	       br	.BB21_27
	;;
	       nop	2
	;;
.BB21_22:                               ; %bb3.i8
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r13, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_24        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
#1:	       stm.a	0, r13, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
; BB#23:                                ; %bb3.i8.bb6.i12_crit_edge
#0:	       add	r13, 8 -> r0
#1:	       br	.BB21_27
	;;
	       nop	2
	;;
.BB21_24:                               ; %bb4.i9
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r13, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	if  c1 br	.BB21_26        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
#1:	       stm.a	0, r13, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
; BB#25:                                ; %bb4.i9.bb6.i12_crit_edge
#0:	       add	r13, 16 -> r0
#1:	       br	.BB21_27
	;;
	       nop	2
	;;
.BB21_26:                               ; %bb5.i10
#0:	       stm.a	0, r13, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
#1:	       add	r13, 24 -> r0
	;;
#0:	       stm.a	0, r13, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
.BB21_27:                               ; %bb6.i12
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
#1:	       br	.BB21_29
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
	       nop	0
	;;
.BB21_28:                               ; %bb7.i13
#0:	       or	r13, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:477 ] ]
	;;
.BB21_29:                               ; %bb6.i
#0:	       stm.a	r11, r13, 1     ; mprec.c:128[ mprec.c:477 ]
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:129[ mprec.c:477 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:129[ mprec.c:477 ]
	;;
#0:	       stm.a	r0, r13, 2      ; mprec.c:129[ mprec.c:477 ]
	;;
.BB21_30:                               ; %bb7.i
#0:	       stm.a	0, r13, 4       ; mprec.c:131[ mprec.c:477 ]
	;;
#0:	       stm.a	0, r13, 3       ; mprec.c:131[ mprec.c:477 ]
	;;
.BB21_31:                               ; %_Balloc.exit
#0:	       ldi	0 -> r0
	;;
#0:	       cmplt	r0, r10 -> c1   ; mprec.c:479
	;;
#0:	if  c1 br	.BB21_33        ; mprec.c:479
	;;                              ; mprec.c:479
	       nop	2               ; mprec.c:479
	;;
; BB#32:                                ; %_Balloc.exit.bb5_crit_edge
#0:	       add	r13, 20 -> r0
#1:	       br	.BB21_35
	;;
	       nop	2
	;;
.BB21_33:                               ; %bb.nph
#0:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       sra	r1, 3 -> r0
#1:	       ldi	-4 -> r1
	;;
#0:	       add	r0, 20 -> r0
	;;
#0:	       and	r0, r1 -> r0
#1:	       add	r13, 20 -> r1
	;;
#0:	       add	r13, r0 -> r0
	;;
.BB21_34:                               ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r10, 1 -> r10
#1:	       add	r1, 4 -> r2
#2:	       stm.a	0, r1, 0        ; mprec.c:480
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:479
#1:	       or	r2, 0 -> r1
	;;
#0:	if  c1 br	.BB21_34        ; mprec.c:479
	;;                              ; mprec.c:479
	       nop	2               ; mprec.c:479
	;;
.BB21_35:                               ; %bb5
#0:	       ldm.s	r14, 28         ; mprec.c:482
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:482
	;;
#0:	       ldm.f	r1, 16          ; mprec.c:482
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:482
#1:	       ldm.s	r14, 24         ; mprec.c:484
	;;
#0:	       s2add	r1, r2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:484
#1:	       add	r1, 20 -> r1
	;;
#0:	       and	r3, 31 -> r3    ; mprec.c:484
	;;
#0:	       cmpne	r3, 0 -> c1     ; mprec.c:484
	;;
#0:	if  c1 br	.BB21_39        ; mprec.c:484
	;;                              ; mprec.c:484
	       nop	2               ; mprec.c:484
	;;
; BB#36:                                ; %bb10.preheader
#0:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       add	r3, 20 -> r3
	;;
.BB21_37:                               ; %bb10
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r3, 0           ; mprec.c:514
#1:	       add	r3, 4 -> r3
#2:	       add	r0, 4 -> r4
	;;
#0:	       cmpult	r3, r1 -> c1    ; mprec.c:515
	;;
#0:	if  c1 br	.BB21_37
#1:	       ldx	$mem, 0 -> r2   ; mprec.c:514
	;;
#0:	       stm.a	r2, r0, 0       ; mprec.c:514
#1:	       or	r4, 0 -> r0
	;;
	       nop	1
	;;
; BB#38:                                ; %bb10.bb.i13_crit_edge
#0:	       or	r12, 0 -> r0
#1:	       br	.BB21_42
	;;
	       nop	2
	;;
.BB21_39:                               ; %bb6
#0:	       ldm.s	r14, 28
#1:	       ldi	32 -> r2
#2:	       ldi	0 -> r5
	;;
#0:	       sub	r2, r3 -> r2    ; mprec.c:486
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       add	r4, 20 -> r4
	;;
.BB21_40:                               ; %bb7
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.f	r4, 0           ; mprec.c:490
#1:	       add	r0, 4 -> r7
	;;
#0:	       ldx	$mem, 0 -> r6   ; mprec.c:490
	;;
#0:	       sl	r6, r3 -> r6    ; mprec.c:490
	;;
#0:	       or	r6, r5 -> r5    ; mprec.c:490
	;;
#0:	       stm.a	r5, r0, 0       ; mprec.c:490
	;;
#0:	       ldm.f	r4, 0           ; mprec.c:491
#1:	       add	r4, 4 -> r4
	;;
#0:	       cmpult	r4, r1 -> c1    ; mprec.c:493
	;;
#0:	if  c1 br	.BB21_40        ; mprec.c:493
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:491
	;;
#0:	       sr	r0, r2 -> r5    ; mprec.c:491
#1:	       or	r7, 0 -> r0
	;;                              ; mprec.c:493
	       nop	1               ; mprec.c:493
	;;
; BB#41:                                ; %bb8
#0:	       ldm.s	r14, 20         ; mprec.c:495
#1:	       cmpeq	r5, 0 -> c1     ; mprec.c:494
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:495
#1:	       stm.a	r5, r7, 0       ; mprec.c:494
	;;
#0:	       add	r0, 2 -> r0     ; mprec.c:495
	;;
#0:	if  c1 or	r12, 0 -> r0
	;;
.BB21_42:                               ; %bb.i13
#0:	       sub	r0, 1 -> r0
#1:	       or	r14, 0 -> r15   ; mprec.c:518
	;;
#0:	       stm.a	r0, r13, 4      ; mprec.c:516
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:517 ]
#1:	       ldm.s	r14, 28         ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldm.f	r1, 4           ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       stm.a	r0, r1, 0       ; mprec.c:141[ mprec.c:517 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       s2add	r0, r2 -> r0    ; mprec.c:142[ mprec.c:517 ]
	;;
#0:	       stm.a	r1, r0, 0       ; mprec.c:142[ mprec.c:517 ]
#1:	       or	r13, 0 -> r0    ; mprec.c:518
	;;
#0:	       ldm.s	r14, 32         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:518
#1:	       ldm.s	r14, 36         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:518
#1:	       ldm.s	r14, 40         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:518
#1:	       ldm.s	r14, 44         ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:518
#1:	       ldm.s	r15, 8          ; mprec.c:518
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:518
#0:	       ldm.s	r15, 4          ; mprec.c:518
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:518
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:518
#1:	       ldm.s	r15, 0          ; mprec.c:518
#2:	       s2add	r15, 12 -> r15  ; mprec.c:518
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:518
	;;
#0:	       ret                      ; mprec.c:518
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:518
	;;                              ; mprec.c:518
	       nop	3               ; mprec.c:518
	;;
.BB21_43:                               ; %_calloc_r.exit
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:477 ]
#1:	       br	.BB21_31
#2:	       ldi	0 -> r13
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:477 ]
	;;
	       nop	1
	;;
	.align	4
___lshift_end:

	.align	4
___multiply:                            ; @__multiply
	.size	___multiply_end-___multiply
___multiply_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 12         ; mprec.c:340
#2:	       ldiu	48 -> r4        ; mprec.c:340
#1:	       ldx	$rb, 0 -> r1.31 ; mprec.c:340
	;;
#0:	       sub	r15, r4 -> r15  ; mprec.c:340
#2:	       ldx	$ro, 0 -> r2.31 ; mprec.c:340
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:340
#1:	       or	r15, 0 -> r14   ; mprec.c:340
	;;
#1:	       stm.s	r1.31, r15, 1   ; mprec.c:340
	;;
#2:	       stm.s	r2.31, r15, 2   ; mprec.c:340
	;;
#0:	       stm.s	r10, r14, 11    ; mprec.c:340
	;;
#0:	       stm.s	r11, r14, 10    ; mprec.c:340
#1:	       or	r0, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 9     ; mprec.c:340
#1:	       or	r1, 0 -> r12
	;;
#0:	       stm.s	r13, r14, 8     ; mprec.c:340
	;;
#1:	       stm.s	r1.23, r14, 7   ; mprec.c:340
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:340
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:340
#1:	       ldm.f	r1, 16          ; mprec.c:340
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:340
#1:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:352 ]
	;;
#0:	       cmplt	r2, r3 -> c1    ; mprec.c:340
	;;
#0:	if  c1 or	r0, 0 -> r12
#1:	       ldx	$mem, 0 -> r10  ; mprec.c:103[ mprec.c:352 ]
#2:	if  c1 or	r1, 0 -> r11
	;;
#0:	       ldm.f	r12, 16         ; mprec.c:348
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:348
	;;
#0:	       stm.s	r0, r14, 6      ; mprec.c:347
	;;
#0:	       ldm.f	r11, 16         ; mprec.c:347
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:347
	;;
#0:	       stm.s	r1, r14, 5      ; mprec.c:350
#1:	       add	r0, r1 -> r0    ; mprec.c:349
	;;
#0:	       ldm.f	r11, 8          ; mprec.c:350
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:350
#1:	       stm.s	r0, r14, 4      ; mprec.c:350
	;;
#0:	       cmplt	r2, r0 -> c1    ; mprec.c:350
#1:	       ldm.f	r11, 4          ; mprec.c:346
	;;
#0:	       ldx	$c1 -> r1
#1:	       cmpeq	r10, 0 -> c1    ; mprec.c:103[ mprec.c:352 ]
	;;
#0:	if !c1 br	.BB22_13
#1:	       ldx	$mem, 0 -> r0   ; mprec.c:346
	;;
#0:	       add	r1, r0 -> r13
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb.i
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:352 ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_48        ; mallocr.c:3209[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:352 ] ]
	;;
; BB#2:                                 ; %bb1.i
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:106[ mprec.c:352 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_11        ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
; BB#3:                                 ; %bb2.i1
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_5         ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
; BB#4:                                 ; %bb2.i1.bb6.i4_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB22_10
	;;
	       nop	2
	;;
.BB22_5:                                ; %bb3.i2
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_7         ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
; BB#6:                                 ; %bb3.i2.bb6.i4_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB22_10
	;;
	       nop	2
	;;
.BB22_7:                                ; %bb4.i3
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_9         ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
; BB#8:                                 ; %bb4.i3.bb6.i4_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB22_10
	;;
	       nop	2
	;;
.BB22_9:                                ; %bb5.i
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
.BB22_10:                               ; %bb6.i4
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
#1:	       br	.BB22_12
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
	       nop	0
	;;
.BB22_11:                               ; %bb7.i5
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:352 ] ]
	;;
.BB22_12:                               ; %_calloc_r.exit.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:352 ]
	;;
#0:	       stm.a	r10, r0, 19     ; mprec.c:106[ mprec.c:352 ]
	;;
.BB22_13:                               ; %bb2.i
#0:	       s2add	r10, r13 -> r0  ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	       cmpeq	r10, 0 -> c1    ; mprec.c:115[ mprec.c:352 ]
	;;
#0:	if  c1 br	.BB22_15        ; mprec.c:115[ mprec.c:352 ]
	;;                              ; mprec.c:115[ mprec.c:352 ]
	       nop	2               ; mprec.c:115[ mprec.c:352 ]
	;;
; BB#14:                                ; %bb3.i
#0:	       ldm.f	r10, 0          ; mprec.c:117[ mprec.c:352 ]
#1:	       br	.BB22_28
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:117[ mprec.c:352 ]
	;;
#0:	       stm.a	r13, r0, 0      ; mprec.c:117[ mprec.c:352 ]
	;;
	       nop	0
	;;
.BB22_15:                               ; %bb4.i
#0:	       ldi	1 -> r10
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:352 ] ]
	;;
#1:	       sl	r10, r13 -> r1.23 ; mprec.c:121[ mprec.c:352 ]
#0:	       ldi	20 -> r10
	;;
#1:	       s2add	r10, r1.23 -> r0 ; mprec.c:123[ mprec.c:352 ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:352 ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_17        ; mallocr.c:3209[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:352 ] ]
	;;
; BB#16:                                ; %bb4.i._Balloc.exit_crit_edge
#0:	       ldi	0 -> r10
#1:	       br	.BB22_29
	;;
	       nop	2
	;;
.BB22_17:                               ; %bb1.i6
#0:	       or	r0, 0 -> r10    ; mallocr.c:3207[ mprec.c:123[ mprec.c:352 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r10, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_26        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
; BB#18:                                ; %bb2.i7
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_20        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
; BB#19:                                ; %bb2.i7.bb6.i12_crit_edge
#0:	       or	r10, 0 -> r0
#1:	       br	.BB22_25
	;;
	       nop	2
	;;
.BB22_20:                               ; %bb3.i8
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r10, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_22        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
#1:	       stm.a	0, r10, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
; BB#21:                                ; %bb3.i8.bb6.i12_crit_edge
#0:	       add	r10, 8 -> r0
#1:	       br	.BB22_25
	;;
	       nop	2
	;;
.BB22_22:                               ; %bb4.i9
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r10, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	if  c1 br	.BB22_24        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
#1:	       stm.a	0, r10, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
; BB#23:                                ; %bb4.i9.bb6.i12_crit_edge
#0:	       add	r10, 16 -> r0
#1:	       br	.BB22_25
	;;
	       nop	2
	;;
.BB22_24:                               ; %bb5.i10
#0:	       stm.a	0, r10, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
#1:	       add	r10, 24 -> r0
	;;
#0:	       stm.a	0, r10, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
.BB22_25:                               ; %bb6.i12
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
#1:	       br	.BB22_27
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
	       nop	0
	;;
.BB22_26:                               ; %bb7.i13
#0:	       or	r10, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:352 ] ]
	;;
.BB22_27:                               ; %bb6.i
#0:	       stm.a	r13, r10, 1     ; mprec.c:128[ mprec.c:352 ]
	;;
#1:	       stm.a	r1.23, r10, 2   ; mprec.c:129[ mprec.c:352 ]
	;;
.BB22_28:                               ; %bb7.i
#0:	       stm.a	0, r10, 4       ; mprec.c:131[ mprec.c:352 ]
	;;
#0:	       stm.a	0, r10, 3       ; mprec.c:131[ mprec.c:352 ]
	;;
.BB22_29:                               ; %_Balloc.exit
#0:	       ldm.s	r14, 16         ; mprec.c:353
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:353
	;;
#0:	       cmplt	r0, 1 -> c1     ; mprec.c:353
	;;
#0:	if  c1 br	.BB22_32
	;;
	       nop	2
	;;
; BB#30:                                ; %bb.nph33
#0:	       s2add	r10, r0 -> r0
#1:	       add	r10, 20 -> r1
	;;
#0:	       add	r0, 20 -> r0
	;;
.BB22_31:                               ; %bb4
                                        ; =>This Inner Loop Header: Depth=1
#0:	       add	r1, 4 -> r2
#1:	       stm.a	0, r1, 0        ; mprec.c:354
	;;
#0:	       cmpult	r2, r0 -> c1    ; mprec.c:353
#1:	       or	r2, 0 -> r1
	;;
#0:	if  c1 br	.BB22_31        ; mprec.c:353
	;;                              ; mprec.c:353
	       nop	2               ; mprec.c:353
	;;
.BB22_32:                               ; %bb6
#0:	       ldm.s	r14, 24         ; mprec.c:361
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:361
	;;
#0:	       cmplt	r0, 1 -> c1     ; mprec.c:361
	;;
#0:	if  c1 br	.BB22_43
	;;
	       nop	2
	;;
; BB#33:                                ; %bb.nph
#0:	       ldm.s	r14, 20
#1:	       s2add	r12, r0 -> r0
#2:	       add	r10, 24 -> r2
#3:	       add	r11, 20 -> r3
	;;
#0:	       add	r0, 20 -> r0
#1:	       add	r10, 20 -> r4
#2:	       add	r12, 20 -> r5
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       s2add	r11, r1 -> r1
	;;
#0:	       add	r1, 20 -> r1
	;;
.BB22_34:                               ; %bb7
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB22_40 Depth 2
                                        ;     Child Loop BB22_36 Depth 2
#0:	       ldm.f	r5, 0           ; mprec.c:363
	;;
#0:	       ldx	$mem, 0 -> r6   ; mprec.c:363
	;;
#0:	       mask	r6, 4 -> r7     ; mprec.c:363
	;;
#0:	       cmpeq	r7, 0 -> c1     ; mprec.c:363
	;;
#0:	if  c1 br	.BB22_38
	;;
	       nop	2
	;;
; BB#35:                                ; %bb7.bb9_crit_edge
                                        ;   in Loop: Header=BB22_34 Depth=1
#0:	       ldi	0 -> r6
#1:	       or	r4, 0 -> r8
#2:	       or	r3, 0 -> r9
	;;
.BB22_36:                               ; %bb9
                                        ;   Parent Loop BB22_34 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.f	r9, 0           ; mprec.c:370
#1:	       add	r9, 4 -> r9
	;;
#0:	       cmpult	r9, r1 -> c1    ; mprec.c:376
	;;
#2:	       ldx	$mem, 0 -> r2.16 ; mprec.c:370
#0:	       ldm.f	r8, 0           ; mprec.c:370
	;;
#2:	       mask	r2.16, 4 -> r11 ; mprec.c:370
	;;
#3:	       ldx	$mem, 0 -> r3.16 ; mprec.c:370
#2:	       sr	r2.16, 16 -> r12 ; mprec.c:372
#0:	       mul	r11, r7 -> $mul0 ; mprec.c:370
	;;
#3:	       mask	r3.16, 4 -> r3.17 ; mprec.c:370
#1:	       mul	r12, r7 -> $mul1 ; mprec.c:372
#0:	       ldx	$mul0, 0 -> r0.16 ; mprec.c:370
	;;
#3:	       add	r3.17, r6 -> r6 ; mprec.c:370
#1:	       ldx	$mul1, 0 -> r11 ; mprec.c:372
	;;
#0:	       add	r6, r0.16 -> r6 ; mprec.c:370
#3:	       sr	r3.16, 16 -> r3.16 ; mprec.c:372
	;;
#3:	       add	r11, r3.16 -> r11 ; mprec.c:372
#0:	       sr	r6, 16 -> r0.16 ; mprec.c:371
#1:	       mask	r6, 4 -> r1.17  ; mprec.c:374
	;;
#1:	if  c1 br	.BB22_36        ; mprec.c:376
#0:	       add	r11, r0.16 -> r11 ; mprec.c:372
#3:	       add	r8, 4 -> r3.16
	;;
#1:	       sl	r11, 16 -> r1.16 ; mprec.c:374
#0:	       sr	r11, 16 -> r6   ; mprec.c:373
	;;
#1:	       or	r1.16, r1.17 -> r1.16 ; mprec.c:374
	;;
#1:	       stm.a	r1.16, r8, 0    ; mprec.c:374
#3:	       or	r3.16, 0 -> r8
	;;
; BB#37:                                ; %bb10
                                        ;   in Loop: Header=BB22_34 Depth=1
#3:	       stm.a	r6, r3.16, 0
	;;
#0:	       ldm.f	r5, 0
	;;
#0:	       ldx	$mem, 0 -> r6
	;;
.BB22_38:                               ; %bb11
                                        ;   in Loop: Header=BB22_34 Depth=1
#0:	       sr	r6, 16 -> r6    ; mprec.c:379
	;;
#0:	       cmpeq	r6, 0 -> c1     ; mprec.c:379
	;;
#0:	if  c1 br	.BB22_42
	;;
	       nop	2
	;;
; BB#39:                                ; %bb12
                                        ;   in Loop: Header=BB22_34 Depth=1
#0:	       ldm.f	r4, 0           ; mprec.c:384
#1:	       ldi	0 -> r8
#2:	       or	r2, 0 -> r9
#3:	       or	r3, 0 -> r11
	;;
#0:	       ldx	$mem, 0 -> r7   ; mprec.c:384
	;;
.BB22_40:                               ; %bb13
                                        ;   Parent Loop BB22_34 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#2:	       ldm.f	r11, 0          ; mprec.c:387
#0:	       sub	r9, 2 -> r0.17  ; mprec.c:387
#3:	       mask	r7, 4 -> r7     ; mprec.c:389
#1:	       sub	r9, 4 -> r1.16
	;;
#0:	       ldx	$mem, 0 -> r0.16 ; mprec.c:387
#1:	       ldm.f	r9, -2          ; mprec.c:387
	;;
#0:	       mask	r0.16, 4 -> r12 ; mprec.c:387
	;;
#0:	       ldx	$memhu, r0.17 -> r0.17 ; mprec.c:387
#2:	       mul	r12, r6 -> $mul2 ; mprec.c:387
	;;
#0:	       add	r0.17, r8 -> r8 ; mprec.c:387
#2:	       ldx	$mul2, 0 -> r2.16 ; mprec.c:387
	;;
#2:	       add	r8, r2.16 -> r8 ; mprec.c:387
	;;
#3:	       sl	r8, 16 -> r3.16 ; mprec.c:389
#2:	       add	r11, 2 -> r2.16 ; mprec.c:390
#0:	       sr	r8, 16 -> r8    ; mprec.c:388
	;;
#3:	       or	r3.16, r7 -> r7 ; mprec.c:389
	;;
#1:	       stm.a	r7, r1.16, 0    ; mprec.c:389
	;;
#0:	       ldm.f	r11, 2          ; mprec.c:390
#1:	       add	r11, 4 -> r11
	;;
#0:	       cmpult	r11, r1 -> c1   ; mprec.c:393
	;;
#2:	       ldx	$memhu, r2.16 -> r7 ; mprec.c:390
#0:	       ldm.f	r9, 0           ; mprec.c:390
	;;
#3:	       mul	r7, r6 -> $mul3 ; mprec.c:390
	;;
#1:	if  c1 br	.BB22_40        ; mprec.c:393
#0:	       ldx	$memhu, r9 -> r0.16 ; mprec.c:390
#3:	       ldx	$mul3, 0 -> r7  ; mprec.c:390
#2:	       add	r9, 4 -> r9
	;;
#0:	       add	r7, r0.16 -> r7 ; mprec.c:390
	;;
#0:	       add	r7, r8 -> r7    ; mprec.c:390
	;;
#0:	       sr	r7, 16 -> r8    ; mprec.c:391
	;;
; BB#41:                                ; %bb14
                                        ;   in Loop: Header=BB22_34 Depth=1
#0:	       sub	r9, 4 -> r6
	;;
#0:	       stm.a	r7, r6, 0
	;;
.BB22_42:                               ; %bb15
                                        ;   in Loop: Header=BB22_34 Depth=1
#0:	       add	r5, 4 -> r5
#1:	       add	r4, 4 -> r4
#2:	       add	r2, 4 -> r2
	;;
#0:	       cmpult	r5, r0 -> c1    ; mprec.c:361
	;;
#0:	if  c1 br	.BB22_34
	;;
	       nop	2
	;;
.BB22_43:                               ; %bb17
#0:	       ldm.s	r14, 20
#1:	       br	.BB22_45
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
.BB22_44:                               ; %bb18
                                        ;   in Loop: Header=BB22_45 Depth=1
#0:	       sub	r0, 1 -> r0
	;;
.BB22_45:                               ; %bb19
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmplt	r0, 1 -> c1
	;;
#0:	if  c1 br	.BB22_47
	;;
	       nop	2
	;;
; BB#46:                                ; %bb20
                                        ;   in Loop: Header=BB22_45 Depth=1
#0:	       s2add	r10, r0 -> r1
	;;
#0:	       ldm.f	r1, 16          ; mprec.c:416
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:416
	;;
#0:	       cmpeq	r1, 0 -> c1     ; mprec.c:416
	;;
#0:	if  c1 br	.BB22_44        ; mprec.c:416
	;;                              ; mprec.c:416
	       nop	2               ; mprec.c:416
	;;
.BB22_47:                               ; %bb21
#0:	       stm.a	r0, r10, 4      ; mprec.c:417
#1:	       or	r14, 0 -> r15   ; mprec.c:418
#2:	       or	r10, 0 -> r0    ; mprec.c:418
	;;
#0:	       ldm.s	r14, 28         ; mprec.c:418
	;;
#1:	       ldx	$mem, 0 -> r1.23 ; mprec.c:418
#0:	       ldm.s	r14, 32         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:418
#1:	       ldm.s	r14, 36         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:418
#1:	       ldm.s	r14, 40         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:418
#1:	       ldm.s	r14, 44         ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:418
#1:	       ldm.s	r15, 8          ; mprec.c:418
	;;
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:418
#0:	       ldm.s	r15, 4          ; mprec.c:418
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:418
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:418
#1:	       ldm.s	r15, 0          ; mprec.c:418
#2:	       s2add	r15, 12 -> r15  ; mprec.c:418
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:418
	;;
#0:	       ret                      ; mprec.c:418
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:418
	;;                              ; mprec.c:418
	       nop	3               ; mprec.c:418
	;;
.BB22_48:                               ; %_calloc_r.exit
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:352 ]
#1:	       br	.BB22_29
#2:	       ldi	0 -> r10
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:352 ]
	;;
	       nop	1
	;;
	.align	4
___multiply_end:

	.align	4
___multadd:                             ; @__multadd
	.size	___multadd_end-___multadd
___multadd_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 11         ; mprec.c:160
#2:	       ldiu	44 -> r3        ; mprec.c:160
#1:	       ldx	$rb, 0 -> r1.31 ; mprec.c:160
	;;
#0:	       sub	r15, r3 -> r15  ; mprec.c:160
#2:	       ldx	$ro, 0 -> r2.31 ; mprec.c:160
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:160
#1:	       or	r15, 0 -> r14   ; mprec.c:160
	;;
#1:	       stm.s	r1.31, r15, 1   ; mprec.c:160
	;;
#2:	       stm.s	r2.31, r15, 2   ; mprec.c:160
	;;
#0:	       stm.s	r10, r14, 10    ; mprec.c:160
#1:	       or	r0, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 9     ; mprec.c:160
	;;
#0:	       stm.s	r12, r14, 8     ; mprec.c:160
	;;
#0:	       stm.s	r13, r14, 7     ; mprec.c:160
	;;
#0:	       stm.s	r0.23, r14, 6   ; mprec.c:160
	;;
#0:	       ldm.f	r0, 16          ; mprec.c:160
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:160
	;;
#0:	       stm.s	r2, r14, 5
#1:	       ldi	0 -> r2
	;;
#0:	       or	r2, 0 -> r11
	;;
.BB23_1:                                ; %bb
                                        ; =>This Inner Loop Header: Depth=1
#0:	       s2add	r10, r2 -> r0
#1:	       add	r2, 1 -> r2     ; mprec.c:177
	;;
#0:	       ldm.f	r0, 20          ; mprec.c:166
	;;
#0:	       ldx	$mem, 0 -> r3   ; mprec.c:166
	;;
#0:	       mask	r3, 4 -> r4     ; mprec.c:167
#1:	       sr	r3, 16 -> r3    ; mprec.c:168
	;;
#0:	       mul	r4, r1 -> $mul0 ; mprec.c:167
#1:	       mul	r3, r1 -> $mul1 ; mprec.c:168
	;;
#0:	       ldx	$mul0, 0 -> r4  ; mprec.c:167
	;;
#0:	       add	r4, r11 -> r11  ; mprec.c:167
#1:	       ldx	$mul1, 0 -> r4  ; mprec.c:168
	;;
#0:	       sr	r11, 16 -> r3   ; mprec.c:168
#1:	       mask	r11, 4 -> r5    ; mprec.c:170
	;;
#0:	       add	r3, r4 -> r3    ; mprec.c:168
	;;
#0:	       sl	r3, 16 -> r4    ; mprec.c:170
#1:	       sr	r3, 16 -> r11   ; mprec.c:169
	;;
#0:	       or	r4, r5 -> r3
	;;
#0:	       stm.a	r3, r0, 5       ; mprec.c:170
	;;
#0:	       ldm.s	r14, 20         ; mprec.c:177
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:177
	;;
#0:	       cmplt	r2, r0 -> c1    ; mprec.c:177
	;;
#0:	if  c1 br	.BB23_1         ; mprec.c:177
	;;                              ; mprec.c:177
	       nop	2               ; mprec.c:177
	;;
; BB#2:                                 ; %bb1
#0:	       cmpeq	r11, 0 -> c1    ; mprec.c:178
	;;
#0:	if  c1 br	.BB23_36        ; mprec.c:178
	;;                              ; mprec.c:178
	       nop	2               ; mprec.c:178
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.f	r10, 8          ; mprec.c:180
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:180
#1:	       ldm.s	r14, 20         ; mprec.c:180
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:180
	;;
#0:	       cmple	r0, r1 -> c1    ; mprec.c:180
	;;
#0:	if  c1 br	.BB23_5         ; mprec.c:180
	;;                              ; mprec.c:180
	       nop	2               ; mprec.c:180
	;;
; BB#4:                                 ; %bb2.bb4_crit_edge
#0:	       or	r10, 0 -> r12
#1:	       br	.BB23_35
	;;
	       nop	2
	;;
.BB23_5:                                ; %bb3
#0:	       ldm.f	r10, 4          ; mprec.c:182
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:182
	;;
#1:	       stm.s	r12, r14, 4     ; mprec.c:103[ mprec.c:182 ]
#0:	       add	r12, 1 -> r0.23 ; mprec.c:182
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	       cmpeq	r13, 0 -> c1    ; mprec.c:103[ mprec.c:182 ]
	;;
#0:	if !c1 br	.BB23_18
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb.i
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:182 ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_38        ; mallocr.c:3209[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:182 ] ]
	;;
; BB#7:                                 ; %bb1.i
#0:	       or	r0, 0 -> r13    ; mallocr.c:3207[ mprec.c:106[ mprec.c:182 ] ]
#1:	       ldi	-4 -> r0
	;;
#0:	       ldm.f	r13, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mallocr.c:3233[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       sub	r12, 4 -> r12
	;;
#0:	       and	r12, r0 -> r1
#1:	       ldi	36 -> r12
	;;
#0:	       cmpult	r12, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_16        ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
; BB#8:                                 ; %bb2.i1
#0:	       ldi	19 -> r12
	;;
#0:	       cmpult	r12, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_10        ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
; BB#9:                                 ; %bb2.i1.bb6.i4_crit_edge
#0:	       or	r13, 0 -> r12
#1:	       br	.BB23_15
	;;
	       nop	2
	;;
.BB23_10:                               ; %bb3.i2
#0:	       ldi	27 -> r12
#1:	       stm.a	0, r13, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       cmpult	r12, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_12        ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
#1:	       stm.a	0, r13, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
; BB#11:                                ; %bb3.i2.bb6.i4_crit_edge
#0:	       add	r13, 8 -> r12
#1:	       br	.BB23_15
	;;
	       nop	2
	;;
.BB23_12:                               ; %bb4.i3
#0:	       ldi	35 -> r12
#1:	       stm.a	0, r13, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       cmpult	r12, r1 -> c1   ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_14        ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
#1:	       stm.a	0, r13, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
; BB#13:                                ; %bb4.i3.bb6.i4_crit_edge
#0:	       add	r13, 16 -> r12
#1:	       br	.BB23_15
	;;
	       nop	2
	;;
.BB23_14:                               ; %bb5.i
#0:	       stm.a	0, r13, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
#1:	       add	r13, 24 -> r12
	;;
#0:	       stm.a	0, r13, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
.BB23_15:                               ; %bb6.i4
#0:	       stm.a	0, r12, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
#1:	       br	.BB23_17
	;;
#0:	       stm.a	0, r12, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
#0:	       stm.a	0, r12, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
	       nop	0
	;;
.BB23_16:                               ; %bb7.i5
#0:	       or	r13, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:182 ] ]
	;;
.BB23_17:                               ; %_calloc_r.exit.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:182 ]
	;;
#0:	       stm.a	r13, r0, 19     ; mprec.c:106[ mprec.c:182 ]
	;;
.BB23_18:                               ; %bb2.i
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r12
	;;
#0:	       s2add	r13, r12 -> r0
	;;
#0:	       ldm.f	r0, 4           ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	       cmpeq	r12, 0 -> c1    ; mprec.c:115[ mprec.c:182 ]
	;;
#0:	if  c1 br	.BB23_20        ; mprec.c:115[ mprec.c:182 ]
	;;                              ; mprec.c:115[ mprec.c:182 ]
	       nop	2               ; mprec.c:115[ mprec.c:182 ]
	;;
; BB#19:                                ; %bb3.i
#0:	       ldm.f	r12, 0          ; mprec.c:117[ mprec.c:182 ]
#1:	       br	.BB23_33
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:117[ mprec.c:182 ]
	;;
#0:	       stm.a	r1, r0, 1       ; mprec.c:117[ mprec.c:182 ]
	;;
	       nop	0
	;;
.BB23_20:                               ; %bb4.i
#0:	       ldi	1 -> r12
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       sl	r12, r0.23 -> r13 ; mprec.c:121[ mprec.c:182 ]
#1:	       ldi	20 -> r12
	;;
#0:	       s2add	r12, r13 -> r0  ; mprec.c:123[ mprec.c:182 ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:182 ] ]
	       nop	1               ; mallocr.c:3207[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_22        ; mallocr.c:3209[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:182 ] ]
	;;
; BB#21:                                ; %bb4.i.bb.i7_crit_edge
#0:	       ldi	0 -> r12
#1:	       br	.BB23_34
	;;
	       nop	2
	;;
.BB23_22:                               ; %bb1.i6
#0:	       or	r0, 0 -> r12    ; mallocr.c:3207[ mprec.c:123[ mprec.c:182 ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r12, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_31        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
; BB#23:                                ; %bb2.i7
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_25        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
; BB#24:                                ; %bb2.i7.bb6.i12_crit_edge
#0:	       or	r12, 0 -> r0
#1:	       br	.BB23_30
	;;
	       nop	2
	;;
.BB23_25:                               ; %bb3.i8
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r12, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_27        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
#1:	       stm.a	0, r12, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
; BB#26:                                ; %bb3.i8.bb6.i12_crit_edge
#0:	       add	r12, 8 -> r0
#1:	       br	.BB23_30
	;;
	       nop	2
	;;
.BB23_27:                               ; %bb4.i9
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r12, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	if  c1 br	.BB23_29        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
#1:	       stm.a	0, r12, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
; BB#28:                                ; %bb4.i9.bb6.i12_crit_edge
#0:	       add	r12, 16 -> r0
#1:	       br	.BB23_30
	;;
	       nop	2
	;;
.BB23_29:                               ; %bb5.i10
#0:	       stm.a	0, r12, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
#1:	       add	r12, 24 -> r0
	;;
#0:	       stm.a	0, r12, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
.BB23_30:                               ; %bb6.i12
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
#1:	       br	.BB23_32
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
	       nop	0
	;;
.BB23_31:                               ; %bb7.i13
#0:	       or	r12, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:182 ] ]
	;;
.BB23_32:                               ; %bb6.i
#0:	       stm.a	r0.23, r12, 1   ; mprec.c:128[ mprec.c:182 ]
	;;
#0:	       stm.a	r13, r12, 2     ; mprec.c:129[ mprec.c:182 ]
	;;
.BB23_33:                               ; %bb7.i
#0:	       stm.a	0, r12, 4       ; mprec.c:131[ mprec.c:182 ]
	;;
#0:	       stm.a	0, r12, 3       ; mprec.c:131[ mprec.c:182 ]
	;;
.BB23_34:                               ; %bb.i7
#0:	       ldm.f	r10, 16         ; mprec.c:183
#1:	       ldi	8 -> r3
#2:	       add	r12, 12 -> r0   ; mprec.c:183
#3:	       add	r10, 12 -> r1   ; mprec.c:183
	;;
#0:	       callg	_memcpy         ; mprec.c:183
#1:	       ldx	$mem, 0 -> r2   ; mprec.c:183
	;;
#0:	       s2add	r3, r2 -> r2    ; mprec.c:183
	;;                              ; mprec.c:183
	       nop	2               ; mprec.c:183
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:184 ]
#1:	       ldm.f	r10, 4          ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldm.f	r0, 0           ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       stm.a	r0, r10, 0      ; mprec.c:141[ mprec.c:184 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       s2add	r0, r1 -> r0    ; mprec.c:142[ mprec.c:184 ]
	;;
#0:	       stm.a	r10, r0, 0      ; mprec.c:142[ mprec.c:184 ]
	;;
.BB23_35:                               ; %bb4
#0:	       ldm.s	r14, 20
#1:	       or	r12, 0 -> r0
#2:	       or	r14, 0 -> r15   ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       s2add	r0, r10 -> r1
#1:	       add	r10, 1 -> r10   ; mprec.c:187
	;;
#0:	       stm.a	r11, r1, 5      ; mprec.c:187
	;;
#0:	       stm.a	r10, r0, 4      ; mprec.c:188
	;;
#0:	       ldm.s	r14, 24         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; mprec.c:190
#1:	       ldm.s	r14, 28         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:190
#1:	       ldm.s	r14, 32         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:190
#1:	       ldm.s	r14, 36         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:190
#1:	       ldm.s	r14, 40         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:190
#1:	       ldm.s	r15, 8          ; mprec.c:190
	;;
#0:	       br	.BB23_37
#3:	       ldx	$mem, 0 -> r3.31 ; mprec.c:190
#1:	       ldm.s	r15, 4          ; mprec.c:190
	;;
#3:	       stx	r3.31 -> $ro    ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; mprec.c:190
	;;
#0:	       stx	r0.31 -> $rb    ; mprec.c:190
	;;
.BB23_36:                               ; %bb5
#0:	       ldm.s	r14, 24         ; mprec.c:190
#1:	       or	r14, 0 -> r15   ; mprec.c:190
#2:	       or	r10, 0 -> r0    ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r0.23 ; mprec.c:190
#1:	       ldm.s	r14, 28         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:190
#1:	       ldm.s	r14, 32         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:190
#1:	       ldm.s	r14, 36         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:190
#1:	       ldm.s	r14, 40         ; mprec.c:190
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:190
#1:	       ldm.s	r15, 8          ; mprec.c:190
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:190
#0:	       ldm.s	r15, 4          ; mprec.c:190
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:190
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:190
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:190
	;;
.BB23_37:                               ; %bb5
#0:	       ldm.s	r15, 0          ; mprec.c:190
#1:	       s2add	r15, 11 -> r15  ; mprec.c:190
	;;
#0:	       ret                      ; mprec.c:190
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:190
	;;                              ; mprec.c:190
	       nop	3               ; mprec.c:190
	;;
.BB23_38:                               ; %_calloc_r.exit
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:182 ]
#1:	       br	.BB23_34
#2:	       ldi	0 -> r12
	;;
#0:	       stm.a	0, r0, 19       ; mprec.c:106[ mprec.c:182 ]
	;;
	       nop	1
	;;
	.align	4
___multadd_end:

	.align	4
___pow5mult:                            ; @__pow5mult
	.size	___pow5mult_end-___pow5mult
___pow5mult_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 9          ; mprec.c:429
#2:	       ldiu	36 -> r3        ; mprec.c:429
#3:	       and	r1, 3 -> r2     ; mprec.c:429
#0:	       ldx	$ro, 0 -> r0.31 ; mprec.c:429
	;;
#0:	       sub	r15, r3 -> r15  ; mprec.c:429
#1:	       cmpne	r2, 0 -> c1     ; mprec.c:429
	;;
#3:	       ldx	$rb, 0 -> r3.31 ; mprec.c:429
	;;
#0:	       stm.s	r14, r15, 0     ; mprec.c:429
#1:	       or	r15, 0 -> r14   ; mprec.c:429
	;;
#3:	       stm.s	r3.31, r15, 1   ; mprec.c:429
	;;
#0:	       stm.s	r0.31, r15, 2   ; mprec.c:429
	;;
#0:	if !c1 br	.BB24_2
#1:	       stm.s	r10, r14, 8     ; mprec.c:429
#2:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 7     ; mprec.c:429
	;;
#0:	       stm.s	r12, r14, 6     ; mprec.c:429
	;;
#0:	       stm.s	r13, r14, 5     ; mprec.c:429
	;;
; BB#1:                                 ; %bb
#0:	       ldga	_p05.2269 -> r1 ; mprec.c:430
	;;
#0:	       s2add	r1, r2 -> r11   ; mprec.c:430
	;;
#0:	       ldm.f	r11, -4         ; mprec.c:430
	;;
#0:	       callg	___multadd      ; mprec.c:430
#1:	       ldx	$mem, 0 -> r1   ; mprec.c:430
	;;                              ; mprec.c:430
	       nop	3               ; mprec.c:430
	;;
.BB24_2:                                ; %bb
#0:	       sra	r10, 2 -> r10   ; mprec.c:432
#1:	       or	r0, 0 -> r11
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:432
	;;
#0:	if !c1 br	.BB24_42
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb3
#0:	       ldmg.d	_impure_data+72 ; mprec.c:435
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:435
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mprec.c:435
	;;
#0:	if !c1 br	.BB24_35
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb4
#0:	       ldmg.d	_impure_data+76 ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r12, 0 -> c1    ; mprec.c:103[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	if !c1 br	.BB24_17
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb.i.i
#0:	       ldi	132 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpeq	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_43        ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#6:                                 ; %bb1.i
#0:	       or	r0, 0 -> r12    ; mallocr.c:3207[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r12, -4         ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_15        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#7:                                 ; %bb2.i
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_9         ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#8:                                 ; %bb2.i.bb6.i_crit_edge
#0:	       or	r12, 0 -> r0
#1:	       br	.BB24_14
	;;
	       nop	2
	;;
.BB24_9:                                ; %bb3.i
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r12, 0       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_11        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       stm.a	0, r12, 1       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#10:                                ; %bb3.i.bb6.i_crit_edge
#0:	       add	r12, 8 -> r0
#1:	       br	.BB24_14
	;;
	       nop	2
	;;
.BB24_11:                               ; %bb4.i
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r12, 2       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_13        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       stm.a	0, r12, 3       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#12:                                ; %bb4.i.bb6.i_crit_edge
#0:	       add	r12, 16 -> r0
#1:	       br	.BB24_14
	;;
	       nop	2
	;;
.BB24_13:                               ; %bb5.i
#0:	       stm.a	0, r12, 4       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       add	r12, 24 -> r0
	;;
#0:	       stm.a	0, r12, 5       ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
.BB24_14:                               ; %bb6.i
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       br	.BB24_16
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
	       nop	0
	;;
.BB24_15:                               ; %bb7.i
#0:	       or	r12, 0 -> r0    ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:106[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
.BB24_16:                               ; %_calloc_r.exit.thread
#0:	       ldga	_impure_data -> r0 ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	r12, r0, 19     ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
.BB24_17:                               ; %bb2.i.i
#0:	       ldm.f	r12, 4          ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       cmpeq	r13, 0 -> c1    ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	if  c1 br	.BB24_19        ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;                              ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	       nop	2               ; mprec.c:115[ mprec.c:323[ mprec.c:438 ] ]
	;;
; BB#18:                                ; %bb3.i.i
#0:	       ldm.f	r13, 0          ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
#1:	       br	.BB24_32
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	r0, r12, 1      ; mprec.c:117[ mprec.c:323[ mprec.c:438 ] ]
	;;
	       nop	0
	;;
.BB24_19:                               ; %bb4.i.i
#0:	       ldi	28 -> r0
#1:	       callg	__malloc_r      ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	3               ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpne	r0, 0 -> c1     ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_21        ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3209[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#20:                                ; %bb4.i.i.__i2b.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB24_33
	;;
	       nop	2
	;;
.BB24_21:                               ; %bb1.i1
#0:	       or	r0, 0 -> r13    ; mallocr.c:3207[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       ldi	-4 -> r1
	;;
#0:	       ldm.f	r13, -4         ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       ldx	$mem, 0 -> r0   ; mallocr.c:3233[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       sub	r0, 4 -> r0
	;;
#0:	       and	r0, r1 -> r1
#1:	       ldi	36 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_30        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#22:                                ; %bb2.i2
#0:	       ldi	19 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_24        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#23:                                ; %bb2.i2.bb6.i7_crit_edge
#0:	       or	r13, 0 -> r0
#1:	       br	.BB24_29
	;;
	       nop	2
	;;
.BB24_24:                               ; %bb3.i3
#0:	       ldi	27 -> r0
#1:	       stm.a	0, r13, 0       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_26        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       stm.a	0, r13, 1       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#25:                                ; %bb3.i3.bb6.i7_crit_edge
#0:	       add	r13, 8 -> r0
#1:	       br	.BB24_29
	;;
	       nop	2
	;;
.BB24_26:                               ; %bb4.i4
#0:	       ldi	35 -> r0
#1:	       stm.a	0, r13, 2       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       cmpult	r0, r1 -> c1    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	if  c1 br	.BB24_28        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       stm.a	0, r13, 3       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	2               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
; BB#27:                                ; %bb4.i4.bb6.i7_crit_edge
#0:	       add	r13, 16 -> r0
#1:	       br	.BB24_29
	;;
	       nop	2
	;;
.BB24_28:                               ; %bb5.i5
#0:	       stm.a	0, r13, 4       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       add	r13, 24 -> r0
	;;
#0:	       stm.a	0, r13, 5       ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
.BB24_29:                               ; %bb6.i7
#0:	       stm.a	0, r0, 2        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       br	.BB24_31
	;;
#0:	       stm.a	0, r0, 0        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
#0:	       stm.a	0, r0, 1        ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
	       nop	0
	;;
.BB24_30:                               ; %bb7.i8
#0:	       or	r13, 0 -> r0    ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
#1:	       callg	_memset         ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;                              ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	       nop	3               ; mallocr.c:3244[ mprec.c:123[ mprec.c:323[ mprec.c:438 ] ] ]
	;;
.BB24_31:                               ; %bb6.i.i
#0:	       stm.a	1, r13, 1       ; mprec.c:128[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	2, r13, 2       ; mprec.c:129[ mprec.c:323[ mprec.c:438 ] ]
	;;
.BB24_32:                               ; %bb7.i.i
#0:	       or	r13, 0 -> r0
	;;
#0:	       stm.a	0, r0, 4        ; mprec.c:131[ mprec.c:323[ mprec.c:438 ] ]
	;;
#0:	       stm.a	0, r0, 3        ; mprec.c:131[ mprec.c:323[ mprec.c:438 ] ]
	;;
.BB24_33:                               ; %__i2b.exit
#0:	       ldi	625 -> r1
	;;
#0:	       stm.a	r1, r0, 5       ; mprec.c:324[ mprec.c:438 ]
#1:	       ldga	_impure_data -> r1 ; mprec.c:438
	;;
#0:	       stm.a	1, r0, 4        ; mprec.c:325[ mprec.c:438 ]
	;;
#0:	       stm.a	r0, r1, 18      ; mprec.c:438
	;;
.BB24_34:                               ; %__i2b.exit
#0:	       stm.a	0, r0, 0        ; mprec.c:439
	;;
.BB24_35:                               ; %bb5
                                        ; =>This Inner Loop Header: Depth=1
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:443
#1:	       or	r0, 0 -> r12
	;;
#0:	if !c1 br	.BB24_39
	;;
	       nop	2
	;;
; BB#36:                                ; %bb6
                                        ;   in Loop: Header=BB24_35 Depth=1
#0:	       cmpne	r11, 0 -> c1    ; mprec.c:139[ mprec.c:446 ]
#1:	       callg	___multiply     ; mprec.c:445
#2:	       or	r11, 0 -> r0    ; mprec.c:445
#3:	       or	r12, 0 -> r1    ; mprec.c:445
	;;
#0:	       ldx	$c1, 0 -> r13   ; mprec.c:445
	;;
#0:	       stm.s	r13, r14, 4     ; mprec.c:445
	;;                              ; mprec.c:445
	       nop	1               ; mprec.c:445
	;;
#0:	       ldm.s	r14, 16         ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	       stx	r1 -> $c1       ; mprec.c:139[ mprec.c:446 ]
	;;
#0:	if !c1 br	.BB24_38
	;;
	       nop	2
	;;
; BB#37:                                ; %bb.i
                                        ;   in Loop: Header=BB24_35 Depth=1
#0:	       ldmg.d	_impure_data+76 ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:446 ]
#1:	       ldm.f	r11, 4          ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r2   ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldm.f	r1, 0           ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       stm.a	r1, r11, 0      ; mprec.c:141[ mprec.c:446 ]
	;;
#0:	       ldmg.d	_impure_data+76 ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       ldx	$mem, 0 -> r1   ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       s2add	r1, r2 -> r1    ; mprec.c:142[ mprec.c:446 ]
	;;
#0:	       stm.a	r11, r1, 0      ; mprec.c:142[ mprec.c:446 ]
	;;
.BB24_38:                               ; %bb.i
                                        ;   in Loop: Header=BB24_35 Depth=1
#0:	       or	r0, 0 -> r11
	;;
.BB24_39:                               ; %bb7
                                        ;   in Loop: Header=BB24_35 Depth=1
#0:	       sra	r10, 1 -> r10   ; mprec.c:449
	;;
#0:	       cmpne	r10, 0 -> c1    ; mprec.c:449
	;;
#0:	if !c1 br	.BB24_42
	;;
	       nop	2
	;;
; BB#40:                                ; %bb8
                                        ;   in Loop: Header=BB24_35 Depth=1
#0:	       ldm.f	r12, 0          ; mprec.c:451
	;;
#0:	       ldx	$mem, 0 -> r0   ; mprec.c:451
	;;
#0:	       cmpne	r0, 0 -> c1     ; mprec.c:451
	;;
#0:	if  c1 br	.BB24_35
	;;
	       nop	2
	;;
; BB#41:                                ; %bb9
#0:	       or	r12, 0 -> r0    ; mprec.c:453
#1:	       callg	___multiply     ; mprec.c:453
#2:	       or	r12, 0 -> r1    ; mprec.c:453
	;;                              ; mprec.c:453
	       nop	3               ; mprec.c:453
	;;
#0:	       br	.BB24_34
#1:	       stm.a	r0, r12, 0      ; mprec.c:453
	;;
	       nop	2
	;;
.BB24_42:                               ; %bb12
#0:	       ldm.s	r14, 20         ; mprec.c:458
#1:	       or	r11, 0 -> r0
#2:	       or	r14, 0 -> r15   ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r13  ; mprec.c:458
#1:	       ldm.s	r14, 24         ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r12  ; mprec.c:458
#1:	       ldm.s	r14, 28         ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r11  ; mprec.c:458
#1:	       ldm.s	r14, 32         ; mprec.c:458
	;;
#0:	       ldx	$mem, 0 -> r10  ; mprec.c:458
#1:	       ldm.s	r15, 8          ; mprec.c:458
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; mprec.c:458
#0:	       ldm.s	r15, 4          ; mprec.c:458
	;;
#1:	       stx	r1.31 -> $ro    ; mprec.c:458
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; mprec.c:458
#0:	       ldm.s	r15, 0          ; mprec.c:458
#1:	       s2add	r15, 9 -> r15   ; mprec.c:458
	;;
#2:	       stx	r2.31 -> $rb    ; mprec.c:458
	;;
#0:	       ret                      ; mprec.c:458
#1:	       ldx	$mem, 0 -> r14  ; mprec.c:458
	;;                              ; mprec.c:458
	       nop	3               ; mprec.c:458
	;;
.BB24_43:                               ; %_calloc_r.exit
#0:	       ldga	_impure_data -> r1 ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
#1:	       br	.BB24_33
#2:	       ldi	0 -> r0
	;;
#0:	       stm.a	0, r1, 19       ; mprec.c:106[ mprec.c:323[ mprec.c:438 ] ]
	;;
	       nop	1
	;;
	.align	4
___pow5mult_end:

	.align	4
___sread:                               ; @__sread
	.size	___sread_end-___sread
___sread_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 1
#2:	       add	r1, 14 -> r4
#3:	       ldiu	4 -> r5
#0:	       ldga	_errno.b -> r0.16
	;;
#0:	       sub	r15, r5 -> r15
	;;
#0:	       ldm.f	r1, 14          ; stdio.c:48
	;;
#1:	       ldx	$memhu, r4 -> r4 ; stdio.c:48
#0:	       stmb.a	0, r0.16, 0
	;;
#0:	       cmpne	r4, 0 -> c1
	;;
#0:	if  c1 br	.BB25_9
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb3.preheader.i.i
#0:	       cmplt	r3, 1 -> c1
	;;
#0:	if  c1 br	.BB25_6
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb3.preheader.i.i.bb1.preheader.i.i_crit_edge
#0:	       ldi	-8 -> r0.16
#1:	       ldi	-4 -> r0
#2:	       or	r3, 0 -> r4
	;;
.BB25_3:                                ; %bb3.preheader.i.i.bb1.preheader.i.i_crit_edge
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB25_4 Depth 2
#0:	       or	r2, 0 -> r5
	;;
.BB25_4:                                ; %bb1.i.i
                                        ;   Parent Loop BB25_3 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
#0:	       ldm.b	r0.16, 0
	;;
#0:	       ldx	$membu, r0.16 -> r2
	;;
#0:	       btest	r2, 1 -> c1
	;;
#0:	if !c1 br	.BB25_4
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb2.i.i
                                        ;   in Loop: Header=BB25_3 Depth=1
#0:	       sub	r4, 1 -> r4
#1:	       ldm.b	r0, 0
#2:	       add	r5, 1 -> r2
	;;
#0:	       cmpeq	r4, 0 -> c1
	;;
#0:	if !c1 br	.BB25_3
#1:	       ldx	$membu, r0 -> r6
	;;
#0:	       stmb.a	r6, r5, 0
	;;
	       nop	1
	;;
.BB25_6:                                ; %_read.exit.i
#0:	       ldi	-1 -> r0
	;;
#0:	       cmplt	r0, r3 -> c1
	;;
#0:	if !c1 br	.BB25_10
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb
#0:	       ldm.f	r1, 80          ; stdio.c:58
	;;
#0:	       ldx	$mem, 0 -> r0   ; stdio.c:58
	;;
#0:	       add	r0, r3 -> r0    ; stdio.c:58
	;;
#0:	       stm.a	r0, r1, 20      ; stdio.c:58
	;;
.BB25_8:                                ; %bb
#0:	       or	r3, 0 -> r0     ; stdio.c:61
#1:	       ret                      ; stdio.c:61
#2:	       s2add	r15, 1 -> r15   ; stdio.c:61
	;;                              ; stdio.c:61
	       nop	3               ; stdio.c:61
	;;
.BB25_9:                                ; %bb1.i
#0:	       stmb.a	1, r0.16, 0
#1:	       ldi	88 -> r2
#2:	       ldi	-1 -> r3
	;;
#0:	       stm.a	r2, r0, 0       ; readr.c:59[ stdio.c:48 ]
	;;
.BB25_10:                               ; %bb1
#0:	       ldm.f	r1, 12          ; stdio.c:60
#1:	       add	r1, 12 -> r0
#2:	       ldiu	2047 -> r2
	;;
#0:	       br	.BB25_8
#1:	       ldim	29 -> r2
	;;
#0:	       ldx	$memhu, r0 -> r0 ; stdio.c:60
	;;
#0:	       and	r0, r2 -> r0    ; stdio.c:60
	;;
#0:	       stmh.a	r0, r1, 6       ; stdio.c:60
	;;
	.align	4
___sread_end:

	.align	4
___sclose:                              ; @__sclose
	.size	___sclose_end-___sclose
___sclose_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1
#1:	       add	r1, 14 -> r2
#2:	       ldiu	4 -> r3
	;;
#0:	       sub	r15, r3 -> r15
	;;
#0:	       s2add	r15, 1 -> r15   ; stdio.c:135
	;;
#0:	       ldm.f	r1, 14          ; stdio.c:135
	;;
#0:	       ret                      ; stdio.c:135
#1:	       ldx	$memhu, r2 -> r1 ; stdio.c:135
#2:	       ldga	_errno.b -> r2
	;;
#0:	       stmb.a	0, r2, 0
#1:	       cmpult	r1, 3 -> c1
	;;
#0:	if  c1 ldi	0 -> r0
#1:	if !c1 ldi	88 -> r1
	;;
#0:	if !c1 stmb.a	1, r2, 0
	;;
#0:	if !c1 stm.a	r1, r0, 0       ; closer.c:54[ stdio.c:135 ]
#1:	if !c1 ldi	-1 -> r0
	;;
	.align	4
___sclose_end:

	.align	4
___sseek:                               ; @__sseek
	.size	___sseek_end-___sseek
___sseek_start:
; BB#0:                                 ; %bb
#0:	       wb.s	r15, 1
#1:	       ldi	88 -> r2
#2:	       add	r1, 12 -> r3
#3:	       ldiu	4 -> r4
	;;
#0:	       sub	r15, r4 -> r15
	;;
#0:	       s2add	r15, 1 -> r15   ; stdio.c:125
	;;
#0:	       stm.a	r2, r0, 0       ; lseekr.c:59[ stdio.c:117 ]
#1:	       ldga	_errno.b -> r2
#2:	       ldiu	2047 -> r0
	;;
#0:	       ldim	29 -> r0
	;;
#0:	       ldm.f	r1, 12          ; stdio.c:119
	;;
#0:	       ldx	$memhu, r3 -> r3 ; stdio.c:119
#1:	       stmb.a	1, r2, 0
	;;
#0:	       ret                      ; stdio.c:125
#1:	       and	r3, r0 -> r2    ; stdio.c:119
#2:	       ldi	-1 -> r0
	;;
#0:	       stmh.a	r2, r1, 6       ; stdio.c:119
	;;                              ; stdio.c:125
	       nop	2               ; stdio.c:125
	;;
	.align	4
___sseek_end:

	.align	4
___swrite:                              ; @__swrite
	.size	___swrite_end-___swrite
___swrite_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 1
#1:	       add	r1, 12 -> r4
#2:	       ldiu	4 -> r5
	;;
#0:	       sub	r15, r5 -> r15
	;;
#0:	       ldm.f	r1, 12          ; stdio.c:88
	;;
#0:	       ldx	$memhu, r4 -> r4 ; stdio.c:88
	;;
#0:	       btest	r4, 8 -> c1     ; stdio.c:88
	;;
#0:	if !c1 br	.BB28_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %_lseek_r.exit
#0:	       ldga	_errno.b -> r0.16
#1:	       ldi	88 -> r4
	;;
#0:	       stmb.a	1, r0.16, 0
	;;
#0:	       stm.a	r4, r0, 0       ; lseekr.c:59[ stdio.c:89 ]
#1:	       add	r1, 12 -> r4
	;;
#0:	       ldm.f	r1, 12
	;;
#0:	       ldx	$memhu, r4 -> r4
	;;
.BB28_2:                                ; %bb1
#0:	       ldm.f	r1, 14          ; stdio.c:97
#1:	       add	r1, 14 -> r6
#2:	       ldiu	2047 -> r5
	;;
#2:	       ldga	_errno.b -> r2.16
#0:	       ldim	29 -> r5
	;;
#0:	       ldx	$memhs, r6 -> r6 ; stdio.c:97
#2:	       stmb.a	0, r2.16, 0
#1:	       and	r4, r5 -> r4    ; stdio.c:90
#3:	       ldi	1 -> r5
	;;
#0:	       sub	r6, 1 -> r6
	;;
#0:	       cmpult	r5, r6 -> c1
	;;
#0:	       stmh.a	r4, r1, 6       ; stdio.c:90
#1:	if  c1 ldi	88 -> r1
#2:	if  c1 s2add	r15, 1 -> r15   ; stdio.c:104
	;;
#2:	if  c1 stmb.a	1, r2.16, 0
	;;
#0:	if  c1 stm.a	r1, r0, 0       ; writer.c:59[ stdio.c:97 ]
#1:	if  c1 ldi	-1 -> r0
	;;
#0:	if  c1 ret                      ; stdio.c:104
	;;                              ; stdio.c:104
	       nop	3               ; stdio.c:104
	;;
; BB#3:                                 ; %bb3.preheader.i.i
#0:	       cmplt	r3, 1 -> c1
	;;
#0:	if  c1 ret                      ; stdio.c:104
#1:	if  c1 or	r3, 0 -> r0     ; stdio.c:104
#2:	if  c1 s2add	r15, 1 -> r15   ; stdio.c:104
	;;                              ; stdio.c:104
	       nop	3               ; stdio.c:104
	;;
; BB#4:                                 ; %bb3.preheader.i.i.bb1.preheader.i.i_crit_edge
#0:	       ldi	-8 -> r0
#1:	       ldi	-4 -> r1
#2:	       or	r3, 0 -> r4
	;;
.BB28_5:                                ; %bb1.i.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       ldm.b	r0, 0
	;;
#0:	       ldx	$membu, r0 -> r5
	;;
#0:	       btest	r5, 0 -> c1
	;;
#0:	if !c1 br	.BB28_5
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb2.i.i
                                        ;   in Loop: Header=BB28_5 Depth=1
#0:	       sub	r4, 1 -> r4
#1:	       ldm.f	r2, 0
	;;
#0:	       cmpeq	r4, 0 -> c1
	;;
#0:	if !c1 br	.BB28_5
#1:	       ldx	$membu, r2 -> r5
#2:	       add	r2, 1 -> r2
	;;
#0:	       stmb.a	r5, r1, 0
	;;
	       nop	1
	;;
.BB28_7:                                ; %_write.exit.i
#0:	       or	r3, 0 -> r0     ; stdio.c:104
#1:	       ret                      ; stdio.c:104
#2:	       s2add	r15, 1 -> r15   ; stdio.c:104
	;;                              ; stdio.c:104
	       nop	3               ; stdio.c:104
	;;
.BB28_8:                                ; %bb1.i2
	.align	4
___swrite_end:

	.align	4
_memset:                                ; @memset
	.size	_memset_end-_memset
_memset_start:
; BB#0:                                 ; %entry
#0:	       ldiu	4 -> r2         ; memset.c:54
#1:	       br	.BB29_3
#2:	       wb.s	r15, 1          ; memset.c:54
	;;
#0:	       sub	r15, r2 -> r15  ; memset.c:54
	;;
	       nop	1
	;;
.BB29_1:                                ; %bb
                                        ;   in Loop: Header=BB29_3 Depth=1
#0:	       cmpeq	r1, 0 -> c1     ; memset.c:59
	;;
#0:	if  c1 br	.BB29_14
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
                                        ;   in Loop: Header=BB29_3 Depth=1
#0:	       add	r0, 1 -> r2
#1:	       stmb.a	0, r0, 0        ; memset.c:60
#2:	       sub	r1, 1 -> r1
	;;
#0:	       or	r2, 0 -> r0
	;;
.BB29_3:                                ; %bb3
                                        ; =>This Inner Loop Header: Depth=1
#0:	       and	r0, 3 -> r2     ; memset.c:57
	;;
#0:	       cmpne	r2, 0 -> c1     ; memset.c:57
	;;
#0:	if  c1 br	.BB29_1         ; memset.c:57
	;;                              ; memset.c:57
	       nop	2               ; memset.c:57
	;;
; BB#4:                                 ; %bb4
#0:	       ldi	3 -> r2
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:65
	;;
#0:	if !c1 br	.BB29_12
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       ldi	15 -> r2
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:78
	;;
#0:	if !c1 br	.BB29_10
	;;
	       nop	2
	;;
.BB29_6:                                ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       stm.a	0, r0, 3        ; memset.c:83
#1:	       sub	r1, 16 -> r1
#2:	       add	r0, 16 -> r3
	;;
#0:	       cmpult	r2, r1 -> c1    ; memset.c:78
	;;
#0:	if  c1 br	.BB29_6         ; memset.c:78
#1:	       stm.a	0, r0, 2        ; memset.c:82
	;;
#0:	       stm.a	0, r0, 0        ; memset.c:80
	;;
#0:	       stm.a	0, r0, 1        ; memset.c:81
#1:	       or	r3, 0 -> r0
	;;                              ; memset.c:78
	       nop	0               ; memset.c:78
	;;
; BB#7:                                 ; %bb11.preheader
#0:	       ldi	3 -> r0
	;;
#0:	       cmpult	r0, r1 -> c1    ; memset.c:87
	;;
#0:	if  c1 br	.BB29_9         ; memset.c:87
	;;                              ; memset.c:87
	       nop	2               ; memset.c:87
	;;
; BB#8:                                 ; %bb11.preheader.bb12_crit_edge
#0:	       or	r3, 0 -> r0
#1:	       br	.BB29_12
	;;
	       nop	2
	;;
.BB29_9:                                ; %bb11.preheader.bb10_crit_edge
#0:	       or	r3, 0 -> r0
	;;
.BB29_10:                               ; %bb10
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, 4 -> r1
#1:	       ldi	3 -> r3
#2:	       add	r0, 4 -> r2
#3:	       stm.a	0, r0, 0        ; memset.c:89
	;;
#0:	       cmpult	r3, r1 -> c1    ; memset.c:87
#1:	       or	r2, 0 -> r0
	;;
#0:	if  c1 br	.BB29_10        ; memset.c:87
	;;                              ; memset.c:87
	       nop	2               ; memset.c:87
	;;
; BB#11:                                ; %bb10.bb12_crit_edge
#0:	       or	r2, 0 -> r0
	;;
.BB29_12:                               ; %bb14.preheader
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 ret
#1:	if  c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
.BB29_13:                               ; %bb13
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sub	r1, 1 -> r1
#1:	       add	r0, 1 -> r2
#2:	       stmb.a	0, r0, 0        ; memset.c:99
	;;
#0:	       cmpne	r1, 0 -> c1     ; memset.c:98
#1:	       or	r2, 0 -> r0
	;;
#0:	if  c1 br	.BB29_13        ; memset.c:98
	;;                              ; memset.c:98
	       nop	2               ; memset.c:98
	;;
.BB29_14:                               ; %bb16
#0:	       s2add	r15, 1 -> r15
#1:	       ret
	;;
	       nop	3
	;;
	.align	4
_memset_end:

	.align	4
___swbuf_r:                             ; @__swbuf_r
	.size	___swbuf_r_end-___swbuf_r
___swbuf_r_start:
; BB#0:                                 ; %bb
#1:	       wb.s	r15, 8
#2:	       ldiu	32 -> r2
#0:	       ldx	$ro, 0 -> r0.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#3:	       ldx	$rb, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#3:	       stm.s	r3.31, r15, 1
	;;
#0:	       stm.s	r0.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 7
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 6
#1:	       or	r0, 0 -> r11
	;;
#0:	       stm.s	r12, r14, 5
	;;
#0:	       stm.s	r13, r14, 4
	;;
#0:	       ldmg.d	_impure_data+56 ; wbuf.c:45
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:45
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:45
	;;
#0:	if  c1 br	.BB30_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       ldga	_impure_data -> r0 ; wbuf.c:45
#1:	       callg	___sinit        ; wbuf.c:45
	;;                              ; wbuf.c:45
	       nop	3               ; wbuf.c:45
	;;
.BB30_2:                                ; %bb2
#0:	       ldm.f	r10, 12         ; wbuf.c:56
#1:	       add	r10, 12 -> r12  ; wbuf.c:56
	;;
#0:	       ldx	$memhu, r12 -> r1 ; wbuf.c:56
#1:	       ldm.f	r10, 24         ; wbuf.c:55
	;;
#0:	       btest	r1, 3 -> c1     ; wbuf.c:56
	;;
#0:	if !c1 br	.BB30_4
#1:	       ldx	$mem, 0 -> r0   ; wbuf.c:55
	;;
#0:	       stm.a	r0, r10, 2      ; wbuf.c:55
	;;
	       nop	1
	;;
; BB#3:                                 ; %bb3
#0:	       ldm.f	r10, 16         ; wbuf.c:56
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:56
	;;
#0:	       cmpeq	r0, 0 -> c1     ; wbuf.c:56
	;;
#0:	if !c1 br	.BB30_6
	;;
	       nop	2
	;;
.BB30_4:                                ; %bb4
#0:	       or	r10, 0 -> r0    ; wbuf.c:56
#1:	       callg	___swsetup_r    ; wbuf.c:56
	;;                              ; wbuf.c:56
	       nop	3               ; wbuf.c:56
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:56
#1:	       ldm.f	r10, 12
	;;
#0:	if !c1 br	.BB30_6
#1:	       ldx	$memhu, r12 -> r1
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5
#0:	       ldi	64 -> r11
#1:	       br	.BB30_17
#2:	       ldga	_impure_data -> r0 ; wbuf.c:59
	;;
#0:	       or	r1, r11 -> r1   ; wbuf.c:58
	;;
#0:	       stmh.a	r1, r10, 6      ; wbuf.c:58
	;;
#0:	       stm.a	9, r0, 0        ; wbuf.c:59
#1:	       ldi	-1 -> r0
	;;
.BB30_6:                                ; %bb6
#0:	       btest	r1, 13 -> c1    ; wbuf.c:64
	;;
#0:	if  c1 br	.BB30_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb7
#0:	       ldm.f	r10, 100        ; wbuf.c:64
#1:	       ldiu	2047 -> r0
#2:	       ldga	8192 -> r3
	;;
#0:	       ldim	2043 -> r0
#1:	       or	r1, r3 -> r1    ; wbuf.c:64
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:64
	;;
#0:	       and	r2, r0 -> r0    ; wbuf.c:64
	;;
#0:	       stm.a	r0, r10, 25     ; wbuf.c:64
	;;
#0:	       stmh.a	r1, r10, 6      ; wbuf.c:64
	;;
.BB30_8:                                ; %bb8
#0:	       ldm.f	r10, 0          ; wbuf.c:76
#1:	       mask	r11, 0 -> r13
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:76
#1:	       ldm.f	r10, 16         ; wbuf.c:76
	;;
#0:	       ldx	$mem, 0 -> r1   ; wbuf.c:76
#1:	       ldm.f	r10, 20         ; wbuf.c:77
	;;
#0:	       sub	r0, r1 -> r1    ; wbuf.c:76
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:77
	;;
#0:	       cmple	r2, r1 -> c1    ; wbuf.c:77
	;;
#0:	if  c1 br	.BB30_10        ; wbuf.c:77
	;;                              ; wbuf.c:77
	       nop	2               ; wbuf.c:77
	;;
; BB#9:                                 ; %bb8.bb12_crit_edge
#0:	       add	r1, 1 -> r1
#1:	       br	.BB30_12
	;;
	       nop	2
	;;
.BB30_10:                               ; %bb9
#0:	       ldga	_impure_data -> r0 ; wbuf.c:79
#1:	       callg	__fflush_r      ; wbuf.c:79
#2:	       or	r10, 0 -> r1    ; wbuf.c:79
	;;                              ; wbuf.c:79
	       nop	3               ; wbuf.c:79
	;;
#0:	       cmpne	r0, 0 -> c1     ; wbuf.c:79
	;;
#0:	if  c1 br	.BB30_19        ; wbuf.c:79
	;;                              ; wbuf.c:79
	       nop	2               ; wbuf.c:79
	;;
; BB#11:                                ; %bb9.bb12_crit_edge
#0:	       ldm.f	r10, 0
#1:	       ldi	1 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
.BB30_12:                               ; %bb12
#0:	       ldm.f	r10, 8          ; wbuf.c:83
#1:	       add	r0, 1 -> r3     ; wbuf.c:84
	;;
#0:	       ldx	$mem, 0 -> r2   ; wbuf.c:83
	;;
#0:	       sub	r2, 1 -> r2
	;;
#0:	       stm.a	r2, r10, 2      ; wbuf.c:83
	;;
#0:	       stmb.a	r11, r0, 0      ; wbuf.c:84
	;;
#0:	       ldm.f	r10, 20         ; wbuf.c:85
	;;
#0:	       ldx	$mem, 0 -> r0   ; wbuf.c:85
#1:	       stm.a	r3, r10, 0      ; wbuf.c:84
	;;
#0:	       cmpeq	r1, r0 -> c1    ; wbuf.c:85
	;;
#0:	if  c1 br	.BB30_15
	;;
	       nop	2
	;;
; BB#13:                                ; %bb13
#0:	       ldm.f	r10, 12         ; wbuf.c:85
	;;
#0:	       ldx	$membu, r12 -> r0 ; wbuf.c:85
	;;
#0:	       btest	r0, 0 -> c1     ; wbuf.c:85
	;;
#0:	if !c1 br	.BB30_16
	;;
	       nop	2
	;;
; BB#14:                                ; %bb13
#0:	       cmpne	r13, 10 -> c1
	;;
#0:	if  c1 br	.BB30_16
	;;
	       nop	2
	;;
.BB30_15:                               ; %bb18
#0:	       ldga	_impure_data -> r0 ; wbuf.c:86
#1:	       callg	__fflush_r      ; wbuf.c:86
#2:	       or	r10, 0 -> r1    ; wbuf.c:86
	;;                              ; wbuf.c:86
	       nop	3               ; wbuf.c:86
	;;
#0:	       br	.BB30_20
#1:	       cmpeq	r0, 0 -> c1     ; wbuf.c:86
#2:	       ldi	-1 -> r0
	;;
#0:	if  c1 or	r13, 0 -> r0
	;;
	       nop	1
	;;
.BB30_16:                               ; %bb20
#0:	       or	r13, 0 -> r0    ; wbuf.c:88
	;;
.BB30_17:                               ; %bb20
#0:	       ldm.s	r14, 16         ; wbuf.c:88
#1:	       or	r14, 0 -> r15   ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r13  ; wbuf.c:88
#1:	       ldm.s	r14, 20         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r12  ; wbuf.c:88
#1:	       ldm.s	r14, 24         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r11  ; wbuf.c:88
#1:	       ldm.s	r14, 28         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r10  ; wbuf.c:88
#1:	       ldm.s	r15, 8          ; wbuf.c:88
	;;
#1:	       ldx	$mem, 0 -> r1.31 ; wbuf.c:88
#0:	       ldm.s	r15, 4          ; wbuf.c:88
	;;
#1:	       stx	r1.31 -> $ro    ; wbuf.c:88
	;;
#2:	       ldx	$mem, 0 -> r2.31 ; wbuf.c:88
	;;
#2:	       stx	r2.31 -> $rb    ; wbuf.c:88
	;;
.BB30_18:                               ; %bb20
#0:	       ldm.s	r15, 0          ; wbuf.c:88
#1:	       s2add	r15, 8 -> r15   ; wbuf.c:88
	;;
#0:	       ret                      ; wbuf.c:88
#1:	       ldx	$mem, 0 -> r14  ; wbuf.c:88
	;;                              ; wbuf.c:88
	       nop	3               ; wbuf.c:88
	;;
.BB30_19:                               ; %bb21
#0:	       ldi	-1 -> r0
	;;
.BB30_20:                               ; %bb21
#0:	       ldm.s	r14, 16         ; wbuf.c:88
#1:	       or	r14, 0 -> r15   ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r13  ; wbuf.c:88
#1:	       ldm.s	r14, 20         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r12  ; wbuf.c:88
#1:	       ldm.s	r14, 24         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r11  ; wbuf.c:88
#1:	       ldm.s	r14, 28         ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r10  ; wbuf.c:88
#1:	       ldm.s	r15, 8          ; wbuf.c:88
	;;
#0:	       br	.BB30_18
#3:	       ldx	$mem, 0 -> r3.31 ; wbuf.c:88
#1:	       ldm.s	r15, 4          ; wbuf.c:88
	;;
#3:	       stx	r3.31 -> $ro    ; wbuf.c:88
	;;
#0:	       ldx	$mem, 0 -> r0.31 ; wbuf.c:88
	;;
#0:	       stx	r0.31 -> $rb    ; wbuf.c:88
	;;
	.align	4
___swbuf_r_end:

	.globl	___ashldi3
	.align	4
___ashldi3:                             ; @__ashldi3
	.size	___ashldi3_end-___ashldi3
___ashldi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r4
#2:	       wb.s	r15, 1
#3:	       or	r0, 0 -> r3
	;;
#0:	if  c1 br	.BB31_2
#1:	       sub	r15, r4 -> r15
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       ret
#1:	if  c1 or	r3, 0 -> r0
#2:	if !c1 sl	r1, r2 -> r1
	;;
#0:	if !c1 ldi	32 -> r0
	;;
#0:	if !c1 sub	r0, r2 -> r4
#1:	if !c1 sl	r3, r2 -> r0
	;;
#0:	if !c1 sr	r3, r4 -> r3
	;;
#0:	if !c1 or	r1, r3 -> r1
	;;
.BB31_2:                                ; %bb
#0:	       ldi	-32 -> r1
#1:	       ret
#2:	       ldi	0 -> r0
#3:	       s2add	r15, 1 -> r15
	;;
#0:	       add	r2, r1 -> r1
	;;
#0:	       sl	r3, r1 -> r1
	;;
	       nop	1
	;;
	.align	4
___ashldi3_end:

	.globl	___ashrdi3
	.align	4
___ashrdi3:                             ; @__ashrdi3
	.size	___ashrdi3_end-___ashrdi3
___ashrdi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r3
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 ret
#1:	if  c1 ldi	-32 -> r0
#2:	       sub	r15, r3 -> r15
	;;
#0:	if  c1 add	r2, r0 -> r0
#1:	if  c1 s2add	r15, 1 -> r15
	;;
#0:	if  c1 sra	r1, r0 -> r0
#1:	if  c1 sra	r1, 31 -> r1
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	if !c1 ldi	32 -> r3
#1:	if !c1 sr	r0, r2 -> r0
	;;
#0:	if !c1 sub	r3, r2 -> r3
	;;
#0:	if !c1 sl	r1, r3 -> r3
#1:	if !c1 sra	r1, r2 -> r1
	;;
#0:	if !c1 or	r3, r0 -> r0
	;;
.BB32_2:                                ; %bb
	.align	4
___ashrdi3_end:

	.globl	___divdf3
	.align	4
___divdf3:                              ; @__divdf3
	.size	___divdf3_end-___divdf3
___divdf3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 44
#2:	       ldiu	176 -> r5
#1:	       ldx	$rb, 0 -> r1.31
#3:	       stx	r0 -> $f0
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$ro, 0 -> r2.31
#1:	       ldiu	128 -> r5
#3:	       fop	fmov	f0 -> f4
	;;
#0:	       fop	fmov	f4 -> f0
#1:	       ldga	0 -> r1.16
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       stx	r2 -> $f2
	;;
#1:	       stm.s	r1.31, r15, 1
#0:	       add	r14, r5 -> r5
#2:	       ldx	$f0 -> r0
	;;
#2:	       stm.s	r2.31, r15, 2
#0:	       stx	r1 -> $f1
#1:	       ldih	1024 -> r1.16
	;;
#0:	       stm.s	r10, r5, 11
#1:	       fop	fmov	f2 -> f6
	;;
#0:	       stm.s	r11, r5, 10
#1:	       fop	fmov	f1 -> f5
	;;
#0:	       stm.s	r12, r5, 9
#1:	       fop	fmov	f6 -> f1
	;;
#0:	       stm.s	r13, r5, 8
#1:	       stx	r3 -> $f3
	;;
#0:	       stm.s	r0.23, r5, 7
#1:	       fop	fmov	f3 -> f7
	;;
#1:	       stm.s	r1.23, r5, 6
	;;
#2:	       stm.s	r2.23, r5, 5
	;;
#3:	       stm.s	r3.23, r5, 4
	;;
#1:	       stm.s	r1.24, r5, 3
	;;
#1:	       stm.s	r1.25, r5, 2
	;;
#1:	       stm.s	r1.26, r5, 1
#0:	       s2add	r14, 24 -> r5
	;;
#0:	       add	r5, 28 -> r4
#1:	       add	r5, 20 -> r1
#2:	       ldiu	2047 -> r5
	;;
#0:	       stm.a	r0, r4, 0
#1:	       ldx	$f1 -> r0
	;;
#0:	       stm.a	r0, r1, 0
#1:	       ldx	$f5 -> r0
	;;
#0:	       stm.a	r0, r4, 1
#1:	       ldx	$f7 -> r0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       ldm.f	r4, 4
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stm.s	r2, r14, 9
	;;
#0:	       ldm.f	r1, 4
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stm.s	r3, r14, 8
#1:	       sr	r3, 20 -> r6
#2:	       xor	r3, r2 -> r7
	;;
#0:	       ldm.f	r4, 0
#1:	       ldiu	2047 -> r4
	;;
#0:	       ldim	511 -> r4
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r1, 0
#2:	       sr	r2, 20 -> r1
#3:	       and	r3, r4 -> r11
	;;
#0:	       and	r1, r5 -> r8
#1:	       and	r6, r5 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       stm.s	r8, r14, 5
#2:	       sub	r8, 1 -> r3
	;;
#0:	       stm.s	r1, r14, 6
#1:	       and	r7, r1.16 -> r1
	;;
#0:	       stm.s	r1, r14, 10
#1:	       and	r2, r4 -> r1
#2:	       ldiu	2045 -> r2
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if !c1 ldm.s	r14, 24
	;;
#0:	if !c1 ldx	$mem, 0 -> r3
	;;
#0:	if !c1 sub	r3, 1 -> r3
	;;
#0:	if !c1 cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB33_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.bb21_crit_edge
#0:	       ldi	0 -> r5
#1:	       br	.BB33_32
	;;
#0:	       stm.s	r5, r14, 9
	;;
	       nop	1
	;;
.BB33_2:                                ; %bb1
#0:	       ldm.s	r14, 36
#1:	       ldim	1023 -> r5
#2:	       ldga	1048576 -> r3
#3:	       cmpeq	r0, 0 -> c2
	;;
#0:	       ldih	1023 -> r5
#1:	       ldih	1023 -> r3
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       cmpeq	r2, r3 -> c1
#1:	       cmpult	r2, r3 -> c3
	;;
#0:	if  c1 comb	and c2, c2 -> c3
	;;
#0:	if  c3 br	.BB33_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldm.s	r14, 36
#1:	       s2add	r14, 24 -> r1
#2:	       ldga	524288 -> r2
	;;
#0:	       add	r1, 12 -> r3
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       stm.a	r0, r3, 0
	;;
#0:	       or	r5, r2 -> r2
	;;
#0:	       stm.a	r2, r3, 1
	;;
#0:	       ldm.f	r3, 0
	;;
#0:	       br	.BB33_12
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r3, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stx	r3 -> $f2
	;;
.BB33_4:                                ; %bb3
#0:	       ldm.s	r14, 32
#1:	       cmpeq	r10, 0 -> c2
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       and	r4, r5 -> r12
	;;
#0:	       cmpeq	r12, r3 -> c1
#1:	       cmpult	r12, r3 -> c3
	;;
#0:	if  c1 comb	and c2, c2 -> c3
	;;
#0:	if  c3 br	.BB33_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       s2add	r14, 24 -> r0
#1:	       ldga	524288 -> r2
#2:	       or	r4, 0 -> r12
	;;
#0:	       add	r0, 4 -> r11
#1:	       or	r12, r2 -> r2
	;;
#0:	       stm.a	r10, r11, 0
	;;
#0:	       stm.a	r2, r11, 1
	;;
#0:	       ldm.f	r11, 0
	;;
#0:	       br	.BB33_38
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r11, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stx	r10 -> $f2
	;;
.BB33_6:                                ; %bb5
#0:	       ldga	1048576 -> r3
	;;
#0:	       ldih	1023 -> r3
	;;
#0:	       xor	r2, r3 -> r4
	;;
#0:	       or	r0, r4 -> r4
	;;
#0:	       cmpne	r4, 0 -> c1
	;;
#0:	if  c1 br	.BB33_10
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb6
#0:	       xor	r12, r3 -> r3
	;;
#0:	       or	r10, r3 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB33_9
	;;
	       nop	2
	;;
.BB33_8:                                ; %bb7
#0:	       ldiu	0 -> r2
#1:	       ldiu	0 -> r3
	;;
#0:	       br	.BB33_13
#1:	       ldim	0 -> r3
#2:	       ldim	768 -> r2
	;;
#0:	       ldih	0 -> r3
#1:	       ldih	1023 -> r2
	;;
#0:	       stx	r3 -> $f0
	;;
#0:	       stx	r2 -> $f2
	;;
.BB33_9:                                ; %bb8
#0:	       ldi	0 -> r10
#1:	       ldm.s	r14, 40
#2:	       s2add	r14, 16 -> r1
	;;
#0:	       add	r1, 28 -> r3
#1:	       or	r10, r0 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       stm.a	r10, r3, 0
	;;
#0:	       or	r11, r2 -> r2
	;;
#0:	       stm.a	r2, r3, 1
	;;
#0:	       ldm.f	r3, 0
	;;
#0:	       br	.BB33_38
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r3, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       stx	r3 -> $f2
	;;
.BB33_10:                               ; %bb9
#0:	       xor	r12, r3 -> r3
	;;
#0:	       or	r10, r3 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB33_15
	;;
	       nop	2
	;;
; BB#11:                                ; %bb10
#0:	       s2add	r14, 16 -> r0
#1:	       ldi	0 -> r10
	;;
#0:	       add	r0, 20 -> r2
	;;
#0:	       stm.a	r10, r2, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.f	r2, 4
	;;
#0:	       stx	r10 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stx	r2 -> $f2
	;;
.BB33_12:                               ; %bb10
.BB33_13:                               ; %bb10
#0:	       ldm.s	r14, 132
#1:	       or	r14, 0 -> r15
#2:	       fop	fmov	f2 -> f1
	;;
#1:	       ldx	$mem, 0 -> r1.26
#0:	       ldm.s	r14, 136
	;;
#1:	       ldx	$mem, 0 -> r1.25
#0:	       ldm.s	r14, 140
	;;
#1:	       ldx	$mem, 0 -> r1.24
#0:	       ldm.s	r14, 144
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 148
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 152
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 156
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 160
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 164
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 168
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 172
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 4
	;;
#3:	       stx	r3.31 -> $ro
	;;
#0:	       ldx	$mem, 0 -> r0.31
	;;
#0:	       stx	r0.31 -> $rb
	;;
.BB33_14:                               ; %bb10
#0:	       ldm.s	r15, 0
#1:	       ldiu	176 -> r0
	;;
#0:	       add	r15, r0 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB33_15:                               ; %bb11
#0:	       or	r0, r2 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB33_18
	;;
	       nop	2
	;;
; BB#16:                                ; %bb12
#0:	       or	r10, r12 -> r2
	;;
#0:	       cmpeq	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB33_8
	;;
	       nop	2
	;;
; BB#17:                                ; %bb14
#0:	       s2add	r14, 16 -> r0
#1:	       ldi	0 -> r10
	;;
#0:	       add	r0, 12 -> r2
	;;
#0:	       stm.a	r10, r2, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       br	.BB33_38
#1:	       ldx	$mem, 0 -> r10
#2:	       ldm.f	r2, 4
	;;
#0:	       stx	r10 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       stx	r2 -> $f2
	;;
.BB33_18:                               ; %bb15
#0:	       or	r10, r12 -> r3
	;;
#0:	       cmpne	r3, 0 -> c1
	;;
#0:	if  c1 br	.BB33_20
	;;
	       nop	2
	;;
; BB#19:                                ; %bb16
#0:	       ldm.s	r14, 40
#1:	       ldga	1048576 -> r2
#2:	       s2add	r14, 16 -> r0
	;;
#0:	       ldih	1023 -> r2
#1:	       add	r0, 4 -> r10
	;;
#0:	       ldx	$mem, 0 -> r11
	;;
#0:	       or	r11, r2 -> r2
#1:	       ldi	0 -> r11
	;;
#0:	       stm.a	r11, r10, 0
	;;
#0:	       stm.a	r2, r10, 1
	;;
#0:	       ldm.f	r10, 0
	;;
#0:	       br	.BB33_12
#1:	       ldx	$mem, 0 -> r2
#2:	       ldm.f	r10, 4
	;;
#0:	       stx	r2 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stx	r10 -> $f2
	;;
.BB33_20:                               ; %bb17
#0:	       ldiu	0 -> r3
	;;
#0:	       ldim	512 -> r3
	;;
#0:	       cmpult	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB33_22
	;;
	       nop	2
	;;
; BB#21:                                ; %bb17.bb19_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB33_26
	;;
#0:	       stm.s	r2, r14, 9
	;;
	       nop	1
	;;
.BB33_22:                               ; %bb18
#0:	       cmpeq	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB33_24
	;;
	       nop	2
	;;
; BB#23:                                ; %bb.i.i31
#0:	       sr	r1, 1 -> r3
#1:	       ldiu	1365 -> r2
#2:	       ldiu	819 -> r5
	;;
#0:	       or	r1, r3 -> r3
#1:	       ldim	682 -> r2
#2:	       ldim	614 -> r5
	;;
#0:	       sr	r3, 2 -> r4
#1:	       ldih	682 -> r2
#2:	       ldih	409 -> r5
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 4 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 8 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       sr	r3, 16 -> r4
	;;
#0:	       or	r3, r4 -> r3
	;;
#0:	       xor	r3, -1 -> r3
	;;
#0:	       sr	r3, 1 -> r4
#1:	       and	r3, r2 -> r3
	;;
#0:	       and	r4, r2 -> r2
#1:	       ldiu	1807 -> r4
	;;
#0:	       add	r3, r2 -> r2
#1:	       ldim	481 -> r4
	;;
#0:	       sr	r2, 2 -> r3
#1:	       and	r2, r5 -> r2
#2:	       ldih	120 -> r4
	;;
#0:	       and	r3, r5 -> r3
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r2, r3 -> r2
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r2, 4 -> r3
#1:	       and	r2, r4 -> r2
#2:	       ldih	7 -> r5
	;;
#0:	       and	r3, r4 -> r3
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       sr	r2, 8 -> r3
#1:	       and	r2, r5 -> r2
	;;
#0:	       br	.BB33_25
#1:	       and	r3, r5 -> r3
	;;
#0:	       add	r2, r3 -> r2
	;;
#0:	       mask	r2, 4 -> r3
#1:	       sr	r2, 16 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
.BB33_24:                               ; %bb1.i.i32
#0:	       sr	r0, 1 -> r3
#1:	       ldiu	819 -> r5
	;;
#0:	       or	r0, r3 -> r3
#1:	       ldim	614 -> r5
	;;
#0:	       sr	r3, 2 -> r2
#1:	       ldih	409 -> r5
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 4 -> r2
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 8 -> r2
	;;
#0:	       or	r3, r2 -> r3
	;;
#0:	       sr	r3, 16 -> r2
	;;
#0:	       or	r3, r2 -> r3
#1:	       ldiu	1365 -> r2
	;;
#0:	       ldim	682 -> r2
#1:	       xor	r3, -1 -> r3
	;;
#0:	       ldih	682 -> r2
#1:	       sr	r3, 1 -> r4
	;;
#0:	       and	r3, r2 -> r3
#1:	       and	r4, r2 -> r2
#2:	       ldiu	1807 -> r4
	;;
#0:	       add	r3, r2 -> r3
#1:	       ldim	481 -> r4
	;;
#0:	       sr	r3, 2 -> r2
#1:	       and	r3, r5 -> r3
#2:	       ldih	120 -> r4
	;;
#0:	       and	r2, r5 -> r2
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r3, r2 -> r3
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r3, 4 -> r2
#1:	       and	r3, r4 -> r3
#2:	       ldih	7 -> r5
	;;
#0:	       and	r2, r4 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       sr	r3, 8 -> r2
#1:	       and	r3, r5 -> r3
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       add	r3, r2 -> r3
	;;
#0:	       mask	r3, 4 -> r2
#1:	       sr	r3, 16 -> r3
	;;
#0:	       add	r2, r3 -> r3
	;;
#0:	       s2add	r3, 8 -> r3
	;;
.BB33_25:                               ; %normalize.exit34
#0:	       ldi	12 -> r4
#1:	       callg	___ashldi3
#2:	       sub	r3, 11 -> r2
	;;
#0:	       sub	r4, r3 -> r3
	;;
#0:	       stm.s	r3, r14, 9
	;;
	       nop	1
	;;
.BB33_26:                               ; %bb19
#0:	       or	r0, 0 -> r13
#2:	       ldiu	0 -> r0
#1:	       or	r1, 0 -> r1.23
	;;
#0:	       ldim	512 -> r0
	;;
#0:	       cmpult	r12, r0 -> c1
	;;
#0:	if !c1 br	.BB33_31
	;;
	       nop	2
	;;
; BB#27:                                ; %bb20
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB33_29
	;;
	       nop	2
	;;
; BB#28:                                ; %bb.i.i
#0:	       sr	r11, 1 -> r1
#1:	       ldiu	1365 -> r0
#2:	       ldiu	819 -> r3
	;;
#0:	       or	r11, r1 -> r1
#1:	       ldim	682 -> r0
#2:	       ldim	614 -> r3
	;;
#0:	       sr	r1, 2 -> r2
#1:	       ldih	682 -> r0
#2:	       ldih	409 -> r3
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 4 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 8 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       sr	r1, 16 -> r2
	;;
#0:	       or	r1, r2 -> r1
	;;
#0:	       xor	r1, -1 -> r1
	;;
#0:	       sr	r1, 1 -> r2
#1:	       and	r1, r0 -> r1
	;;
#0:	       and	r2, r0 -> r0
#1:	       ldiu	1807 -> r2
	;;
#0:	       add	r1, r0 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r3 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r3 -> r1
#1:	       ldiu	255 -> r3
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r3
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r3
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r3 -> r0
	;;
#0:	       br	.BB33_30
#1:	       and	r1, r3 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
.BB33_29:                               ; %bb1.i.i
#0:	       sr	r10, 1 -> r0
#1:	       ldiu	819 -> r3
	;;
#0:	       or	r10, r0 -> r0
#1:	       ldim	614 -> r3
	;;
#0:	       sr	r0, 2 -> r1
#1:	       ldih	409 -> r3
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 4 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 16 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r0, -1 -> r0
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r0, 1 -> r2
	;;
#0:	       and	r0, r1 -> r0
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r3 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r3 -> r1
#1:	       ldiu	255 -> r3
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r3
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r3
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r3 -> r0
	;;
#0:	       and	r1, r3 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       s2add	r0, 8 -> r0
	;;
.BB33_30:                               ; %normalize.exit
#0:	       ldm.s	r14, 36
#1:	       sub	r0, 11 -> r2
	;;
#0:	       callg	___ashldi3
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r1, r0 -> r1
	;;
#0:	       sub	r1, 12 -> r0
#1:	       or	r11, 0 -> r1
	;;
#0:	       stm.s	r0, r14, 9
#1:	       or	r10, 0 -> r0
	;;
	       nop	0
	;;
#0:	       or	r0, 0 -> r10
#1:	       or	r1, 0 -> r11
	;;
.BB33_31:                               ; %normalize.exit
#0:	       or	r13, 0 -> r0
#1:	       or	r1.23, 0 -> r1
	;;
.BB33_32:                               ; %bb21
#0:	       stm.s	r0, r14, 8
#1:	       ldiu	0 -> r0
#2:	       sr	r10, 21 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       ldim	512 -> r0
#1:	       stm.s	r1, r14, 4
#2:	       ldiu	819 -> r1
	;;
#0:	       callg	___muldi3
#1:	       or	r11, r0 -> r0
#2:	       ldim	158 -> r1
	;;
#0:	       stm.s	r0, r14, 7
#1:	       sl	r0, 11 -> r0
#2:	       ldih	936 -> r1
	;;
#0:	       or	r2, r0 -> r11
	;;
#0:	       sub	r1, r11 -> r12
#1:	       ldi	0 -> r1
#2:	       or	r11, 0 -> r2
	;;
#0:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldi	0 -> r13
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
	;;
	       nop	2
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r12
#2:	       ldi	0 -> r1
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r12
#2:	       ldi	0 -> r1
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	2
	;;
#0:	       sub	r13, r1 -> r0
#1:	       ldi	0 -> r1
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r11, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r0
#2:	       ldi	0 -> r1
	;;
#0:	       sub	r0, 1 -> r12
	;;
#0:	       or	r12, 0 -> r0
	;;
	       nop	1
	;;
#1:	       or	r0, 0 -> r11
#0:	       or	r1, 0 -> r0.23
#2:	       sl	r10, 11 -> r2
#3:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldi	0 -> r1
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       carr	r11, r1 -> r0
#1:	       add	r11, r1 -> r11
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#1:	       callg	___muldi3
#0:	       add	r0.23, r0 -> r0
#2:	       borr	r13, r11 -> r1
	;;
#0:	       sub	r13, r0 -> r0
	;;
#0:	       sub	r0, r1 -> r0
#1:	       ldi	0 -> r1
	;;
	       nop	1
	;;
#1:	       or	r0, 0 -> r1.23
#2:	       or	r1, 0 -> r2.23
#0:	       sub	r13, r11 -> r0
#3:	       ldi	0 -> r1
	;;
#0:	       callg	___muldi3
#1:	       or	r12, 0 -> r2
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 32
#1:	       carr	r1.23, r1 -> r0
	;;
#1:	       add	r1.23, r1 -> r11
#0:	       ldi	-2 -> r1
#2:	       add	r2.23, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldm.s	r14, 16
#2:	       carr	r11, r1 -> r1
	;;
#0:	       sr	r2, 30 -> r3
#1:	       add	r0, r1 -> r0
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       sub	r0, 1 -> r13
	;;
#0:	       callg	___muldi3
#1:	       sl	r4, 2 -> r4
#2:	       or	r13, 0 -> r0
	;;
#0:	       or	r3, r4 -> r1
#1:	       ldga	0 -> r3
	;;
#0:	       ldih	2 -> r3
	;;
#0:	       or	r1, r3 -> r12
#1:	       ldi	0 -> r1
#2:	       ldi	0 -> r3
	;;
#0:	       or	r12, 0 -> r2
	;;
#0:	       sub	r11, 2 -> r11
#1:	       or	r0, 0 -> r1.23
#2:	       or	r12, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r1, 0 -> r1.24
#2:	       or	r11, 0 -> r0
#3:	       ldi	0 -> r1
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 32
#2:	       or	r0, 0 -> r12
#1:	       or	r1, 0 -> r1.25
#3:	       or	r13, 0 -> r0
	;;
#0:	       ldi	0 -> r1
#1:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r2
	;;
#1:	       sl	r2, 2 -> r1.26
	;;
#1:	       or	r1.26, 0 -> r2
	;;
	       nop	1
	;;
#0:	       or	r0, 0 -> r13
#2:	       or	r1, 0 -> r2.23
#1:	       or	r11, 0 -> r0
#3:	       ldi	0 -> r1
	;;
#0:	       callg	___muldi3
#3:	       ldi	-4 -> r3.23
#1:	       or	r1.26, 0 -> r2
#2:	       ldi	0 -> r3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 24
#2:	       add	r12, r1 -> r0
#1:	       add	r1.25, r1.23 -> r3
#3:	       carr	r12, r1 -> r1
	;;
#3:	       and	r13, r3.23 -> r2
#1:	       carr	r1.25, r1.23 -> r4
	;;
#0:	       ldx	$mem, 0 -> r5
#1:	       ldm.s	r14, 20
#2:	       carr	r0, r2 -> r0
	;;
#1:	       add	r1.24, r4 -> r2
#2:	       carr	r3, r2.23 -> r4
#0:	       add	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r1
#2:	       add	r3, r2.23 -> r3
#1:	       add	r2, r4 -> r2
#3:	       ldm.s	r14, 36
	;;
#0:	       sub	r1, r5 -> r1
#1:	       ldiu	2047 -> r5
#2:	       carr	r3, r0 -> r4
#3:	       add	r3, r0 -> r12
	;;
#0:	       add	r2, r4 -> r13
#1:	       ldim	1023 -> r5
#2:	       ldx	$mem, 0 -> r6
	;;
#0:	       cmpult	r5, r13 -> c1
#1:	       add	r6, r1 -> r11
	;;
#0:	if  c1 br	.BB33_34
	;;
	       nop	2
	;;
; BB#33:                                ; %bb22
#0:	       ldm.s	r14, 32
#1:	       or	r13, 0 -> r1
#2:	       or	r10, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 28
	;;
#0:	       sl	r0, 21 -> r0.23
#1:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#1:	       br	.BB33_35
#2:	       ldi	0 -> r2
#0:	       sub	r0.23, r1 -> r1
#3:	       sub	r11, 1 -> r11
	;;
#0:	       borr	r2, r0 -> r3
	;;
	       nop	1
	;;
.BB33_34:                               ; %bb23
#0:	       ldm.s	r14, 32
#1:	       sl	r13, 31 -> r1
#2:	       sr	r12, 1 -> r0
#3:	       sr	r13, 1 -> r13
	;;
#0:	       or	r0, r1 -> r12
#1:	       or	r13, 0 -> r1
#2:	       or	r10, 0 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 28
	;;
#2:	       sl	r0, 20 -> r2.23
#0:	       or	r12, 0 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r3
	;;
	       nop	3
	;;
#0:	       ldi	0 -> r2
#2:	       sub	r2.23, r1 -> r1
	;;
#0:	       borr	r2, r0 -> r3
	;;
.BB33_35:                               ; %bb23
#0:	       sub	r2, r0 -> r0
#1:	       ldi	1023 -> r2
#2:	       sub	r1, r3 -> r1
#3:	       ldiu	2047 -> r3
	;;
#0:	       add	r11, r2 -> r2
	;;
#0:	       cmplt	r2, r3 -> c1
	;;
#0:	if  c1 br	.BB33_39
	;;
	       nop	2
	;;
; BB#36:                                ; %bb25
#0:	       ldm.s	r14, 40
#1:	       ldga	1048576 -> r0
#2:	       s2add	r14, 8 -> r3
	;;
#0:	       ldih	1023 -> r0
#1:	       add	r3, 28 -> r1
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       or	r2, r0 -> r0
#1:	       ldi	0 -> r2
	;;
#0:	       stm.a	r2, r1, 0
	;;
#0:	       stm.a	r0, r1, 1
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r1, 4
	;;
.BB33_37:                               ; %bb25
#0:	       ldx	$mem, 0 -> r1
#1:	       stx	r0 -> $f0
	;;
#0:	       stx	r1 -> $f2
	;;
.BB33_38:                               ; %bb25
#0:	       ldm.s	r14, 132
#1:	       or	r14, 0 -> r15
#2:	       fop	fmov	f2 -> f1
	;;
#1:	       ldx	$mem, 0 -> r1.26
#0:	       ldm.s	r14, 136
	;;
#1:	       ldx	$mem, 0 -> r1.25
#0:	       ldm.s	r14, 140
	;;
#1:	       ldx	$mem, 0 -> r1.24
#0:	       ldm.s	r14, 144
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 148
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 152
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 156
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 160
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 164
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 168
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 172
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB33_14
#1:	       ldx	$mem, 0 -> r1.31
#2:	       ldm.s	r15, 4
	;;
#1:	       stx	r1.31 -> $ro
	;;
#2:	       ldx	$mem, 0 -> r2.31
	;;
#2:	       stx	r2.31 -> $rb
	;;
.BB33_39:                               ; %bb26
#0:	       ldi	0 -> r3
	;;
#0:	       cmplt	r3, r2 -> c1
	;;
#0:	if  c1 br	.BB33_41
	;;
	       nop	2
	;;
; BB#40:                                ; %bb27
#0:	       s2add	r14, 8 -> r2
#1:	       ldi	0 -> r1
	;;
#0:	       add	r2, 20 -> r0
	;;
#0:	       stm.a	r1, r0, 0
	;;
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r1
	;;
#0:	       stm.a	r1, r0, 1
	;;
#0:	       ldm.f	r0, 0
	;;
#0:	       br	.BB33_12
#1:	       ldx	$mem, 0 -> r1
#2:	       ldm.f	r0, 4
	;;
#0:	       stx	r1 -> $f0
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stx	r0 -> $f2
	;;
.BB33_41:                               ; %bb28
#0:	       ldm.s	r14, 28
#1:	       carr	r0, r0 -> r3
#2:	       add	r1, r1 -> r1
#3:	       add	r0, r0 -> r0
	;;
#0:	       add	r1, r3 -> r1
#1:	       ldiu	2047 -> r3
#2:	       cmpult	r10, r0 -> c2
	;;
#0:	       ldx	$mem, 0 -> r4
#1:	       ldim	511 -> r3
#2:	       ldm.s	r14, 40
	;;
#0:	       cmpeq	r1, r4 -> c1
#1:	       cmpult	r4, r1 -> c3
#2:	       sl	r2, 20 -> r1
#3:	       and	r13, r3 -> r2
	;;
#0:	if  c1 comb	and c2, c2 -> c3
#1:	       or	r1, r2 -> r1
#2:	       s2add	r14, 8 -> r4
#3:	       ldi	0 -> r3
	;;
#0:	       ldx	$c3 -> r0
	;;
#0:	       carr	r0, r12 -> r2
#1:	       add	r0, r12 -> r0
	;;
#0:	       add	r1, r2 -> r1
#1:	       or	r0, r3 -> r0
#2:	       add	r4, 12 -> r2
#3:	       ldx	$mem, 0 -> r3
	;;
#0:	       br	.BB33_37
#1:	       stm.a	r0, r2, 0
#2:	       or	r1, r3 -> r1
	;;
#0:	       stm.a	r1, r2, 1
	;;
#0:	       ldm.f	r2, 0
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.f	r2, 4
	;;
	.align	4
___divdf3_end:

	.globl	___divdi3
	.align	4
___divdi3:                              ; @__divdi3
	.size	___divdi3_end-___divdi3
___divdi3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 5
#1:	       ldiu	20 -> r9
#2:	       sra	r1, 31 -> r4
#3:	       sra	r3, 31 -> r5
	;;
#0:	       sub	r15, r9 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       xor	r4, r1 -> r6
#3:	       xor	r5, r3 -> r7
	;;
#3:	       ldx	$ro, 0 -> r3.31
#0:	       xor	r4, r0 -> r0
#1:	       xor	r5, r2 -> r2
#2:	       sub	r6, r4 -> r6
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       borr	r0, r4 -> r8
#3:	       borr	r2, r5 -> r9
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       sub	r7, r5 -> r7
#1:	       sub	r0, r4 -> r0
#3:	       sub	r2, r5 -> r2
	;;
#3:	       stm.s	r3.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 4
#1:	       ldiu	4 -> r10
	;;
#0:	       sub	r15, r10 -> r15
#1:	       xor	r3, r1 -> r10
#2:	       sub	r6, r8 -> r1
#3:	       sub	r7, r9 -> r3
	;;
#0:	       stm.a	0, r15, 0
	;;
#0:	       callg	___udivmoddi4
	;;
	       nop	3
	;;
#0:	       s2add	r15, 1 -> r15
#1:	       ldm.s	r14, 16
#2:	       sra	r10, 31 -> r2
	;;
#0:	       or	r14, 0 -> r15
#1:	       xor	r0, r2 -> r3
#2:	       xor	r1, r2 -> r1
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
#2:	       sub	r3, r2 -> r0
#3:	       sub	r1, r2 -> r1
	;;
#0:	       borr	r3, r2 -> r2
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
#2:	       sub	r1, r2 -> r1
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 5 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___divdi3_end:

	.globl	___divsf3
	.align	4
___divsf3:                              ; @__divsf3
	.size	___divsf3_end-___divsf3
___divsf3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 15
#1:	       ldiu	60 -> r7
#2:	       sr	r0, 23 -> r4
#3:	       sr	r1, 23 -> r5
	;;
#1:	       sub	r15, r7 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#0:	       ldga	0 -> r0.16
#3:	       mask	r4, 0 -> r4
	;;
#3:	       ldx	$ro, 0 -> r3.31
#1:	       xor	r1, r0 -> r6
#0:	       ldih	1024 -> r0.16
#2:	       mask	r5, 0 -> r5
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       ldiu	2047 -> r2
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       ldim	1023 -> r2
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       or	r2, 0 -> r3
	;;
#0:	       stm.s	r10, r14, 14
#1:	       ldih	3 -> r3
	;;
#0:	       stm.s	r11, r14, 13
#1:	       and	r0, r3 -> r10
#2:	       and	r1, r3 -> r3
	;;
#0:	       stm.s	r12, r14, 12
	;;
#0:	       stm.s	r13, r14, 11
	;;
#0:	       stm.s	r0.23, r14, 10
	;;
#1:	       stm.s	r1.23, r14, 9
	;;
#2:	       stm.s	r2.23, r14, 8
	;;
#3:	       stm.s	r3.23, r14, 7
	;;
#0:	       stm.s	r4, r14, 4
#1:	       sub	r4, 1 -> r4
	;;
#1:	       stm.s	r5, r14, 5
#0:	       and	r6, r0.16 -> r5
	;;
#0:	       stm.s	r5, r14, 6
#1:	       ldi	253 -> r5
	;;
#0:	       cmpult	r5, r4 -> c1
	;;
#0:	if !c1 ldm.s	r14, 20
	;;
#0:	if !c1 ldx	$mem, 0 -> r4
	;;
#0:	if !c1 sub	r4, 1 -> r4
	;;
#0:	if !c1 cmpult	r5, r4 -> c1
	;;
#0:	if  c1 br	.BB35_2
	;;
	       nop	2
	;;
; BB#1:                                 ; %bb.bb21_crit_edge
#0:	       ldi	0 -> r11
#1:	       br	.BB35_26
	;;
	       nop	2
	;;
.BB35_2:                                ; %bb1
#0:	       ldiu	1 -> r11
#1:	       ldih	1023 -> r2
	;;
#0:	       ldim	0 -> r11
#1:	       and	r0, r2 -> r4
	;;
#0:	       ldih	1020 -> r11
	;;
#0:	       cmpult	r4, r11 -> c1
	;;
#0:	if  c1 br	.BB35_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       ldga	0 -> r2
#1:	       br	.BB35_11
	;;
#0:	       ldih	2 -> r2
	;;
#0:	       or	r0, r2 -> r11
	;;
#0:	       stx	r11 -> $f0
	;;
.BB35_4:                                ; %bb3
#0:	       and	r1, r2 -> r0
	;;
#0:	       cmpult	r0, r11 -> c1
	;;
#0:	if  c1 br	.BB35_7
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb4
#0:	       ldga	0 -> r0
	;;
#0:	       ldih	2 -> r0
	;;
#0:	       or	r1, r0 -> r0
	;;
.BB35_6:                                ; %bb4
#0:	       ldm.s	r14, 28
#1:	       or	r14, 0 -> r15
#2:	       stx	r0 -> $f0
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 32
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 36
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 44
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 48
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       br	.BB35_12
#2:	       ldx	$mem, 0 -> r2.31
#1:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $rb
	;;
.BB35_7:                                ; %bb5
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	1020 -> r1
	;;
#0:	       cmpne	r4, r1 -> c1
	;;
#0:	if  c1 br	.BB35_14
	;;
	       nop	2
	;;
; BB#8:                                 ; %bb6
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB35_13
	;;
	       nop	2
	;;
.BB35_9:                                ; %bb7
#0:	       ldiu	0 -> r0
	;;
#0:	       ldim	0 -> r0
	;;
#0:	       ldih	1022 -> r0
	;;
.BB35_10:                               ; %bb7
#0:	       stx	r0 -> $f0
	;;
.BB35_11:                               ; %bb7
#0:	       ldm.s	r14, 28
#1:	       or	r14, 0 -> r15
	;;
#3:	       ldx	$mem, 0 -> r3.23
#0:	       ldm.s	r14, 32
	;;
#2:	       ldx	$mem, 0 -> r2.23
#0:	       ldm.s	r14, 36
	;;
#1:	       ldx	$mem, 0 -> r1.23
#0:	       ldm.s	r14, 40
	;;
#0:	       ldx	$mem, 0 -> r0.23
#1:	       ldm.s	r14, 44
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 48
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 52
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 56
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stx	r1.31 -> $rb
	;;
.BB35_12:                               ; %bb7
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 15 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB35_13:                               ; %bb8
#0:	       ldm.s	r14, 24
#1:	       br	.BB35_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       or	r0, r4 -> r0
	;;
	       nop	0
	;;
.BB35_14:                               ; %bb9
#0:	       cmpne	r0, r1 -> c1
	;;
#0:	if  c1 br	.BB35_16
	;;
	       nop	2
	;;
.BB35_15:                               ; %bb10
#0:	       ldm.s	r14, 24
#1:	       br	.BB35_10
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB35_16:                               ; %bb11
#0:	       cmpne	r4, 0 -> c1
	;;
#0:	if  c1 br	.BB35_19
	;;
	       nop	2
	;;
; BB#17:                                ; %bb12
#0:	       cmpeq	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB35_9
	;;
	       nop	2
	;;
; BB#18:                                ; %bb14
#0:	       ldm.s	r14, 24
#1:	       br	.BB35_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB35_19:                               ; %bb15
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB35_21
	;;
	       nop	2
	;;
; BB#20:                                ; %bb16
#0:	       ldm.s	r14, 24
#1:	       br	.BB35_10
#2:	       ldga	0 -> r0
	;;
#0:	       ldih	1020 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
	;;
#0:	       or	r3, r0 -> r0
	;;
.BB35_21:                               ; %bb17
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	4 -> r1
	;;
#0:	       cmpult	r4, r1 -> c1
	;;
#0:	if  c1 br	.BB35_23
	;;
	       nop	2
	;;
; BB#22:                                ; %bb17.bb19_crit_edge
#0:	       ldi	0 -> r11
#1:	       br	.BB35_24
	;;
	       nop	2
	;;
.BB35_23:                               ; %bb18
#0:	       sr	r10, 1 -> r11
#1:	       ldiu	819 -> r4
	;;
#0:	       or	r10, r11 -> r11
#1:	       ldim	614 -> r4
	;;
#0:	       sr	r11, 2 -> r1
#1:	       ldih	409 -> r4
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 4 -> r1
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 8 -> r1
	;;
#0:	       or	r11, r1 -> r11
	;;
#0:	       sr	r11, 16 -> r1
	;;
#0:	       or	r11, r1 -> r11
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r11, -1 -> r11
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r11, 1 -> r2
	;;
#0:	       and	r11, r1 -> r11
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r11, r1 -> r11
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r11, 2 -> r1
#1:	       and	r11, r4 -> r11
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r4 -> r1
#1:	       ldiu	255 -> r4
	;;
#0:	       add	r11, r1 -> r11
#1:	       ldim	992 -> r4
	;;
#0:	       sr	r11, 4 -> r1
#1:	       and	r11, r2 -> r11
#2:	       ldih	7 -> r4
	;;
#0:	       and	r1, r2 -> r1
#1:	       ldi	9 -> r2
	;;
#0:	       add	r11, r1 -> r11
	;;
#0:	       sr	r11, 8 -> r1
#1:	       and	r11, r4 -> r11
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       add	r11, r1 -> r11
	;;
#0:	       mask	r11, 4 -> r1
#1:	       sr	r11, 16 -> r11
	;;
#0:	       add	r1, r11 -> r11
	;;
#0:	       sub	r11, 8 -> r1
#1:	       sub	r2, r11 -> r11
	;;
#0:	       sl	r10, r1 -> r10
	;;
.BB35_24:                               ; %bb19
#0:	       ldga	0 -> r1
	;;
#0:	       ldih	4 -> r1
	;;
#0:	       cmpult	r0, r1 -> c1
	;;
#0:	if !c1 br	.BB35_26
	;;
	       nop	2
	;;
; BB#25:                                ; %bb20
#0:	       sr	r3, 1 -> r0
#1:	       ldiu	819 -> r4
	;;
#0:	       or	r3, r0 -> r0
#1:	       ldim	614 -> r4
	;;
#0:	       sr	r0, 2 -> r1
#1:	       ldih	409 -> r4
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 4 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
	;;
#0:	       or	r0, r1 -> r0
	;;
#0:	       sr	r0, 16 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldiu	1365 -> r1
	;;
#0:	       ldim	682 -> r1
#1:	       xor	r0, -1 -> r0
	;;
#0:	       ldih	682 -> r1
#1:	       sr	r0, 1 -> r2
	;;
#0:	       and	r0, r1 -> r0
#1:	       and	r2, r1 -> r1
#2:	       ldiu	1807 -> r2
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	481 -> r2
	;;
#0:	       sr	r0, 2 -> r1
#1:	       and	r0, r4 -> r0
#2:	       ldih	120 -> r2
	;;
#0:	       and	r1, r4 -> r1
#1:	       ldiu	255 -> r4
	;;
#0:	       add	r0, r1 -> r0
#1:	       ldim	992 -> r4
	;;
#0:	       sr	r0, 4 -> r1
#1:	       and	r0, r2 -> r0
#2:	       ldih	7 -> r4
	;;
#0:	       and	r1, r2 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       sr	r0, 8 -> r1
#1:	       and	r0, r4 -> r0
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       add	r0, r1 -> r0
	;;
#0:	       mask	r0, 4 -> r1
#1:	       sr	r0, 16 -> r0
	;;
#0:	       add	r1, r0 -> r0
	;;
#0:	       add	r11, r0 -> r11
#1:	       sub	r0, 8 -> r1
	;;
#0:	       sl	r3, r1 -> r3
#1:	       sub	r11, 9 -> r11
	;;
.BB35_26:                               ; %bb21
#0:	       ldga	0 -> r1
#1:	       ldiu	819 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldih	4 -> r1
#2:	       ldim	158 -> r0
	;;
#0:	       or	r3, r1 -> r12
#1:	       ldih	936 -> r0
#2:	       ldi	0 -> r1
#3:	       ldi	0 -> r3
	;;
#0:	       sl	r12, 8 -> r13
#2:	       ldi	0 -> r2.23
	;;
#3:	       sub	r0, r13 -> r3.23
#0:	       or	r13, 0 -> r2
	;;
#3:	       or	r3.23, 0 -> r0
	;;
#0:	       callg	___muldi3
#2:	       sub	r2.23, r1 -> r0
#1:	       ldi	0 -> r1
#3:	       ldi	0 -> r3
	;;
#3:	       or	r3.23, 0 -> r2
	;;
	       nop	2
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r13, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#1:	       callg	___muldi3
#0:	       or	r0, r1 -> r0.23
#2:	       ldi	0 -> r1
	;;
#0:	       or	r0.23, 0 -> r0
	;;
	       nop	2
	;;
#2:	       sub	r2.23, r1 -> r0
#1:	       ldi	0 -> r1
#0:	       or	r0.23, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       sr	r0, 31 -> r0
#1:	       sl	r1, 1 -> r1
#2:	       or	r13, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
#1:	       or	r0, r1 -> r1.23
#2:	       ldi	0 -> r1
	;;
#1:	       or	r1.23, 0 -> r0
	;;
	       nop	2
	;;
#2:	       sub	r2.23, r1 -> r0
#0:	       ldi	0 -> r1
#1:	       or	r1.23, 0 -> r2
#3:	       ldi	0 -> r3
	;;
#0:	       callg	___muldi3
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       ldga	0 -> r2
#2:	       sr	r0, 31 -> r0
#3:	       sl	r1, 1 -> r1
	;;
#0:	       or	r0, r1 -> r0
#1:	       sl	r10, 1 -> r1
#2:	       ldih	8 -> r2
#3:	       ldiu	2047 -> r13
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldm.s	r14, 16
#2:	       or	r1, r2 -> r2
#3:	       sub	r0, 2 -> r0
	;;
#0:	       callg	___muldi3
#1:	       ldx	$mem, 0 -> r1
	;;
#3:	       sub	r1, r3 -> r3.23
#0:	       ldi	0 -> r1
#1:	       ldi	0 -> r3
	;;
	       nop	2
	;;
#0:	       ldim	1023 -> r13
	;;
#0:	       ldih	7 -> r13
	;;
#0:	       cmpult	r13, r1 -> c1
	;;
#0:	if  c1 br	.BB35_28
#3:	       add	r11, r3.23 -> r0
	;;
	       nop	2
	;;
; BB#27:                                ; %bb22
#0:	       mul	r1, r12 -> $mul0
#1:	       br	.BB35_29
#2:	       sl	r10, 24 -> r10
#3:	       sub	r0, 1 -> r0
	;;
#0:	       ldx	$mul0, 0 -> r2
	;;
#0:	       sub	r10, r2 -> r10
	;;
	       nop	0
	;;
.BB35_28:                               ; %bb23
#0:	       sr	r1, 1 -> r1
#1:	       sl	r10, 23 -> r10
	;;
#1:	       mul	r1, r12 -> $mul1
	;;
#1:	       ldx	$mul1, 0 -> r2
	;;
#0:	       sub	r10, r2 -> r10
	;;
.BB35_29:                               ; %bb24
#0:	       ldi	127 -> r2
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldi	255 -> r2
	;;
#0:	       cmplt	r0, r2 -> c1
	;;
#0:	if  c1 br	.BB35_31
	;;
	       nop	2
	;;
; BB#30:                                ; %bb25
#0:	       ldm.s	r14, 24
#1:	       br	.BB35_6
#2:	       ldga	0 -> r0
	;;
#0:	       ldih	1020 -> r0
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       or	r10, r0 -> r0
	;;
.BB35_31:                               ; %bb26
#0:	       ldi	0 -> r2
	;;
#0:	       cmplt	r2, r0 -> c1
	;;
#0:	if !c1 br	.BB35_15
	;;
	       nop	2
	;;
; BB#32:                                ; %bb28
#0:	       ldiu	2047 -> r2
#1:	       sl	r10, 1 -> r3
#2:	       sl	r0, 23 -> r0
#3:	       ldm.s	r14, 24
	;;
#0:	       ldim	1023 -> r2
#1:	       cmpult	r12, r3 -> c1
	;;
#0:	       ldih	3 -> r2
	;;
#0:	       br	.BB35_6
#1:	       and	r1, r2 -> r1
#2:	       ldx	$c1 -> r2
	;;
#0:	       or	r0, r1 -> r0
#1:	       ldx	$mem, 0 -> r1
	;;
#0:	       add	r2, r0 -> r0
	;;
#0:	       or	r0, r1 -> r0
	;;
	.align	4
___divsf3_end:

	.globl	___divsi3
	.align	4
___divsi3:                              ; @__divsi3
	.size	___divsi3_end-___divsi3
___divsi3_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1
#1:	       xor	r1, r0 -> r2
#2:	       ldiu	4 -> r3
#3:	       wb.s	r15, 1
	;;
#0:	if  c1 br	.BB36_2
#1:	       sub	r15, r3 -> r15
#2:	       sra	r2, 31 -> r2
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB36_3
	;;
	       nop	2
	;;
.BB36_2:                                ; %entry.__udivsi3.exit_crit_edge
#0:	       ldi	0 -> r0
#1:	       br	.BB36_10
	;;
	       nop	2
	;;
.BB36_3:                                ; %bb3.i
#0:	       sra	r0, 31 -> r3
#1:	       sra	r1, 31 -> r4
#2:	       ldiu	819 -> r8
	;;
#0:	       xor	r3, r0 -> r0
#1:	       xor	r4, r1 -> r1
#2:	       ldim	614 -> r8
	;;
#0:	       sub	r0, r3 -> r0
#1:	       sub	r1, r4 -> r1
#2:	       ldih	409 -> r8
	;;
#0:	       sr	r1, 1 -> r3
#1:	       sr	r0, 1 -> r4
	;;
#0:	       or	r1, r3 -> r3
#1:	       or	r0, r4 -> r4
	;;
#0:	       sr	r3, 2 -> r5
#1:	       sr	r4, 2 -> r6
	;;
#0:	       or	r3, r5 -> r3
#1:	       or	r4, r6 -> r4
	;;
#0:	       sr	r3, 4 -> r5
#1:	       sr	r4, 4 -> r6
	;;
#0:	       or	r3, r5 -> r3
#1:	       or	r4, r6 -> r4
	;;
#0:	       sr	r3, 8 -> r5
#1:	       sr	r4, 8 -> r6
	;;
#0:	       or	r3, r5 -> r3
#1:	       or	r4, r6 -> r4
	;;
#0:	       sr	r3, 16 -> r5
#1:	       sr	r4, 16 -> r6
	;;
#0:	       or	r3, r5 -> r3
#1:	       or	r4, r6 -> r4
#2:	       ldiu	1365 -> r5
	;;
#0:	       ldim	682 -> r5
#1:	       xor	r3, -1 -> r3
#2:	       xor	r4, -1 -> r4
	;;
#0:	       ldih	682 -> r5
#1:	       sr	r3, 1 -> r6
#2:	       sr	r4, 1 -> r7
	;;
#0:	       and	r3, r5 -> r3
#1:	       and	r6, r5 -> r6
#2:	       and	r4, r5 -> r4
#3:	       and	r7, r5 -> r5
	;;
#0:	       add	r3, r6 -> r3
#1:	       add	r4, r5 -> r4
#2:	       ldiu	1807 -> r7
	;;
#0:	       sr	r3, 2 -> r5
#1:	       sr	r4, 2 -> r6
#2:	       and	r3, r8 -> r3
#3:	       and	r4, r8 -> r4
	;;
#0:	       and	r5, r8 -> r5
#1:	       and	r6, r8 -> r6
#2:	       ldim	481 -> r7
#3:	       ldiu	255 -> r8
	;;
#0:	       add	r3, r5 -> r3
#1:	       add	r4, r6 -> r4
#2:	       ldih	120 -> r7
#3:	       ldim	992 -> r8
	;;
#0:	       sr	r3, 4 -> r5
#1:	       sr	r4, 4 -> r6
#2:	       and	r3, r7 -> r3
#3:	       and	r4, r7 -> r4
	;;
#0:	       and	r5, r7 -> r5
#1:	       and	r6, r7 -> r6
#2:	       ldih	7 -> r8
	;;
#0:	       add	r3, r5 -> r3
#1:	       add	r4, r6 -> r4
	;;
#0:	       sr	r3, 8 -> r5
#1:	       sr	r4, 8 -> r6
#2:	       and	r3, r8 -> r3
#3:	       and	r4, r8 -> r4
	;;
#0:	       and	r5, r8 -> r5
#1:	       and	r6, r8 -> r6
	;;
#0:	       add	r3, r5 -> r3
#1:	       add	r4, r6 -> r4
	;;
#0:	       mask	r3, 4 -> r5
#1:	       sr	r3, 16 -> r3
#2:	       mask	r4, 4 -> r6
#3:	       sr	r4, 16 -> r4
	;;
#0:	       add	r6, r4 -> r4
#1:	       add	r5, r3 -> r3
#2:	       ldi	31 -> r6
	;;
#0:	       sub	r3, r4 -> r5
	;;
#0:	       cmpult	r6, r5 -> c1
	;;
#0:	if  c1 br	.BB36_2
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb5.i
#0:	       cmpne	r5, r6 -> c1
	;;
#0:	if !c1 br	.BB36_10
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb7.i
#0:	       ldi	31 -> r6
	;;
#0:	       sub	r6, r5 -> r6
#1:	       add	r5, 1 -> r5
	;;
#0:	       cmpne	r5, 0 -> c1
#1:	       sl	r0, r6 -> r6
	;;
#0:	if  c1 br	.BB36_7
	;;
	       nop	2
	;;
; BB#6:                                 ; %bb7.i.bb10.i_crit_edge
#0:	       ldi	0 -> r3
#1:	       br	.BB36_9
	;;
	       nop	2
	;;
.BB36_7:                                ; %bb.nph.i
#0:	       add	r3, 1 -> r3
#1:	       sub	r1, 1 -> r7
#2:	       sr	r0, r5 -> r0
	;;
#0:	       sub	r3, r4 -> r4
#1:	       ldi	0 -> r3
	;;
.BB36_8:                                ; %bb8.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sr	r6, 31 -> r5
#1:	       sl	r0, 1 -> r0
#2:	       sub	r4, 1 -> r4
#3:	       sl	r6, 1 -> r6
	;;
#0:	       or	r0, r5 -> r0
#1:	       cmpne	r4, 0 -> c1
#2:	       or	r3, r6 -> r6
	;;
#0:	if  c1 br	.BB36_8
#1:	       sub	r7, r0 -> r5
	;;
#0:	       sra	r5, 31 -> r5
	;;
#0:	       and	r5, r1 -> r8
#1:	       and	r5, 1 -> r3
	;;
#0:	       sub	r0, r8 -> r0
	;;
.BB36_9:                                ; %bb10.i
#0:	       sl	r6, 1 -> r0
	;;
#0:	       or	r3, r0 -> r0
	;;
.BB36_10:                               ; %__udivsi3.exit
#0:	       xor	r0, r2 -> r0
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	       sub	r0, r2 -> r0
	;;
	       nop	2
	;;
	.align	4
___divsi3_end:

	.globl	___lshrdi3
	.align	4
___lshrdi3:                             ; @__lshrdi3
	.size	___lshrdi3_end-___lshrdi3
___lshrdi3_start:
; BB#0:                                 ; %entry
#0:	       btest	r2, 5 -> c1
#1:	       ldiu	4 -> r3
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 ret
#1:	if  c1 ldi	-32 -> r0
#2:	       sub	r15, r3 -> r15
	;;
#0:	if  c1 add	r2, r0 -> r0
#1:	if  c1 s2add	r15, 1 -> r15
	;;
#0:	if  c1 sr	r1, r0 -> r0
#1:	if  c1 ldi	0 -> r1
	;;
	       nop	1
	;;
; BB#1:                                 ; %bb1
#0:	       cmpeq	r2, 0 -> c1
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	if !c1 ldi	32 -> r3
#1:	if !c1 sr	r0, r2 -> r0
	;;
#0:	if !c1 sub	r3, r2 -> r3
	;;
#0:	if !c1 sl	r1, r3 -> r3
#1:	if !c1 sr	r1, r2 -> r1
	;;
#0:	if !c1 or	r3, r0 -> r0
	;;
.BB37_2:                                ; %bb
	.align	4
___lshrdi3_end:

	.globl	___moddi3
	.align	4
___moddi3:                              ; @__moddi3
	.size	___moddi3_end-___moddi3
___moddi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 9
#3:	       ldiu	36 -> r8
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r8 -> r15
#1:	       sra	r3, 31 -> r4
#2:	       ldiu	4 -> r8
	;;
#0:	       xor	r4, r3 -> r3
#1:	       xor	r4, r2 -> r2
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
#2:	       borr	r2, r4 -> r7
#3:	       sub	r3, r4 -> r3
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       add	r14, 20 -> r5
#2:	       sub	r2, r4 -> r2
#3:	       sub	r3, r7 -> r3
	;;
#1:	       stm.s	r1.31, r15, 2
#0:	       sub	r15, r8 -> r15
	;;
#0:	       stm.s	r10, r14, 8
#1:	       sra	r1, 31 -> r10
	;;
#0:	       xor	r10, r1 -> r1
#1:	       xor	r10, r0 -> r0
#2:	       stm.a	r5, r15, 0
	;;
#0:	       callg	___udivmoddi4
#1:	       borr	r0, r10 -> r6
#2:	       sub	r1, r10 -> r1
#3:	       sub	r0, r10 -> r0
	;;
#0:	       sub	r1, r6 -> r1
	;;
	       nop	2
	;;
#0:	       ldm.s	r14, 24
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 20
	;;
#0:	       xor	r0, r10 -> r2
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r14, 32
#2:	       sub	r2, r10 -> r2
	;;
#0:	       xor	r1, r10 -> r1
	;;
#0:	       sub	r1, r10 -> r0
#1:	       borr	r1, r10 -> r1
#2:	       ldx	$mem, 0 -> r10
#3:	       ldm.s	r15, 8
	;;
#0:	       sub	r2, r1 -> r1
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 9 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___moddi3_end:

	.globl	___modsi3
	.align	4
___modsi3:                              ; @__modsi3
	.size	___modsi3_end-___modsi3
___modsi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 6
#3:	       ldiu	24 -> r2
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r2 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 5
#1:	       or	r1, 0 -> r10
	;;
#0:	       stm.s	r11, r14, 4
#1:	       or	r0, 0 -> r11
	;;
#0:	       callg	___divsi3
	;;
	       nop	3
	;;
#0:	       mul	r0, r10 -> $mul0
#1:	       ldm.s	r14, 16
#2:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mul0, 0 -> r0
	;;
#0:	       sub	r11, r0 -> r0
#1:	       ldx	$mem, 0 -> r11
#2:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 6 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___modsi3_end:

	.globl	___muldi3
	.align	4
___muldi3:                              ; @__muldi3
	.size	___muldi3_end-___muldi3
___muldi3_start:
; BB#0:                                 ; %entry
#1:	       wb.s	r15, 4
#2:	       ldiu	16 -> r9
#0:	       mul	r3, r0 -> $mul0
#3:	       sr	r0, 16 -> r6
	;;
#2:	       sub	r15, r9 -> r15
#0:	       ldx	$mul0, 0 -> r9
#3:	       sr	r2, 16 -> r8
#1:	       mul	r1, r2 -> $mul1
	;;
#0:	       mask	r2, 4 -> r4
#1:	       mask	r0, 4 -> r5
	;;
#3:	       stm.s	r9, r15, 3
#1:	       ldx	$mul1, 0 -> r9
#0:	       mul	r8, r5 -> $mul0
#2:	       mul	r4, r5 -> $mul2
	;;
#1:	       mul	r8, r6 -> $mul1
#3:	       mul	r4, r6 -> $mul3
#2:	       stm.s	r9, r15, 2
#0:	       ldx	$mul0, 0 -> r1
	;;
#1:	       ldx	$mul1, 0 -> r6
#2:	       ldx	$mul2, 0 -> r7
#3:	       ldx	$mul3, 0 -> r0
	;;
#0:	       stm.s	r6, r15, 1
#1:	       sr	r7, 16 -> r4
	;;
#0:	       ldm.s	r15, 12
#1:	       add	r4, r0 -> r0
	;;
#0:	       add	r0, r1 -> r2
#1:	       mask	r0, 4 -> r3
	;;
#0:	       ldx	$mem, 0 -> r6
#1:	       ldm.s	r15, 8
#2:	       add	r3, r1 -> r1
#3:	       sl	r2, 16 -> r2
	;;
#0:	       stx	r6 -> $mul0
#1:	       mask	r7, 4 -> r3
#2:	       sr	r1, 16 -> r1
	;;
#1:	       ldx	$mem, 0 -> r6
#2:	       ldm.s	r15, 4
#0:	       ldx	$mul0, 0 -> r4
#3:	       s2add	r15, 4 -> r15
	;;
#1:	       stx	r6 -> $mul1
	;;
#0:	       ldx	$mem, 0 -> r6
#1:	       ldx	$mul1, 0 -> r5
	;;
#0:	       ret
#1:	       stx	r6 -> $mul1
#2:	       add	r4, r5 -> r4
	;;
#1:	       ldx	$mul1, 0 -> r5
	;;
#0:	       add	r4, r5 -> r4
#1:	       sr	r0, 16 -> r5
#2:	       or	r2, r3 -> r0
	;;
#0:	       add	r4, r5 -> r2
	;;
#0:	       add	r2, r1 -> r1
	;;
	.align	4
___muldi3_end:

	.globl	___udivdi3
	.align	4
___udivdi3:                             ; @__udivdi3
	.size	___udivdi3_end-___udivdi3
___udivdi3_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 4
#3:	       ldiu	16 -> r4
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       callg	___udivmoddi4
#1:	       sub	r15, r4 -> r15
#2:	       ldiu	4 -> r4
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
	;;
#1:	       stm.s	r1.31, r15, 2
#0:	       sub	r15, r4 -> r15
	;;
#0:	       stm.a	0, r15, 0
	;;
#0:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 4 -> r15
	;;
#3:	       stx	r3.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___udivdi3_end:

	.align	4
___udivmoddi4:                          ; @__udivmoddi4
	.size	___udivmoddi4_end-___udivmoddi4
___udivmoddi4_start:
; BB#0:                                 ; %entry
#2:	       wb.s	r15, 10
#3:	       ldiu	40 -> r4
#0:	       ldx	$rb, 0 -> r0.31
#1:	       ldx	$ro, 0 -> r1.31
	;;
#0:	       sub	r15, r4 -> r15
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#0:	       stm.s	r0.31, r15, 1
#1:	       s2add	r14, 8 -> r4
	;;
#1:	       stm.s	r1.31, r15, 2
	;;
#0:	       stm.s	r10, r14, 9
#1:	       or	r1, 0 -> r10
#2:	       add	r4, 8 -> r1
	;;
#0:	       stm.s	r11, r14, 8
#1:	       cmpne	r10, 0 -> c1
	;;
#0:	       stm.s	r12, r14, 7
#1:	       or	r3, 0 -> r12
	;;
#0:	if  c1 br	.BB42_9
#1:	       stm.s	r13, r14, 6
	;;
#0:	       ldm.f	r1, 0
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       stm.s	r0, r14, 4
	;;
#0:	       stm.s	r2, r14, 5
	;;
; BB#1:                                 ; %bb
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB42_5
	;;
	       nop	2
	;;
; BB#2:                                 ; %bb1
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB42_4
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb2
#0:	       stm.a	0, r11, 1
#1:	       or	r2, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 0
	;;
.BB42_4:                                ; %bb3
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 20
	;;
#0:	       callg	___udivsi3
#1:	       ldx	$mem, 0 -> r1
	;;
	       nop	3
	;;
#0:	       br	.BB42_14
	;;
	       nop	2
	;;
.BB42_5:                                ; %bb4
#0:	       cmpne	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB42_8
	;;
	       nop	2
	;;
.BB42_6:                                ; %bb4.bb45_crit_edge
#0:	       ldi	0 -> r0
	;;
#0:	       or	r0, 0 -> r1
	;;
.BB42_7:                                ; %bb45
#0:	       ldm.s	r14, 24
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#1:	       br	.BB42_16
#0:	       ldx	$mem, 0 -> r0.31
#2:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
	;;
#1:	       stx	r1.31 -> $rb
	;;
.BB42_8:                                ; %bb5
#0:	       ldm.s	r14, 16
#1:	       br	.BB42_6
	;;
#0:	       ldx	$mem, 0 -> r10
	;;
#0:	       stm.a	r10, r11, 0
	;;
#0:	       stm.a	0, r11, 1
	;;
.BB42_9:                                ; %bb7
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB42_26
	;;
	       nop	2
	;;
; BB#10:                                ; %bb8
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB42_17
	;;
	       nop	2
	;;
; BB#11:                                ; %bb9
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB42_13
	;;
	       nop	2
	;;
; BB#12:                                ; %bb10
#0:	       stm.a	0, r11, 1
#1:	       or	r10, 0 -> r0
#2:	       or	r2, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 0
	;;
.BB42_13:                               ; %bb11
#0:	       ldm.s	r14, 20
#1:	       or	r10, 0 -> r0
	;;
#0:	       callg	___udivsi3
#1:	       ldx	$mem, 0 -> r1
	;;
	       nop	3
	;;
.BB42_14:                               ; %bb11
#0:	       ldi	0 -> r1
	;;
.BB42_15:                               ; %bb11
#0:	       ldm.s	r14, 24
#1:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r13
#1:	       ldm.s	r14, 28
	;;
#0:	       ldx	$mem, 0 -> r12
#1:	       ldm.s	r14, 32
	;;
#0:	       ldx	$mem, 0 -> r11
#1:	       ldm.s	r14, 36
	;;
#0:	       ldx	$mem, 0 -> r10
#1:	       ldm.s	r15, 8
	;;
#2:	       ldx	$mem, 0 -> r2.31
#0:	       ldm.s	r15, 4
	;;
#2:	       stx	r2.31 -> $ro
	;;
#3:	       ldx	$mem, 0 -> r3.31
	;;
#3:	       stx	r3.31 -> $rb
	;;
.BB42_16:                               ; %bb11
#0:	       ldm.s	r15, 0
#1:	       s2add	r15, 10 -> r15
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
.BB42_17:                               ; %bb12
#0:	       ldm.s	r14, 16
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB42_21
	;;
	       nop	2
	;;
; BB#18:                                ; %bb13
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB42_20
	;;
	       nop	2
	;;
; BB#19:                                ; %bb14
#0:	       stm.a	0, r11, 0
#1:	       or	r10, 0 -> r0
#2:	       or	r12, 0 -> r1
	;;
#0:	       callg	___umodsi3
	;;
	       nop	3
	;;
#0:	       stm.a	r0, r11, 1
	;;
.BB42_20:                               ; %bb15
#0:	       or	r10, 0 -> r0
#1:	       callg	___udivsi3
#2:	       or	r12, 0 -> r1
	;;
	       nop	3
	;;
#0:	       br	.BB42_7
#1:	       ldi	0 -> r1
	;;
	       nop	2
	;;
.BB42_21:                               ; %bb16
#0:	       sub	r12, 1 -> r0
	;;
#0:	       and	r0, r12 -> r1
	;;
#0:	       cmpne	r1, 0 -> c1
	;;
#0:	if  c1 br	.BB42_23
	;;
	       nop	2
	;;
; BB#22:                                ; %bb17
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 16
#1:	if !c1 and	r0, r10 -> r0
	;;
#0:	if !c1 ldx	$mem, 0 -> r1
	;;
#0:	if !c1 stm.a	r1, r11, 0
#1:	       ldiu	819 -> r1
	;;
#0:	       ldim	614 -> r1
	;;
#0:	       ldih	409 -> r1
	;;
#0:	if !c1 stm.a	r0, r11, 1
#1:	       ldiu	1365 -> r11
#2:	       xor	r12, -1 -> r0
#3:	       sub	r12, 1 -> r12
	;;
#0:	       and	r0, r12 -> r12
#1:	       ldim	682 -> r11
	;;
#0:	       ldih	682 -> r11
#1:	       sr	r12, 1 -> r0
	;;
#0:	       and	r12, r11 -> r12
#1:	       and	r0, r11 -> r11
#2:	       ldiu	1807 -> r0
	;;
#0:	       add	r12, r11 -> r11
#1:	       ldim	481 -> r0
	;;
#0:	       sr	r11, 2 -> r12
#1:	       and	r11, r1 -> r11
#2:	       ldih	120 -> r0
	;;
#0:	       and	r12, r1 -> r12
#1:	       ldiu	255 -> r1
	;;
#0:	       add	r11, r12 -> r11
#1:	       ldim	992 -> r1
	;;
#0:	       sr	r11, 4 -> r12
#1:	       and	r11, r0 -> r11
#2:	       ldih	7 -> r1
	;;
#0:	       and	r12, r0 -> r12
	;;
#0:	       add	r11, r12 -> r11
	;;
#0:	       sr	r11, 8 -> r12
#1:	       and	r11, r1 -> r11
	;;
#0:	       and	r12, r1 -> r12
	;;
#0:	       br	.BB42_14
#1:	       add	r11, r12 -> r11
	;;
#0:	       mask	r11, 4 -> r12
#1:	       sr	r11, 16 -> r11
	;;
#0:	       add	r12, r11 -> r11
	;;
#0:	       sr	r10, r11 -> r0
	;;
.BB42_23:                               ; %bb20
#0:	       sr	r12, 1 -> r0
#1:	       sr	r10, 1 -> r1
#2:	       ldiu	819 -> r5
	;;
#0:	       or	r12, r0 -> r0
#1:	       or	r10, r1 -> r1
#2:	       ldim	614 -> r5
	;;
#0:	       sr	r0, 2 -> r2
#1:	       sr	r1, 2 -> r3
#2:	       ldih	409 -> r5
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 4 -> r2
#1:	       sr	r1, 4 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 8 -> r2
#1:	       sr	r1, 8 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
	;;
#0:	       sr	r0, 16 -> r2
#1:	       sr	r1, 16 -> r3
	;;
#0:	       or	r0, r2 -> r0
#1:	       or	r1, r3 -> r1
#2:	       ldiu	1365 -> r2
	;;
#0:	       ldim	682 -> r2
#1:	       xor	r0, -1 -> r0
#2:	       xor	r1, -1 -> r1
	;;
#0:	       ldih	682 -> r2
#1:	       sr	r0, 1 -> r3
#2:	       sr	r1, 1 -> r4
	;;
#0:	       and	r0, r2 -> r0
#1:	       and	r3, r2 -> r3
#2:	       and	r1, r2 -> r1
#3:	       and	r4, r2 -> r2
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r1, r2 -> r1
#2:	       ldiu	1807 -> r4
	;;
#0:	       sr	r0, 2 -> r2
#1:	       sr	r1, 2 -> r3
#2:	       and	r0, r5 -> r0
#3:	       and	r1, r5 -> r1
	;;
#0:	       and	r2, r5 -> r2
#1:	       and	r3, r5 -> r3
#2:	       ldim	481 -> r4
#3:	       ldiu	255 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
#2:	       ldih	120 -> r4
#3:	       ldim	992 -> r5
	;;
#0:	       sr	r0, 4 -> r2
#1:	       sr	r1, 4 -> r3
#2:	       and	r0, r4 -> r0
#3:	       and	r1, r4 -> r1
	;;
#0:	       and	r2, r4 -> r2
#1:	       and	r3, r4 -> r3
#2:	       ldih	7 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
	;;
#0:	       sr	r0, 8 -> r2
#1:	       sr	r1, 8 -> r3
#2:	       and	r0, r5 -> r0
#3:	       and	r1, r5 -> r1
	;;
#0:	       and	r2, r5 -> r2
#1:	       and	r3, r5 -> r3
	;;
#0:	       add	r0, r2 -> r0
#1:	       add	r1, r3 -> r1
	;;
#0:	       mask	r0, 4 -> r2
#1:	       sr	r0, 16 -> r0
#2:	       mask	r1, 4 -> r3
#3:	       sr	r1, 16 -> r1
	;;
#0:	       add	r2, r0 -> r0
#1:	       add	r3, r1 -> r1
	;;
#0:	       sub	r0, r1 -> r0
	;;
#0:	       cmpult	r0, 31 -> c1
	;;
#0:	if  c1 br	.BB42_35
	;;
	       nop	2
	;;
.BB42_24:                               ; %bb21
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if  c1 br	.BB42_6
	;;
	       nop	2
	;;
; BB#25:                                ; %bb22
#0:	       ldm.s	r14, 16
#1:	       br	.BB42_6
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
#0:	       stm.a	r0, r11, 0
	;;
#0:	       stm.a	r10, r11, 1
	;;
.BB42_26:                               ; %bb25
#0:	       cmpne	r12, 0 -> c1
	;;
#0:	if  c1 br	.BB42_31
	;;
	       nop	2
	;;
; BB#27:                                ; %bb26
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       sub	r2, 1 -> r0
	;;
#0:	       and	r0, r2 -> r2
	;;
#0:	       cmpne	r2, 0 -> c1
	;;
#0:	if  c1 br	.BB42_33
	;;
	       nop	2
	;;
; BB#28:                                ; %bb27
#0:	       cmpeq	r11, 0 -> c1
	;;
#0:	if !c1 ldm.s	r14, 16
	;;
#0:	if !c1 ldx	$mem, 0 -> r2
	;;
#0:	if !c1 and	r0, r2 -> r2
	;;
#0:	if !c1 stm.a	r2, r11, 0
	;;
#0:	if !c1 stm.a	0, r11, 1
	;;
#0:	       ldm.s	r14, 20
	;;
#0:	       ldx	$mem, 0 -> r2
	;;
#0:	       cmpne	r2, 1 -> c1
	;;
#0:	if  c1 br	.BB42_30
	;;
	       nop	2
	;;
; BB#29:                                ; %bb30.bb45_crit_edge
#0:	       ldm.s	r14, 16
#1:	       br	.BB42_7
#2:	       or	r10, 0 -> r1
	;;
#0:	       ldx	$mem, 0 -> r0
	;;
	       nop	1
	;;
.BB42_30:                               ; %bb32
#0:	       ldm.s	r14, 20
#1:	       ldiu	1365 -> r2
#2:	       ldiu	819 -> r5
	;;
#0:	       ldim	682 -> r2
#1:	       ldim	614 -> r5
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       ldih	682 -> r2
#2:	       ldih	409 -> r5
#3:	       ldm.s	r14, 16
	;;
#0:	       xor	r3, -1 -> r3
	;;
#0:	       and	r3, r0 -> r0
	;;
#0:	       sr	r0, 1 -> r3
#1:	       and	r0, r2 -> r0
	;;
#0:	       and	r3, r2 -> r2
#1:	       ldiu	1807 -> r3
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldim	481 -> r3
	;;
#0:	       sr	r0, 2 -> r2
#1:	       and	r0, r5 -> r0
#2:	       ldih	120 -> r3
	;;
#0:	       and	r2, r5 -> r2
#1:	       ldiu	255 -> r5
	;;
#0:	       add	r0, r2 -> r0
#1:	       ldim	992 -> r5
	;;
#0:	       sr	r0, 4 -> r2
#1:	       and	r0, r3 -> r0
#2:	       ldih	7 -> r5
	;;
#0:	       and	r2, r3 -> r2
#1:	       ldi	32 -> r3
	;;
#0:	       add	r0, r2 -> r0
	;;
#0:	       sr	r0, 8 -> r2
#1:	       and	r0, r5 -> r0
	;;
#0:	       and	r2, r5 -> r2
	;;
#0:	       add	r0, r2 -> r0
	;;
#0:	       mask	r0, 4 -> r2
#1:	       sr	r0, 16 -> r0
	;;
#0:	       br	.BB42_15
#1:	       add	r2, r0 -> r2
	;;
#0:	       sub	r3, r2 -> r0
#1:	       ldx	$mem, 0 -> r3
#2:	       sr	r10, r2 -> r1
	;;
#0:	       sl	r10, r0 -> r0
#1:	       sr	r3, r2 -> r3
	;;
#0:	       or	r0, r3 -> r0
	;;
.BB42_31:                               ; %bb34
#0:	       sr	r12, 1 -> r2
#1:	       sr	r10, 1 -> r3
#2:	       ldiu	1365 -> r0
#3:	       ldiu	819 -> r4
	;;
#0:	       or	r12, r2 -> r2
#1:	       or	r10, r3 -> r3
#2:	       ldim	682 -> r0
#3:	       ldim	614 -> r4
	;;
#0:	       sr	r2, 2 -> r5
#1:	       sr	r3, 2 -> r1
#2:	       ldih	682 -> r0
#3:	       ldih	409 -> r4
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 4 -> r5
#1:	       sr	r3, 4 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 8 -> r5
#1:	       sr	r3, 8 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       sr	r2, 16 -> r5
#1:	       sr	r3, 16 -> r1
	;;
#0:	       or	r2, r5 -> r2
#1:	       or	r3, r1 -> r3
	;;
#0:	       xor	r2, -1 -> r2
#1:	       xor	r3, -1 -> r3
	;;
#0:	       sr	r2, 1 -> r5
#1:	       sr	r3, 1 -> r1
#2:	       and	r2, r0 -> r2
#3:	       and	r3, r0 -> r3
	;;
#0:	       and	r5, r0 -> r5
#1:	       and	r1, r0 -> r0
#2:	       ldiu	1807 -> r1
	;;
#0:	       add	r2, r5 -> r2
#1:	       add	r3, r0 -> r0
#2:	       ldim	481 -> r1
	;;
#0:	       sr	r2, 2 -> r3
#1:	       sr	r0, 2 -> r5
#2:	       and	r2, r4 -> r2
#3:	       and	r0, r4 -> r0
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldih	120 -> r1
#3:	       ldiu	255 -> r4
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
#2:	       ldim	992 -> r4
	;;
#0:	       sr	r2, 4 -> r3
#1:	       sr	r0, 4 -> r5
#2:	       and	r2, r1 -> r2
#3:	       and	r0, r1 -> r0
	;;
#0:	       and	r3, r1 -> r3
#1:	       and	r5, r1 -> r5
#2:	       ldih	7 -> r4
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
	;;
#0:	       sr	r2, 8 -> r3
#1:	       sr	r0, 8 -> r5
#2:	       and	r2, r4 -> r2
#3:	       and	r0, r4 -> r0
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
	;;
#0:	       add	r2, r3 -> r2
#1:	       add	r0, r5 -> r0
	;;
#0:	       mask	r2, 4 -> r3
#1:	       sr	r2, 16 -> r2
#2:	       mask	r0, 4 -> r5
#3:	       sr	r0, 16 -> r0
	;;
#0:	       add	r3, r2 -> r2
#1:	       add	r5, r0 -> r0
	;;
#0:	       sub	r2, r0 -> r0
#1:	       ldi	32 -> r2
	;;
#0:	       cmpult	r0, r2 -> c1
	;;
#0:	if !c1 br	.BB42_24
	;;
	       nop	2
	;;
; BB#32:                                ; %bb38
#0:	       ldm.s	r14, 16
#1:	       ldi	31 -> r3
#2:	       add	r0, 1 -> r2
#3:	       sub	r0, 31 -> r5
	;;
#0:	       sub	r3, r0 -> r0
#1:	       sra	r5, 31 -> r4
#2:	       sr	r10, r2 -> r6
#3:	       ldi	0 -> r5
	;;
#0:	       br	.BB42_36
#1:	       ldx	$mem, 0 -> r3
#2:	       sl	r10, r0 -> r10
	;;
#0:	       sr	r3, r2 -> r1
#1:	       sl	r3, r0 -> r0
	;;
#0:	       and	r1, r4 -> r1
	;;
#0:	       or	r1, r10 -> r3
#1:	       and	r6, r4 -> r10
	;;
.BB42_33:                               ; %bb41.preheader
#0:	       ldm.s	r14, 20
#1:	       sr	r10, 1 -> r3
#2:	       ldiu	819 -> r4
	;;
#0:	       ldim	614 -> r4
	;;
#0:	       ldx	$mem, 0 -> r2
#1:	       ldih	409 -> r4
#2:	       ldm.s	r14, 16
	;;
#0:	       sr	r2, 1 -> r0
	;;
#0:	       or	r2, r0 -> r0
#1:	       or	r10, r3 -> r2
#2:	       ldx	$mem, 0 -> r7
	;;
#0:	       sr	r0, 2 -> r3
#1:	       sr	r2, 2 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 4 -> r3
#1:	       sr	r2, 4 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 8 -> r3
#1:	       sr	r2, 8 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
	;;
#0:	       sr	r0, 16 -> r3
#1:	       sr	r2, 16 -> r5
	;;
#0:	       or	r0, r3 -> r0
#1:	       or	r2, r5 -> r2
#2:	       ldiu	1365 -> r3
	;;
#0:	       ldim	682 -> r3
#1:	       xor	r0, -1 -> r0
#2:	       xor	r2, -1 -> r2
	;;
#0:	       ldih	682 -> r3
#1:	       sr	r0, 1 -> r5
#2:	       sr	r2, 1 -> r1
	;;
#0:	       and	r0, r3 -> r0
#1:	       and	r5, r3 -> r5
#2:	       and	r2, r3 -> r2
#3:	       and	r1, r3 -> r3
	;;
#0:	       add	r0, r5 -> r0
#1:	       add	r2, r3 -> r2
#2:	       ldiu	1807 -> r1
	;;
#0:	       sr	r0, 2 -> r3
#1:	       sr	r2, 2 -> r5
#2:	       and	r0, r4 -> r0
#3:	       and	r2, r4 -> r2
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldim	481 -> r1
#3:	       ldiu	255 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
#2:	       ldih	120 -> r1
#3:	       ldim	992 -> r4
	;;
#0:	       sr	r0, 4 -> r3
#1:	       sr	r2, 4 -> r5
#2:	       and	r0, r1 -> r0
#3:	       and	r2, r1 -> r2
	;;
#0:	       and	r3, r1 -> r3
#1:	       and	r5, r1 -> r5
#2:	       ldih	7 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
	;;
#0:	       sr	r0, 8 -> r3
#1:	       sr	r2, 8 -> r5
#2:	       and	r0, r4 -> r0
#3:	       and	r2, r4 -> r2
	;;
#0:	       and	r3, r4 -> r3
#1:	       and	r5, r4 -> r5
#2:	       ldi	-2 -> r4
	;;
#0:	       add	r0, r3 -> r0
#1:	       add	r2, r5 -> r2
	;;
#0:	       mask	r0, 4 -> r3
#1:	       sr	r0, 16 -> r0
#2:	       mask	r2, 4 -> r5
#3:	       sr	r2, 16 -> r2
	;;
#0:	       add	r3, r0 -> r0
#1:	       add	r5, r2 -> r2
#2:	       ldi	31 -> r3
	;;
#0:	       sub	r0, r2 -> r0
#1:	       ldi	33 -> r2
	;;
#0:	       add	r0, r2 -> r2
#1:	       add	r0, 1 -> r1
#2:	       xor	r0, -1 -> r5
#3:	       sub	r3, r0 -> r3
	;;
#0:	       cmpeq	r2, 0 -> c1
#1:	       sub	r4, r0 -> r4
#2:	       sl	r10, r3 -> r6
#3:	       sr	r7, r1 -> r8
	;;
#0:	       sr	r7, r2 -> r9
#1:	       sl	r10, r5 -> r1.16
#2:	       or	r6, r8 -> r6
#3:	       sra	r5, 31 -> r8
	;;
#0:	       sra	r1, 31 -> r13
#1:	       sr	r10, r1 -> r1
#2:	       sra	r4, 31 -> r4
#3:	       sl	r7, r5 -> r5
	;;
#0:	       sra	r0, 31 -> r0
#1:	       or	r9, r1.16 -> r9
#2:	       sr	r10, r2 -> r10
#3:	       sl	r7, r3 -> r3
	;;
#0:	       and	r5, r0 -> r0
#1:	       and	r6, r8 -> r6
#2:	       and	r9, r13 -> r7
#3:	       and	r1, r4 -> r1
	;;
#0:	       and	r3, r8 -> r5
#1:	       or	r6, r0 -> r0
#2:	       or	r7, r1 -> r3
#3:	       and	r10, r13 -> r10
	;;
#0:	if !c1 br	.BB42_36
	;;
	       nop	2
	;;
; BB#34:                                ; %bb41.preheader.bb42_crit_edge
#0:	       ldi	0 -> r1
#1:	       br	.BB42_39
	;;
#0:	       or	r1, 0 -> r2
	;;
	       nop	1
	;;
.BB42_35:                               ; %bb24
#0:	       ldm.s	r14, 16
#1:	       ldi	31 -> r1
#2:	       add	r0, 1 -> r2
#3:	       ldi	0 -> r5
	;;
#0:	       sub	r1, r0 -> r0
	;;
#0:	       ldx	$mem, 0 -> r3
#1:	       sl	r10, r0 -> r1
#2:	       sr	r10, r2 -> r10
	;;
#0:	       sr	r3, r2 -> r4
#1:	       sl	r3, r0 -> r0
	;;
#0:	       or	r1, r4 -> r3
	;;
.BB42_36:                               ; %bb.nph
#0:	       ldm.s	r14, 20
#1:	       ldi	-1 -> r1
#2:	       ldi	0 -> r6
	;;
#0:	       ldx	$mem, 0 -> r4
	;;
#0:	       carr	r4, r1 -> r1
#1:	       sub	r4, 1 -> r4
	;;
#0:	       add	r12, r1 -> r1
	;;
#0:	       sub	r1, 1 -> r7
	;;
.BB42_37:                               ; %bb40
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sl	r3, 1 -> r1
#1:	       sr	r0, 31 -> r8
#2:	       sl	r10, 1 -> r10
#3:	       sr	r3, 31 -> r3
	;;
#0:	       or	r1, r8 -> r8
#1:	       or	r10, r3 -> r1
#2:	       sub	r2, 1 -> r2
#3:	       ldm.s	r14, 20
	;;
#0:	       sub	r7, r1 -> r3
#1:	       borr	r4, r8 -> r10
#2:	       cmpne	r2, 0 -> c1
#3:	       sl	r0, 1 -> r0
	;;
#1:	       sub	r3, r10 -> r3
#2:	       ldx	$mem, 0 -> r10
#0:	       sr	r5, 31 -> r0.16
	;;
#1:	if  c1 br	.BB42_37
#2:	       sra	r3, 31 -> r3
#0:	       or	r0, r0.16 -> r0
	;;
#0:	       and	r3, r12 -> r9
#1:	       and	r3, r10 -> r10
	;;
#3:	       sl	r5, 1 -> r3.16
#1:	       sub	r1, r9 -> r9
#2:	       and	r3, 1 -> r1
#0:	       borr	r8, r10 -> r0.17
	;;
#3:	       or	r6, r3.16 -> r5
#1:	       sub	r8, r10 -> r3
#0:	       sub	r9, r0.17 -> r10
#2:	       or	r1, 0 -> r6
	;;
; BB#38:                                ; %bb41.bb42_crit_edge
#0:	       ldi	0 -> r2
	;;
.BB42_39:                               ; %bb42
#0:	       cmpne	r11, 0 -> c1
#1:	       carr	r5, r5 -> r4
#2:	       add	r0, r0 -> r0
#3:	       add	r5, r5 -> r5
	;;
#0:	if !c1 br	.BB42_7
#1:	       add	r0, r4 -> r4
#2:	       or	r1, r5 -> r0
	;;
#0:	       or	r2, r4 -> r1
	;;
	       nop	1
	;;
; BB#40:                                ; %bb43
#0:	       stm.a	r3, r11, 0
#1:	       br	.BB42_15
	;;
#0:	       stm.a	r10, r11, 1
	;;
	       nop	1
	;;
	.align	4
___udivmoddi4_end:

	.globl	___udivsi3
	.align	4
___udivsi3:                             ; @__udivsi3
	.size	___udivsi3_end-___udivsi3
___udivsi3_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1
#1:	       ldiu	4 -> r2
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 br	.BB43_10
#1:	       sub	r15, r2 -> r15
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if !c1 ret
#1:	if !c1 ldi	0 -> r0
#2:	if !c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
; BB#2:                                 ; %bb3
#0:	       sr	r1, 1 -> r2
#1:	       sr	r0, 1 -> r3
#2:	       ldiu	819 -> r7
	;;
#0:	       or	r1, r2 -> r2
#1:	       or	r0, r3 -> r3
#2:	       ldim	614 -> r7
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       ldih	409 -> r7
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 16 -> r4
#1:	       sr	r3, 16 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
#2:	       ldiu	1365 -> r4
	;;
#0:	       ldim	682 -> r4
#1:	       xor	r2, -1 -> r2
#2:	       xor	r3, -1 -> r3
	;;
#0:	       ldih	682 -> r4
#1:	       sr	r2, 1 -> r5
#2:	       sr	r3, 1 -> r6
	;;
#0:	       and	r2, r4 -> r2
#1:	       and	r5, r4 -> r5
#2:	       and	r3, r4 -> r3
#3:	       and	r6, r4 -> r4
	;;
#0:	       add	r2, r5 -> r2
#1:	       add	r3, r4 -> r3
#2:	       ldiu	1807 -> r6
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
#2:	       ldim	481 -> r6
#3:	       ldiu	255 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
#2:	       ldih	120 -> r6
#3:	       ldim	992 -> r7
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
#2:	       and	r2, r6 -> r2
#3:	       and	r3, r6 -> r3
	;;
#0:	       and	r4, r6 -> r4
#1:	       and	r5, r6 -> r5
#2:	       ldih	7 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       mask	r2, 4 -> r4
#1:	       sr	r2, 16 -> r2
#2:	       mask	r3, 4 -> r5
#3:	       sr	r3, 16 -> r3
	;;
#0:	       add	r5, r3 -> r3
#1:	       add	r4, r2 -> r2
#2:	       ldi	31 -> r5
	;;
#0:	       sub	r2, r3 -> r4
	;;
#0:	       cmpult	r5, r4 -> c1
	;;
#0:	if  c1 br	.BB43_10
	;;
	       nop	2
	;;
; BB#3:                                 ; %bb5
#0:	       cmpne	r4, r5 -> c1
	;;
#0:	if !c1 ret
#1:	if !c1 s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
; BB#4:                                 ; %bb7
#0:	       ldi	31 -> r5
	;;
#0:	       sub	r5, r4 -> r5
#1:	       add	r4, 1 -> r4
	;;
#0:	       cmpne	r4, 0 -> c1
#1:	       sl	r0, r5 -> r5
	;;
#0:	if  c1 br	.BB43_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb7.bb10_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB43_8
	;;
	       nop	2
	;;
.BB43_6:                                ; %bb.nph
#0:	       add	r2, 1 -> r2
#1:	       sub	r1, 1 -> r6
#2:	       sr	r0, r4 -> r0
	;;
#0:	       sub	r2, r3 -> r3
#1:	       ldi	0 -> r2
	;;
.BB43_7:                                ; %bb8
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sr	r5, 31 -> r4
#1:	       sl	r0, 1 -> r0
#2:	       sub	r3, 1 -> r3
#3:	       sl	r5, 1 -> r5
	;;
#0:	       or	r0, r4 -> r0
#1:	       cmpne	r3, 0 -> c1
#2:	       or	r2, r5 -> r5
	;;
#0:	if  c1 br	.BB43_7
#1:	       sub	r6, r0 -> r4
	;;
#0:	       sra	r4, 31 -> r4
	;;
#0:	       and	r4, r1 -> r7
#1:	       and	r4, 1 -> r2
	;;
#0:	       sub	r0, r7 -> r0
	;;
.BB43_8:                                ; %bb10
#0:	       sl	r5, 1 -> r0
	;;
#0:	       or	r2, r0 -> r0
	;;
.BB43_9:                                ; %bb11
#0:	       s2add	r15, 1 -> r15
#1:	       ret
	;;
	       nop	3
	;;
.BB43_10:                               ; %entry.bb11_crit_edge
#0:	       ldi	0 -> r0
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
	       nop	3
	;;
	.align	4
___udivsi3_end:

	.globl	___umoddi3
	.align	4
___umoddi3:                             ; @__umoddi3
	.size	___umoddi3_end-___umoddi3
___umoddi3_start:
; BB#0:                                 ; %entry
#0:	       wb.s	r15, 7
#1:	       ldiu	28 -> r5
	;;
#0:	       sub	r15, r5 -> r15
#2:	       ldx	$rb, 0 -> r2.31
#1:	       ldiu	4 -> r5
	;;
#3:	       ldx	$ro, 0 -> r3.31
	;;
#0:	       stm.s	r14, r15, 0
#1:	       or	r15, 0 -> r14
	;;
#2:	       stm.s	r2.31, r15, 1
#0:	       add	r14, 20 -> r4
	;;
#3:	       stm.s	r3.31, r15, 2
#0:	       sub	r15, r5 -> r15
	;;
#0:	       stm.a	r4, r15, 0
	;;
#0:	       callg	___udivmoddi4
	;;
	       nop	3
	;;
#0:	       ldm.s	r14, 20
#1:	       s2add	r15, 1 -> r15
	;;
#0:	       or	r14, 0 -> r15
	;;
#0:	       ldx	$mem, 0 -> r0
#1:	       ldm.s	r14, 24
	;;
#0:	       ldx	$mem, 0 -> r1
#1:	       ldm.s	r15, 8
	;;
#0:	       ldx	$mem, 0 -> r0.31
#1:	       ldm.s	r15, 4
	;;
#0:	       stx	r0.31 -> $ro
	;;
#1:	       ldx	$mem, 0 -> r1.31
#0:	       ldm.s	r15, 0
#2:	       s2add	r15, 7 -> r15
	;;
#1:	       stx	r1.31 -> $rb
	;;
#0:	       ret
#1:	       ldx	$mem, 0 -> r14
	;;
	       nop	3
	;;
	.align	4
___umoddi3_end:

	.globl	___umodsi3
	.align	4
___umodsi3:                             ; @__umodsi3
	.size	___umodsi3_end-___umodsi3
___umodsi3_start:
; BB#0:                                 ; %entry
#0:	       cmpeq	r1, 0 -> c1
#1:	       ldiu	4 -> r2
#2:	       wb.s	r15, 1
	;;
#0:	if  c1 br	.BB45_2
#1:	       sub	r15, r2 -> r15
	;;
	       nop	2
	;;
; BB#1:                                 ; %entry
#0:	       cmpne	r0, 0 -> c1
	;;
#0:	if  c1 br	.BB45_3
	;;
	       nop	2
	;;
.BB45_2:                                ; %entry.__udivsi3.exit_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB45_11
	;;
	       nop	2
	;;
.BB45_3:                                ; %bb3.i
#0:	       sr	r1, 1 -> r2
#1:	       sr	r0, 1 -> r3
#2:	       ldiu	819 -> r7
	;;
#0:	       or	r1, r2 -> r2
#1:	       or	r0, r3 -> r3
#2:	       ldim	614 -> r7
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       ldih	409 -> r7
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
	;;
#0:	       sr	r2, 16 -> r4
#1:	       sr	r3, 16 -> r5
	;;
#0:	       or	r2, r4 -> r2
#1:	       or	r3, r5 -> r3
#2:	       ldiu	1365 -> r4
	;;
#0:	       ldim	682 -> r4
#1:	       xor	r2, -1 -> r2
#2:	       xor	r3, -1 -> r3
	;;
#0:	       ldih	682 -> r4
#1:	       sr	r2, 1 -> r5
#2:	       sr	r3, 1 -> r6
	;;
#0:	       and	r2, r4 -> r2
#1:	       and	r5, r4 -> r5
#2:	       and	r3, r4 -> r3
#3:	       and	r6, r4 -> r4
	;;
#0:	       add	r2, r5 -> r2
#1:	       add	r3, r4 -> r3
#2:	       ldiu	1807 -> r6
	;;
#0:	       sr	r2, 2 -> r4
#1:	       sr	r3, 2 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
#2:	       ldim	481 -> r6
#3:	       ldiu	255 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
#2:	       ldih	120 -> r6
#3:	       ldim	992 -> r7
	;;
#0:	       sr	r2, 4 -> r4
#1:	       sr	r3, 4 -> r5
#2:	       and	r2, r6 -> r2
#3:	       and	r3, r6 -> r3
	;;
#0:	       and	r4, r6 -> r4
#1:	       and	r5, r6 -> r5
#2:	       ldih	7 -> r7
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       sr	r2, 8 -> r4
#1:	       sr	r3, 8 -> r5
#2:	       and	r2, r7 -> r2
#3:	       and	r3, r7 -> r3
	;;
#0:	       and	r4, r7 -> r4
#1:	       and	r5, r7 -> r5
	;;
#0:	       add	r2, r4 -> r2
#1:	       add	r3, r5 -> r3
	;;
#0:	       mask	r2, 4 -> r4
#1:	       sr	r2, 16 -> r2
#2:	       mask	r3, 4 -> r5
#3:	       sr	r3, 16 -> r3
	;;
#0:	       add	r5, r3 -> r3
#1:	       add	r4, r2 -> r2
#2:	       ldi	31 -> r5
	;;
#0:	       sub	r2, r3 -> r4
	;;
#0:	       cmpult	r5, r4 -> c1
	;;
#0:	if  c1 br	.BB45_2
	;;
	       nop	2
	;;
; BB#4:                                 ; %bb5.i
#0:	       cmpne	r4, r5 -> c1
	;;
#0:	if  c1 br	.BB45_6
	;;
	       nop	2
	;;
; BB#5:                                 ; %bb5.i.__udivsi3.exit_crit_edge
#0:	       or	r0, 0 -> r2
#1:	       br	.BB45_11
	;;
	       nop	2
	;;
.BB45_6:                                ; %bb7.i
#0:	       ldi	31 -> r5
	;;
#0:	       sub	r5, r4 -> r5
#1:	       add	r4, 1 -> r4
	;;
#0:	       cmpne	r4, 0 -> c1
#1:	       sl	r0, r5 -> r5
	;;
#0:	if  c1 br	.BB45_8
	;;
	       nop	2
	;;
; BB#7:                                 ; %bb7.i.bb10.i_crit_edge
#0:	       ldi	0 -> r2
#1:	       br	.BB45_10
	;;
	       nop	2
	;;
.BB45_8:                                ; %bb.nph.i
#0:	       add	r2, 1 -> r2
#1:	       sub	r1, 1 -> r6
#2:	       sr	r0, r4 -> r4
	;;
#0:	       sub	r2, r3 -> r3
#1:	       ldi	0 -> r2
	;;
.BB45_9:                                ; %bb8.i
                                        ; =>This Inner Loop Header: Depth=1
#0:	       sr	r5, 31 -> r7
#1:	       sl	r4, 1 -> r4
#2:	       sub	r3, 1 -> r3
#3:	       sl	r5, 1 -> r5
	;;
#0:	       or	r4, r7 -> r4
#1:	       cmpne	r3, 0 -> c1
#2:	       or	r2, r5 -> r5
	;;
#0:	if  c1 br	.BB45_9
#1:	       sub	r6, r4 -> r7
	;;
#0:	       sra	r7, 31 -> r7
	;;
#0:	       and	r7, r1 -> r8
#1:	       and	r7, 1 -> r2
	;;
#0:	       sub	r4, r8 -> r4
	;;
.BB45_10:                               ; %bb10.i
#0:	       sl	r5, 1 -> r3
	;;
#0:	       or	r2, r3 -> r2
	;;
.BB45_11:                               ; %__udivsi3.exit
#0:	       mul	r2, r1 -> $mul0
#1:	       ret
#2:	       s2add	r15, 1 -> r15
	;;
#0:	       ldx	$mul0, 0 -> r1
	;;
#0:	       sub	r0, r1 -> r0
	;;
	       nop	1
	;;
	.align	4
___umodsi3_end:

	.section	.rodata,"a",@progbits
	.align	32                      ; @pad.2804
_pad.2804:
	.ascii	 "\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

	.section	.data.rel.ro.local,"aw",@progbits
	.align	32                      ; @test.2643
_test.2643:
	.long	._.str
	.long	._.str1
	.long	._.str2
	.long	._.str3
	.long	._.str4
	.long	._.str5
	.long	._.str6
	.long	._.str7
	.long	._.str8
	.long	._.str9
	.long	._.str10
	.long	._.str11
	.long	._.str12
	.long	._.str13

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str
._.str:
	.byte	0

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str1
._.str1:
	.ascii	 "d41d8cd98f00b204e9800998ecf8427e\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str2
._.str2:
	.ascii	 "a\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str3
._.str3:
	.ascii	 "0cc175b9c0f1b6a831c399e269772661\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str4
._.str4:
	.ascii	 "abc\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str5
._.str5:
	.ascii	 "900150983cd24fb0d6963f7d28e17f72\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str6
._.str6:
	.ascii	 "message digest\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str7
._.str7:
	.ascii	 "f96b697d7cb7938d525a2f31aaf161d0\000"

	.align	16                      ; @.str8
._.str8:
	.ascii	 "abcdefghijklmnopqrstuvwxyz\000"

	.align	16                      ; @.str9
._.str9:
	.ascii	 "c3fcd3d76192e4007dfb496cca67e13b\000"

	.align	16                      ; @.str10
._.str10:
	.ascii	 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\000"

	.align	16                      ; @.str11
._.str11:
	.ascii	 "d174ab98d277d9f5a5611c2c9f419d9f\000"

	.align	16                      ; @.str12
._.str12:
	.ascii	 "12345678901234567890123456789012345678901234567890123456789012345678901234567890\000"

	.align	16                      ; @.str13
._.str13:
	.ascii	 "57edf4a22be3c955ac49da2e2107b67a\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str14
._.str14:
	.ascii	 "%02x\000"

	.align	4                       ; @.str15
._.str15:
	.ascii	 "MD5 (\"%s\") = \000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str16
._.str16:
	.ascii	 "**** ERROR, should be: %s\n\000"

	.align	16                      ; @.str17
._.str17:
	.ascii	 "md5 self-test completed successfully.\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str18
._.str18:
	.ascii	 "\n\000"

	.align	4                       ; @.str25
._.str25:
	.ascii	 "C\000"

	.section	.data.rel.local,"aw",@progbits
	.align	32                      ; @impure_data
_impure_data:
	.long	0                       ; 0x0
	.long	_impure_data+748
	.long	_impure_data+852
	.long	_impure_data+956
	.long	0                       ; 0x0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.long	._.str25
	.long	0                       ; 0x0
	.long	0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.long	0                       ; 0x0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.quad	1                       ; 0x1
	.short	13070                   ; 0x330e
	.short	43981                   ; 0xabcd
	.short	4660                    ; 0x1234
	.short	58989                   ; 0xe66d
	.short	57068                   ; 0xdeec
	.short	5                       ; 0x5
	.short	11                      ; 0xb
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0                       ; 0x0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str26
._.str26:
	.ascii	 "INF\000"

	.align	4                       ; @.str127
._.str127:
	.ascii	 "inf\000"

	.align	4                       ; @.str228
._.str228:
	.ascii	 "NAN\000"

	.align	4                       ; @.str329
._.str329:
	.ascii	 "nan\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str430
._.str430:
	.ascii	 "0123456789abcdef\000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str531
._.str531:
	.ascii	 "(null)\000"

	.section	.rodata.str1.16,"aMS",@progbits,1
	.align	16                      ; @.str632
._.str632:
	.ascii	 "0123456789ABCDEF\000"

	.align	16                      ; @.str733
._.str733:
	.ascii	 "bug in vfprintf: bad base\000"

	.section	.rodata.cst16,"aM",@progbits,16
	.align	4                       ; @blanks.3634
_blanks.3634:
	.ascii	 "                "

	.align	4                       ; @zeroes.3635
_zeroes.3635:
	.ascii	 "0000000000000000"

	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	4                       ; @.str834
._.str834:
	.ascii	 "0\000"

	.align	4                       ; @.str59
._.str59:
	.ascii	 "Infinity\000"

	.align	4                       ; @.str160
._.str160:
	.ascii	 "NaN\000"

	.align	4                       ; @.str65
._.str65:
	.ascii	 ".\000"

	.section	.data.rel.local,"aw",@progbits
	.align	32                      ; @__malloc_av_
___malloc_av_:
	.long	0
	.long	0
	.long	___malloc_av_
	.long	___malloc_av_
	.long	___malloc_av_+8
	.long	___malloc_av_+8
	.long	___malloc_av_+16
	.long	___malloc_av_+16
	.long	___malloc_av_+24
	.long	___malloc_av_+24
	.long	___malloc_av_+32
	.long	___malloc_av_+32
	.long	___malloc_av_+40
	.long	___malloc_av_+40
	.long	___malloc_av_+48
	.long	___malloc_av_+48
	.long	___malloc_av_+56
	.long	___malloc_av_+56
	.long	___malloc_av_+64
	.long	___malloc_av_+64
	.long	___malloc_av_+72
	.long	___malloc_av_+72
	.long	___malloc_av_+80
	.long	___malloc_av_+80
	.long	___malloc_av_+88
	.long	___malloc_av_+88
	.long	___malloc_av_+96
	.long	___malloc_av_+96
	.long	___malloc_av_+104
	.long	___malloc_av_+104
	.long	___malloc_av_+112
	.long	___malloc_av_+112
	.long	___malloc_av_+120
	.long	___malloc_av_+120
	.long	___malloc_av_+128
	.long	___malloc_av_+128
	.long	___malloc_av_+136
	.long	___malloc_av_+136
	.long	___malloc_av_+144
	.long	___malloc_av_+144
	.long	___malloc_av_+152
	.long	___malloc_av_+152
	.long	___malloc_av_+160
	.long	___malloc_av_+160
	.long	___malloc_av_+168
	.long	___malloc_av_+168
	.long	___malloc_av_+176
	.long	___malloc_av_+176
	.long	___malloc_av_+184
	.long	___malloc_av_+184
	.long	___malloc_av_+192
	.long	___malloc_av_+192
	.long	___malloc_av_+200
	.long	___malloc_av_+200
	.long	___malloc_av_+208
	.long	___malloc_av_+208
	.long	___malloc_av_+216
	.long	___malloc_av_+216
	.long	___malloc_av_+224
	.long	___malloc_av_+224
	.long	___malloc_av_+232
	.long	___malloc_av_+232
	.long	___malloc_av_+240
	.long	___malloc_av_+240
	.long	___malloc_av_+248
	.long	___malloc_av_+248
	.long	___malloc_av_+256
	.long	___malloc_av_+256
	.long	___malloc_av_+264
	.long	___malloc_av_+264
	.long	___malloc_av_+272
	.long	___malloc_av_+272
	.long	___malloc_av_+280
	.long	___malloc_av_+280
	.long	___malloc_av_+288
	.long	___malloc_av_+288
	.long	___malloc_av_+296
	.long	___malloc_av_+296
	.long	___malloc_av_+304
	.long	___malloc_av_+304
	.long	___malloc_av_+312
	.long	___malloc_av_+312
	.long	___malloc_av_+320
	.long	___malloc_av_+320
	.long	___malloc_av_+328
	.long	___malloc_av_+328
	.long	___malloc_av_+336
	.long	___malloc_av_+336
	.long	___malloc_av_+344
	.long	___malloc_av_+344
	.long	___malloc_av_+352
	.long	___malloc_av_+352
	.long	___malloc_av_+360
	.long	___malloc_av_+360
	.long	___malloc_av_+368
	.long	___malloc_av_+368
	.long	___malloc_av_+376
	.long	___malloc_av_+376
	.long	___malloc_av_+384
	.long	___malloc_av_+384
	.long	___malloc_av_+392
	.long	___malloc_av_+392
	.long	___malloc_av_+400
	.long	___malloc_av_+400
	.long	___malloc_av_+408
	.long	___malloc_av_+408
	.long	___malloc_av_+416
	.long	___malloc_av_+416
	.long	___malloc_av_+424
	.long	___malloc_av_+424
	.long	___malloc_av_+432
	.long	___malloc_av_+432
	.long	___malloc_av_+440
	.long	___malloc_av_+440
	.long	___malloc_av_+448
	.long	___malloc_av_+448
	.long	___malloc_av_+456
	.long	___malloc_av_+456
	.long	___malloc_av_+464
	.long	___malloc_av_+464
	.long	___malloc_av_+472
	.long	___malloc_av_+472
	.long	___malloc_av_+480
	.long	___malloc_av_+480
	.long	___malloc_av_+488
	.long	___malloc_av_+488
	.long	___malloc_av_+496
	.long	___malloc_av_+496
	.long	___malloc_av_+504
	.long	___malloc_av_+504
	.long	___malloc_av_+512
	.long	___malloc_av_+512
	.long	___malloc_av_+520
	.long	___malloc_av_+520
	.long	___malloc_av_+528
	.long	___malloc_av_+528
	.long	___malloc_av_+536
	.long	___malloc_av_+536
	.long	___malloc_av_+544
	.long	___malloc_av_+544
	.long	___malloc_av_+552
	.long	___malloc_av_+552
	.long	___malloc_av_+560
	.long	___malloc_av_+560
	.long	___malloc_av_+568
	.long	___malloc_av_+568
	.long	___malloc_av_+576
	.long	___malloc_av_+576
	.long	___malloc_av_+584
	.long	___malloc_av_+584
	.long	___malloc_av_+592
	.long	___malloc_av_+592
	.long	___malloc_av_+600
	.long	___malloc_av_+600
	.long	___malloc_av_+608
	.long	___malloc_av_+608
	.long	___malloc_av_+616
	.long	___malloc_av_+616
	.long	___malloc_av_+624
	.long	___malloc_av_+624
	.long	___malloc_av_+632
	.long	___malloc_av_+632
	.long	___malloc_av_+640
	.long	___malloc_av_+640
	.long	___malloc_av_+648
	.long	___malloc_av_+648
	.long	___malloc_av_+656
	.long	___malloc_av_+656
	.long	___malloc_av_+664
	.long	___malloc_av_+664
	.long	___malloc_av_+672
	.long	___malloc_av_+672
	.long	___malloc_av_+680
	.long	___malloc_av_+680
	.long	___malloc_av_+688
	.long	___malloc_av_+688
	.long	___malloc_av_+696
	.long	___malloc_av_+696
	.long	___malloc_av_+704
	.long	___malloc_av_+704
	.long	___malloc_av_+712
	.long	___malloc_av_+712
	.long	___malloc_av_+720
	.long	___malloc_av_+720
	.long	___malloc_av_+728
	.long	___malloc_av_+728
	.long	___malloc_av_+736
	.long	___malloc_av_+736
	.long	___malloc_av_+744
	.long	___malloc_av_+744
	.long	___malloc_av_+752
	.long	___malloc_av_+752
	.long	___malloc_av_+760
	.long	___malloc_av_+760
	.long	___malloc_av_+768
	.long	___malloc_av_+768
	.long	___malloc_av_+776
	.long	___malloc_av_+776
	.long	___malloc_av_+784
	.long	___malloc_av_+784
	.long	___malloc_av_+792
	.long	___malloc_av_+792
	.long	___malloc_av_+800
	.long	___malloc_av_+800
	.long	___malloc_av_+808
	.long	___malloc_av_+808
	.long	___malloc_av_+816
	.long	___malloc_av_+816
	.long	___malloc_av_+824
	.long	___malloc_av_+824
	.long	___malloc_av_+832
	.long	___malloc_av_+832
	.long	___malloc_av_+840
	.long	___malloc_av_+840
	.long	___malloc_av_+848
	.long	___malloc_av_+848
	.long	___malloc_av_+856
	.long	___malloc_av_+856
	.long	___malloc_av_+864
	.long	___malloc_av_+864
	.long	___malloc_av_+872
	.long	___malloc_av_+872
	.long	___malloc_av_+880
	.long	___malloc_av_+880
	.long	___malloc_av_+888
	.long	___malloc_av_+888
	.long	___malloc_av_+896
	.long	___malloc_av_+896
	.long	___malloc_av_+904
	.long	___malloc_av_+904
	.long	___malloc_av_+912
	.long	___malloc_av_+912
	.long	___malloc_av_+920
	.long	___malloc_av_+920
	.long	___malloc_av_+928
	.long	___malloc_av_+928
	.long	___malloc_av_+936
	.long	___malloc_av_+936
	.long	___malloc_av_+944
	.long	___malloc_av_+944
	.long	___malloc_av_+952
	.long	___malloc_av_+952
	.long	___malloc_av_+960
	.long	___malloc_av_+960
	.long	___malloc_av_+968
	.long	___malloc_av_+968
	.long	___malloc_av_+976
	.long	___malloc_av_+976
	.long	___malloc_av_+984
	.long	___malloc_av_+984
	.long	___malloc_av_+992
	.long	___malloc_av_+992
	.long	___malloc_av_+1000
	.long	___malloc_av_+1000
	.long	___malloc_av_+1008
	.long	___malloc_av_+1008
	.long	___malloc_av_+1016
	.long	___malloc_av_+1016

	.data
	.align	4                       ; @__malloc_sbrk_base
___malloc_sbrk_base:
	.long	4294967295

	.local	___malloc_current_mallinfo.0 ; @__malloc_current_mallinfo.0
                                        ; @__malloc_current_mallinfo.0
	.comm	___malloc_current_mallinfo.0,4,32
	.local	___malloc_max_sbrked_mem ; @__malloc_max_sbrked_mem
                                        ; @__malloc_max_sbrked_mem
	.comm	___malloc_max_sbrked_mem,4,4
	.local	___malloc_max_total_mem ; @__malloc_max_total_mem
                                        ; @__malloc_max_total_mem
	.comm	___malloc_max_total_mem,4,4
	.section	.rodata,"a",@progbits
	.align	32                      ; @__mprec_tens
___mprec_tens:
	.quad	4607182418800017408     ; double 1.000000e+00
	.quad	4621819117588971520     ; double 1.000000e+01
	.quad	4636737291354636288     ; double 1.000000e+02
	.quad	4652007308841189376     ; double 1.000000e+03
	.quad	4666723172467343360     ; double 1.000000e+04
	.quad	4681608360884174848     ; double 1.000000e+05
	.quad	4696837146684686336     ; double 1.000000e+06
	.quad	4711630319722168320     ; double 1.000000e+07
	.quad	4726483295884279808     ; double 1.000000e+08
	.quad	4741671816366391296     ; double 1.000000e+09
	.quad	4756540486875873280     ; double 1.000000e+10
	.quad	4771362005757984768     ; double 1.000000e+11
	.quad	4786511204640096256     ; double 1.000000e+12
	.quad	4801453603149578240     ; double 1.000000e+13
	.quad	4816244402031689728     ; double 1.000000e+14
	.quad	4831355200913801216     ; double 1.000000e+15
	.quad	4846369599423283200     ; double 1.000000e+16
	.quad	4861130398305394688     ; double 1.000000e+17
	.quad	4876203697187506176     ; double 1.000000e+18
	.quad	4891288408196988160     ; double 1.000000e+19
	.quad	4906019910204099648     ; double 1.000000e+20
	.quad	4921056587992461136     ; double 1.000000e+21
	.quad	4936209963552724370     ; double 1.000000e+22
	.quad	4950912855330343670     ; double 1.000000e+23
	.quad	4965913770331839924     ; double 1.000000e+24

	.align	4                       ; @p05.2269
_p05.2269:
	.long	5                       ; 0x5
	.long	25                      ; 0x19
	.long	125                     ; 0x7d

	.align	32                      ; @__mprec_bigtens
___mprec_bigtens:
	.quad	4846369599423283200     ; double 1.000000e+16
	.quad	5085611494797045271     ; double 1.000000e+32
	.quad	5564284217833028085     ; double 1.000000e+64
	.quad	6521906365687930162     ; double 1.000000e+128
	.quad	8436737289693151036     ; double 1.000000e+256

	.local	_errno.b                ; @errno.b
                                        ; @errno.b
	.comm	_errno.b,1,1
	.local	_heap_end.1081          ; @heap_end.1081
                                        ; @heap_end.1081
	.comm	_heap_end.1081,4,4
