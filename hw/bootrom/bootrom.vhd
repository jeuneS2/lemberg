-- DO NOT EDIT
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
entity bootrom is
generic (addr_width : integer);
port (clk     : in std_logic;
	address : in std_logic_vector(addr_width-1 downto 0);
	rd      : in std_logic;
	rd_data : out std_logic_vector(31 downto 0);
	rdy_cnt : out unsigned(1 downto 0));
end bootrom;
architecture rtl of bootrom is
	signal a : std_logic_vector(7 downto 0);
	signal d : std_logic_vector(31 downto 0);
begin
process(a) begin
	case a is
		when X"00" => d <= X"0000026c";
		when X"01" => d <= X"799e0265";
		when X"02" => d <= X"8a07f190";
		when X"03" => d <= X"0248505e";
		when X"04" => d <= X"07a58b07";
		when X"05" => d <= X"f038dee0";
		when X"06" => d <= X"208f03b0";
		when X"07" => d <= X"28dff0a0";
		when X"08" => d <= X"48dff120";
		when X"09" => d <= X"38dca423";
		when X"0a" => d <= X"0af11038";
		when X"0b" => d <= X"dcb3a30b";
		when X"0c" => d <= X"f19038dc";
		when X"0d" => d <= X"c3230c04";
		when X"0e" => d <= X"1018dcd2";
		when X"0f" => d <= X"a048dd72";
		when X"10" => d <= X"2036409b";
		when X"11" => d <= X"23210010";
		when X"12" => d <= X"36800023";
		when X"13" => d <= X"41801016";
		when X"14" => d <= X"c0002010";
		when X"15" => d <= X"0011201a";
		when X"16" => d <= X"4400201b";
		when X"17" => d <= X"0e212014";
		when X"18" => d <= X"0400e017";
		when X"19" => d <= X"0020e802";
		when X"1a" => d <= X"16440060";
		when X"1b" => d <= X"16850020";
		when X"1c" => d <= X"10002020";
		when X"1d" => d <= X"19d40020";
		when X"1e" => d <= X"1b0ea120";
		when X"1f" => d <= X"158400e0";
		when X"20" => d <= X"173ff848";
		when X"21" => d <= X"023a41ff";
		when X"22" => d <= X"e02008b0";
		when X"23" => d <= X"1b0e2120";
		when X"24" => d <= X"18962020";
		when X"25" => d <= X"1a400020";
		when X"26" => d <= X"3b0e0120";
		when X"27" => d <= X"00083014";
		when X"28" => d <= X"0400e017";
		when X"29" => d <= X"3fe6c802";
		when X"2a" => d <= X"36000123";
		when X"2b" => d <= X"02001019";
		when X"2c" => d <= X"d400201b";
		when X"2d" => d <= X"0ea1a015";
		when X"2e" => d <= X"8610e017";
		when X"2f" => d <= X"3ff84802";
		when X"30" => d <= X"70401064";
		when X"31" => d <= X"eb001061";
		when X"32" => d <= X"20581440";
		when X"33" => d <= X"00e0373f";
		when X"34" => d <= X"ed6d8758";
		when X"35" => d <= X"d0110621";
		when X"36" => d <= X"20013600";
		when X"37" => d <= X"01230300";
		when X"38" => d <= X"1019d400";
		when X"39" => d <= X"201b0ea2";
		when X"3a" => d <= X"20158810";
		when X"3b" => d <= X"e0173ff8";
		when X"3c" => d <= X"48027040";
		when X"3d" => d <= X"1064eb00";
		when X"3e" => d <= X"1061a078";
		when X"3f" => d <= X"140000e0";
		when X"40" => d <= X"373fed4d";
		when X"41" => d <= X"87591011";
		when X"42" => d <= X"0831a001";
		when X"43" => d <= X"148410e0";
		when X"44" => d <= X"17001ce8";
		when X"45" => d <= X"02360000";
		when X"46" => d <= X"23800a70";
		when X"47" => d <= X"0219d400";
		when X"48" => d <= X"201b0ea0";
		when X"49" => d <= X"20158010";
		when X"4a" => d <= X"e0173ff8";
		when X"4b" => d <= X"48023008";
		when X"4c" => d <= X"1064eb00";
		when X"4d" => d <= X"10140400";
		when X"4e" => d <= X"a0370006";
		when X"4f" => d <= X"ed875950";
		when X"50" => d <= X"18885020";
		when X"51" => d <= X"01310002";
		when X"52" => d <= X"639ff470";
		when X"53" => d <= X"0216409d";
		when X"54" => d <= X"20168000";
		when X"55" => d <= X"2016c000";
		when X"56" => d <= X"20100011";
		when X"57" => d <= X"201a4400";
		when X"58" => d <= X"201b0e21";
		when X"59" => d <= X"20140400";
		when X"5a" => d <= X"e0170020";
		when X"5b" => d <= X"e8021644";
		when X"5c" => d <= X"00601685";
		when X"5d" => d <= X"00201000";
		when X"5e" => d <= X"202019d4";
		when X"5f" => d <= X"00201b0e";
		when X"60" => d <= X"a1201584";
		when X"61" => d <= X"00e0173f";
		when X"62" => d <= X"f848023a";
		when X"63" => d <= X"41ffe020";
		when X"64" => d <= X"08b01b0e";
		when X"65" => d <= X"21201896";
		when X"66" => d <= X"20201a40";
		when X"67" => d <= X"00203b0e";
		when X"68" => d <= X"01200008";
		when X"69" => d <= X"30140400";
		when X"6a" => d <= X"e0173fe6";
		when X"6b" => d <= X"c802165a";
		when X"6c" => d <= X"9f20169a";
		when X"6d" => d <= X"002016da";
		when X"6e" => d <= X"0020401a";
		when X"6f" => d <= X"1ba01746";
		when X"70" => d <= X"3020034a";
		when X"71" => d <= X"6e00204b";
		when X"72" => d <= X"0f70a014";
		when X"73" => d <= X"0200e017";
		when X"74" => d <= X"0020e802";
		when X"75" => d <= X"16420060";
		when X"76" => d <= X"16830020";
		when X"77" => d <= X"101a10a0";
		when X"78" => d <= X"19d40020";
		when X"79" => d <= X"1b0ea120";
		when X"7a" => d <= X"158400e0";
		when X"7b" => d <= X"173ff848";
		when X"7c" => d <= X"023a43ff";
		when X"7d" => d <= X"e02108b0";
		when X"7e" => d <= X"1b0e2120";
		when X"7f" => d <= X"18962020";
		when X"80" => d <= X"1a420020";
		when X"81" => d <= X"3b0e1120";
		when X"82" => d <= X"01087014";
		when X"83" => d <= X"0400e017";
		when X"84" => d <= X"3fe6c802";
		when X"85" => d <= X"16020020";
		when X"86" => d <= X"19d40020";
		when X"87" => d <= X"1b0ea120";
		when X"88" => d <= X"158400e0";
		when X"89" => d <= X"173ff848";
		when X"8a" => d <= X"02f20011";
		when X"8b" => d <= X"23030611";
		when X"8c" => d <= X"82061800";
		when X"8d" => d <= X"481c10c4";
		when X"8e" => d <= X"f1607504";
		when X"8f" => d <= X"a0e08218";
		when X"90" => d <= X"d0011048";
		when X"91" => d <= X"3106016a";
		when X"92" => d <= X"01605037";
		when X"93" => d <= X"3fe34c4b";
		when X"94" => d <= X"10100219";
		when X"95" => d <= X"d400201b";
		when X"96" => d <= X"0ea02015";
		when X"97" => d <= X"8000e017";
		when X"98" => d <= X"3ff84802";
		when X"99" => d <= X"3896a063";
		when X"9a" => d <= X"9f75b002";
		when X"9b" => d <= X"414f4c0a";
		when X"9c" => d <= X"00000a44";
		when X"9d" => d <= X"544f4f42";
		when X"9e" => d <= X"0000000a";
		when X"9f" => d <= X"4958450a";
		when X"a0" => d <= X"00002054";
		when others => d <= (others => '0');
	end case;
end process;
process(clk) begin
	if rising_edge(clk) then
		if rd = '1' then
			a <= address;
		end if;
		rd_data <= d;
		rdy_cnt <= '0' & rd;
	end if;
end process;
end rtl;
